// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Output the ID and name of the current [org](https://docs.controlplane.com/reference/org).
 *
 * ## Outputs
 *
 * The following attributes are exported:
 *
 * - **cpln_id** (String) The ID, in GUID format, of the org.
 * - **name** (String) The name of org.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cpln from "@pulumiverse/cpln";
 *
 * const org = cpln.getOrg({});
 * export const orgId = org.then(org => org.id);
 * export const orgName = org.then(org => org.name);
 * ```
 */
export function getOrg(args?: GetOrgArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cpln:index/getOrg:getOrg", {
        "authConfig": args.authConfig,
        "observability": args.observability,
        "security": args.security,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrg.
 */
export interface GetOrgArgs {
    authConfig?: inputs.GetOrgAuthConfig;
    observability?: inputs.GetOrgObservability;
    security?: inputs.GetOrgSecurity;
}

/**
 * A collection of values returned by getOrg.
 */
export interface GetOrgResult {
    readonly accountId: string;
    readonly authConfig?: outputs.GetOrgAuthConfig;
    readonly cplnId: string;
    readonly description: string;
    readonly id: string;
    readonly invitees: string[];
    readonly name: string;
    readonly observability?: outputs.GetOrgObservability;
    readonly security?: outputs.GetOrgSecurity;
    readonly selfLink: string;
    readonly sessionTimeoutSeconds: number;
    readonly statuses: outputs.GetOrgStatus[];
    readonly tags: {[key: string]: string};
}
/**
 * Output the ID and name of the current [org](https://docs.controlplane.com/reference/org).
 *
 * ## Outputs
 *
 * The following attributes are exported:
 *
 * - **cpln_id** (String) The ID, in GUID format, of the org.
 * - **name** (String) The name of org.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cpln from "@pulumiverse/cpln";
 *
 * const org = cpln.getOrg({});
 * export const orgId = org.then(org => org.id);
 * export const orgName = org.then(org => org.name);
 * ```
 */
export function getOrgOutput(args?: GetOrgOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrgResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cpln:index/getOrg:getOrg", {
        "authConfig": args.authConfig,
        "observability": args.observability,
        "security": args.security,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrg.
 */
export interface GetOrgOutputArgs {
    authConfig?: pulumi.Input<inputs.GetOrgAuthConfigArgs>;
    observability?: pulumi.Input<inputs.GetOrgObservabilityArgs>;
    security?: pulumi.Input<inputs.GetOrgSecurityArgs>;
}
