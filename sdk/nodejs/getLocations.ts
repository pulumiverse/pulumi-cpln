// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to access information about all [Locations](https://docs.controlplane.com/reference/location) within Control Plane.
 *
 * ## Outputs
 *
 * The following attributes are exported:
 *
 * - **locations** (Block List) (see below).
 *
 * <a id="nestedblock--locations"></a>
 *
 * ### `locations`
 *
 * - **cpln_id** (String) The ID, in GUID format, of the location.
 * - **name** (String) Name of the location.
 * - **description** (String) Description of the location.
 * - **tags** (Map of String) Key-value map of resource tags.
 * - **cloud_provider** (String) Cloud Provider of the location.
 * - **region** (String) Region of the location.
 * - **enabled** (Boolean) Indication if location is enabled.
 * - **geo** (Block List, Max: 1) (see below)
 * - **ip_ranges** (List of String) A list of IP ranges of the location.
 * - **self_link** (String) Full link to this resource. Can be referenced by other resources.
 *
 * <a id="nestedblock--geo"></a>
 *
 * ### `geo`
 *
 * Location geographical details
 *
 * - **lat** (Number) Latitude.
 * - **lon** (Number) Longitude.
 * - **country** (String) Country.
 * - **state** (String) State.
 * - **city** (String) City.
 * - **continent** (String) Continent.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cpln from "@pulumi/cpln";
 *
 * const locationsLocations = cpln.getLocations({});
 * export const locations = locationsLocations.then(locationsLocations => locationsLocations.locations);
 * ```
 */
export function getLocations(opts?: pulumi.InvokeOptions): Promise<GetLocationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cpln:index/getLocations:getLocations", {
    }, opts);
}

/**
 * A collection of values returned by getLocations.
 */
export interface GetLocationsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly locations: outputs.GetLocationsLocation[];
}
/**
 * Use this data source to access information about all [Locations](https://docs.controlplane.com/reference/location) within Control Plane.
 *
 * ## Outputs
 *
 * The following attributes are exported:
 *
 * - **locations** (Block List) (see below).
 *
 * <a id="nestedblock--locations"></a>
 *
 * ### `locations`
 *
 * - **cpln_id** (String) The ID, in GUID format, of the location.
 * - **name** (String) Name of the location.
 * - **description** (String) Description of the location.
 * - **tags** (Map of String) Key-value map of resource tags.
 * - **cloud_provider** (String) Cloud Provider of the location.
 * - **region** (String) Region of the location.
 * - **enabled** (Boolean) Indication if location is enabled.
 * - **geo** (Block List, Max: 1) (see below)
 * - **ip_ranges** (List of String) A list of IP ranges of the location.
 * - **self_link** (String) Full link to this resource. Can be referenced by other resources.
 *
 * <a id="nestedblock--geo"></a>
 *
 * ### `geo`
 *
 * Location geographical details
 *
 * - **lat** (Number) Latitude.
 * - **lon** (Number) Longitude.
 * - **country** (String) Country.
 * - **state** (String) State.
 * - **city** (String) City.
 * - **continent** (String) Continent.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cpln from "@pulumi/cpln";
 *
 * const locationsLocations = cpln.getLocations({});
 * export const locations = locationsLocations.then(locationsLocations => locationsLocations.locations);
 * ```
 */
export function getLocationsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLocationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cpln:index/getLocations:getLocations", {
    }, opts);
}
