// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a Mk8s's [Mk8s](https://docs.controlplane.com/mk8s/overview).
 *
 * ## Declaration
 *
 * ### Required
 *
 * - **name** (String) Name of the Mk8s.
 * - **version** (String)
 *
 * > **Note** Only one of the providers listed below can be included in a resource.
 *
 * - **generic_provider** (Block List, Max: 1) (see below)
 * - **hetzner_provider** (Block List, Max: 1) (see below)
 * - **aws_provider** (Block List, Max: 1) (see below)
 * - **ephemeral_provider** (Block List, Max: 1) (see below)
 *
 * ### Optional
 *
 * - **description** (String) Description of the Mk8s.
 * - **tags** (Map of String) Key-value map of resource tags.
 * - **firewall** (Block List, Max: 1) (see below)
 * - **add_ons** (Block List, Max: 1) (see below)
 *
 * <a id="nestedblock--generic_provider"></a>
 *
 * ### `genericProvider`
 *
 * Required:
 *
 * - **location** (String) Control Plane location that will host the K8S components. Prefer one that is closest to where the nodes are running.
 * - **networking** (Block List, Max: 1) (see below)
 *
 * Optional:
 *
 * - **node_pool** (Block List) (see below)
 *
 * <a id="nestedblock--generic_provider--networking"></a>
 *
 * ### `generic_provider.networking`
 *
 * Networking declaration is required even if networking is not utilized. Example usage: `networking {}`.
 *
 * Optional:
 *
 * - **service_network** (String) The CIDR of the service network.
 * - **pod_network** (String) The CIDR of the pod network.
 *
 * <a id="nestedblock--generic_provider--node_pool"></a>
 *
 * ### `generic_provider.node_pool`
 *
 * List of node pools.
 *
 * Required:
 *
 * - **name** (String)
 *
 * Optional:
 *
 * - **labels** (Map of String) Labels to attach to nodes of a node pool.
 * - **taint** (Block List) (see below)
 *
 * <a id="nestedblock--generic_provider--node_pool--taint"></a>
 *
 * ### `generic_provider.node_pool.taint`
 *
 * Taint for the nodes of a pool.
 *
 * Optional:
 *
 * - **key** (String)
 * - **value** (String)
 * - **effect** (String)
 *
 * <a id="nestedblock--hetzner_provider"></a>
 *
 * ### `hetznerProvider`
 *
 * Required:
 *
 * - **region** (String) Hetzner region to deploy nodes to.
 * - **token_secret_link** (String) Link to a secret holding Hetzner access key.
 * - **network_id** (String) ID of the Hetzner network to deploy nodes to.
 * - **networking** (Block List, Max: 1) (see below)
 *
 * Optional:
 *
 * - **hetzner_labels** (Map of String) Extra labels to attach to servers.
 * - **pre_install_script** (String) Optional shell script that will be run before K8S is installed.
 * - **firewall_id** (String) Optional firewall rule to attach to all nodes.
 * - **node_pool** (Block List) (see below)
 * - **dedicated_server_node_pool** (Block List) (see below)
 * - **image** (String) Default image for all nodes.
 * - **ssh_key** (String) SSH key name for accessing deployed nodes.
 * - **autoscaler** (Block List, Max: 1) (see below)
 * - **floating_ip_selector** (Map of String) If supplied, nodes will get assigned a random floating ip matching the selector.
 *
 * <a id="nestedblock--hetzner_provider--node_pool"></a>
 *
 * ### `hetzner_provider.node_pool`
 *
 * List of node pools.
 *
 * Required:
 *
 * - **name** (String)
 * - **server_type** (String)
 *
 * Optional:
 *
 * - **labels** (Map of String) Labels to attach to nodes of a node pool.
 * - **taint** (Block List) (see below)
 * - **override_image** (String)
 * - **min_size** (Number)
 * - **max_size** (Number)
 *
 * <a id="nestedblock--hetzner_provider--dedicated_server_node_pool"></a>
 *
 * ### `hetzner_provider.dedicated_server_node_pool`
 *
 * Node pool that can configure dedicated Hetzner servers.
 *
 * Required:
 *
 * - **name** (String)
 *
 * Optional:
 *
 * - **labels** (Map of String) Labels to attach to nodes of a node pool.
 * - **taint** (Block List) (see below)
 *
 * <a id="nestedblock--aws_provider"></a>
 *
 * ### `awsProvider`
 *
 * Required:
 *
 * - **region** (String) Region where the cluster nodes will live.
 * - **skip_create_roles** (Boolean) If true, Control Plane will not create any roles.
 * - **image** (Block List, Max: 1) (see below)
 * - **deploy_role_arn** (String) Control Plane will set up the cluster by assuming this role.
 * - **vpc_id** (String) The vpc where nodes will be deployed. Supports SSM.
 * - **networking** (Block List, Max: 1) (see below)
 *
 * Optional:
 *
 * - **aws_tags** (Map of String) Extra tags to attach to all created objects.
 * - **pre_install_script** (String) Optional shell script that will be run before K8S is installed. Supports SSM.
 * - **key_pair** (String) Name of keyPair. Supports SSM
 * - **disk_encryption_key_arn** (String) KMS key used to encrypt volumes. Supports SSM.
 * - **security_group_ids** (List of String) Security groups to deploy nodes to. Security groups control if the cluster is multi-zone or single-zon.
 * - **node_pool** (Block List) (see below)
 * - **autoscaler** (Block List, Max: 1) (see below)
 *
 * <a id="nestedblock--aws_provider--node_pool"></a>
 *
 * ### `aws_provider.node_pool`
 *
 * List of node pools.
 *
 * Required:
 *
 * - **name** (String)
 * - **instance_types** (List of String)
 * - **override_image** (Block List, Max: 1) (see below)
 * - **subnet_ids** (List of String)
 *
 * Optional:
 *
 * - **labels** (Map of String) Labels to attach to nodes of a node pool.
 * - **taint** (Block List) (see below)
 * - **boot_disk_size** (Number) Size in GB.
 * - **min_size** (Number)
 * - **max_size** (Number)
 * - **on_demand_base_capacity** (Number)
 * - **on_demand_percentage_above_base_capacity** (Number)
 * - **spot_allocation_strategy** (String)
 * - **extra_security_group_ids** (List of String)
 *
 * <a id="nestedblock--aws_provider--ami"></a>
 *
 * ### `ami`
 *
 * Default image for all nodes.
 *
 * Required:
 *
 * > **Note** Only one of the following listed below can be included.
 *
 * - **recommended** (String)
 * - **exact** (String) Support SSM.
 *
 * <a id="nestedblock--ephemeral_provider"></a>
 *
 * ### `ephemeralProvider`
 *
 * Required:
 *
 * - **location** (String) Control Plane location that will host the K8S components. Prefer one that is closest to where the nodes are running.
 *
 * Optional:
 *
 * - **node_pool** (Block List) (see below)
 *
 * <a id="nestedblock--ephemeral_provider--node_pool"></a>
 *
 * ### `ephemeral_provider.node_pool`
 *
 * List of node pools.
 *
 * Required:
 *
 * - **name** (String)
 * - **count** (Int) Number of nodes to deploy.
 * - **arch** (String) CPU architecture of the nodes.
 * - **flavor** (String) Linux distro to use for ephemeral nodes.
 * - **cpu** (String) Allocated CPU.
 * - **memory** (String) Allocated memory.
 *
 * Optional:
 *
 * - **labels** (Map of String) Labels to attach to nodes of a node pool.
 * - **taint** (Block List) (see below)
 *
 * <a id="nestedblock--autoscaler"></a>
 *
 * ### `autoscaler`
 *
 * Optional:
 *
 * - **expander** (List of String)
 * - **unneeded_time** (String)
 * - **unready_time** (String)
 * - **utilization_threshold** (Float64)
 *
 * <a id="nestedblock--firewall"></a>
 *
 * ### `firewall`
 *
 * Allow-list.
 *
 * Required:
 *
 * - **source_cidr** (String)
 *
 * Optional:
 *
 * - **description** (String)
 *
 * <a id="nestedblock--add_ons"></a>
 *
 * ### `addOns`
 *
 * Optional:
 *
 * - **dashboard** (Boolean)
 * - **azure_workload_identity** (Block List, Max: 1) (see below)
 * - **aws_workload_identity** (Boolean)
 * - **local_path_storage** (Boolean)
 * - **metrics** (Block List, Max: 1) (see below)
 * - **logs** (Block List, Max: 1) (see below)
 * - **nvidia** (Block List, Max: 1) (see below)
 * - **aws_efs** (Block List, Max: 1) (see below)
 * - **aws_ecr** (Block List, Max: 1) (see below)
 * - **aws_elb** (Block List, Max: 1) (see below)
 * - **azure_acr** (Block List, Max: 1) (see below)
 * - **sysbox** (Boolean)
 *
 * <a id="nestedblock--add_ons--azure_workload_identity"></a>
 *
 * ### `add_ons.azure_workload_identity`
 *
 * Required:
 *
 * - **tenant_id** (String) Tenant ID to use for workload identity.
 *
 * <a id="nestedblock--add_ons--metrics"></a>
 *
 * ### `add_ons.metrics`
 *
 * Optional:
 *
 * - **kube_state** (Boolean) Enable kube-state metrics.
 * - **core_dns** (Boolean) Enable scraping of core-dns service.
 * - **kubelet** (Boolean) Enable scraping kubelet stats.
 * - **api_server** (Boolean) Enable scraping apiserver stats.
 * - **node_exporter** (Boolean) Enable collecting node-level stats (disk, network, filesystem, etc).
 * - **cadvisor** (Boolean) Enable CNI-level container stats.
 * - **scrape_annotated** (Block List, Max: 1) (see below)
 *
 * <a id="nestedblock--add_ons--metrics--scrape-annotated"></a>
 *
 * ### `add_ons.metrics.scrape-annotated`
 *
 * Scrape pods annotated with prometheus.io/scrape=true.
 *
 * Optional:
 *
 * - **interval_seconds** (Number)
 * - **include_namespaces** (String)
 * - **exclude_namespaces** (String)
 * - **retain_labels** (String)
 *
 * <a id="nestedblock--add_ons--logs"></a>
 *
 * ### `add_ons.logs`
 *
 * Optional:
 *
 * - **audit_enabled** (Boolean) Collect k8s audit log as log events.
 * - **include_namespaces** (String)
 * - **exclude_namespaces** (String)
 *
 * <a id="nestedblock--add_ons--nvidia"></a>
 *
 * ### `add_ons.nvidia`
 *
 * Required:
 *
 * - **taint_gpu_nodes** (Boolean)
 *
 * <a id="nestedblock--add_ons--aws--efs"></a>
 *
 * ### `add_ons.aws_efs`
 *
 * Required:
 *
 * - **role_arn** (String) Use this role for EFS interaction.
 *
 * <a id="nestedblock--add_ons--aws--ecr"></a>
 *
 * ### `add_ons.aws_ecr`
 *
 * Required:
 *
 * - **role_arn** (String) Role to use when authorizing ECR pulls. Optional on AWS, in which case it will use the instance role to pull.
 *
 * <a id="nestedblock--add_ons--aws--elb"></a>
 *
 * ### `add_ons.aws_elb`
 *
 * Required:
 *
 * - **role_arn** (String) Role to use when authorizing calls to EC2 ELB. Optional on AWS, when not provided it will create the recommended role.
 *
 * <a id="nestedblock--add_ons--azure_acr"></a>
 *
 * ### `add_ons.azure_acr`
 *
 * Required:
 *
 * - **client_id** (String)
 *
 * ## Outputs
 *
 * The following attributes are exported:
 *
 * - **cpln_id** (String) The ID, in GUID format, of the Mk8s.
 * - **alias** (String) The alias name of the Mk8s.
 * - **self_link** (String) Full link to this resource. Can be referenced by other resources.
 * - **status** (Block List, Max: 1) (see below).
 *
 * <a id="nestedblock--status"></a>
 *
 * ### `status`
 *
 * Status of the mk8s.
 *
 * Read-Only:
 *
 * - **oidc_provider_url** (String)
 * - **server_url** (String)
 * - **home_location** (String)
 * - **add_ons** (Block List, Max: 1) (see below)
 *
 * <a id="nestedblock--status--add_ons"></a>
 *
 * ### `status.add_ons`
 *
 * Read-Only:
 *
 * - **dashboard** (Block List, Max: 1) (see below)
 * - **aws_workload_identity** (Block List, Max: 1) (see below)
 * - **metrics** (Block List, Max: 1) (see below)
 * - **logs** (Block List, Max: 1) (see below)
 * - **aws_ecr** (Block List, Max: 1) (see below)
 * - **aws_efs** (Block List, Max: 1) (see below)
 * - **aws_elb** (Block List, Max: 1) (see below)
 *
 * <a id="nestedblock--status--add_ons--dashobard"></a>
 *
 * ### `status.add_ons.dashboard`
 *
 * Read-Only:
 *
 * - **url** (String) Access to dashboard.
 *
 * <a id="nestedblock--status--add_ons--aws_workload_identity"></a>
 *
 * ### `status.add_ons.aws_workload_identity`
 *
 * Read-Only:
 *
 * - **oidc_provider_config** (Block List, Max: 1) (see below)
 * - **trust_policy** (String)
 *
 * <a id="nestedblock--status--add_ons--aws_workload_identity--oidc_provider_config"></a>
 *
 * ### `status.add_ons.aws_workload_identity.oidc_provider_config`
 *
 * Read-Only:
 *
 * - **provider_url** (String)
 * - **audience** (String)
 *
 * <a id="nestedblock--status--add_ons--metrics"></a>
 *
 * ### `status.add_ons.metrics`
 *
 * Read-Only:
 *
 * - **prometheus_endpoint** (String)
 * - **remote_write_config** (String)
 *
 * <a id="nestedblock--status--add_ons--logs"></a>
 *
 * ### `status.add_ons.logs`
 *
 * Read-Only:
 *
 * - **loki_address** (String) Loki endpoint to query logs from.
 *
 * <a id="nestedblock--status--add_ons--aws"></a>
 *
 * ### `status.add_ons.aws`
 *
 * Read-Only:
 *
 * - **trust_policy** (String)
 *
 * ## Example Usage
 */
export class Mk8s extends pulumi.CustomResource {
    /**
     * Get an existing Mk8s resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Mk8sState, opts?: pulumi.CustomResourceOptions): Mk8s {
        return new Mk8s(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cpln:index/mk8s:Mk8s';

    /**
     * Returns true if the given object is an instance of Mk8s.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Mk8s {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Mk8s.__pulumiType;
    }

    public readonly addOns!: pulumi.Output<outputs.Mk8sAddOns | undefined>;
    /**
     * The alias name of the Mk8s.
     */
    public /*out*/ readonly alias!: pulumi.Output<string>;
    public readonly awsProvider!: pulumi.Output<outputs.Mk8sAwsProvider | undefined>;
    /**
     * The ID, in GUID format, of the Mk8s.
     */
    public /*out*/ readonly cplnId!: pulumi.Output<string>;
    /**
     * Description of the Mk8s.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly ephemeralProvider!: pulumi.Output<outputs.Mk8sEphemeralProvider | undefined>;
    /**
     * Allow-list.
     */
    public readonly firewalls!: pulumi.Output<outputs.Mk8sFirewall[] | undefined>;
    public readonly genericProvider!: pulumi.Output<outputs.Mk8sGenericProvider | undefined>;
    public readonly hetznerProvider!: pulumi.Output<outputs.Mk8sHetznerProvider | undefined>;
    /**
     * Name of the Mk8s.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Status of the mk8s.
     */
    public /*out*/ readonly statuses!: pulumi.Output<outputs.Mk8sStatus[]>;
    /**
     * Key-value map of resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a Mk8s resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Mk8sArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Mk8sArgs | Mk8sState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Mk8sState | undefined;
            resourceInputs["addOns"] = state ? state.addOns : undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["awsProvider"] = state ? state.awsProvider : undefined;
            resourceInputs["cplnId"] = state ? state.cplnId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ephemeralProvider"] = state ? state.ephemeralProvider : undefined;
            resourceInputs["firewalls"] = state ? state.firewalls : undefined;
            resourceInputs["genericProvider"] = state ? state.genericProvider : undefined;
            resourceInputs["hetznerProvider"] = state ? state.hetznerProvider : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["statuses"] = state ? state.statuses : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as Mk8sArgs | undefined;
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["addOns"] = args ? args.addOns : undefined;
            resourceInputs["awsProvider"] = args ? args.awsProvider : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ephemeralProvider"] = args ? args.ephemeralProvider : undefined;
            resourceInputs["firewalls"] = args ? args.firewalls : undefined;
            resourceInputs["genericProvider"] = args ? args.genericProvider : undefined;
            resourceInputs["hetznerProvider"] = args ? args.hetznerProvider : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["alias"] = undefined /*out*/;
            resourceInputs["cplnId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["statuses"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Mk8s.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Mk8s resources.
 */
export interface Mk8sState {
    addOns?: pulumi.Input<inputs.Mk8sAddOns>;
    /**
     * The alias name of the Mk8s.
     */
    alias?: pulumi.Input<string>;
    awsProvider?: pulumi.Input<inputs.Mk8sAwsProvider>;
    /**
     * The ID, in GUID format, of the Mk8s.
     */
    cplnId?: pulumi.Input<string>;
    /**
     * Description of the Mk8s.
     */
    description?: pulumi.Input<string>;
    ephemeralProvider?: pulumi.Input<inputs.Mk8sEphemeralProvider>;
    /**
     * Allow-list.
     */
    firewalls?: pulumi.Input<pulumi.Input<inputs.Mk8sFirewall>[]>;
    genericProvider?: pulumi.Input<inputs.Mk8sGenericProvider>;
    hetznerProvider?: pulumi.Input<inputs.Mk8sHetznerProvider>;
    /**
     * Name of the Mk8s.
     */
    name?: pulumi.Input<string>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Status of the mk8s.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.Mk8sStatus>[]>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Mk8s resource.
 */
export interface Mk8sArgs {
    addOns?: pulumi.Input<inputs.Mk8sAddOns>;
    awsProvider?: pulumi.Input<inputs.Mk8sAwsProvider>;
    /**
     * Description of the Mk8s.
     */
    description?: pulumi.Input<string>;
    ephemeralProvider?: pulumi.Input<inputs.Mk8sEphemeralProvider>;
    /**
     * Allow-list.
     */
    firewalls?: pulumi.Input<pulumi.Input<inputs.Mk8sFirewall>[]>;
    genericProvider?: pulumi.Input<inputs.Mk8sGenericProvider>;
    hetznerProvider?: pulumi.Input<inputs.Mk8sHetznerProvider>;
    /**
     * Name of the Mk8s.
     */
    name?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    version: pulumi.Input<string>;
}
