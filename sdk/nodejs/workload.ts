// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Workload extends pulumi.CustomResource {
    /**
     * Get an existing Workload resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkloadState, opts?: pulumi.CustomResourceOptions): Workload {
        return new Workload(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cpln:index/workload:Workload';

    /**
     * Returns true if the given object is an instance of Workload.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workload {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workload.__pulumiType;
    }

    /**
     * An isolated and lightweight runtime environment that encapsulates an application and its dependencies.
     */
    declare public readonly containers: pulumi.Output<outputs.WorkloadContainer[] | undefined>;
    /**
     * The ID, in GUID format, of the workload.
     */
    declare public /*out*/ readonly cplnId: pulumi.Output<string>;
    /**
     * Description of the workload.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Extra Kubernetes modifications. Only used for BYOK.
     */
    declare public readonly extras: pulumi.Output<string | undefined>;
    /**
     * Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic. Access is restricted by default.
     */
    declare public readonly firewallSpec: pulumi.Output<outputs.WorkloadFirewallSpec | undefined>;
    /**
     * Name of the associated GVC.
     */
    declare public readonly gvc: pulumi.Output<string>;
    /**
     * The identityLink is used as the access scope for 3rd party cloud resources. A single identity can provide access to multiple cloud providers.
     */
    declare public readonly identityLink: pulumi.Output<string | undefined>;
    /**
     * [Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron).
     */
    declare public readonly jobs: pulumi.Output<outputs.WorkloadJob[] | undefined>;
    declare public readonly loadBalancer: pulumi.Output<outputs.WorkloadLoadBalancer | undefined>;
    /**
     * Override defaultOptions for the workload in specific Control Plane Locations.
     */
    declare public readonly localOptions: pulumi.Output<outputs.WorkloadLocalOption[] | undefined>;
    /**
     * Name of the workload.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and characteristics of the workload.
     */
    declare public readonly options: pulumi.Output<outputs.WorkloadOptions | undefined>;
    declare public readonly requestRetryPolicy: pulumi.Output<outputs.WorkloadRequestRetryPolicy | undefined>;
    /**
     * Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable replicas, surge replicas, and scaling policies.
     */
    declare public readonly rolloutOptions: pulumi.Output<outputs.WorkloadRolloutOption[] | undefined>;
    /**
     * Allows for the configuration of the `file system group id` and `geo location`.
     */
    declare public readonly securityOptions: pulumi.Output<outputs.WorkloadSecurityOptions | undefined>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    declare public /*out*/ readonly selfLink: pulumi.Output<string>;
    declare public readonly sidecar: pulumi.Output<outputs.WorkloadSidecar | undefined>;
    /**
     * Status of the workload.
     */
    declare public /*out*/ readonly statuses: pulumi.Output<outputs.WorkloadStatus[]>;
    /**
     * Workload will automatically redeploy when one of the container images is updated in the container registry. Default: false.
     */
    declare public readonly supportDynamicTags: pulumi.Output<boolean>;
    /**
     * Key-value map of resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string}>;
    /**
     * Workload Type. Either `serverless`, `standard`, `stateful`, or `cron`.
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a Workload resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkloadArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkloadArgs | WorkloadState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkloadState | undefined;
            resourceInputs["containers"] = state?.containers;
            resourceInputs["cplnId"] = state?.cplnId;
            resourceInputs["description"] = state?.description;
            resourceInputs["extras"] = state?.extras;
            resourceInputs["firewallSpec"] = state?.firewallSpec;
            resourceInputs["gvc"] = state?.gvc;
            resourceInputs["identityLink"] = state?.identityLink;
            resourceInputs["jobs"] = state?.jobs;
            resourceInputs["loadBalancer"] = state?.loadBalancer;
            resourceInputs["localOptions"] = state?.localOptions;
            resourceInputs["name"] = state?.name;
            resourceInputs["options"] = state?.options;
            resourceInputs["requestRetryPolicy"] = state?.requestRetryPolicy;
            resourceInputs["rolloutOptions"] = state?.rolloutOptions;
            resourceInputs["securityOptions"] = state?.securityOptions;
            resourceInputs["selfLink"] = state?.selfLink;
            resourceInputs["sidecar"] = state?.sidecar;
            resourceInputs["statuses"] = state?.statuses;
            resourceInputs["supportDynamicTags"] = state?.supportDynamicTags;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as WorkloadArgs | undefined;
            if (args?.gvc === undefined && !opts.urn) {
                throw new Error("Missing required property 'gvc'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["containers"] = args?.containers;
            resourceInputs["description"] = args?.description;
            resourceInputs["extras"] = args?.extras;
            resourceInputs["firewallSpec"] = args?.firewallSpec;
            resourceInputs["gvc"] = args?.gvc;
            resourceInputs["identityLink"] = args?.identityLink;
            resourceInputs["jobs"] = args?.jobs;
            resourceInputs["loadBalancer"] = args?.loadBalancer;
            resourceInputs["localOptions"] = args?.localOptions;
            resourceInputs["name"] = args?.name;
            resourceInputs["options"] = args?.options;
            resourceInputs["requestRetryPolicy"] = args?.requestRetryPolicy;
            resourceInputs["rolloutOptions"] = args?.rolloutOptions;
            resourceInputs["securityOptions"] = args?.securityOptions;
            resourceInputs["sidecar"] = args?.sidecar;
            resourceInputs["supportDynamicTags"] = args?.supportDynamicTags;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["cplnId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["statuses"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workload.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workload resources.
 */
export interface WorkloadState {
    /**
     * An isolated and lightweight runtime environment that encapsulates an application and its dependencies.
     */
    containers?: pulumi.Input<pulumi.Input<inputs.WorkloadContainer>[]>;
    /**
     * The ID, in GUID format, of the workload.
     */
    cplnId?: pulumi.Input<string>;
    /**
     * Description of the workload.
     */
    description?: pulumi.Input<string>;
    /**
     * Extra Kubernetes modifications. Only used for BYOK.
     */
    extras?: pulumi.Input<string>;
    /**
     * Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic. Access is restricted by default.
     */
    firewallSpec?: pulumi.Input<inputs.WorkloadFirewallSpec>;
    /**
     * Name of the associated GVC.
     */
    gvc?: pulumi.Input<string>;
    /**
     * The identityLink is used as the access scope for 3rd party cloud resources. A single identity can provide access to multiple cloud providers.
     */
    identityLink?: pulumi.Input<string>;
    /**
     * [Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron).
     */
    jobs?: pulumi.Input<pulumi.Input<inputs.WorkloadJob>[]>;
    loadBalancer?: pulumi.Input<inputs.WorkloadLoadBalancer>;
    /**
     * Override defaultOptions for the workload in specific Control Plane Locations.
     */
    localOptions?: pulumi.Input<pulumi.Input<inputs.WorkloadLocalOption>[]>;
    /**
     * Name of the workload.
     */
    name?: pulumi.Input<string>;
    /**
     * Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and characteristics of the workload.
     */
    options?: pulumi.Input<inputs.WorkloadOptions>;
    requestRetryPolicy?: pulumi.Input<inputs.WorkloadRequestRetryPolicy>;
    /**
     * Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable replicas, surge replicas, and scaling policies.
     */
    rolloutOptions?: pulumi.Input<pulumi.Input<inputs.WorkloadRolloutOption>[]>;
    /**
     * Allows for the configuration of the `file system group id` and `geo location`.
     */
    securityOptions?: pulumi.Input<inputs.WorkloadSecurityOptions>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    selfLink?: pulumi.Input<string>;
    sidecar?: pulumi.Input<inputs.WorkloadSidecar>;
    /**
     * Status of the workload.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.WorkloadStatus>[]>;
    /**
     * Workload will automatically redeploy when one of the container images is updated in the container registry. Default: false.
     */
    supportDynamicTags?: pulumi.Input<boolean>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Workload Type. Either `serverless`, `standard`, `stateful`, or `cron`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Workload resource.
 */
export interface WorkloadArgs {
    /**
     * An isolated and lightweight runtime environment that encapsulates an application and its dependencies.
     */
    containers?: pulumi.Input<pulumi.Input<inputs.WorkloadContainer>[]>;
    /**
     * Description of the workload.
     */
    description?: pulumi.Input<string>;
    /**
     * Extra Kubernetes modifications. Only used for BYOK.
     */
    extras?: pulumi.Input<string>;
    /**
     * Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic. Access is restricted by default.
     */
    firewallSpec?: pulumi.Input<inputs.WorkloadFirewallSpec>;
    /**
     * Name of the associated GVC.
     */
    gvc: pulumi.Input<string>;
    /**
     * The identityLink is used as the access scope for 3rd party cloud resources. A single identity can provide access to multiple cloud providers.
     */
    identityLink?: pulumi.Input<string>;
    /**
     * [Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron).
     */
    jobs?: pulumi.Input<pulumi.Input<inputs.WorkloadJob>[]>;
    loadBalancer?: pulumi.Input<inputs.WorkloadLoadBalancer>;
    /**
     * Override defaultOptions for the workload in specific Control Plane Locations.
     */
    localOptions?: pulumi.Input<pulumi.Input<inputs.WorkloadLocalOption>[]>;
    /**
     * Name of the workload.
     */
    name?: pulumi.Input<string>;
    /**
     * Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and characteristics of the workload.
     */
    options?: pulumi.Input<inputs.WorkloadOptions>;
    requestRetryPolicy?: pulumi.Input<inputs.WorkloadRequestRetryPolicy>;
    /**
     * Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable replicas, surge replicas, and scaling policies.
     */
    rolloutOptions?: pulumi.Input<pulumi.Input<inputs.WorkloadRolloutOption>[]>;
    /**
     * Allows for the configuration of the `file system group id` and `geo location`.
     */
    securityOptions?: pulumi.Input<inputs.WorkloadSecurityOptions>;
    sidecar?: pulumi.Input<inputs.WorkloadSidecar>;
    /**
     * Workload will automatically redeploy when one of the container images is updated in the container registry. Default: false.
     */
    supportDynamicTags?: pulumi.Input<boolean>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Workload Type. Either `serverless`, `standard`, `stateful`, or `cron`.
     */
    type: pulumi.Input<string>;
}
