// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Gvc extends pulumi.CustomResource {
    /**
     * Get an existing Gvc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GvcState, opts?: pulumi.CustomResourceOptions): Gvc {
        return new Gvc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cpln:index/gvc:Gvc';

    /**
     * Returns true if the given object is an instance of Gvc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gvc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gvc.__pulumiType;
    }

    /**
     * The alias name of the GVC.
     */
    declare public /*out*/ readonly alias: pulumi.Output<string>;
    declare public readonly controlplaneTracing: pulumi.Output<outputs.GvcControlplaneTracing | undefined>;
    /**
     * The ID, in GUID format, of the Global Virtual Cloud.
     */
    declare public /*out*/ readonly cplnId: pulumi.Output<string>;
    /**
     * Description of the Global Virtual Cloud.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Custom domain name used by associated workloads.
     *
     * @deprecated Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead.
     */
    declare public readonly domain: pulumi.Output<string | undefined>;
    /**
     * Customizes the subdomain format for the canonical workload endpoint. `legacy` leaves it as '${workloadName}-${gvcName}.cpln.app'. `org` follows the scheme '${workloadName}-${gvcName}.${orgEndpointPrefix}.cpln.app'.
     */
    declare public readonly endpointNamingFormat: pulumi.Output<string>;
    /**
     * Key-value array of resource environment variables.
     */
    declare public readonly env: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * KEDA configuration for the GVC.
     */
    declare public readonly keda: pulumi.Output<outputs.GvcKeda | undefined>;
    declare public readonly lightstepTracing: pulumi.Output<outputs.GvcLightstepTracing | undefined>;
    /**
     * Dedicated load balancer configuration.
     */
    declare public readonly loadBalancer: pulumi.Output<outputs.GvcLoadBalancer | undefined>;
    /**
     * A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud.
     */
    declare public readonly locations: pulumi.Output<string[] | undefined>;
    /**
     * Name of the Global Virtual Cloud.
     */
    declare public readonly name: pulumi.Output<string>;
    declare public readonly otelTracing: pulumi.Output<outputs.GvcOtelTracing | undefined>;
    /**
     * A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC.
     */
    declare public readonly pullSecrets: pulumi.Output<string[] | undefined>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    declare public /*out*/ readonly selfLink: pulumi.Output<string>;
    declare public readonly sidecar: pulumi.Output<outputs.GvcSidecar | undefined>;
    /**
     * Key-value map of resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Gvc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GvcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GvcArgs | GvcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GvcState | undefined;
            resourceInputs["alias"] = state?.alias;
            resourceInputs["controlplaneTracing"] = state?.controlplaneTracing;
            resourceInputs["cplnId"] = state?.cplnId;
            resourceInputs["description"] = state?.description;
            resourceInputs["domain"] = state?.domain;
            resourceInputs["endpointNamingFormat"] = state?.endpointNamingFormat;
            resourceInputs["env"] = state?.env;
            resourceInputs["keda"] = state?.keda;
            resourceInputs["lightstepTracing"] = state?.lightstepTracing;
            resourceInputs["loadBalancer"] = state?.loadBalancer;
            resourceInputs["locations"] = state?.locations;
            resourceInputs["name"] = state?.name;
            resourceInputs["otelTracing"] = state?.otelTracing;
            resourceInputs["pullSecrets"] = state?.pullSecrets;
            resourceInputs["selfLink"] = state?.selfLink;
            resourceInputs["sidecar"] = state?.sidecar;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as GvcArgs | undefined;
            resourceInputs["controlplaneTracing"] = args?.controlplaneTracing;
            resourceInputs["description"] = args?.description;
            resourceInputs["domain"] = args?.domain;
            resourceInputs["endpointNamingFormat"] = args?.endpointNamingFormat;
            resourceInputs["env"] = args?.env;
            resourceInputs["keda"] = args?.keda;
            resourceInputs["lightstepTracing"] = args?.lightstepTracing;
            resourceInputs["loadBalancer"] = args?.loadBalancer;
            resourceInputs["locations"] = args?.locations;
            resourceInputs["name"] = args?.name;
            resourceInputs["otelTracing"] = args?.otelTracing;
            resourceInputs["pullSecrets"] = args?.pullSecrets;
            resourceInputs["sidecar"] = args?.sidecar;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["alias"] = undefined /*out*/;
            resourceInputs["cplnId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Gvc.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Gvc resources.
 */
export interface GvcState {
    /**
     * The alias name of the GVC.
     */
    alias?: pulumi.Input<string>;
    controlplaneTracing?: pulumi.Input<inputs.GvcControlplaneTracing>;
    /**
     * The ID, in GUID format, of the Global Virtual Cloud.
     */
    cplnId?: pulumi.Input<string>;
    /**
     * Description of the Global Virtual Cloud.
     */
    description?: pulumi.Input<string>;
    /**
     * Custom domain name used by associated workloads.
     *
     * @deprecated Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead.
     */
    domain?: pulumi.Input<string>;
    /**
     * Customizes the subdomain format for the canonical workload endpoint. `legacy` leaves it as '${workloadName}-${gvcName}.cpln.app'. `org` follows the scheme '${workloadName}-${gvcName}.${orgEndpointPrefix}.cpln.app'.
     */
    endpointNamingFormat?: pulumi.Input<string>;
    /**
     * Key-value array of resource environment variables.
     */
    env?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * KEDA configuration for the GVC.
     */
    keda?: pulumi.Input<inputs.GvcKeda>;
    lightstepTracing?: pulumi.Input<inputs.GvcLightstepTracing>;
    /**
     * Dedicated load balancer configuration.
     */
    loadBalancer?: pulumi.Input<inputs.GvcLoadBalancer>;
    /**
     * A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud.
     */
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Global Virtual Cloud.
     */
    name?: pulumi.Input<string>;
    otelTracing?: pulumi.Input<inputs.GvcOtelTracing>;
    /**
     * A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC.
     */
    pullSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    selfLink?: pulumi.Input<string>;
    sidecar?: pulumi.Input<inputs.GvcSidecar>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Gvc resource.
 */
export interface GvcArgs {
    controlplaneTracing?: pulumi.Input<inputs.GvcControlplaneTracing>;
    /**
     * Description of the Global Virtual Cloud.
     */
    description?: pulumi.Input<string>;
    /**
     * Custom domain name used by associated workloads.
     *
     * @deprecated Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead.
     */
    domain?: pulumi.Input<string>;
    /**
     * Customizes the subdomain format for the canonical workload endpoint. `legacy` leaves it as '${workloadName}-${gvcName}.cpln.app'. `org` follows the scheme '${workloadName}-${gvcName}.${orgEndpointPrefix}.cpln.app'.
     */
    endpointNamingFormat?: pulumi.Input<string>;
    /**
     * Key-value array of resource environment variables.
     */
    env?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * KEDA configuration for the GVC.
     */
    keda?: pulumi.Input<inputs.GvcKeda>;
    lightstepTracing?: pulumi.Input<inputs.GvcLightstepTracing>;
    /**
     * Dedicated load balancer configuration.
     */
    loadBalancer?: pulumi.Input<inputs.GvcLoadBalancer>;
    /**
     * A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud.
     */
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Global Virtual Cloud.
     */
    name?: pulumi.Input<string>;
    otelTracing?: pulumi.Input<inputs.GvcOtelTracing>;
    /**
     * A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC.
     */
    pullSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    sidecar?: pulumi.Input<inputs.GvcSidecar>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
