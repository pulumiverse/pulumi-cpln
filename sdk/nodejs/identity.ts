// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Identity extends pulumi.CustomResource {
    /**
     * Get an existing Identity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityState, opts?: pulumi.CustomResourceOptions): Identity {
        return new Identity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cpln:index/identity:Identity';

    /**
     * Returns true if the given object is an instance of Identity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Identity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Identity.__pulumiType;
    }

    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an AWS environment.
     */
    declare public readonly awsAccessPolicy: pulumi.Output<outputs.IdentityAwsAccessPolicy | undefined>;
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an Azure environment.
     */
    declare public readonly azureAccessPolicy: pulumi.Output<outputs.IdentityAzureAccessPolicy | undefined>;
    /**
     * The ID, in GUID format, of the identity.
     */
    declare public /*out*/ readonly cplnId: pulumi.Output<string>;
    /**
     * Description of the identity.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * The GCP access policy can either contain an existing serviceAccount or multiple bindings.
     */
    declare public readonly gcpAccessPolicy: pulumi.Output<outputs.IdentityGcpAccessPolicy | undefined>;
    /**
     * The GVC to which this identity belongs.
     */
    declare public readonly gvc: pulumi.Output<string>;
    /**
     * Name of the identity.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
     */
    declare public readonly nativeNetworkResources: pulumi.Output<outputs.IdentityNativeNetworkResource[] | undefined>;
    /**
     * A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and ports. - IP's and ports.
     */
    declare public readonly networkResources: pulumi.Output<outputs.IdentityNetworkResource[] | undefined>;
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an NGA environment.
     */
    declare public readonly ngsAccessPolicy: pulumi.Output<outputs.IdentityNgsAccessPolicy | undefined>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    declare public /*out*/ readonly selfLink: pulumi.Output<string>;
    /**
     * Key-value map of identity status. Available fields: `objectName`, `aws`, `gcp`, `azure`.
     */
    declare public /*out*/ readonly status: pulumi.Output<{[key: string]: string}>;
    /**
     * Key-value map of resource tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Identity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityArgs | IdentityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityState | undefined;
            resourceInputs["awsAccessPolicy"] = state?.awsAccessPolicy;
            resourceInputs["azureAccessPolicy"] = state?.azureAccessPolicy;
            resourceInputs["cplnId"] = state?.cplnId;
            resourceInputs["description"] = state?.description;
            resourceInputs["gcpAccessPolicy"] = state?.gcpAccessPolicy;
            resourceInputs["gvc"] = state?.gvc;
            resourceInputs["name"] = state?.name;
            resourceInputs["nativeNetworkResources"] = state?.nativeNetworkResources;
            resourceInputs["networkResources"] = state?.networkResources;
            resourceInputs["ngsAccessPolicy"] = state?.ngsAccessPolicy;
            resourceInputs["selfLink"] = state?.selfLink;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as IdentityArgs | undefined;
            if (args?.gvc === undefined && !opts.urn) {
                throw new Error("Missing required property 'gvc'");
            }
            resourceInputs["awsAccessPolicy"] = args?.awsAccessPolicy;
            resourceInputs["azureAccessPolicy"] = args?.azureAccessPolicy;
            resourceInputs["description"] = args?.description;
            resourceInputs["gcpAccessPolicy"] = args?.gcpAccessPolicy;
            resourceInputs["gvc"] = args?.gvc;
            resourceInputs["name"] = args?.name;
            resourceInputs["nativeNetworkResources"] = args?.nativeNetworkResources;
            resourceInputs["networkResources"] = args?.networkResources;
            resourceInputs["ngsAccessPolicy"] = args?.ngsAccessPolicy;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["cplnId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Identity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Identity resources.
 */
export interface IdentityState {
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an AWS environment.
     */
    awsAccessPolicy?: pulumi.Input<inputs.IdentityAwsAccessPolicy>;
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an Azure environment.
     */
    azureAccessPolicy?: pulumi.Input<inputs.IdentityAzureAccessPolicy>;
    /**
     * The ID, in GUID format, of the identity.
     */
    cplnId?: pulumi.Input<string>;
    /**
     * Description of the identity.
     */
    description?: pulumi.Input<string>;
    /**
     * The GCP access policy can either contain an existing serviceAccount or multiple bindings.
     */
    gcpAccessPolicy?: pulumi.Input<inputs.IdentityGcpAccessPolicy>;
    /**
     * The GVC to which this identity belongs.
     */
    gvc?: pulumi.Input<string>;
    /**
     * Name of the identity.
     */
    name?: pulumi.Input<string>;
    /**
     * > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
     */
    nativeNetworkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNativeNetworkResource>[]>;
    /**
     * A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and ports. - IP's and ports.
     */
    networkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNetworkResource>[]>;
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an NGA environment.
     */
    ngsAccessPolicy?: pulumi.Input<inputs.IdentityNgsAccessPolicy>;
    /**
     * Full link to this resource. Can be referenced by other resources.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Key-value map of identity status. Available fields: `objectName`, `aws`, `gcp`, `azure`.
     */
    status?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Identity resource.
 */
export interface IdentityArgs {
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an AWS environment.
     */
    awsAccessPolicy?: pulumi.Input<inputs.IdentityAwsAccessPolicy>;
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an Azure environment.
     */
    azureAccessPolicy?: pulumi.Input<inputs.IdentityAzureAccessPolicy>;
    /**
     * Description of the identity.
     */
    description?: pulumi.Input<string>;
    /**
     * The GCP access policy can either contain an existing serviceAccount or multiple bindings.
     */
    gcpAccessPolicy?: pulumi.Input<inputs.IdentityGcpAccessPolicy>;
    /**
     * The GVC to which this identity belongs.
     */
    gvc: pulumi.Input<string>;
    /**
     * Name of the identity.
     */
    name?: pulumi.Input<string>;
    /**
     * > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
     */
    nativeNetworkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNativeNetworkResource>[]>;
    /**
     * A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and ports. - IP's and ports.
     */
    networkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNetworkResource>[]>;
    /**
     * A set of access policy rules that defines the actions and resources that an identity can access within an NGA environment.
     */
    ngsAccessPolicy?: pulumi.Input<inputs.IdentityNgsAccessPolicy>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
