// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

type ServiceAccountKey struct {
	pulumi.CustomResourceState

	// The timestamp, in UTC, when the key was created.
	Created pulumi.StringOutput `pulumi:"created"`
	// Description of the Service Account Key.
	Description pulumi.StringOutput `pulumi:"description"`
	// The generated key.
	Key pulumi.StringOutput `pulumi:"key"`
	// The generated name of the key.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of an existing Service Account this key will belong to.
	ServiceAccountName pulumi.StringOutput `pulumi:"serviceAccountName"`
}

// NewServiceAccountKey registers a new resource with the given unique name, arguments, and options.
func NewServiceAccountKey(ctx *pulumi.Context,
	name string, args *ServiceAccountKeyArgs, opts ...pulumi.ResourceOption) (*ServiceAccountKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.ServiceAccountName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceAccountKey
	err := ctx.RegisterResource("cpln:index/serviceAccountKey:ServiceAccountKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccountKey gets an existing ServiceAccountKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccountKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountKeyState, opts ...pulumi.ResourceOption) (*ServiceAccountKey, error) {
	var resource ServiceAccountKey
	err := ctx.ReadResource("cpln:index/serviceAccountKey:ServiceAccountKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccountKey resources.
type serviceAccountKeyState struct {
	// The timestamp, in UTC, when the key was created.
	Created *string `pulumi:"created"`
	// Description of the Service Account Key.
	Description *string `pulumi:"description"`
	// The generated key.
	Key *string `pulumi:"key"`
	// The generated name of the key.
	Name *string `pulumi:"name"`
	// The name of an existing Service Account this key will belong to.
	ServiceAccountName *string `pulumi:"serviceAccountName"`
}

type ServiceAccountKeyState struct {
	// The timestamp, in UTC, when the key was created.
	Created pulumi.StringPtrInput
	// Description of the Service Account Key.
	Description pulumi.StringPtrInput
	// The generated key.
	Key pulumi.StringPtrInput
	// The generated name of the key.
	Name pulumi.StringPtrInput
	// The name of an existing Service Account this key will belong to.
	ServiceAccountName pulumi.StringPtrInput
}

func (ServiceAccountKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountKeyState)(nil)).Elem()
}

type serviceAccountKeyArgs struct {
	// Description of the Service Account Key.
	Description string `pulumi:"description"`
	// The name of an existing Service Account this key will belong to.
	ServiceAccountName string `pulumi:"serviceAccountName"`
}

// The set of arguments for constructing a ServiceAccountKey resource.
type ServiceAccountKeyArgs struct {
	// Description of the Service Account Key.
	Description pulumi.StringInput
	// The name of an existing Service Account this key will belong to.
	ServiceAccountName pulumi.StringInput
}

func (ServiceAccountKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountKeyArgs)(nil)).Elem()
}

type ServiceAccountKeyInput interface {
	pulumi.Input

	ToServiceAccountKeyOutput() ServiceAccountKeyOutput
	ToServiceAccountKeyOutputWithContext(ctx context.Context) ServiceAccountKeyOutput
}

func (*ServiceAccountKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountKey)(nil)).Elem()
}

func (i *ServiceAccountKey) ToServiceAccountKeyOutput() ServiceAccountKeyOutput {
	return i.ToServiceAccountKeyOutputWithContext(context.Background())
}

func (i *ServiceAccountKey) ToServiceAccountKeyOutputWithContext(ctx context.Context) ServiceAccountKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountKeyOutput)
}

func (i *ServiceAccountKey) ToOutput(ctx context.Context) pulumix.Output[*ServiceAccountKey] {
	return pulumix.Output[*ServiceAccountKey]{
		OutputState: i.ToServiceAccountKeyOutputWithContext(ctx).OutputState,
	}
}

// ServiceAccountKeyArrayInput is an input type that accepts ServiceAccountKeyArray and ServiceAccountKeyArrayOutput values.
// You can construct a concrete instance of `ServiceAccountKeyArrayInput` via:
//
//	ServiceAccountKeyArray{ ServiceAccountKeyArgs{...} }
type ServiceAccountKeyArrayInput interface {
	pulumi.Input

	ToServiceAccountKeyArrayOutput() ServiceAccountKeyArrayOutput
	ToServiceAccountKeyArrayOutputWithContext(context.Context) ServiceAccountKeyArrayOutput
}

type ServiceAccountKeyArray []ServiceAccountKeyInput

func (ServiceAccountKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceAccountKey)(nil)).Elem()
}

func (i ServiceAccountKeyArray) ToServiceAccountKeyArrayOutput() ServiceAccountKeyArrayOutput {
	return i.ToServiceAccountKeyArrayOutputWithContext(context.Background())
}

func (i ServiceAccountKeyArray) ToServiceAccountKeyArrayOutputWithContext(ctx context.Context) ServiceAccountKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountKeyArrayOutput)
}

func (i ServiceAccountKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceAccountKey] {
	return pulumix.Output[[]*ServiceAccountKey]{
		OutputState: i.ToServiceAccountKeyArrayOutputWithContext(ctx).OutputState,
	}
}

// ServiceAccountKeyMapInput is an input type that accepts ServiceAccountKeyMap and ServiceAccountKeyMapOutput values.
// You can construct a concrete instance of `ServiceAccountKeyMapInput` via:
//
//	ServiceAccountKeyMap{ "key": ServiceAccountKeyArgs{...} }
type ServiceAccountKeyMapInput interface {
	pulumi.Input

	ToServiceAccountKeyMapOutput() ServiceAccountKeyMapOutput
	ToServiceAccountKeyMapOutputWithContext(context.Context) ServiceAccountKeyMapOutput
}

type ServiceAccountKeyMap map[string]ServiceAccountKeyInput

func (ServiceAccountKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceAccountKey)(nil)).Elem()
}

func (i ServiceAccountKeyMap) ToServiceAccountKeyMapOutput() ServiceAccountKeyMapOutput {
	return i.ToServiceAccountKeyMapOutputWithContext(context.Background())
}

func (i ServiceAccountKeyMap) ToServiceAccountKeyMapOutputWithContext(ctx context.Context) ServiceAccountKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountKeyMapOutput)
}

func (i ServiceAccountKeyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceAccountKey] {
	return pulumix.Output[map[string]*ServiceAccountKey]{
		OutputState: i.ToServiceAccountKeyMapOutputWithContext(ctx).OutputState,
	}
}

type ServiceAccountKeyOutput struct{ *pulumi.OutputState }

func (ServiceAccountKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountKey)(nil)).Elem()
}

func (o ServiceAccountKeyOutput) ToServiceAccountKeyOutput() ServiceAccountKeyOutput {
	return o
}

func (o ServiceAccountKeyOutput) ToServiceAccountKeyOutputWithContext(ctx context.Context) ServiceAccountKeyOutput {
	return o
}

func (o ServiceAccountKeyOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceAccountKey] {
	return pulumix.Output[*ServiceAccountKey]{
		OutputState: o.OutputState,
	}
}

// The timestamp, in UTC, when the key was created.
func (o ServiceAccountKeyOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// Description of the Service Account Key.
func (o ServiceAccountKeyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The generated key.
func (o ServiceAccountKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The generated name of the key.
func (o ServiceAccountKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of an existing Service Account this key will belong to.
func (o ServiceAccountKeyOutput) ServiceAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.ServiceAccountName }).(pulumi.StringOutput)
}

type ServiceAccountKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceAccountKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceAccountKey)(nil)).Elem()
}

func (o ServiceAccountKeyArrayOutput) ToServiceAccountKeyArrayOutput() ServiceAccountKeyArrayOutput {
	return o
}

func (o ServiceAccountKeyArrayOutput) ToServiceAccountKeyArrayOutputWithContext(ctx context.Context) ServiceAccountKeyArrayOutput {
	return o
}

func (o ServiceAccountKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceAccountKey] {
	return pulumix.Output[[]*ServiceAccountKey]{
		OutputState: o.OutputState,
	}
}

func (o ServiceAccountKeyArrayOutput) Index(i pulumi.IntInput) ServiceAccountKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceAccountKey {
		return vs[0].([]*ServiceAccountKey)[vs[1].(int)]
	}).(ServiceAccountKeyOutput)
}

type ServiceAccountKeyMapOutput struct{ *pulumi.OutputState }

func (ServiceAccountKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceAccountKey)(nil)).Elem()
}

func (o ServiceAccountKeyMapOutput) ToServiceAccountKeyMapOutput() ServiceAccountKeyMapOutput {
	return o
}

func (o ServiceAccountKeyMapOutput) ToServiceAccountKeyMapOutputWithContext(ctx context.Context) ServiceAccountKeyMapOutput {
	return o
}

func (o ServiceAccountKeyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceAccountKey] {
	return pulumix.Output[map[string]*ServiceAccountKey]{
		OutputState: o.OutputState,
	}
}

func (o ServiceAccountKeyMapOutput) MapIndex(k pulumi.StringInput) ServiceAccountKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceAccountKey {
		return vs[0].(map[string]*ServiceAccountKey)[vs[1].(string)]
	}).(ServiceAccountKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountKeyInput)(nil)).Elem(), &ServiceAccountKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountKeyArrayInput)(nil)).Elem(), ServiceAccountKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountKeyMapInput)(nil)).Elem(), ServiceAccountKeyMap{})
	pulumi.RegisterOutputType(ServiceAccountKeyOutput{})
	pulumi.RegisterOutputType(ServiceAccountKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceAccountKeyMapOutput{})
}
