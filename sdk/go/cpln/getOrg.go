// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

// Output the ID and name of the current [org](https://docs.controlplane.com/reference/org).
//
// ## Outputs
//
// The following attributes are exported:
//
// - **cpln_id** (String) The ID, in GUID format, of the org.
// - **name** (String) The name of org.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			org, err := cpln.LookupOrg(ctx, &cpln.LookupOrgArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("orgId", org.Id)
//			ctx.Export("orgName", org.Name)
//			return nil
//		})
//	}
//
// ```
func LookupOrg(ctx *pulumi.Context, args *LookupOrgArgs, opts ...pulumi.InvokeOption) (*LookupOrgResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrgResult
	err := ctx.Invoke("cpln:index/getOrg:getOrg", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrg.
type LookupOrgArgs struct {
	AuthConfig    *GetOrgAuthConfig    `pulumi:"authConfig"`
	Observability *GetOrgObservability `pulumi:"observability"`
	Security      *GetOrgSecurity      `pulumi:"security"`
}

// A collection of values returned by getOrg.
type LookupOrgResult struct {
	AccountId             string               `pulumi:"accountId"`
	AuthConfig            *GetOrgAuthConfig    `pulumi:"authConfig"`
	CplnId                string               `pulumi:"cplnId"`
	Description           string               `pulumi:"description"`
	Id                    string               `pulumi:"id"`
	Invitees              []string             `pulumi:"invitees"`
	Name                  string               `pulumi:"name"`
	Observability         *GetOrgObservability `pulumi:"observability"`
	Security              *GetOrgSecurity      `pulumi:"security"`
	SelfLink              string               `pulumi:"selfLink"`
	SessionTimeoutSeconds int                  `pulumi:"sessionTimeoutSeconds"`
	Statuses              []GetOrgStatus       `pulumi:"statuses"`
	Tags                  map[string]string    `pulumi:"tags"`
}

func LookupOrgOutput(ctx *pulumi.Context, args LookupOrgOutputArgs, opts ...pulumi.InvokeOption) LookupOrgResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOrgResultOutput, error) {
			args := v.(LookupOrgArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cpln:index/getOrg:getOrg", args, LookupOrgResultOutput{}, options).(LookupOrgResultOutput), nil
		}).(LookupOrgResultOutput)
}

// A collection of arguments for invoking getOrg.
type LookupOrgOutputArgs struct {
	AuthConfig    GetOrgAuthConfigPtrInput    `pulumi:"authConfig"`
	Observability GetOrgObservabilityPtrInput `pulumi:"observability"`
	Security      GetOrgSecurityPtrInput      `pulumi:"security"`
}

func (LookupOrgOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgArgs)(nil)).Elem()
}

// A collection of values returned by getOrg.
type LookupOrgResultOutput struct{ *pulumi.OutputState }

func (LookupOrgResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgResult)(nil)).Elem()
}

func (o LookupOrgResultOutput) ToLookupOrgResultOutput() LookupOrgResultOutput {
	return o
}

func (o LookupOrgResultOutput) ToLookupOrgResultOutputWithContext(ctx context.Context) LookupOrgResultOutput {
	return o
}

func (o LookupOrgResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupOrgResultOutput) AuthConfig() GetOrgAuthConfigPtrOutput {
	return o.ApplyT(func(v LookupOrgResult) *GetOrgAuthConfig { return v.AuthConfig }).(GetOrgAuthConfigPtrOutput)
}

func (o LookupOrgResultOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgResult) string { return v.CplnId }).(pulumi.StringOutput)
}

func (o LookupOrgResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupOrgResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOrgResultOutput) Invitees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOrgResult) []string { return v.Invitees }).(pulumi.StringArrayOutput)
}

func (o LookupOrgResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupOrgResultOutput) Observability() GetOrgObservabilityPtrOutput {
	return o.ApplyT(func(v LookupOrgResult) *GetOrgObservability { return v.Observability }).(GetOrgObservabilityPtrOutput)
}

func (o LookupOrgResultOutput) Security() GetOrgSecurityPtrOutput {
	return o.ApplyT(func(v LookupOrgResult) *GetOrgSecurity { return v.Security }).(GetOrgSecurityPtrOutput)
}

func (o LookupOrgResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupOrgResultOutput) SessionTimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrgResult) int { return v.SessionTimeoutSeconds }).(pulumi.IntOutput)
}

func (o LookupOrgResultOutput) Statuses() GetOrgStatusArrayOutput {
	return o.ApplyT(func(v LookupOrgResult) []GetOrgStatus { return v.Statuses }).(GetOrgStatusArrayOutput)
}

func (o LookupOrgResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOrgResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrgResultOutput{})
}
