// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

// Use this data source to access information about a [Location](https://docs.controlplane.com/reference/location) within Control Plane.
//
// ## Required
//
// - **name** (String) Name of the location (i.e. `aws-us-west-2`).
//
// ## Outputs
//
// The following attributes are exported:
//
// - **cpln_id** (String) The ID, in GUID format, of the location.
// - **name** (String) Name of the location.
// - **description** (String) Description of the location.
// - **tags** (Map of String) Key-value map of resource tags.
// - **cloud_provider** (String) Cloud Provider of the location.
// - **region** (String) Region of the location.
// - **enabled** (Boolean) Indication if location is enabled.
// - **geo** (Block List, Max: 1) (see below)
// - **ip_ranges** (List of String) A list of IP ranges of the location.
// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
//
// <a id="nestedblock--geo"></a>
//
// ### `geo`
//
// # Location geographical details
//
// - **lat** (Number) Latitude.
// - **lon** (Number) Longitude.
// - **country** (String) Country.
// - **state** (String) State.
// - **city** (String) City.
// - **continent** (String) Continent.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			location, err := cpln.LookupLocation(ctx, &cpln.LookupLocationArgs{
//				Name: "aws-us-west-2",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("location", location)
//			ctx.Export("locationEnabled", location.Enabled)
//			return nil
//		})
//	}
//
// ```
func LookupLocation(ctx *pulumi.Context, args *LookupLocationArgs, opts ...pulumi.InvokeOption) (*LookupLocationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLocationResult
	err := ctx.Invoke("cpln:index/getLocation:getLocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocation.
type LookupLocationArgs struct {
	Name string            `pulumi:"name"`
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getLocation.
type LookupLocationResult struct {
	CloudProvider string            `pulumi:"cloudProvider"`
	CplnId        string            `pulumi:"cplnId"`
	Description   string            `pulumi:"description"`
	Enabled       bool              `pulumi:"enabled"`
	Geos          []GetLocationGeo  `pulumi:"geos"`
	Id            string            `pulumi:"id"`
	IpRanges      []string          `pulumi:"ipRanges"`
	Name          string            `pulumi:"name"`
	Region        string            `pulumi:"region"`
	SelfLink      string            `pulumi:"selfLink"`
	Tags          map[string]string `pulumi:"tags"`
}

func LookupLocationOutput(ctx *pulumi.Context, args LookupLocationOutputArgs, opts ...pulumi.InvokeOption) LookupLocationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLocationResultOutput, error) {
			args := v.(LookupLocationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cpln:index/getLocation:getLocation", args, LookupLocationResultOutput{}, options).(LookupLocationResultOutput), nil
		}).(LookupLocationResultOutput)
}

// A collection of arguments for invoking getLocation.
type LookupLocationOutputArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupLocationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationArgs)(nil)).Elem()
}

// A collection of values returned by getLocation.
type LookupLocationResultOutput struct{ *pulumi.OutputState }

func (LookupLocationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationResult)(nil)).Elem()
}

func (o LookupLocationResultOutput) ToLookupLocationResultOutput() LookupLocationResultOutput {
	return o
}

func (o LookupLocationResultOutput) ToLookupLocationResultOutputWithContext(ctx context.Context) LookupLocationResultOutput {
	return o
}

func (o LookupLocationResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocationResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o LookupLocationResultOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocationResult) string { return v.CplnId }).(pulumi.StringOutput)
}

func (o LookupLocationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocationResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupLocationResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLocationResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupLocationResultOutput) Geos() GetLocationGeoArrayOutput {
	return o.ApplyT(func(v LookupLocationResult) []GetLocationGeo { return v.Geos }).(GetLocationGeoArrayOutput)
}

func (o LookupLocationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLocationResultOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLocationResult) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o LookupLocationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupLocationResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocationResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupLocationResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocationResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupLocationResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLocationResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLocationResultOutput{})
}
