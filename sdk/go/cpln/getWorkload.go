// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

// Use this data source to access information about an existing [Workload](https://docs.controlplane.com/reference/workload) within Control Plane.
//
// ## Required
//
// - **name** (String) Name of the workload.
// - **gvc** (String) Name of the GVC that the specified workload belongs to.
//
// ## Outputs
//
// The following attributes are exported:
//
// - **id** (String) The unique identifier for this workload.
// - **cpln_id** (String) The ID, in GUID format, of the workload.
// - **name** (String) Name of the workload.
// - **gvc** (String) Name of the associated GVC.
// - **type** (String) Workload type. Either `serverless`, `standard`, `stateful`, or `cron`.
// - **description** (String) Description of the workload.
// - **tags** (Map of String) Key-value map of resource tags.
// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
// - **identity_link** (String) Full link to the identity used as the access scope for 3rd party cloud resources.
// - **support_dynamic_tags** (Boolean) Indicates if Control Plane automatically redeploys when referenced container images are updated in the registry.
// - **extras** (String) Extra Kubernetes modifications. Only used for BYOK.
// - **container** (Block List) (see below).
// - **firewall_spec** (Block List, Max: 1) (see below).
// - **options** (Block List, Max: 1) (see below).
// - **local_options** (Block List) (see below).
// - **job** (Block List, Max: 1) (see below).
// - **sidecar** (Block List, Max: 1) (see below).
// - **rollout_options** (Block List, Max: 1) (see below).
// - **security_options** (Block List, Max: 1) (see below).
// - **load_balancer** (Block List, Max: 1) (see below).
// - **request_retry_policy** (Block List, Max: 1) (see below).
// - **status** (Block List) (see below).
//
// <a id="nestedblock--container"></a>
//
// ### `container`
//
// > **Note** A workload always exposes at least one container definition.
//
// Read-Only:
//
// - **name** (String) Name of the container. Cannot be `istio-proxy`, `queue-proxy`, or `istio-validation`, and cannot start with `cpln_`.
// - **image** (String) The full image and tag path.
// - **working_directory** (String) Override for the container working directory. Must be an absolute path.
// - **port** (Number) The port the container exposes. Only one container can specify a port. Min: `80`. Max: `65535`. Used by the `serverless` workload type. **Deprecated – use `ports`.**
// - **memory** (String) Reserved memory when Capacity AI is disabled, or maximum memory when it is enabled. Default: `128Mi`.
// - **cpu** (String) Reserved CPU when Capacity AI is disabled, or maximum CPU when it is enabled. Default: `50m`.
// - **min_cpu** (String) Minimum CPU when Capacity AI is enabled.
// - **min_memory** (String) Minimum memory when Capacity AI is enabled.
// - **env** (Map of String) Environment variables exposed to the container.
// - **inherit_env** (Boolean) Indicates whether GVC environment variables are inherited. A variable in `env` overrides the same key from the GVC.
// - **command** (String) Override for the container entry point.
// - **args** (List of String) Command-line arguments passed to the container in order.
// - **metrics** (Block List, Max: 1) (see below).
// - **ports** (Block List) (see below).
// - **readiness_probe** (Block List, Max: 1) (see below).
// - **liveness_probe** (Block List, Max: 1) (see below).
// - **gpu_nvidia** (Block List, Max: 1) (see below).
// - **gpu_custom** (Block List, Max: 1) (see below).
// - **lifecycle** (Block List, Max: 1) (see below).
// - **volume** (Block List) (see below).
//
// > **Note** The following container ports are reserved and cannot be used: `8012`, `8022`, `9090`, `9091`, `15000`, `15001`, `15006`, `15020`, `15021`, `15090`, `41000`.
//
// <a id="nestedblock--container--metrics"></a>
//
// ### `container.metrics`
//
// Read-Only:
//
// - **port** (Number) Port that exposes custom metrics.
// - **path** (String) Path where custom metrics are available.
// - **drop_metrics** (List of String) Patterns describing metrics to discard.
//
// <a id="nestedblock--container--ports"></a>
//
// ### `container.ports`
//
// Read-Only:
//
// - **protocol** (String) Protocol. One of `http`, `http2`, `tcp`, or `grpc`.
// - **number** (Number) Port that the container exposes.
//
// <a id="nestedblock--container--readiness_probe"></a>
//
// ### `container.readiness_probe`
//
// Read-Only:
//
// - **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: `10`. Min: `0`. Max: `600`.
// - **period_seconds** (Number) Interval between probes. Default: `10`. Min: `1`. Max: `600`.
// - **timeout_seconds** (Number) Probe timeout. Default: `1`. Min: `1`. Max: `600`.
// - **success_threshold** (Number) Minimum consecutive successes to be considered ready. Default: `1`. Min: `1`. Max: `20`.
// - **failure_threshold** (Number) Consecutive failures before marking the container unhealthy. Default: `3`. Min: `1`. Max: `20`.
// - **exec** (Block List, Max: 1) (see below).
// - **grpc** (Block List, Max: 1) (see below).
// - **tcp_socket** (Block List, Max: 1) (see below).
// - **http_get** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--container--liveness_probe"></a>
//
// ### `container.liveness_probe`
//
// Read-Only:
//
// - **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: `10`. Min: `0`. Max: `600`.
// - **period_seconds** (Number) Interval between probes. Default: `10`. Min: `1`. Max: `600`.
// - **timeout_seconds** (Number) Probe timeout. Default: `1`. Min: `1`. Max: `600`.
// - **success_threshold** (Number) Minimum consecutive successes to be considered healthy. Default: `1`. Min: `1`. Max: `20`.
// - **failure_threshold** (Number) Consecutive failures before restarting the container. Default: `3`. Min: `1`. Max: `20`.
// - **exec** (Block List, Max: 1) (see below).
// - **grpc** (Block List, Max: 1) (see below).
// - **tcp_socket** (Block List, Max: 1) (see below).
// - **http_get** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--container--probe--exec"></a>
//
// ### `container.*_probe.exec`
//
// Read-Only:
//
// - **command** (List of String) Command executed inside the container when the probe runs.
//
// <a id="nestedblock--container--probe--grpc"></a>
//
// ### `container.*_probe.grpc`
//
// Read-Only:
//
// - **port** (Number) gRPC port used for the probe.
//
// <a id="nestedblock--container--probe--tcp_socket"></a>
//
// ### `container.*_probe.tcp_socket`
//
// Read-Only:
//
// - **port** (Number) TCP port used for the probe.
//
// <a id="nestedblock--container--probe--http_get"></a>
//
// ### `container.*_probe.http_get`
//
// Read-Only:
//
// - **path** (String) HTTP path to query. Default: `/`.
// - **port** (Number) Port for the HTTP GET. Min: `80`. Max: `65535`.
// - **http_headers** (Map of String) Headers included in the probe request.
// - **scheme** (String) HTTP scheme. Either `HTTP` or `HTTPS`. Default: `HTTP`.
//
// <a id="nestedblock--container--gpu_nvidia"></a>
//
// ### `container.gpu_nvidia`
//
// Read-Only:
//
// - **model** (String) GPU model (for example, `t4`).
// - **quantity** (Number) Number of NVIDIA GPUs attached to the container.
//
// <a id="nestedblock--container--gpu_custom"></a>
//
// ### `container.gpu_custom`
//
// Read-Only:
//
// - **resource** (String) Name of the custom GPU resource.
// - **quantity** (Number) Number of GPUs requested.
// - **runtime_class** (String) Runtime class that must be used with the custom GPU.
//
// <a id="nestedblock--container--lifecycle"></a>
//
// ### `container.lifecycle`
//
// Read-Only:
//
// - **post_start** (Block List, Max: 1) (see below).
// - **pre_stop** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--container--lifecycle--spec"></a>
//
// ### `container.lifecycle.*`
//
// Read-Only:
//
// - **exec** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--container--lifecycle--exec"></a>
//
// ### `container.lifecycle.*.exec`
//
// Read-Only:
//
// - **command** (List of String) Command executed during the lifecycle hook.
//
// <a id="nestedblock--container--volume"></a>
//
// ### `container.volume`
//
// > **Note** The following paths are reserved and cannot be used: `/dev`, `/dev/log`, `/tmp`, `/var`, `/var/log`.
//
// > **Note** Valid URI prefixes include `s3://bucket`, `gs://bucket`, `azureblob://storageAccount/container`, `azurefs://storageAccount/share`, `cpln://secret`, `cpln://volumeset`, and `scratch://`.
//
// Read-Only:
//
// - **uri** (String) URI of a volume hosted in Control Plane (Volume Set) or a supported cloud provider.
// - **recovery_policy** (String) Recovery policy for persistent volumes. Either `retain` or `recycle`. **Deprecated – no longer used.**
// - **path** (String) File-system path where the volume is mounted inside the container.
//
// <a id="nestedblock--firewall_spec"></a>
//
// ### `firewallSpec`
//
// Controls inbound and outbound access for external (public) and internal (service-to-service) traffic. Access is restricted by default.
//
// Read-Only:
//
// - **external** (Block List, Max: 1) (see below).
// - **internal** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--firewall_spec--external"></a>
//
// ### `firewall_spec.external`
//
// Read-Only:
//
// - **inbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks allowed to reach the workload. `0.0.0.0/0` opens access to the public internet.
// - **inbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks explicitly denied.
// - **outbound_allow_hostname** (List of String) Public hostnames the workload can reach. Wildcards are allowed only as a prefix (for example, `*.amazonaws.com`).
// - **outbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks the workload can reach. `0.0.0.0/0` enables outbound access to the public internet.
// - **outbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks that are denied even if allow lists include them.
// - **outbound_allow_port** (Block List) (see below).
// - **http** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--firewall_spec--external--outbound_allow_port"></a>
//
// ### `firewall_spec.external.outbound_allow_port`
//
// Allows outbound access to specific ports and protocols.
//
// Read-Only:
//
// - **protocol** (String) Either `http`, `https`, or `tcp`. Default: `tcp`.
// - **number** (Number) Port number. Max: `65000`.
//
// <a id="nestedblock--firewall_spec--external--http"></a>
//
// ### `firewall_spec.external.http`
//
// Firewall options for HTTP workloads.
//
// Read-Only:
//
// - **inbound_header_filter** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--firewall_spec--external--http--inbound_header_filter"></a>
//
// ### `firewall_spec.external.http.inbound_header_filter`
//
// Configures header-based allow/deny logic.
//
// Read-Only:
//
// - **key** (String) Header name to inspect.
// - **allowed_values** (List of String) Regular expressions describing allowed header values. Requests that fail to match any allowed value are filtered.
// - **blocked_values** (List of String) Regular expressions describing blocked header values. Requests that match any blocked value are filtered.
//
// <a id="nestedblock--firewall_spec--internal"></a>
//
// ### `firewall_spec.internal`
//
// Controls access between workloads.
//
// Read-Only:
//
// - **inbound_allow_type** (String) Internal firewall mode. One of `none`, `same-gvc`, `same-org`, or `workload-list`.
// - **inbound_allow_workload** (List of String) Specific workloads allowed when `inboundAllowType` is `workload-list`.
//
// <a id="nestedblock--options"></a>
//
// ### `options`
//
// Exports the workload-level options applied by Control Plane.
//
// Read-Only:
//
// - **timeout_seconds** (Number) Request timeout in seconds. Default: `5`.
// - **capacity_ai** (Boolean) Whether Capacity AI is enabled. Default: `true`.
// - **capacity_ai_update_minutes** (Number) Minimum interval (in minutes) between Capacity AI reservation updates.
// - **debug** (Boolean) Indicates if debug mode is enabled. Default: `false`.
// - **suspend** (Boolean) Indicates if the workload is suspended. Default: `false`.
// - **autoscaling** (Block List, Max: 1) (see below).
// - **multi_zone** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--options--autoscaling"></a>
//
// ### `options.autoscaling`
//
// Read-Only:
//
// - **metric** (String) Scaling metric. One of `concurrency`, `cpu`, `memory`, `rps`, `latency`, `keda`, or `disabled`.
// - **metric_percentile** (String) Percentile to target when the metric represents a distribution (for example, latency).
// - **target** (Number) Target value for the selected metric. Min: `1`. Max: `20000`. Default: `95`.
// - **min_scale** (Number) Minimum replicas allowed. Min: `0`. Max: `maxScale`. Default: `1`.
// - **max_scale** (Number) Maximum replicas allowed. Min: `0`. Default: `5`.
// - **scale_to_zero_delay** (Number) Seconds without requests before scaling to zero. Min: `30`. Max: `3600`. Default: `300`.
// - **max_concurrency** (Number) Maximum concurrent requests per replica. Min: `0`. Max: `1000`. Default: `0`.
// - **multi** (Block List, Max: 1) (see below).
// - **keda** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--options--autoscaling--multi"></a>
//
// ### `options.autoscaling.multi`
//
// Read-Only:
//
// - **metric** (String) Either `cpu` or `memory`.
// - **target** (Number) Target value for the metric. Min: `1`. Max: `20000`.
//
// <a id="nestedblock--options--autoscaling--keda"></a>
//
// ### `options.autoscaling.keda`
//
// KEDA (Kubernetes-based Event Driven Autoscaling) configuration.
//
// Read-Only:
//
// - **polling_interval** (Number) Seconds between KEDA polling cycles.
// - **cooldown_period** (Number) Cooldown seconds after scaling to zero before scaling up again.
// - **initial_cooldown_period** (Number) Initial cooldown after scaling to zero.
// - **trigger** (Block List) (see below).
// - **advanced** (Block List) (see below).
//
// <a id="nestedblock--options--autoscaling--keda--trigger"></a>
//
// ### `options.autoscaling.keda.trigger`
//
// Defines event-driven scaling triggers.
//
// Read-Only:
//
// - **type** (String) Trigger type (for example, `prometheus`, `aws-sqs`).
// - **metadata** (Map of String) Configuration parameters required by the trigger.
// - **name** (String) Optional trigger name.
// - **use_cached_metrics** (Boolean) Indicates whether metrics caching is enabled during the polling interval.
// - **metric_type** (String) Metric type used for scaling.
// - **authentication_ref** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--options--autoscaling--keda--trigger--authentication_ref"></a>
//
// ### `options.autoscaling.keda.trigger.authentication_ref`
//
// Read-Only:
//
// - **name** (String) Name of the secret listed in `spec.keda.secrets` on the GVC.
//
// <a id="nestedblock--options--autoscaling--keda--advanced"></a>
//
// ### `options.autoscaling.keda.advanced`
//
// Advanced KEDA modifiers.
//
// Read-Only:
//
// - **scaling_modifiers** (Block List) (see below).
//
// <a id="nestedblock--options--autoscaling--keda--advanced--scaling_modifiers"></a>
//
// ### `options.autoscaling.keda.advanced.scaling_modifiers`
//
// Read-Only:
//
// - **target** (String) New target value for the composed metric.
// - **activation_target** (String) Activation target for the composed metric.
// - **metric_type** (String) Metric type used for the composed metric.
// - **formula** (String) Expression that combines or transforms metrics.
//
// <a id="nestedblock--options--multi_zone"></a>
//
// ### `options.multi_zone`
//
// Read-Only:
//
// - **enabled** (Boolean) Indicates if multi-zone execution is enabled.
//
// <a id="nestedblock--local_options"></a>
//
// ### `localOptions`
//
// Overrides default options for specific Control Plane locations.
//
// Read-Only:
//
// - **location** (String) Location name whose options are overridden.
// - All attributes from `options` are repeated here with location-specific values.
//
// <a id="nestedblock--job"></a>
//
// ### `job`
//
// Exports cron workload settings.
//
// Read-Only:
//
// - **schedule** (String) Cron schedule expression determining job execution times.
// - **concurrency_policy** (String) Either `Forbid` or `Replace`. Determines how overlapping jobs are handled.
// - **history_limit** (Number) Maximum completed job instances retained. Integer between `1` and `10`. Default: `5`.
// - **restart_policy** (String) Either `OnFailure` or `Never`. Default: `Never`.
// - **active_deadline_seconds** (Number) Maximum seconds a job can run before it is forcibly stopped.
//
// <a id="nestedblock--sidecar"></a>
//
// ### `sidecar`
//
// Read-Only:
//
// - **envoy** (String) Name of the Envoy sidecar configuration attached to the workload.
//
// <a id="nestedblock--rollout_options"></a>
//
// ### `rolloutOptions`
//
// Controls rolling-update behavior.
//
// Read-Only:
//
// - **min_ready_seconds** (Number) Minimum seconds a container must run without crashing to be considered available.
// - **max_unavailable_replicas** (String) Maximum replicas that can be unavailable during an update.
// - **max_surge_replicas** (String) Maximum replicas above the desired count during an update.
// - **scaling_policy** (String) Update strategy. Either `OrderedReady` or `Parallel`. Default: `OrderedReady`.
// - **termination_grace_period_seconds** (Number) Seconds allowed for graceful termination, including `preStop` hooks.
//
// > **Note** `maxSurgeReplicas` and `maxUnavailableReplicas` accept absolute numbers (for example, `2`) or percentages (for example, `50%`), and they cannot both be zero.
//
// <a id="nestedblock--security_options"></a>
//
// ### `securityOptions`
//
// Read-Only:
//
// - **file_system_group_id** (Number) Group ID applied to mounted volumes.
//
// <a id="nestedblock--load_balancer"></a>
//
// ### `loadBalancer`
//
// Read-Only:
//
// - **replica_direct** (Boolean) When `true`, individual replicas can be reached directly using `replica-<index>` subdomains. Only valid for `stateful` workloads.
// - **direct** (Block List, Max: 1) (see below).
// - **geo_location** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--load_balancer--direct"></a>
//
// ### `load_balancer.direct`
//
// Direct load balancers are created in each workload location and expose the workload's standard endpoints. Customers must configure certificates if TLS is required.
//
// Read-Only:
//
// - **enabled** (Boolean) Indicates if the direct load balancer is active.
// - **ipset** (String) Name of the IP set associated with the load balancer, if any.
// - **port** (Block List) (see below).
//
// <a id="nestedblock--load_balancer--direct--port"></a>
//
// ### `load_balancer.direct.port`
//
// Read-Only:
//
// - **external_port** (Number) Public-facing port.
// - **protocol** (String) Protocol exposed publicly.
// - **scheme** (String) Overrides the default `https` URL scheme in generated links.
// - **container_port** (Number) Container port receiving the traffic.
//
// <a id="nestedblock--load_balancer--geo_location"></a>
//
// ### `load_balancer.geo_location`
//
// Read-Only:
//
// - **enabled** (Boolean) When enabled, geo-location headers are injected into inbound HTTP requests.
// - **headers** (Block List, Max: 1) (see below).
//
// <a id="nestedblock--load_balancer--geo_location--headers"></a>
//
// ### `load_balancer.geo_location.headers`
//
// Read-Only:
//
// - **asn** (String) ASN header value injected into requests.
// - **city** (String) City header value.
// - **country** (String) Country header value.
// - **region** (String) Region header value.
//
// <a id="nestedblock--request_retry_policy"></a>
//
// ### `requestRetryPolicy`
//
// Read-Only:
//
// - **attempts** (Number) Number of retry attempts. Default: `2`.
// - **retry_on** (List of String) Retry conditions that trigger another attempt.
//
// <a id="nestedblock--status"></a>
//
// ### `status`
//
// Current state of the workload.
//
// Read-Only:
//
// - **parent_id** (String) ID of the parent object.
// - **canonical_endpoint** (String) Canonical endpoint for the workload.
// - **endpoint** (String) Public endpoint for the workload.
// - **internal_name** (String) Internal hostname used for service-to-service communication.
// - **replica_internal_names** (List of String)
// - **health_check** (Block List) (see below).
// - **current_replica_count** (Number) Current number of replicas deployed.
// - **resolved_images** (Block List) (see below).
// - **load_balancer** (Block List) (see below).
//
// <a id="nestedblock--status--health_check"></a>
//
// ### `status.health_check`
//
// Details about the most recent health checks.
//
// Read-Only:
//
// - **active** (Boolean) Indicates if the health check is active.
// - **success** (Boolean) Indicates if the workload is considered healthy.
// - **code** (Number) Status code returned by the check.
// - **message** (String) Health check message.
// - **failures** (Number) Number of recent failures.
// - **successes** (Number) Number of recent successes.
// - **last_checked** (String) Timestamp (UTC) of the last health check.
//
// <a id="nestedblock--status--resolved_images"></a>
//
// ### `status.resolved_images`
//
// Resolved container images when dynamic tags are enabled.
//
// Read-Only:
//
// - **resolved_for_version** (Number) Workload version for which the images were resolved.
// - **resolved_at** (String) UTC timestamp when resolution happened.
// - **error_messages** (List of String) Errors encountered while resolving images.
// - **next_retry_at** (String)
// - **images** (Block List) (see below).
//
// <a id="nestedblock--status--resolved_images--images"></a>
//
// ### `status.resolved_images.images`
//
// Read-Only:
//
// - **digest** (String) SHA256 digest uniquely identifying the image content.
// - **manifests** (Block List) (see below).
//
// <a id="nestedblock--status--resolved_images--images--manifests"></a>
//
// ### `status.resolved_images.images.manifests`
//
// Read-Only:
//
// - **image** (String) Name and tag of the resolved image.
// - **media_type** (String) MIME type describing the manifest format.
// - **digest** (String) SHA256 digest identifying the manifest.
// - **platform** (Map of String) Key-value pairs describing the target OS and architecture.
//
// <a id="nestedblock--status--load_balancer"></a>
//
// ### `status.load_balancer`
//
// Read-Only:
//
// - **origin** (String) Origin identifier associated with the load balancer.
// - **url** (String) Load-balancer endpoint URL exposed by Control Plane.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			workload, err := cpln.LookupWorkload(ctx, &cpln.LookupWorkloadArgs{
//				Name: "workload-example",
//				Gvc:  "gvc-example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("workloadId", workload.Id)
//			return nil
//		})
//	}
//
// ```
func LookupWorkload(ctx *pulumi.Context, args *LookupWorkloadArgs, opts ...pulumi.InvokeOption) (*LookupWorkloadResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkloadResult
	err := ctx.Invoke("cpln:index/getWorkload:getWorkload", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkload.
type LookupWorkloadArgs struct {
	Containers           []GetWorkloadContainer          `pulumi:"containers"`
	FirewallSpecs        []GetWorkloadFirewallSpec       `pulumi:"firewallSpecs"`
	Gvc                  string                          `pulumi:"gvc"`
	Jobs                 []GetWorkloadJob                `pulumi:"jobs"`
	LoadBalancers        []GetWorkloadLoadBalancer       `pulumi:"loadBalancers"`
	LocalOptions         []GetWorkloadLocalOption        `pulumi:"localOptions"`
	Name                 string                          `pulumi:"name"`
	Options              []GetWorkloadOption             `pulumi:"options"`
	RequestRetryPolicies []GetWorkloadRequestRetryPolicy `pulumi:"requestRetryPolicies"`
	RolloutOptions       []GetWorkloadRolloutOption      `pulumi:"rolloutOptions"`
	SecurityOptions      []GetWorkloadSecurityOption     `pulumi:"securityOptions"`
	Sidecars             []GetWorkloadSidecar            `pulumi:"sidecars"`
	Tags                 map[string]string               `pulumi:"tags"`
}

// A collection of values returned by getWorkload.
type LookupWorkloadResult struct {
	Containers           []GetWorkloadContainer          `pulumi:"containers"`
	CplnId               string                          `pulumi:"cplnId"`
	Description          string                          `pulumi:"description"`
	Extras               string                          `pulumi:"extras"`
	FirewallSpecs        []GetWorkloadFirewallSpec       `pulumi:"firewallSpecs"`
	Gvc                  string                          `pulumi:"gvc"`
	Id                   string                          `pulumi:"id"`
	IdentityLink         string                          `pulumi:"identityLink"`
	Jobs                 []GetWorkloadJob                `pulumi:"jobs"`
	LoadBalancers        []GetWorkloadLoadBalancer       `pulumi:"loadBalancers"`
	LocalOptions         []GetWorkloadLocalOption        `pulumi:"localOptions"`
	Name                 string                          `pulumi:"name"`
	Options              []GetWorkloadOption             `pulumi:"options"`
	RequestRetryPolicies []GetWorkloadRequestRetryPolicy `pulumi:"requestRetryPolicies"`
	RolloutOptions       []GetWorkloadRolloutOption      `pulumi:"rolloutOptions"`
	SecurityOptions      []GetWorkloadSecurityOption     `pulumi:"securityOptions"`
	SelfLink             string                          `pulumi:"selfLink"`
	Sidecars             []GetWorkloadSidecar            `pulumi:"sidecars"`
	Statuses             []GetWorkloadStatus             `pulumi:"statuses"`
	SupportDynamicTags   bool                            `pulumi:"supportDynamicTags"`
	Tags                 map[string]string               `pulumi:"tags"`
	Type                 string                          `pulumi:"type"`
}

func LookupWorkloadOutput(ctx *pulumi.Context, args LookupWorkloadOutputArgs, opts ...pulumi.InvokeOption) LookupWorkloadResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkloadResultOutput, error) {
			args := v.(LookupWorkloadArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cpln:index/getWorkload:getWorkload", args, LookupWorkloadResultOutput{}, options).(LookupWorkloadResultOutput), nil
		}).(LookupWorkloadResultOutput)
}

// A collection of arguments for invoking getWorkload.
type LookupWorkloadOutputArgs struct {
	Containers           GetWorkloadContainerArrayInput          `pulumi:"containers"`
	FirewallSpecs        GetWorkloadFirewallSpecArrayInput       `pulumi:"firewallSpecs"`
	Gvc                  pulumi.StringInput                      `pulumi:"gvc"`
	Jobs                 GetWorkloadJobArrayInput                `pulumi:"jobs"`
	LoadBalancers        GetWorkloadLoadBalancerArrayInput       `pulumi:"loadBalancers"`
	LocalOptions         GetWorkloadLocalOptionArrayInput        `pulumi:"localOptions"`
	Name                 pulumi.StringInput                      `pulumi:"name"`
	Options              GetWorkloadOptionArrayInput             `pulumi:"options"`
	RequestRetryPolicies GetWorkloadRequestRetryPolicyArrayInput `pulumi:"requestRetryPolicies"`
	RolloutOptions       GetWorkloadRolloutOptionArrayInput      `pulumi:"rolloutOptions"`
	SecurityOptions      GetWorkloadSecurityOptionArrayInput     `pulumi:"securityOptions"`
	Sidecars             GetWorkloadSidecarArrayInput            `pulumi:"sidecars"`
	Tags                 pulumi.StringMapInput                   `pulumi:"tags"`
}

func (LookupWorkloadOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadArgs)(nil)).Elem()
}

// A collection of values returned by getWorkload.
type LookupWorkloadResultOutput struct{ *pulumi.OutputState }

func (LookupWorkloadResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadResult)(nil)).Elem()
}

func (o LookupWorkloadResultOutput) ToLookupWorkloadResultOutput() LookupWorkloadResultOutput {
	return o
}

func (o LookupWorkloadResultOutput) ToLookupWorkloadResultOutputWithContext(ctx context.Context) LookupWorkloadResultOutput {
	return o
}

func (o LookupWorkloadResultOutput) Containers() GetWorkloadContainerArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadContainer { return v.Containers }).(GetWorkloadContainerArrayOutput)
}

func (o LookupWorkloadResultOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.CplnId }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) Extras() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Extras }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) FirewallSpecs() GetWorkloadFirewallSpecArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadFirewallSpec { return v.FirewallSpecs }).(GetWorkloadFirewallSpecArrayOutput)
}

func (o LookupWorkloadResultOutput) Gvc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Gvc }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) IdentityLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.IdentityLink }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) Jobs() GetWorkloadJobArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadJob { return v.Jobs }).(GetWorkloadJobArrayOutput)
}

func (o LookupWorkloadResultOutput) LoadBalancers() GetWorkloadLoadBalancerArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadLoadBalancer { return v.LoadBalancers }).(GetWorkloadLoadBalancerArrayOutput)
}

func (o LookupWorkloadResultOutput) LocalOptions() GetWorkloadLocalOptionArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadLocalOption { return v.LocalOptions }).(GetWorkloadLocalOptionArrayOutput)
}

func (o LookupWorkloadResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) Options() GetWorkloadOptionArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadOption { return v.Options }).(GetWorkloadOptionArrayOutput)
}

func (o LookupWorkloadResultOutput) RequestRetryPolicies() GetWorkloadRequestRetryPolicyArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadRequestRetryPolicy { return v.RequestRetryPolicies }).(GetWorkloadRequestRetryPolicyArrayOutput)
}

func (o LookupWorkloadResultOutput) RolloutOptions() GetWorkloadRolloutOptionArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadRolloutOption { return v.RolloutOptions }).(GetWorkloadRolloutOptionArrayOutput)
}

func (o LookupWorkloadResultOutput) SecurityOptions() GetWorkloadSecurityOptionArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadSecurityOption { return v.SecurityOptions }).(GetWorkloadSecurityOptionArrayOutput)
}

func (o LookupWorkloadResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupWorkloadResultOutput) Sidecars() GetWorkloadSidecarArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadSidecar { return v.Sidecars }).(GetWorkloadSidecarArrayOutput)
}

func (o LookupWorkloadResultOutput) Statuses() GetWorkloadStatusArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []GetWorkloadStatus { return v.Statuses }).(GetWorkloadStatusArrayOutput)
}

func (o LookupWorkloadResultOutput) SupportDynamicTags() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkloadResult) bool { return v.SupportDynamicTags }).(pulumi.BoolOutput)
}

func (o LookupWorkloadResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkloadResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupWorkloadResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkloadResultOutput{})
}
