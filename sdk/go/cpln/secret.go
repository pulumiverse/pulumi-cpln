// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

type Secret struct {
	pulumi.CustomResourceState

	// [Reference Page](https://docs.controlplane.com/reference/secret#aws).
	Aws SecretAwsPtrOutput `pulumi:"aws"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
	AzureConnector SecretAzureConnectorPtrOutput `pulumi:"azureConnector"`
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
	AzureSdk pulumi.StringPtrOutput `pulumi:"azureSdk"`
	// The ID, in GUID format, of the secret.
	CplnId pulumi.StringOutput `pulumi:"cplnId"`
	// Description of the secret.
	Description pulumi.StringOutput `pulumi:"description"`
	// List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
	Dictionary pulumi.StringMapOutput `pulumi:"dictionary"`
	// If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
	DictionaryAsEnvs pulumi.StringMapOutput `pulumi:"dictionaryAsEnvs"`
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
	Docker pulumi.StringPtrOutput `pulumi:"docker"`
	Ecr    SecretEcrPtrOutput     `pulumi:"ecr"`
	// JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
	Gcp pulumi.StringPtrOutput `pulumi:"gcp"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
	Keypair SecretKeypairPtrOutput `pulumi:"keypair"`
	// Name of the secret.
	Name pulumi.StringOutput `pulumi:"name"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
	NatsAccount SecretNatsAccountPtrOutput `pulumi:"natsAccount"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
	Opaque SecretOpaquePtrOutput `pulumi:"opaque"`
	// Output used when linking a secret to an environment variable or volume.
	SecretLink pulumi.StringOutput `pulumi:"secretLink"`
	// Full link to this resource. Can be referenced by other resources.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Key-value map of resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#tls).
	Tls SecretTlsPtrOutput `pulumi:"tls"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#username).
	Userpass SecretUserpassPtrOutput `pulumi:"userpass"`
}

// NewSecret registers a new resource with the given unique name, arguments, and options.
func NewSecret(ctx *pulumi.Context,
	name string, args *SecretArgs, opts ...pulumi.ResourceOption) (*Secret, error) {
	if args == nil {
		args = &SecretArgs{}
	}

	if args.AzureSdk != nil {
		args.AzureSdk = pulumi.ToSecret(args.AzureSdk).(pulumi.StringPtrInput)
	}
	if args.Docker != nil {
		args.Docker = pulumi.ToSecret(args.Docker).(pulumi.StringPtrInput)
	}
	if args.Gcp != nil {
		args.Gcp = pulumi.ToSecret(args.Gcp).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"azureSdk",
		"docker",
		"gcp",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Secret
	err := ctx.RegisterResource("cpln:index/secret:Secret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecret gets an existing Secret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretState, opts ...pulumi.ResourceOption) (*Secret, error) {
	var resource Secret
	err := ctx.ReadResource("cpln:index/secret:Secret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Secret resources.
type secretState struct {
	// [Reference Page](https://docs.controlplane.com/reference/secret#aws).
	Aws *SecretAws `pulumi:"aws"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
	AzureConnector *SecretAzureConnector `pulumi:"azureConnector"`
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
	AzureSdk *string `pulumi:"azureSdk"`
	// The ID, in GUID format, of the secret.
	CplnId *string `pulumi:"cplnId"`
	// Description of the secret.
	Description *string `pulumi:"description"`
	// List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
	Dictionary map[string]string `pulumi:"dictionary"`
	// If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
	DictionaryAsEnvs map[string]string `pulumi:"dictionaryAsEnvs"`
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
	Docker *string    `pulumi:"docker"`
	Ecr    *SecretEcr `pulumi:"ecr"`
	// JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
	Gcp *string `pulumi:"gcp"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
	Keypair *SecretKeypair `pulumi:"keypair"`
	// Name of the secret.
	Name *string `pulumi:"name"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
	NatsAccount *SecretNatsAccount `pulumi:"natsAccount"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
	Opaque *SecretOpaque `pulumi:"opaque"`
	// Output used when linking a secret to an environment variable or volume.
	SecretLink *string `pulumi:"secretLink"`
	// Full link to this resource. Can be referenced by other resources.
	SelfLink *string `pulumi:"selfLink"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#tls).
	Tls *SecretTls `pulumi:"tls"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#username).
	Userpass *SecretUserpass `pulumi:"userpass"`
}

type SecretState struct {
	// [Reference Page](https://docs.controlplane.com/reference/secret#aws).
	Aws SecretAwsPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
	AzureConnector SecretAzureConnectorPtrInput
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
	AzureSdk pulumi.StringPtrInput
	// The ID, in GUID format, of the secret.
	CplnId pulumi.StringPtrInput
	// Description of the secret.
	Description pulumi.StringPtrInput
	// List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
	Dictionary pulumi.StringMapInput
	// If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
	DictionaryAsEnvs pulumi.StringMapInput
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
	Docker pulumi.StringPtrInput
	Ecr    SecretEcrPtrInput
	// JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
	Gcp pulumi.StringPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
	Keypair SecretKeypairPtrInput
	// Name of the secret.
	Name pulumi.StringPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
	NatsAccount SecretNatsAccountPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
	Opaque SecretOpaquePtrInput
	// Output used when linking a secret to an environment variable or volume.
	SecretLink pulumi.StringPtrInput
	// Full link to this resource. Can be referenced by other resources.
	SelfLink pulumi.StringPtrInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#tls).
	Tls SecretTlsPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#username).
	Userpass SecretUserpassPtrInput
}

func (SecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretState)(nil)).Elem()
}

type secretArgs struct {
	// [Reference Page](https://docs.controlplane.com/reference/secret#aws).
	Aws *SecretAws `pulumi:"aws"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
	AzureConnector *SecretAzureConnector `pulumi:"azureConnector"`
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
	AzureSdk *string `pulumi:"azureSdk"`
	// Description of the secret.
	Description *string `pulumi:"description"`
	// List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
	Dictionary map[string]string `pulumi:"dictionary"`
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
	Docker *string    `pulumi:"docker"`
	Ecr    *SecretEcr `pulumi:"ecr"`
	// JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
	Gcp *string `pulumi:"gcp"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
	Keypair *SecretKeypair `pulumi:"keypair"`
	// Name of the secret.
	Name *string `pulumi:"name"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
	NatsAccount *SecretNatsAccount `pulumi:"natsAccount"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
	Opaque *SecretOpaque `pulumi:"opaque"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#tls).
	Tls *SecretTls `pulumi:"tls"`
	// [Reference Page](https://docs.controlplane.com/reference/secret#username).
	Userpass *SecretUserpass `pulumi:"userpass"`
}

// The set of arguments for constructing a Secret resource.
type SecretArgs struct {
	// [Reference Page](https://docs.controlplane.com/reference/secret#aws).
	Aws SecretAwsPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
	AzureConnector SecretAzureConnectorPtrInput
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
	AzureSdk pulumi.StringPtrInput
	// Description of the secret.
	Description pulumi.StringPtrInput
	// List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
	Dictionary pulumi.StringMapInput
	// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
	Docker pulumi.StringPtrInput
	Ecr    SecretEcrPtrInput
	// JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
	Gcp pulumi.StringPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
	Keypair SecretKeypairPtrInput
	// Name of the secret.
	Name pulumi.StringPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
	NatsAccount SecretNatsAccountPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
	Opaque SecretOpaquePtrInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#tls).
	Tls SecretTlsPtrInput
	// [Reference Page](https://docs.controlplane.com/reference/secret#username).
	Userpass SecretUserpassPtrInput
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretArgs)(nil)).Elem()
}

type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(ctx context.Context) SecretOutput
}

func (*Secret) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (i *Secret) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i *Secret) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

// SecretArrayInput is an input type that accepts SecretArray and SecretArrayOutput values.
// You can construct a concrete instance of `SecretArrayInput` via:
//
//	SecretArray{ SecretArgs{...} }
type SecretArrayInput interface {
	pulumi.Input

	ToSecretArrayOutput() SecretArrayOutput
	ToSecretArrayOutputWithContext(context.Context) SecretArrayOutput
}

type SecretArray []SecretInput

func (SecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Secret)(nil)).Elem()
}

func (i SecretArray) ToSecretArrayOutput() SecretArrayOutput {
	return i.ToSecretArrayOutputWithContext(context.Background())
}

func (i SecretArray) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretArrayOutput)
}

// SecretMapInput is an input type that accepts SecretMap and SecretMapOutput values.
// You can construct a concrete instance of `SecretMapInput` via:
//
//	SecretMap{ "key": SecretArgs{...} }
type SecretMapInput interface {
	pulumi.Input

	ToSecretMapOutput() SecretMapOutput
	ToSecretMapOutputWithContext(context.Context) SecretMapOutput
}

type SecretMap map[string]SecretInput

func (SecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Secret)(nil)).Elem()
}

func (i SecretMap) ToSecretMapOutput() SecretMapOutput {
	return i.ToSecretMapOutputWithContext(context.Background())
}

func (i SecretMap) ToSecretMapOutputWithContext(ctx context.Context) SecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretMapOutput)
}

type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

// [Reference Page](https://docs.controlplane.com/reference/secret#aws).
func (o SecretOutput) Aws() SecretAwsPtrOutput {
	return o.ApplyT(func(v *Secret) SecretAwsPtrOutput { return v.Aws }).(SecretAwsPtrOutput)
}

// [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
func (o SecretOutput) AzureConnector() SecretAzureConnectorPtrOutput {
	return o.ApplyT(func(v *Secret) SecretAzureConnectorPtrOutput { return v.AzureConnector }).(SecretAzureConnectorPtrOutput)
}

// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
func (o SecretOutput) AzureSdk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.AzureSdk }).(pulumi.StringPtrOutput)
}

// The ID, in GUID format, of the secret.
func (o SecretOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.CplnId }).(pulumi.StringOutput)
}

// Description of the secret.
func (o SecretOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
func (o SecretOutput) Dictionary() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringMapOutput { return v.Dictionary }).(pulumi.StringMapOutput)
}

// If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
func (o SecretOutput) DictionaryAsEnvs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringMapOutput { return v.DictionaryAsEnvs }).(pulumi.StringMapOutput)
}

// JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
func (o SecretOutput) Docker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.Docker }).(pulumi.StringPtrOutput)
}

func (o SecretOutput) Ecr() SecretEcrPtrOutput {
	return o.ApplyT(func(v *Secret) SecretEcrPtrOutput { return v.Ecr }).(SecretEcrPtrOutput)
}

// JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
func (o SecretOutput) Gcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.Gcp }).(pulumi.StringPtrOutput)
}

// [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
func (o SecretOutput) Keypair() SecretKeypairPtrOutput {
	return o.ApplyT(func(v *Secret) SecretKeypairPtrOutput { return v.Keypair }).(SecretKeypairPtrOutput)
}

// Name of the secret.
func (o SecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
func (o SecretOutput) NatsAccount() SecretNatsAccountPtrOutput {
	return o.ApplyT(func(v *Secret) SecretNatsAccountPtrOutput { return v.NatsAccount }).(SecretNatsAccountPtrOutput)
}

// [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
func (o SecretOutput) Opaque() SecretOpaquePtrOutput {
	return o.ApplyT(func(v *Secret) SecretOpaquePtrOutput { return v.Opaque }).(SecretOpaquePtrOutput)
}

// Output used when linking a secret to an environment variable or volume.
func (o SecretOutput) SecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.SecretLink }).(pulumi.StringOutput)
}

// Full link to this resource. Can be referenced by other resources.
func (o SecretOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Key-value map of resource tags.
func (o SecretOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// [Reference Page](https://docs.controlplane.com/reference/secret#tls).
func (o SecretOutput) Tls() SecretTlsPtrOutput {
	return o.ApplyT(func(v *Secret) SecretTlsPtrOutput { return v.Tls }).(SecretTlsPtrOutput)
}

// [Reference Page](https://docs.controlplane.com/reference/secret#username).
func (o SecretOutput) Userpass() SecretUserpassPtrOutput {
	return o.ApplyT(func(v *Secret) SecretUserpassPtrOutput { return v.Userpass }).(SecretUserpassPtrOutput)
}

type SecretArrayOutput struct{ *pulumi.OutputState }

func (SecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Secret)(nil)).Elem()
}

func (o SecretArrayOutput) ToSecretArrayOutput() SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) Index(i pulumi.IntInput) SecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Secret {
		return vs[0].([]*Secret)[vs[1].(int)]
	}).(SecretOutput)
}

type SecretMapOutput struct{ *pulumi.OutputState }

func (SecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Secret)(nil)).Elem()
}

func (o SecretMapOutput) ToSecretMapOutput() SecretMapOutput {
	return o
}

func (o SecretMapOutput) ToSecretMapOutputWithContext(ctx context.Context) SecretMapOutput {
	return o
}

func (o SecretMapOutput) MapIndex(k pulumi.StringInput) SecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Secret {
		return vs[0].(map[string]*Secret)[vs[1].(string)]
	}).(SecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretInput)(nil)).Elem(), &Secret{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretArrayInput)(nil)).Elem(), SecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretMapInput)(nil)).Elem(), SecretMap{})
	pulumi.RegisterOutputType(SecretOutput{})
	pulumi.RegisterOutputType(SecretArrayOutput{})
	pulumi.RegisterOutputType(SecretMapOutput{})
}
