// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

var _ = internal.GetEnvOrDefault

type CloudAccountAws struct {
	RoleArn string `pulumi:"roleArn"`
}

// CloudAccountAwsInput is an input type that accepts CloudAccountAwsArgs and CloudAccountAwsOutput values.
// You can construct a concrete instance of `CloudAccountAwsInput` via:
//
//	CloudAccountAwsArgs{...}
type CloudAccountAwsInput interface {
	pulumi.Input

	ToCloudAccountAwsOutput() CloudAccountAwsOutput
	ToCloudAccountAwsOutputWithContext(context.Context) CloudAccountAwsOutput
}

type CloudAccountAwsArgs struct {
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (CloudAccountAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAws)(nil)).Elem()
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsOutput() CloudAccountAwsOutput {
	return i.ToCloudAccountAwsOutputWithContext(context.Background())
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsOutputWithContext(ctx context.Context) CloudAccountAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAwsOutput)
}

func (i CloudAccountAwsArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAws] {
	return pulumix.Output[CloudAccountAws]{
		OutputState: i.ToCloudAccountAwsOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return i.ToCloudAccountAwsPtrOutputWithContext(context.Background())
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAwsOutput).ToCloudAccountAwsPtrOutputWithContext(ctx)
}

// CloudAccountAwsPtrInput is an input type that accepts CloudAccountAwsArgs, CloudAccountAwsPtr and CloudAccountAwsPtrOutput values.
// You can construct a concrete instance of `CloudAccountAwsPtrInput` via:
//
//	        CloudAccountAwsArgs{...}
//
//	or:
//
//	        nil
type CloudAccountAwsPtrInput interface {
	pulumi.Input

	ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput
	ToCloudAccountAwsPtrOutputWithContext(context.Context) CloudAccountAwsPtrOutput
}

type cloudAccountAwsPtrType CloudAccountAwsArgs

func CloudAccountAwsPtr(v *CloudAccountAwsArgs) CloudAccountAwsPtrInput {
	return (*cloudAccountAwsPtrType)(v)
}

func (*cloudAccountAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAws)(nil)).Elem()
}

func (i *cloudAccountAwsPtrType) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return i.ToCloudAccountAwsPtrOutputWithContext(context.Background())
}

func (i *cloudAccountAwsPtrType) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAwsPtrOutput)
}

func (i *cloudAccountAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAws] {
	return pulumix.Output[*CloudAccountAws]{
		OutputState: i.ToCloudAccountAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountAwsOutput struct{ *pulumi.OutputState }

func (CloudAccountAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAws)(nil)).Elem()
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsOutput() CloudAccountAwsOutput {
	return o
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsOutputWithContext(ctx context.Context) CloudAccountAwsOutput {
	return o
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return o.ToCloudAccountAwsPtrOutputWithContext(context.Background())
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountAws) *CloudAccountAws {
		return &v
	}).(CloudAccountAwsPtrOutput)
}

func (o CloudAccountAwsOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAws] {
	return pulumix.Output[CloudAccountAws]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAwsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountAws) string { return v.RoleArn }).(pulumi.StringOutput)
}

type CloudAccountAwsPtrOutput struct{ *pulumi.OutputState }

func (CloudAccountAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAws)(nil)).Elem()
}

func (o CloudAccountAwsPtrOutput) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return o
}

func (o CloudAccountAwsPtrOutput) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return o
}

func (o CloudAccountAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAws] {
	return pulumix.Output[*CloudAccountAws]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAwsPtrOutput) Elem() CloudAccountAwsOutput {
	return o.ApplyT(func(v *CloudAccountAws) CloudAccountAws {
		if v != nil {
			return *v
		}
		var ret CloudAccountAws
		return ret
	}).(CloudAccountAwsOutput)
}

func (o CloudAccountAwsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountAws) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type CloudAccountAzure struct {
	SecretLink string `pulumi:"secretLink"`
}

// CloudAccountAzureInput is an input type that accepts CloudAccountAzureArgs and CloudAccountAzureOutput values.
// You can construct a concrete instance of `CloudAccountAzureInput` via:
//
//	CloudAccountAzureArgs{...}
type CloudAccountAzureInput interface {
	pulumi.Input

	ToCloudAccountAzureOutput() CloudAccountAzureOutput
	ToCloudAccountAzureOutputWithContext(context.Context) CloudAccountAzureOutput
}

type CloudAccountAzureArgs struct {
	SecretLink pulumi.StringInput `pulumi:"secretLink"`
}

func (CloudAccountAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAzure)(nil)).Elem()
}

func (i CloudAccountAzureArgs) ToCloudAccountAzureOutput() CloudAccountAzureOutput {
	return i.ToCloudAccountAzureOutputWithContext(context.Background())
}

func (i CloudAccountAzureArgs) ToCloudAccountAzureOutputWithContext(ctx context.Context) CloudAccountAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzureOutput)
}

func (i CloudAccountAzureArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAzure] {
	return pulumix.Output[CloudAccountAzure]{
		OutputState: i.ToCloudAccountAzureOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountAzureArgs) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return i.ToCloudAccountAzurePtrOutputWithContext(context.Background())
}

func (i CloudAccountAzureArgs) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzureOutput).ToCloudAccountAzurePtrOutputWithContext(ctx)
}

// CloudAccountAzurePtrInput is an input type that accepts CloudAccountAzureArgs, CloudAccountAzurePtr and CloudAccountAzurePtrOutput values.
// You can construct a concrete instance of `CloudAccountAzurePtrInput` via:
//
//	        CloudAccountAzureArgs{...}
//
//	or:
//
//	        nil
type CloudAccountAzurePtrInput interface {
	pulumi.Input

	ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput
	ToCloudAccountAzurePtrOutputWithContext(context.Context) CloudAccountAzurePtrOutput
}

type cloudAccountAzurePtrType CloudAccountAzureArgs

func CloudAccountAzurePtr(v *CloudAccountAzureArgs) CloudAccountAzurePtrInput {
	return (*cloudAccountAzurePtrType)(v)
}

func (*cloudAccountAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAzure)(nil)).Elem()
}

func (i *cloudAccountAzurePtrType) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return i.ToCloudAccountAzurePtrOutputWithContext(context.Background())
}

func (i *cloudAccountAzurePtrType) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzurePtrOutput)
}

func (i *cloudAccountAzurePtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAzure] {
	return pulumix.Output[*CloudAccountAzure]{
		OutputState: i.ToCloudAccountAzurePtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountAzureOutput struct{ *pulumi.OutputState }

func (CloudAccountAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAzure)(nil)).Elem()
}

func (o CloudAccountAzureOutput) ToCloudAccountAzureOutput() CloudAccountAzureOutput {
	return o
}

func (o CloudAccountAzureOutput) ToCloudAccountAzureOutputWithContext(ctx context.Context) CloudAccountAzureOutput {
	return o
}

func (o CloudAccountAzureOutput) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return o.ToCloudAccountAzurePtrOutputWithContext(context.Background())
}

func (o CloudAccountAzureOutput) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountAzure) *CloudAccountAzure {
		return &v
	}).(CloudAccountAzurePtrOutput)
}

func (o CloudAccountAzureOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAzure] {
	return pulumix.Output[CloudAccountAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAzureOutput) SecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountAzure) string { return v.SecretLink }).(pulumi.StringOutput)
}

type CloudAccountAzurePtrOutput struct{ *pulumi.OutputState }

func (CloudAccountAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAzure)(nil)).Elem()
}

func (o CloudAccountAzurePtrOutput) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return o
}

func (o CloudAccountAzurePtrOutput) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return o
}

func (o CloudAccountAzurePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAzure] {
	return pulumix.Output[*CloudAccountAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAzurePtrOutput) Elem() CloudAccountAzureOutput {
	return o.ApplyT(func(v *CloudAccountAzure) CloudAccountAzure {
		if v != nil {
			return *v
		}
		var ret CloudAccountAzure
		return ret
	}).(CloudAccountAzureOutput)
}

func (o CloudAccountAzurePtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountAzure) *string {
		if v == nil {
			return nil
		}
		return &v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type CloudAccountGcp struct {
	ProjectId string `pulumi:"projectId"`
}

// CloudAccountGcpInput is an input type that accepts CloudAccountGcpArgs and CloudAccountGcpOutput values.
// You can construct a concrete instance of `CloudAccountGcpInput` via:
//
//	CloudAccountGcpArgs{...}
type CloudAccountGcpInput interface {
	pulumi.Input

	ToCloudAccountGcpOutput() CloudAccountGcpOutput
	ToCloudAccountGcpOutputWithContext(context.Context) CloudAccountGcpOutput
}

type CloudAccountGcpArgs struct {
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (CloudAccountGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountGcp)(nil)).Elem()
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpOutput() CloudAccountGcpOutput {
	return i.ToCloudAccountGcpOutputWithContext(context.Background())
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpOutputWithContext(ctx context.Context) CloudAccountGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpOutput)
}

func (i CloudAccountGcpArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountGcp] {
	return pulumix.Output[CloudAccountGcp]{
		OutputState: i.ToCloudAccountGcpOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return i.ToCloudAccountGcpPtrOutputWithContext(context.Background())
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpOutput).ToCloudAccountGcpPtrOutputWithContext(ctx)
}

// CloudAccountGcpPtrInput is an input type that accepts CloudAccountGcpArgs, CloudAccountGcpPtr and CloudAccountGcpPtrOutput values.
// You can construct a concrete instance of `CloudAccountGcpPtrInput` via:
//
//	        CloudAccountGcpArgs{...}
//
//	or:
//
//	        nil
type CloudAccountGcpPtrInput interface {
	pulumi.Input

	ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput
	ToCloudAccountGcpPtrOutputWithContext(context.Context) CloudAccountGcpPtrOutput
}

type cloudAccountGcpPtrType CloudAccountGcpArgs

func CloudAccountGcpPtr(v *CloudAccountGcpArgs) CloudAccountGcpPtrInput {
	return (*cloudAccountGcpPtrType)(v)
}

func (*cloudAccountGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountGcp)(nil)).Elem()
}

func (i *cloudAccountGcpPtrType) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return i.ToCloudAccountGcpPtrOutputWithContext(context.Background())
}

func (i *cloudAccountGcpPtrType) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpPtrOutput)
}

func (i *cloudAccountGcpPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountGcp] {
	return pulumix.Output[*CloudAccountGcp]{
		OutputState: i.ToCloudAccountGcpPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountGcpOutput struct{ *pulumi.OutputState }

func (CloudAccountGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountGcp)(nil)).Elem()
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpOutput() CloudAccountGcpOutput {
	return o
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpOutputWithContext(ctx context.Context) CloudAccountGcpOutput {
	return o
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return o.ToCloudAccountGcpPtrOutputWithContext(context.Background())
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountGcp) *CloudAccountGcp {
		return &v
	}).(CloudAccountGcpPtrOutput)
}

func (o CloudAccountGcpOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountGcp] {
	return pulumix.Output[CloudAccountGcp]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountGcpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountGcp) string { return v.ProjectId }).(pulumi.StringOutput)
}

type CloudAccountGcpPtrOutput struct{ *pulumi.OutputState }

func (CloudAccountGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountGcp)(nil)).Elem()
}

func (o CloudAccountGcpPtrOutput) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return o
}

func (o CloudAccountGcpPtrOutput) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return o
}

func (o CloudAccountGcpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountGcp] {
	return pulumix.Output[*CloudAccountGcp]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountGcpPtrOutput) Elem() CloudAccountGcpOutput {
	return o.ApplyT(func(v *CloudAccountGcp) CloudAccountGcp {
		if v != nil {
			return *v
		}
		var ret CloudAccountGcp
		return ret
	}).(CloudAccountGcpOutput)
}

func (o CloudAccountGcpPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountGcp) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

type CloudAccountNgs struct {
	SecretLink string `pulumi:"secretLink"`
}

// CloudAccountNgsInput is an input type that accepts CloudAccountNgsArgs and CloudAccountNgsOutput values.
// You can construct a concrete instance of `CloudAccountNgsInput` via:
//
//	CloudAccountNgsArgs{...}
type CloudAccountNgsInput interface {
	pulumi.Input

	ToCloudAccountNgsOutput() CloudAccountNgsOutput
	ToCloudAccountNgsOutputWithContext(context.Context) CloudAccountNgsOutput
}

type CloudAccountNgsArgs struct {
	SecretLink pulumi.StringInput `pulumi:"secretLink"`
}

func (CloudAccountNgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountNgs)(nil)).Elem()
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsOutput() CloudAccountNgsOutput {
	return i.ToCloudAccountNgsOutputWithContext(context.Background())
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsOutputWithContext(ctx context.Context) CloudAccountNgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountNgsOutput)
}

func (i CloudAccountNgsArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountNgs] {
	return pulumix.Output[CloudAccountNgs]{
		OutputState: i.ToCloudAccountNgsOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return i.ToCloudAccountNgsPtrOutputWithContext(context.Background())
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountNgsOutput).ToCloudAccountNgsPtrOutputWithContext(ctx)
}

// CloudAccountNgsPtrInput is an input type that accepts CloudAccountNgsArgs, CloudAccountNgsPtr and CloudAccountNgsPtrOutput values.
// You can construct a concrete instance of `CloudAccountNgsPtrInput` via:
//
//	        CloudAccountNgsArgs{...}
//
//	or:
//
//	        nil
type CloudAccountNgsPtrInput interface {
	pulumi.Input

	ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput
	ToCloudAccountNgsPtrOutputWithContext(context.Context) CloudAccountNgsPtrOutput
}

type cloudAccountNgsPtrType CloudAccountNgsArgs

func CloudAccountNgsPtr(v *CloudAccountNgsArgs) CloudAccountNgsPtrInput {
	return (*cloudAccountNgsPtrType)(v)
}

func (*cloudAccountNgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountNgs)(nil)).Elem()
}

func (i *cloudAccountNgsPtrType) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return i.ToCloudAccountNgsPtrOutputWithContext(context.Background())
}

func (i *cloudAccountNgsPtrType) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountNgsPtrOutput)
}

func (i *cloudAccountNgsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountNgs] {
	return pulumix.Output[*CloudAccountNgs]{
		OutputState: i.ToCloudAccountNgsPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountNgsOutput struct{ *pulumi.OutputState }

func (CloudAccountNgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountNgs)(nil)).Elem()
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsOutput() CloudAccountNgsOutput {
	return o
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsOutputWithContext(ctx context.Context) CloudAccountNgsOutput {
	return o
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return o.ToCloudAccountNgsPtrOutputWithContext(context.Background())
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountNgs) *CloudAccountNgs {
		return &v
	}).(CloudAccountNgsPtrOutput)
}

func (o CloudAccountNgsOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountNgs] {
	return pulumix.Output[CloudAccountNgs]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountNgsOutput) SecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountNgs) string { return v.SecretLink }).(pulumi.StringOutput)
}

type CloudAccountNgsPtrOutput struct{ *pulumi.OutputState }

func (CloudAccountNgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountNgs)(nil)).Elem()
}

func (o CloudAccountNgsPtrOutput) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return o
}

func (o CloudAccountNgsPtrOutput) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return o
}

func (o CloudAccountNgsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountNgs] {
	return pulumix.Output[*CloudAccountNgs]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountNgsPtrOutput) Elem() CloudAccountNgsOutput {
	return o.ApplyT(func(v *CloudAccountNgs) CloudAccountNgs {
		if v != nil {
			return *v
		}
		var ret CloudAccountNgs
		return ret
	}).(CloudAccountNgsOutput)
}

func (o CloudAccountNgsPtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountNgs) *string {
		if v == nil {
			return nil
		}
		return &v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type DomainRouteHeaders struct {
	Request *DomainRouteHeadersRequest `pulumi:"request"`
}

// DomainRouteHeadersInput is an input type that accepts DomainRouteHeadersArgs and DomainRouteHeadersOutput values.
// You can construct a concrete instance of `DomainRouteHeadersInput` via:
//
//	DomainRouteHeadersArgs{...}
type DomainRouteHeadersInput interface {
	pulumi.Input

	ToDomainRouteHeadersOutput() DomainRouteHeadersOutput
	ToDomainRouteHeadersOutputWithContext(context.Context) DomainRouteHeadersOutput
}

type DomainRouteHeadersArgs struct {
	Request DomainRouteHeadersRequestPtrInput `pulumi:"request"`
}

func (DomainRouteHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRouteHeaders)(nil)).Elem()
}

func (i DomainRouteHeadersArgs) ToDomainRouteHeadersOutput() DomainRouteHeadersOutput {
	return i.ToDomainRouteHeadersOutputWithContext(context.Background())
}

func (i DomainRouteHeadersArgs) ToDomainRouteHeadersOutputWithContext(ctx context.Context) DomainRouteHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRouteHeadersOutput)
}

func (i DomainRouteHeadersArgs) ToOutput(ctx context.Context) pulumix.Output[DomainRouteHeaders] {
	return pulumix.Output[DomainRouteHeaders]{
		OutputState: i.ToDomainRouteHeadersOutputWithContext(ctx).OutputState,
	}
}

func (i DomainRouteHeadersArgs) ToDomainRouteHeadersPtrOutput() DomainRouteHeadersPtrOutput {
	return i.ToDomainRouteHeadersPtrOutputWithContext(context.Background())
}

func (i DomainRouteHeadersArgs) ToDomainRouteHeadersPtrOutputWithContext(ctx context.Context) DomainRouteHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRouteHeadersOutput).ToDomainRouteHeadersPtrOutputWithContext(ctx)
}

// DomainRouteHeadersPtrInput is an input type that accepts DomainRouteHeadersArgs, DomainRouteHeadersPtr and DomainRouteHeadersPtrOutput values.
// You can construct a concrete instance of `DomainRouteHeadersPtrInput` via:
//
//	        DomainRouteHeadersArgs{...}
//
//	or:
//
//	        nil
type DomainRouteHeadersPtrInput interface {
	pulumi.Input

	ToDomainRouteHeadersPtrOutput() DomainRouteHeadersPtrOutput
	ToDomainRouteHeadersPtrOutputWithContext(context.Context) DomainRouteHeadersPtrOutput
}

type domainRouteHeadersPtrType DomainRouteHeadersArgs

func DomainRouteHeadersPtr(v *DomainRouteHeadersArgs) DomainRouteHeadersPtrInput {
	return (*domainRouteHeadersPtrType)(v)
}

func (*domainRouteHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRouteHeaders)(nil)).Elem()
}

func (i *domainRouteHeadersPtrType) ToDomainRouteHeadersPtrOutput() DomainRouteHeadersPtrOutput {
	return i.ToDomainRouteHeadersPtrOutputWithContext(context.Background())
}

func (i *domainRouteHeadersPtrType) ToDomainRouteHeadersPtrOutputWithContext(ctx context.Context) DomainRouteHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRouteHeadersPtrOutput)
}

func (i *domainRouteHeadersPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainRouteHeaders] {
	return pulumix.Output[*DomainRouteHeaders]{
		OutputState: i.ToDomainRouteHeadersPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainRouteHeadersOutput struct{ *pulumi.OutputState }

func (DomainRouteHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRouteHeaders)(nil)).Elem()
}

func (o DomainRouteHeadersOutput) ToDomainRouteHeadersOutput() DomainRouteHeadersOutput {
	return o
}

func (o DomainRouteHeadersOutput) ToDomainRouteHeadersOutputWithContext(ctx context.Context) DomainRouteHeadersOutput {
	return o
}

func (o DomainRouteHeadersOutput) ToDomainRouteHeadersPtrOutput() DomainRouteHeadersPtrOutput {
	return o.ToDomainRouteHeadersPtrOutputWithContext(context.Background())
}

func (o DomainRouteHeadersOutput) ToDomainRouteHeadersPtrOutputWithContext(ctx context.Context) DomainRouteHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRouteHeaders) *DomainRouteHeaders {
		return &v
	}).(DomainRouteHeadersPtrOutput)
}

func (o DomainRouteHeadersOutput) ToOutput(ctx context.Context) pulumix.Output[DomainRouteHeaders] {
	return pulumix.Output[DomainRouteHeaders]{
		OutputState: o.OutputState,
	}
}

func (o DomainRouteHeadersOutput) Request() DomainRouteHeadersRequestPtrOutput {
	return o.ApplyT(func(v DomainRouteHeaders) *DomainRouteHeadersRequest { return v.Request }).(DomainRouteHeadersRequestPtrOutput)
}

type DomainRouteHeadersPtrOutput struct{ *pulumi.OutputState }

func (DomainRouteHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRouteHeaders)(nil)).Elem()
}

func (o DomainRouteHeadersPtrOutput) ToDomainRouteHeadersPtrOutput() DomainRouteHeadersPtrOutput {
	return o
}

func (o DomainRouteHeadersPtrOutput) ToDomainRouteHeadersPtrOutputWithContext(ctx context.Context) DomainRouteHeadersPtrOutput {
	return o
}

func (o DomainRouteHeadersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainRouteHeaders] {
	return pulumix.Output[*DomainRouteHeaders]{
		OutputState: o.OutputState,
	}
}

func (o DomainRouteHeadersPtrOutput) Elem() DomainRouteHeadersOutput {
	return o.ApplyT(func(v *DomainRouteHeaders) DomainRouteHeaders {
		if v != nil {
			return *v
		}
		var ret DomainRouteHeaders
		return ret
	}).(DomainRouteHeadersOutput)
}

func (o DomainRouteHeadersPtrOutput) Request() DomainRouteHeadersRequestPtrOutput {
	return o.ApplyT(func(v *DomainRouteHeaders) *DomainRouteHeadersRequest {
		if v == nil {
			return nil
		}
		return v.Request
	}).(DomainRouteHeadersRequestPtrOutput)
}

type DomainRouteHeadersRequest struct {
	Set map[string]string `pulumi:"set"`
}

// DomainRouteHeadersRequestInput is an input type that accepts DomainRouteHeadersRequestArgs and DomainRouteHeadersRequestOutput values.
// You can construct a concrete instance of `DomainRouteHeadersRequestInput` via:
//
//	DomainRouteHeadersRequestArgs{...}
type DomainRouteHeadersRequestInput interface {
	pulumi.Input

	ToDomainRouteHeadersRequestOutput() DomainRouteHeadersRequestOutput
	ToDomainRouteHeadersRequestOutputWithContext(context.Context) DomainRouteHeadersRequestOutput
}

type DomainRouteHeadersRequestArgs struct {
	Set pulumi.StringMapInput `pulumi:"set"`
}

func (DomainRouteHeadersRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRouteHeadersRequest)(nil)).Elem()
}

func (i DomainRouteHeadersRequestArgs) ToDomainRouteHeadersRequestOutput() DomainRouteHeadersRequestOutput {
	return i.ToDomainRouteHeadersRequestOutputWithContext(context.Background())
}

func (i DomainRouteHeadersRequestArgs) ToDomainRouteHeadersRequestOutputWithContext(ctx context.Context) DomainRouteHeadersRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRouteHeadersRequestOutput)
}

func (i DomainRouteHeadersRequestArgs) ToOutput(ctx context.Context) pulumix.Output[DomainRouteHeadersRequest] {
	return pulumix.Output[DomainRouteHeadersRequest]{
		OutputState: i.ToDomainRouteHeadersRequestOutputWithContext(ctx).OutputState,
	}
}

func (i DomainRouteHeadersRequestArgs) ToDomainRouteHeadersRequestPtrOutput() DomainRouteHeadersRequestPtrOutput {
	return i.ToDomainRouteHeadersRequestPtrOutputWithContext(context.Background())
}

func (i DomainRouteHeadersRequestArgs) ToDomainRouteHeadersRequestPtrOutputWithContext(ctx context.Context) DomainRouteHeadersRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRouteHeadersRequestOutput).ToDomainRouteHeadersRequestPtrOutputWithContext(ctx)
}

// DomainRouteHeadersRequestPtrInput is an input type that accepts DomainRouteHeadersRequestArgs, DomainRouteHeadersRequestPtr and DomainRouteHeadersRequestPtrOutput values.
// You can construct a concrete instance of `DomainRouteHeadersRequestPtrInput` via:
//
//	        DomainRouteHeadersRequestArgs{...}
//
//	or:
//
//	        nil
type DomainRouteHeadersRequestPtrInput interface {
	pulumi.Input

	ToDomainRouteHeadersRequestPtrOutput() DomainRouteHeadersRequestPtrOutput
	ToDomainRouteHeadersRequestPtrOutputWithContext(context.Context) DomainRouteHeadersRequestPtrOutput
}

type domainRouteHeadersRequestPtrType DomainRouteHeadersRequestArgs

func DomainRouteHeadersRequestPtr(v *DomainRouteHeadersRequestArgs) DomainRouteHeadersRequestPtrInput {
	return (*domainRouteHeadersRequestPtrType)(v)
}

func (*domainRouteHeadersRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRouteHeadersRequest)(nil)).Elem()
}

func (i *domainRouteHeadersRequestPtrType) ToDomainRouteHeadersRequestPtrOutput() DomainRouteHeadersRequestPtrOutput {
	return i.ToDomainRouteHeadersRequestPtrOutputWithContext(context.Background())
}

func (i *domainRouteHeadersRequestPtrType) ToDomainRouteHeadersRequestPtrOutputWithContext(ctx context.Context) DomainRouteHeadersRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRouteHeadersRequestPtrOutput)
}

func (i *domainRouteHeadersRequestPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainRouteHeadersRequest] {
	return pulumix.Output[*DomainRouteHeadersRequest]{
		OutputState: i.ToDomainRouteHeadersRequestPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainRouteHeadersRequestOutput struct{ *pulumi.OutputState }

func (DomainRouteHeadersRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRouteHeadersRequest)(nil)).Elem()
}

func (o DomainRouteHeadersRequestOutput) ToDomainRouteHeadersRequestOutput() DomainRouteHeadersRequestOutput {
	return o
}

func (o DomainRouteHeadersRequestOutput) ToDomainRouteHeadersRequestOutputWithContext(ctx context.Context) DomainRouteHeadersRequestOutput {
	return o
}

func (o DomainRouteHeadersRequestOutput) ToDomainRouteHeadersRequestPtrOutput() DomainRouteHeadersRequestPtrOutput {
	return o.ToDomainRouteHeadersRequestPtrOutputWithContext(context.Background())
}

func (o DomainRouteHeadersRequestOutput) ToDomainRouteHeadersRequestPtrOutputWithContext(ctx context.Context) DomainRouteHeadersRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRouteHeadersRequest) *DomainRouteHeadersRequest {
		return &v
	}).(DomainRouteHeadersRequestPtrOutput)
}

func (o DomainRouteHeadersRequestOutput) ToOutput(ctx context.Context) pulumix.Output[DomainRouteHeadersRequest] {
	return pulumix.Output[DomainRouteHeadersRequest]{
		OutputState: o.OutputState,
	}
}

func (o DomainRouteHeadersRequestOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v DomainRouteHeadersRequest) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type DomainRouteHeadersRequestPtrOutput struct{ *pulumi.OutputState }

func (DomainRouteHeadersRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRouteHeadersRequest)(nil)).Elem()
}

func (o DomainRouteHeadersRequestPtrOutput) ToDomainRouteHeadersRequestPtrOutput() DomainRouteHeadersRequestPtrOutput {
	return o
}

func (o DomainRouteHeadersRequestPtrOutput) ToDomainRouteHeadersRequestPtrOutputWithContext(ctx context.Context) DomainRouteHeadersRequestPtrOutput {
	return o
}

func (o DomainRouteHeadersRequestPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainRouteHeadersRequest] {
	return pulumix.Output[*DomainRouteHeadersRequest]{
		OutputState: o.OutputState,
	}
}

func (o DomainRouteHeadersRequestPtrOutput) Elem() DomainRouteHeadersRequestOutput {
	return o.ApplyT(func(v *DomainRouteHeadersRequest) DomainRouteHeadersRequest {
		if v != nil {
			return *v
		}
		var ret DomainRouteHeadersRequest
		return ret
	}).(DomainRouteHeadersRequestOutput)
}

func (o DomainRouteHeadersRequestPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DomainRouteHeadersRequest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type DomainSpec struct {
	AcceptAllHosts *bool            `pulumi:"acceptAllHosts"`
	DnsMode        *string          `pulumi:"dnsMode"`
	GvcLink        *string          `pulumi:"gvcLink"`
	Ports          []DomainSpecPort `pulumi:"ports"`
}

// DomainSpecInput is an input type that accepts DomainSpecArgs and DomainSpecOutput values.
// You can construct a concrete instance of `DomainSpecInput` via:
//
//	DomainSpecArgs{...}
type DomainSpecInput interface {
	pulumi.Input

	ToDomainSpecOutput() DomainSpecOutput
	ToDomainSpecOutputWithContext(context.Context) DomainSpecOutput
}

type DomainSpecArgs struct {
	AcceptAllHosts pulumi.BoolPtrInput      `pulumi:"acceptAllHosts"`
	DnsMode        pulumi.StringPtrInput    `pulumi:"dnsMode"`
	GvcLink        pulumi.StringPtrInput    `pulumi:"gvcLink"`
	Ports          DomainSpecPortArrayInput `pulumi:"ports"`
}

func (DomainSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpec)(nil)).Elem()
}

func (i DomainSpecArgs) ToDomainSpecOutput() DomainSpecOutput {
	return i.ToDomainSpecOutputWithContext(context.Background())
}

func (i DomainSpecArgs) ToDomainSpecOutputWithContext(ctx context.Context) DomainSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecOutput)
}

func (i DomainSpecArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpec] {
	return pulumix.Output[DomainSpec]{
		OutputState: i.ToDomainSpecOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecArgs) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return i.ToDomainSpecPtrOutputWithContext(context.Background())
}

func (i DomainSpecArgs) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecOutput).ToDomainSpecPtrOutputWithContext(ctx)
}

// DomainSpecPtrInput is an input type that accepts DomainSpecArgs, DomainSpecPtr and DomainSpecPtrOutput values.
// You can construct a concrete instance of `DomainSpecPtrInput` via:
//
//	        DomainSpecArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPtrInput interface {
	pulumi.Input

	ToDomainSpecPtrOutput() DomainSpecPtrOutput
	ToDomainSpecPtrOutputWithContext(context.Context) DomainSpecPtrOutput
}

type domainSpecPtrType DomainSpecArgs

func DomainSpecPtr(v *DomainSpecArgs) DomainSpecPtrInput {
	return (*domainSpecPtrType)(v)
}

func (*domainSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpec)(nil)).Elem()
}

func (i *domainSpecPtrType) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return i.ToDomainSpecPtrOutputWithContext(context.Background())
}

func (i *domainSpecPtrType) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPtrOutput)
}

func (i *domainSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpec] {
	return pulumix.Output[*DomainSpec]{
		OutputState: i.ToDomainSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecOutput struct{ *pulumi.OutputState }

func (DomainSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpec)(nil)).Elem()
}

func (o DomainSpecOutput) ToDomainSpecOutput() DomainSpecOutput {
	return o
}

func (o DomainSpecOutput) ToDomainSpecOutputWithContext(ctx context.Context) DomainSpecOutput {
	return o
}

func (o DomainSpecOutput) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return o.ToDomainSpecPtrOutputWithContext(context.Background())
}

func (o DomainSpecOutput) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpec) *DomainSpec {
		return &v
	}).(DomainSpecPtrOutput)
}

func (o DomainSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpec] {
	return pulumix.Output[DomainSpec]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecOutput) AcceptAllHosts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSpec) *bool { return v.AcceptAllHosts }).(pulumi.BoolPtrOutput)
}

func (o DomainSpecOutput) DnsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpec) *string { return v.DnsMode }).(pulumi.StringPtrOutput)
}

func (o DomainSpecOutput) GvcLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpec) *string { return v.GvcLink }).(pulumi.StringPtrOutput)
}

func (o DomainSpecOutput) Ports() DomainSpecPortArrayOutput {
	return o.ApplyT(func(v DomainSpec) []DomainSpecPort { return v.Ports }).(DomainSpecPortArrayOutput)
}

type DomainSpecPtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpec)(nil)).Elem()
}

func (o DomainSpecPtrOutput) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return o
}

func (o DomainSpecPtrOutput) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return o
}

func (o DomainSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpec] {
	return pulumix.Output[*DomainSpec]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPtrOutput) Elem() DomainSpecOutput {
	return o.ApplyT(func(v *DomainSpec) DomainSpec {
		if v != nil {
			return *v
		}
		var ret DomainSpec
		return ret
	}).(DomainSpecOutput)
}

func (o DomainSpecPtrOutput) AcceptAllHosts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSpec) *bool {
		if v == nil {
			return nil
		}
		return v.AcceptAllHosts
	}).(pulumi.BoolPtrOutput)
}

func (o DomainSpecPtrOutput) DnsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpec) *string {
		if v == nil {
			return nil
		}
		return v.DnsMode
	}).(pulumi.StringPtrOutput)
}

func (o DomainSpecPtrOutput) GvcLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpec) *string {
		if v == nil {
			return nil
		}
		return v.GvcLink
	}).(pulumi.StringPtrOutput)
}

func (o DomainSpecPtrOutput) Ports() DomainSpecPortArrayOutput {
	return o.ApplyT(func(v *DomainSpec) []DomainSpecPort {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(DomainSpecPortArrayOutput)
}

type DomainSpecPort struct {
	Cors     *DomainSpecPortCors `pulumi:"cors"`
	Number   *int                `pulumi:"number"`
	Protocol *string             `pulumi:"protocol"`
	Tls      DomainSpecPortTls   `pulumi:"tls"`
}

// DomainSpecPortInput is an input type that accepts DomainSpecPortArgs and DomainSpecPortOutput values.
// You can construct a concrete instance of `DomainSpecPortInput` via:
//
//	DomainSpecPortArgs{...}
type DomainSpecPortInput interface {
	pulumi.Input

	ToDomainSpecPortOutput() DomainSpecPortOutput
	ToDomainSpecPortOutputWithContext(context.Context) DomainSpecPortOutput
}

type DomainSpecPortArgs struct {
	Cors     DomainSpecPortCorsPtrInput `pulumi:"cors"`
	Number   pulumi.IntPtrInput         `pulumi:"number"`
	Protocol pulumi.StringPtrInput      `pulumi:"protocol"`
	Tls      DomainSpecPortTlsInput     `pulumi:"tls"`
}

func (DomainSpecPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPort)(nil)).Elem()
}

func (i DomainSpecPortArgs) ToDomainSpecPortOutput() DomainSpecPortOutput {
	return i.ToDomainSpecPortOutputWithContext(context.Background())
}

func (i DomainSpecPortArgs) ToDomainSpecPortOutputWithContext(ctx context.Context) DomainSpecPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortOutput)
}

func (i DomainSpecPortArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPort] {
	return pulumix.Output[DomainSpecPort]{
		OutputState: i.ToDomainSpecPortOutputWithContext(ctx).OutputState,
	}
}

// DomainSpecPortArrayInput is an input type that accepts DomainSpecPortArray and DomainSpecPortArrayOutput values.
// You can construct a concrete instance of `DomainSpecPortArrayInput` via:
//
//	DomainSpecPortArray{ DomainSpecPortArgs{...} }
type DomainSpecPortArrayInput interface {
	pulumi.Input

	ToDomainSpecPortArrayOutput() DomainSpecPortArrayOutput
	ToDomainSpecPortArrayOutputWithContext(context.Context) DomainSpecPortArrayOutput
}

type DomainSpecPortArray []DomainSpecPortInput

func (DomainSpecPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPort)(nil)).Elem()
}

func (i DomainSpecPortArray) ToDomainSpecPortArrayOutput() DomainSpecPortArrayOutput {
	return i.ToDomainSpecPortArrayOutputWithContext(context.Background())
}

func (i DomainSpecPortArray) ToDomainSpecPortArrayOutputWithContext(ctx context.Context) DomainSpecPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortArrayOutput)
}

func (i DomainSpecPortArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPort] {
	return pulumix.Output[[]DomainSpecPort]{
		OutputState: i.ToDomainSpecPortArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortOutput struct{ *pulumi.OutputState }

func (DomainSpecPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPort)(nil)).Elem()
}

func (o DomainSpecPortOutput) ToDomainSpecPortOutput() DomainSpecPortOutput {
	return o
}

func (o DomainSpecPortOutput) ToDomainSpecPortOutputWithContext(ctx context.Context) DomainSpecPortOutput {
	return o
}

func (o DomainSpecPortOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPort] {
	return pulumix.Output[DomainSpecPort]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortOutput) Cors() DomainSpecPortCorsPtrOutput {
	return o.ApplyT(func(v DomainSpecPort) *DomainSpecPortCors { return v.Cors }).(DomainSpecPortCorsPtrOutput)
}

func (o DomainSpecPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainSpecPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

func (o DomainSpecPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o DomainSpecPortOutput) Tls() DomainSpecPortTlsOutput {
	return o.ApplyT(func(v DomainSpecPort) DomainSpecPortTls { return v.Tls }).(DomainSpecPortTlsOutput)
}

type DomainSpecPortArrayOutput struct{ *pulumi.OutputState }

func (DomainSpecPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPort)(nil)).Elem()
}

func (o DomainSpecPortArrayOutput) ToDomainSpecPortArrayOutput() DomainSpecPortArrayOutput {
	return o
}

func (o DomainSpecPortArrayOutput) ToDomainSpecPortArrayOutputWithContext(ctx context.Context) DomainSpecPortArrayOutput {
	return o
}

func (o DomainSpecPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPort] {
	return pulumix.Output[[]DomainSpecPort]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortArrayOutput) Index(i pulumi.IntInput) DomainSpecPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainSpecPort {
		return vs[0].([]DomainSpecPort)[vs[1].(int)]
	}).(DomainSpecPortOutput)
}

type DomainSpecPortCors struct {
	AllowCredentials *bool                           `pulumi:"allowCredentials"`
	AllowHeaders     []string                        `pulumi:"allowHeaders"`
	AllowMethods     []string                        `pulumi:"allowMethods"`
	AllowOrigins     []DomainSpecPortCorsAllowOrigin `pulumi:"allowOrigins"`
	ExposeHeaders    []string                        `pulumi:"exposeHeaders"`
	MaxAge           *string                         `pulumi:"maxAge"`
}

// DomainSpecPortCorsInput is an input type that accepts DomainSpecPortCorsArgs and DomainSpecPortCorsOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsInput` via:
//
//	DomainSpecPortCorsArgs{...}
type DomainSpecPortCorsInput interface {
	pulumi.Input

	ToDomainSpecPortCorsOutput() DomainSpecPortCorsOutput
	ToDomainSpecPortCorsOutputWithContext(context.Context) DomainSpecPortCorsOutput
}

type DomainSpecPortCorsArgs struct {
	AllowCredentials pulumi.BoolPtrInput                     `pulumi:"allowCredentials"`
	AllowHeaders     pulumi.StringArrayInput                 `pulumi:"allowHeaders"`
	AllowMethods     pulumi.StringArrayInput                 `pulumi:"allowMethods"`
	AllowOrigins     DomainSpecPortCorsAllowOriginArrayInput `pulumi:"allowOrigins"`
	ExposeHeaders    pulumi.StringArrayInput                 `pulumi:"exposeHeaders"`
	MaxAge           pulumi.StringPtrInput                   `pulumi:"maxAge"`
}

func (DomainSpecPortCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCors)(nil)).Elem()
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsOutput() DomainSpecPortCorsOutput {
	return i.ToDomainSpecPortCorsOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsOutputWithContext(ctx context.Context) DomainSpecPortCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsOutput)
}

func (i DomainSpecPortCorsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCors] {
	return pulumix.Output[DomainSpecPortCors]{
		OutputState: i.ToDomainSpecPortCorsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return i.ToDomainSpecPortCorsPtrOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsOutput).ToDomainSpecPortCorsPtrOutputWithContext(ctx)
}

// DomainSpecPortCorsPtrInput is an input type that accepts DomainSpecPortCorsArgs, DomainSpecPortCorsPtr and DomainSpecPortCorsPtrOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsPtrInput` via:
//
//	        DomainSpecPortCorsArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPortCorsPtrInput interface {
	pulumi.Input

	ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput
	ToDomainSpecPortCorsPtrOutputWithContext(context.Context) DomainSpecPortCorsPtrOutput
}

type domainSpecPortCorsPtrType DomainSpecPortCorsArgs

func DomainSpecPortCorsPtr(v *DomainSpecPortCorsArgs) DomainSpecPortCorsPtrInput {
	return (*domainSpecPortCorsPtrType)(v)
}

func (*domainSpecPortCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortCors)(nil)).Elem()
}

func (i *domainSpecPortCorsPtrType) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return i.ToDomainSpecPortCorsPtrOutputWithContext(context.Background())
}

func (i *domainSpecPortCorsPtrType) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsPtrOutput)
}

func (i *domainSpecPortCorsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortCors] {
	return pulumix.Output[*DomainSpecPortCors]{
		OutputState: i.ToDomainSpecPortCorsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortCorsOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCors)(nil)).Elem()
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsOutput() DomainSpecPortCorsOutput {
	return o
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsOutputWithContext(ctx context.Context) DomainSpecPortCorsOutput {
	return o
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return o.ToDomainSpecPortCorsPtrOutputWithContext(context.Background())
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpecPortCors) *DomainSpecPortCors {
		return &v
	}).(DomainSpecPortCorsPtrOutput)
}

func (o DomainSpecPortCorsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCors] {
	return pulumix.Output[DomainSpecPortCors]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSpecPortCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

func (o DomainSpecPortCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsOutput) AllowOrigins() DomainSpecPortCorsAllowOriginArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []DomainSpecPortCorsAllowOrigin { return v.AllowOrigins }).(DomainSpecPortCorsAllowOriginArrayOutput)
}

func (o DomainSpecPortCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortCors) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type DomainSpecPortCorsPtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortCors)(nil)).Elem()
}

func (o DomainSpecPortCorsPtrOutput) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return o
}

func (o DomainSpecPortCorsPtrOutput) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return o
}

func (o DomainSpecPortCorsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortCors] {
	return pulumix.Output[*DomainSpecPortCors]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsPtrOutput) Elem() DomainSpecPortCorsOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) DomainSpecPortCors {
		if v != nil {
			return *v
		}
		var ret DomainSpecPortCors
		return ret
	}).(DomainSpecPortCorsOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowOrigins() DomainSpecPortCorsAllowOriginArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []DomainSpecPortCorsAllowOrigin {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(DomainSpecPortCorsAllowOriginArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type DomainSpecPortCorsAllowOrigin struct {
	Exact string `pulumi:"exact"`
}

// DomainSpecPortCorsAllowOriginInput is an input type that accepts DomainSpecPortCorsAllowOriginArgs and DomainSpecPortCorsAllowOriginOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsAllowOriginInput` via:
//
//	DomainSpecPortCorsAllowOriginArgs{...}
type DomainSpecPortCorsAllowOriginInput interface {
	pulumi.Input

	ToDomainSpecPortCorsAllowOriginOutput() DomainSpecPortCorsAllowOriginOutput
	ToDomainSpecPortCorsAllowOriginOutputWithContext(context.Context) DomainSpecPortCorsAllowOriginOutput
}

type DomainSpecPortCorsAllowOriginArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (DomainSpecPortCorsAllowOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (i DomainSpecPortCorsAllowOriginArgs) ToDomainSpecPortCorsAllowOriginOutput() DomainSpecPortCorsAllowOriginOutput {
	return i.ToDomainSpecPortCorsAllowOriginOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsAllowOriginArgs) ToDomainSpecPortCorsAllowOriginOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsAllowOriginOutput)
}

func (i DomainSpecPortCorsAllowOriginArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[DomainSpecPortCorsAllowOrigin]{
		OutputState: i.ToDomainSpecPortCorsAllowOriginOutputWithContext(ctx).OutputState,
	}
}

// DomainSpecPortCorsAllowOriginArrayInput is an input type that accepts DomainSpecPortCorsAllowOriginArray and DomainSpecPortCorsAllowOriginArrayOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsAllowOriginArrayInput` via:
//
//	DomainSpecPortCorsAllowOriginArray{ DomainSpecPortCorsAllowOriginArgs{...} }
type DomainSpecPortCorsAllowOriginArrayInput interface {
	pulumi.Input

	ToDomainSpecPortCorsAllowOriginArrayOutput() DomainSpecPortCorsAllowOriginArrayOutput
	ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(context.Context) DomainSpecPortCorsAllowOriginArrayOutput
}

type DomainSpecPortCorsAllowOriginArray []DomainSpecPortCorsAllowOriginInput

func (DomainSpecPortCorsAllowOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (i DomainSpecPortCorsAllowOriginArray) ToDomainSpecPortCorsAllowOriginArrayOutput() DomainSpecPortCorsAllowOriginArrayOutput {
	return i.ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsAllowOriginArray) ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsAllowOriginArrayOutput)
}

func (i DomainSpecPortCorsAllowOriginArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[[]DomainSpecPortCorsAllowOrigin]{
		OutputState: i.ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortCorsAllowOriginOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsAllowOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (o DomainSpecPortCorsAllowOriginOutput) ToDomainSpecPortCorsAllowOriginOutput() DomainSpecPortCorsAllowOriginOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginOutput) ToDomainSpecPortCorsAllowOriginOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[DomainSpecPortCorsAllowOrigin]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsAllowOriginOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSpecPortCorsAllowOrigin) string { return v.Exact }).(pulumi.StringOutput)
}

type DomainSpecPortCorsAllowOriginArrayOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsAllowOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) ToDomainSpecPortCorsAllowOriginArrayOutput() DomainSpecPortCorsAllowOriginArrayOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginArrayOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[[]DomainSpecPortCorsAllowOrigin]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) Index(i pulumi.IntInput) DomainSpecPortCorsAllowOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainSpecPortCorsAllowOrigin {
		return vs[0].([]DomainSpecPortCorsAllowOrigin)[vs[1].(int)]
	}).(DomainSpecPortCorsAllowOriginOutput)
}

type DomainSpecPortTls struct {
	CipherSuites       []string                            `pulumi:"cipherSuites"`
	ClientCertificate  *DomainSpecPortTlsClientCertificate `pulumi:"clientCertificate"`
	MinProtocolVersion *string                             `pulumi:"minProtocolVersion"`
	ServerCertificate  *DomainSpecPortTlsServerCertificate `pulumi:"serverCertificate"`
}

// DomainSpecPortTlsInput is an input type that accepts DomainSpecPortTlsArgs and DomainSpecPortTlsOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsInput` via:
//
//	DomainSpecPortTlsArgs{...}
type DomainSpecPortTlsInput interface {
	pulumi.Input

	ToDomainSpecPortTlsOutput() DomainSpecPortTlsOutput
	ToDomainSpecPortTlsOutputWithContext(context.Context) DomainSpecPortTlsOutput
}

type DomainSpecPortTlsArgs struct {
	CipherSuites       pulumi.StringArrayInput                    `pulumi:"cipherSuites"`
	ClientCertificate  DomainSpecPortTlsClientCertificatePtrInput `pulumi:"clientCertificate"`
	MinProtocolVersion pulumi.StringPtrInput                      `pulumi:"minProtocolVersion"`
	ServerCertificate  DomainSpecPortTlsServerCertificatePtrInput `pulumi:"serverCertificate"`
}

func (DomainSpecPortTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTls)(nil)).Elem()
}

func (i DomainSpecPortTlsArgs) ToDomainSpecPortTlsOutput() DomainSpecPortTlsOutput {
	return i.ToDomainSpecPortTlsOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsArgs) ToDomainSpecPortTlsOutputWithContext(ctx context.Context) DomainSpecPortTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsOutput)
}

func (i DomainSpecPortTlsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTls] {
	return pulumix.Output[DomainSpecPortTls]{
		OutputState: i.ToDomainSpecPortTlsOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortTlsOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTls)(nil)).Elem()
}

func (o DomainSpecPortTlsOutput) ToDomainSpecPortTlsOutput() DomainSpecPortTlsOutput {
	return o
}

func (o DomainSpecPortTlsOutput) ToDomainSpecPortTlsOutputWithContext(ctx context.Context) DomainSpecPortTlsOutput {
	return o
}

func (o DomainSpecPortTlsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTls] {
	return pulumix.Output[DomainSpecPortTls]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortTls) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortTlsOutput) ClientCertificate() DomainSpecPortTlsClientCertificatePtrOutput {
	return o.ApplyT(func(v DomainSpecPortTls) *DomainSpecPortTlsClientCertificate { return v.ClientCertificate }).(DomainSpecPortTlsClientCertificatePtrOutput)
}

func (o DomainSpecPortTlsOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortTls) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

func (o DomainSpecPortTlsOutput) ServerCertificate() DomainSpecPortTlsServerCertificatePtrOutput {
	return o.ApplyT(func(v DomainSpecPortTls) *DomainSpecPortTlsServerCertificate { return v.ServerCertificate }).(DomainSpecPortTlsServerCertificatePtrOutput)
}

type DomainSpecPortTlsClientCertificate struct {
	SecretLink *string `pulumi:"secretLink"`
}

// DomainSpecPortTlsClientCertificateInput is an input type that accepts DomainSpecPortTlsClientCertificateArgs and DomainSpecPortTlsClientCertificateOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsClientCertificateInput` via:
//
//	DomainSpecPortTlsClientCertificateArgs{...}
type DomainSpecPortTlsClientCertificateInput interface {
	pulumi.Input

	ToDomainSpecPortTlsClientCertificateOutput() DomainSpecPortTlsClientCertificateOutput
	ToDomainSpecPortTlsClientCertificateOutputWithContext(context.Context) DomainSpecPortTlsClientCertificateOutput
}

type DomainSpecPortTlsClientCertificateArgs struct {
	SecretLink pulumi.StringPtrInput `pulumi:"secretLink"`
}

func (DomainSpecPortTlsClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificateOutput() DomainSpecPortTlsClientCertificateOutput {
	return i.ToDomainSpecPortTlsClientCertificateOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsClientCertificateOutput)
}

func (i DomainSpecPortTlsClientCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[DomainSpecPortTlsClientCertificate]{
		OutputState: i.ToDomainSpecPortTlsClientCertificateOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return i.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsClientCertificateOutput).ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx)
}

// DomainSpecPortTlsClientCertificatePtrInput is an input type that accepts DomainSpecPortTlsClientCertificateArgs, DomainSpecPortTlsClientCertificatePtr and DomainSpecPortTlsClientCertificatePtrOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsClientCertificatePtrInput` via:
//
//	        DomainSpecPortTlsClientCertificateArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPortTlsClientCertificatePtrInput interface {
	pulumi.Input

	ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput
	ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Context) DomainSpecPortTlsClientCertificatePtrOutput
}

type domainSpecPortTlsClientCertificatePtrType DomainSpecPortTlsClientCertificateArgs

func DomainSpecPortTlsClientCertificatePtr(v *DomainSpecPortTlsClientCertificateArgs) DomainSpecPortTlsClientCertificatePtrInput {
	return (*domainSpecPortTlsClientCertificatePtrType)(v)
}

func (*domainSpecPortTlsClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (i *domainSpecPortTlsClientCertificatePtrType) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return i.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Background())
}

func (i *domainSpecPortTlsClientCertificatePtrType) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsClientCertificatePtrOutput)
}

func (i *domainSpecPortTlsClientCertificatePtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[*DomainSpecPortTlsClientCertificate]{
		OutputState: i.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortTlsClientCertificateOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificateOutput() DomainSpecPortTlsClientCertificateOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificateOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return o.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Background())
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpecPortTlsClientCertificate) *DomainSpecPortTlsClientCertificate {
		return &v
	}).(DomainSpecPortTlsClientCertificatePtrOutput)
}

func (o DomainSpecPortTlsClientCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[DomainSpecPortTlsClientCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsClientCertificateOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortTlsClientCertificate) *string { return v.SecretLink }).(pulumi.StringPtrOutput)
}

type DomainSpecPortTlsClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[*DomainSpecPortTlsClientCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) Elem() DomainSpecPortTlsClientCertificateOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsClientCertificate) DomainSpecPortTlsClientCertificate {
		if v != nil {
			return *v
		}
		var ret DomainSpecPortTlsClientCertificate
		return ret
	}).(DomainSpecPortTlsClientCertificateOutput)
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type DomainSpecPortTlsServerCertificate struct {
	SecretLink *string `pulumi:"secretLink"`
}

// DomainSpecPortTlsServerCertificateInput is an input type that accepts DomainSpecPortTlsServerCertificateArgs and DomainSpecPortTlsServerCertificateOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsServerCertificateInput` via:
//
//	DomainSpecPortTlsServerCertificateArgs{...}
type DomainSpecPortTlsServerCertificateInput interface {
	pulumi.Input

	ToDomainSpecPortTlsServerCertificateOutput() DomainSpecPortTlsServerCertificateOutput
	ToDomainSpecPortTlsServerCertificateOutputWithContext(context.Context) DomainSpecPortTlsServerCertificateOutput
}

type DomainSpecPortTlsServerCertificateArgs struct {
	SecretLink pulumi.StringPtrInput `pulumi:"secretLink"`
}

func (DomainSpecPortTlsServerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificateOutput() DomainSpecPortTlsServerCertificateOutput {
	return i.ToDomainSpecPortTlsServerCertificateOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsServerCertificateOutput)
}

func (i DomainSpecPortTlsServerCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[DomainSpecPortTlsServerCertificate]{
		OutputState: i.ToDomainSpecPortTlsServerCertificateOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return i.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsServerCertificateOutput).ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx)
}

// DomainSpecPortTlsServerCertificatePtrInput is an input type that accepts DomainSpecPortTlsServerCertificateArgs, DomainSpecPortTlsServerCertificatePtr and DomainSpecPortTlsServerCertificatePtrOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsServerCertificatePtrInput` via:
//
//	        DomainSpecPortTlsServerCertificateArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPortTlsServerCertificatePtrInput interface {
	pulumi.Input

	ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput
	ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Context) DomainSpecPortTlsServerCertificatePtrOutput
}

type domainSpecPortTlsServerCertificatePtrType DomainSpecPortTlsServerCertificateArgs

func DomainSpecPortTlsServerCertificatePtr(v *DomainSpecPortTlsServerCertificateArgs) DomainSpecPortTlsServerCertificatePtrInput {
	return (*domainSpecPortTlsServerCertificatePtrType)(v)
}

func (*domainSpecPortTlsServerCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (i *domainSpecPortTlsServerCertificatePtrType) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return i.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Background())
}

func (i *domainSpecPortTlsServerCertificatePtrType) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsServerCertificatePtrOutput)
}

func (i *domainSpecPortTlsServerCertificatePtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[*DomainSpecPortTlsServerCertificate]{
		OutputState: i.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortTlsServerCertificateOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificateOutput() DomainSpecPortTlsServerCertificateOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificateOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return o.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Background())
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpecPortTlsServerCertificate) *DomainSpecPortTlsServerCertificate {
		return &v
	}).(DomainSpecPortTlsServerCertificatePtrOutput)
}

func (o DomainSpecPortTlsServerCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[DomainSpecPortTlsServerCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsServerCertificateOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortTlsServerCertificate) *string { return v.SecretLink }).(pulumi.StringPtrOutput)
}

type DomainSpecPortTlsServerCertificatePtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsServerCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[*DomainSpecPortTlsServerCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) Elem() DomainSpecPortTlsServerCertificateOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsServerCertificate) DomainSpecPortTlsServerCertificate {
		if v != nil {
			return *v
		}
		var ret DomainSpecPortTlsServerCertificate
		return ret
	}).(DomainSpecPortTlsServerCertificateOutput)
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsServerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type DomainStatus struct {
	DnsConfigs  []DomainStatusDnsConfig `pulumi:"dnsConfigs"`
	Endpoints   []DomainStatusEndpoint  `pulumi:"endpoints"`
	Fingerprint *string                 `pulumi:"fingerprint"`
	Locations   []DomainStatusLocation  `pulumi:"locations"`
	Status      *string                 `pulumi:"status"`
	Warning     *string                 `pulumi:"warning"`
}

// DomainStatusInput is an input type that accepts DomainStatusArgs and DomainStatusOutput values.
// You can construct a concrete instance of `DomainStatusInput` via:
//
//	DomainStatusArgs{...}
type DomainStatusInput interface {
	pulumi.Input

	ToDomainStatusOutput() DomainStatusOutput
	ToDomainStatusOutputWithContext(context.Context) DomainStatusOutput
}

type DomainStatusArgs struct {
	DnsConfigs  DomainStatusDnsConfigArrayInput `pulumi:"dnsConfigs"`
	Endpoints   DomainStatusEndpointArrayInput  `pulumi:"endpoints"`
	Fingerprint pulumi.StringPtrInput           `pulumi:"fingerprint"`
	Locations   DomainStatusLocationArrayInput  `pulumi:"locations"`
	Status      pulumi.StringPtrInput           `pulumi:"status"`
	Warning     pulumi.StringPtrInput           `pulumi:"warning"`
}

func (DomainStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatus)(nil)).Elem()
}

func (i DomainStatusArgs) ToDomainStatusOutput() DomainStatusOutput {
	return i.ToDomainStatusOutputWithContext(context.Background())
}

func (i DomainStatusArgs) ToDomainStatusOutputWithContext(ctx context.Context) DomainStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusOutput)
}

func (i DomainStatusArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatus] {
	return pulumix.Output[DomainStatus]{
		OutputState: i.ToDomainStatusOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusArrayInput is an input type that accepts DomainStatusArray and DomainStatusArrayOutput values.
// You can construct a concrete instance of `DomainStatusArrayInput` via:
//
//	DomainStatusArray{ DomainStatusArgs{...} }
type DomainStatusArrayInput interface {
	pulumi.Input

	ToDomainStatusArrayOutput() DomainStatusArrayOutput
	ToDomainStatusArrayOutputWithContext(context.Context) DomainStatusArrayOutput
}

type DomainStatusArray []DomainStatusInput

func (DomainStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatus)(nil)).Elem()
}

func (i DomainStatusArray) ToDomainStatusArrayOutput() DomainStatusArrayOutput {
	return i.ToDomainStatusArrayOutputWithContext(context.Background())
}

func (i DomainStatusArray) ToDomainStatusArrayOutputWithContext(ctx context.Context) DomainStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusArrayOutput)
}

func (i DomainStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatus] {
	return pulumix.Output[[]DomainStatus]{
		OutputState: i.ToDomainStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusOutput struct{ *pulumi.OutputState }

func (DomainStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatus)(nil)).Elem()
}

func (o DomainStatusOutput) ToDomainStatusOutput() DomainStatusOutput {
	return o
}

func (o DomainStatusOutput) ToDomainStatusOutputWithContext(ctx context.Context) DomainStatusOutput {
	return o
}

func (o DomainStatusOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatus] {
	return pulumix.Output[DomainStatus]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusOutput) DnsConfigs() DomainStatusDnsConfigArrayOutput {
	return o.ApplyT(func(v DomainStatus) []DomainStatusDnsConfig { return v.DnsConfigs }).(DomainStatusDnsConfigArrayOutput)
}

func (o DomainStatusOutput) Endpoints() DomainStatusEndpointArrayOutput {
	return o.ApplyT(func(v DomainStatus) []DomainStatusEndpoint { return v.Endpoints }).(DomainStatusEndpointArrayOutput)
}

func (o DomainStatusOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatus) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

func (o DomainStatusOutput) Locations() DomainStatusLocationArrayOutput {
	return o.ApplyT(func(v DomainStatus) []DomainStatusLocation { return v.Locations }).(DomainStatusLocationArrayOutput)
}

func (o DomainStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o DomainStatusOutput) Warning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatus) *string { return v.Warning }).(pulumi.StringPtrOutput)
}

type DomainStatusArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatus)(nil)).Elem()
}

func (o DomainStatusArrayOutput) ToDomainStatusArrayOutput() DomainStatusArrayOutput {
	return o
}

func (o DomainStatusArrayOutput) ToDomainStatusArrayOutputWithContext(ctx context.Context) DomainStatusArrayOutput {
	return o
}

func (o DomainStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatus] {
	return pulumix.Output[[]DomainStatus]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusArrayOutput) Index(i pulumi.IntInput) DomainStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatus {
		return vs[0].([]DomainStatus)[vs[1].(int)]
	}).(DomainStatusOutput)
}

type DomainStatusDnsConfig struct {
	Host  *string `pulumi:"host"`
	Ttl   *int    `pulumi:"ttl"`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// DomainStatusDnsConfigInput is an input type that accepts DomainStatusDnsConfigArgs and DomainStatusDnsConfigOutput values.
// You can construct a concrete instance of `DomainStatusDnsConfigInput` via:
//
//	DomainStatusDnsConfigArgs{...}
type DomainStatusDnsConfigInput interface {
	pulumi.Input

	ToDomainStatusDnsConfigOutput() DomainStatusDnsConfigOutput
	ToDomainStatusDnsConfigOutputWithContext(context.Context) DomainStatusDnsConfigOutput
}

type DomainStatusDnsConfigArgs struct {
	Host  pulumi.StringPtrInput `pulumi:"host"`
	Ttl   pulumi.IntPtrInput    `pulumi:"ttl"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DomainStatusDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusDnsConfig)(nil)).Elem()
}

func (i DomainStatusDnsConfigArgs) ToDomainStatusDnsConfigOutput() DomainStatusDnsConfigOutput {
	return i.ToDomainStatusDnsConfigOutputWithContext(context.Background())
}

func (i DomainStatusDnsConfigArgs) ToDomainStatusDnsConfigOutputWithContext(ctx context.Context) DomainStatusDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusDnsConfigOutput)
}

func (i DomainStatusDnsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatusDnsConfig] {
	return pulumix.Output[DomainStatusDnsConfig]{
		OutputState: i.ToDomainStatusDnsConfigOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusDnsConfigArrayInput is an input type that accepts DomainStatusDnsConfigArray and DomainStatusDnsConfigArrayOutput values.
// You can construct a concrete instance of `DomainStatusDnsConfigArrayInput` via:
//
//	DomainStatusDnsConfigArray{ DomainStatusDnsConfigArgs{...} }
type DomainStatusDnsConfigArrayInput interface {
	pulumi.Input

	ToDomainStatusDnsConfigArrayOutput() DomainStatusDnsConfigArrayOutput
	ToDomainStatusDnsConfigArrayOutputWithContext(context.Context) DomainStatusDnsConfigArrayOutput
}

type DomainStatusDnsConfigArray []DomainStatusDnsConfigInput

func (DomainStatusDnsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusDnsConfig)(nil)).Elem()
}

func (i DomainStatusDnsConfigArray) ToDomainStatusDnsConfigArrayOutput() DomainStatusDnsConfigArrayOutput {
	return i.ToDomainStatusDnsConfigArrayOutputWithContext(context.Background())
}

func (i DomainStatusDnsConfigArray) ToDomainStatusDnsConfigArrayOutputWithContext(ctx context.Context) DomainStatusDnsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusDnsConfigArrayOutput)
}

func (i DomainStatusDnsConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusDnsConfig] {
	return pulumix.Output[[]DomainStatusDnsConfig]{
		OutputState: i.ToDomainStatusDnsConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusDnsConfigOutput struct{ *pulumi.OutputState }

func (DomainStatusDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusDnsConfig)(nil)).Elem()
}

func (o DomainStatusDnsConfigOutput) ToDomainStatusDnsConfigOutput() DomainStatusDnsConfigOutput {
	return o
}

func (o DomainStatusDnsConfigOutput) ToDomainStatusDnsConfigOutputWithContext(ctx context.Context) DomainStatusDnsConfigOutput {
	return o
}

func (o DomainStatusDnsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatusDnsConfig] {
	return pulumix.Output[DomainStatusDnsConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusDnsConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o DomainStatusDnsConfigOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

func (o DomainStatusDnsConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o DomainStatusDnsConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DomainStatusDnsConfigArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusDnsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusDnsConfig)(nil)).Elem()
}

func (o DomainStatusDnsConfigArrayOutput) ToDomainStatusDnsConfigArrayOutput() DomainStatusDnsConfigArrayOutput {
	return o
}

func (o DomainStatusDnsConfigArrayOutput) ToDomainStatusDnsConfigArrayOutputWithContext(ctx context.Context) DomainStatusDnsConfigArrayOutput {
	return o
}

func (o DomainStatusDnsConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusDnsConfig] {
	return pulumix.Output[[]DomainStatusDnsConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusDnsConfigArrayOutput) Index(i pulumi.IntInput) DomainStatusDnsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatusDnsConfig {
		return vs[0].([]DomainStatusDnsConfig)[vs[1].(int)]
	}).(DomainStatusDnsConfigOutput)
}

type DomainStatusEndpoint struct {
	Url          *string `pulumi:"url"`
	WorkloadLink *string `pulumi:"workloadLink"`
}

// DomainStatusEndpointInput is an input type that accepts DomainStatusEndpointArgs and DomainStatusEndpointOutput values.
// You can construct a concrete instance of `DomainStatusEndpointInput` via:
//
//	DomainStatusEndpointArgs{...}
type DomainStatusEndpointInput interface {
	pulumi.Input

	ToDomainStatusEndpointOutput() DomainStatusEndpointOutput
	ToDomainStatusEndpointOutputWithContext(context.Context) DomainStatusEndpointOutput
}

type DomainStatusEndpointArgs struct {
	Url          pulumi.StringPtrInput `pulumi:"url"`
	WorkloadLink pulumi.StringPtrInput `pulumi:"workloadLink"`
}

func (DomainStatusEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusEndpoint)(nil)).Elem()
}

func (i DomainStatusEndpointArgs) ToDomainStatusEndpointOutput() DomainStatusEndpointOutput {
	return i.ToDomainStatusEndpointOutputWithContext(context.Background())
}

func (i DomainStatusEndpointArgs) ToDomainStatusEndpointOutputWithContext(ctx context.Context) DomainStatusEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusEndpointOutput)
}

func (i DomainStatusEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatusEndpoint] {
	return pulumix.Output[DomainStatusEndpoint]{
		OutputState: i.ToDomainStatusEndpointOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusEndpointArrayInput is an input type that accepts DomainStatusEndpointArray and DomainStatusEndpointArrayOutput values.
// You can construct a concrete instance of `DomainStatusEndpointArrayInput` via:
//
//	DomainStatusEndpointArray{ DomainStatusEndpointArgs{...} }
type DomainStatusEndpointArrayInput interface {
	pulumi.Input

	ToDomainStatusEndpointArrayOutput() DomainStatusEndpointArrayOutput
	ToDomainStatusEndpointArrayOutputWithContext(context.Context) DomainStatusEndpointArrayOutput
}

type DomainStatusEndpointArray []DomainStatusEndpointInput

func (DomainStatusEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusEndpoint)(nil)).Elem()
}

func (i DomainStatusEndpointArray) ToDomainStatusEndpointArrayOutput() DomainStatusEndpointArrayOutput {
	return i.ToDomainStatusEndpointArrayOutputWithContext(context.Background())
}

func (i DomainStatusEndpointArray) ToDomainStatusEndpointArrayOutputWithContext(ctx context.Context) DomainStatusEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusEndpointArrayOutput)
}

func (i DomainStatusEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusEndpoint] {
	return pulumix.Output[[]DomainStatusEndpoint]{
		OutputState: i.ToDomainStatusEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusEndpointOutput struct{ *pulumi.OutputState }

func (DomainStatusEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusEndpoint)(nil)).Elem()
}

func (o DomainStatusEndpointOutput) ToDomainStatusEndpointOutput() DomainStatusEndpointOutput {
	return o
}

func (o DomainStatusEndpointOutput) ToDomainStatusEndpointOutputWithContext(ctx context.Context) DomainStatusEndpointOutput {
	return o
}

func (o DomainStatusEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatusEndpoint] {
	return pulumix.Output[DomainStatusEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusEndpointOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusEndpoint) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func (o DomainStatusEndpointOutput) WorkloadLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusEndpoint) *string { return v.WorkloadLink }).(pulumi.StringPtrOutput)
}

type DomainStatusEndpointArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusEndpoint)(nil)).Elem()
}

func (o DomainStatusEndpointArrayOutput) ToDomainStatusEndpointArrayOutput() DomainStatusEndpointArrayOutput {
	return o
}

func (o DomainStatusEndpointArrayOutput) ToDomainStatusEndpointArrayOutputWithContext(ctx context.Context) DomainStatusEndpointArrayOutput {
	return o
}

func (o DomainStatusEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusEndpoint] {
	return pulumix.Output[[]DomainStatusEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusEndpointArrayOutput) Index(i pulumi.IntInput) DomainStatusEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatusEndpoint {
		return vs[0].([]DomainStatusEndpoint)[vs[1].(int)]
	}).(DomainStatusEndpointOutput)
}

type DomainStatusLocation struct {
	CertificateStatus *string `pulumi:"certificateStatus"`
	Name              *string `pulumi:"name"`
}

// DomainStatusLocationInput is an input type that accepts DomainStatusLocationArgs and DomainStatusLocationOutput values.
// You can construct a concrete instance of `DomainStatusLocationInput` via:
//
//	DomainStatusLocationArgs{...}
type DomainStatusLocationInput interface {
	pulumi.Input

	ToDomainStatusLocationOutput() DomainStatusLocationOutput
	ToDomainStatusLocationOutputWithContext(context.Context) DomainStatusLocationOutput
}

type DomainStatusLocationArgs struct {
	CertificateStatus pulumi.StringPtrInput `pulumi:"certificateStatus"`
	Name              pulumi.StringPtrInput `pulumi:"name"`
}

func (DomainStatusLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusLocation)(nil)).Elem()
}

func (i DomainStatusLocationArgs) ToDomainStatusLocationOutput() DomainStatusLocationOutput {
	return i.ToDomainStatusLocationOutputWithContext(context.Background())
}

func (i DomainStatusLocationArgs) ToDomainStatusLocationOutputWithContext(ctx context.Context) DomainStatusLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusLocationOutput)
}

func (i DomainStatusLocationArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatusLocation] {
	return pulumix.Output[DomainStatusLocation]{
		OutputState: i.ToDomainStatusLocationOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusLocationArrayInput is an input type that accepts DomainStatusLocationArray and DomainStatusLocationArrayOutput values.
// You can construct a concrete instance of `DomainStatusLocationArrayInput` via:
//
//	DomainStatusLocationArray{ DomainStatusLocationArgs{...} }
type DomainStatusLocationArrayInput interface {
	pulumi.Input

	ToDomainStatusLocationArrayOutput() DomainStatusLocationArrayOutput
	ToDomainStatusLocationArrayOutputWithContext(context.Context) DomainStatusLocationArrayOutput
}

type DomainStatusLocationArray []DomainStatusLocationInput

func (DomainStatusLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusLocation)(nil)).Elem()
}

func (i DomainStatusLocationArray) ToDomainStatusLocationArrayOutput() DomainStatusLocationArrayOutput {
	return i.ToDomainStatusLocationArrayOutputWithContext(context.Background())
}

func (i DomainStatusLocationArray) ToDomainStatusLocationArrayOutputWithContext(ctx context.Context) DomainStatusLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusLocationArrayOutput)
}

func (i DomainStatusLocationArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusLocation] {
	return pulumix.Output[[]DomainStatusLocation]{
		OutputState: i.ToDomainStatusLocationArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusLocationOutput struct{ *pulumi.OutputState }

func (DomainStatusLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusLocation)(nil)).Elem()
}

func (o DomainStatusLocationOutput) ToDomainStatusLocationOutput() DomainStatusLocationOutput {
	return o
}

func (o DomainStatusLocationOutput) ToDomainStatusLocationOutputWithContext(ctx context.Context) DomainStatusLocationOutput {
	return o
}

func (o DomainStatusLocationOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatusLocation] {
	return pulumix.Output[DomainStatusLocation]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusLocationOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusLocation) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

func (o DomainStatusLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DomainStatusLocationArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusLocation)(nil)).Elem()
}

func (o DomainStatusLocationArrayOutput) ToDomainStatusLocationArrayOutput() DomainStatusLocationArrayOutput {
	return o
}

func (o DomainStatusLocationArrayOutput) ToDomainStatusLocationArrayOutputWithContext(ctx context.Context) DomainStatusLocationArrayOutput {
	return o
}

func (o DomainStatusLocationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusLocation] {
	return pulumix.Output[[]DomainStatusLocation]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusLocationArrayOutput) Index(i pulumi.IntInput) DomainStatusLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatusLocation {
		return vs[0].([]DomainStatusLocation)[vs[1].(int)]
	}).(DomainStatusLocationOutput)
}

type GroupIdentityMatcher struct {
	Expression string  `pulumi:"expression"`
	Language   *string `pulumi:"language"`
}

// GroupIdentityMatcherInput is an input type that accepts GroupIdentityMatcherArgs and GroupIdentityMatcherOutput values.
// You can construct a concrete instance of `GroupIdentityMatcherInput` via:
//
//	GroupIdentityMatcherArgs{...}
type GroupIdentityMatcherInput interface {
	pulumi.Input

	ToGroupIdentityMatcherOutput() GroupIdentityMatcherOutput
	ToGroupIdentityMatcherOutputWithContext(context.Context) GroupIdentityMatcherOutput
}

type GroupIdentityMatcherArgs struct {
	Expression pulumi.StringInput    `pulumi:"expression"`
	Language   pulumi.StringPtrInput `pulumi:"language"`
}

func (GroupIdentityMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentityMatcher)(nil)).Elem()
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherOutput() GroupIdentityMatcherOutput {
	return i.ToGroupIdentityMatcherOutputWithContext(context.Background())
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherOutputWithContext(ctx context.Context) GroupIdentityMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityMatcherOutput)
}

func (i GroupIdentityMatcherArgs) ToOutput(ctx context.Context) pulumix.Output[GroupIdentityMatcher] {
	return pulumix.Output[GroupIdentityMatcher]{
		OutputState: i.ToGroupIdentityMatcherOutputWithContext(ctx).OutputState,
	}
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return i.ToGroupIdentityMatcherPtrOutputWithContext(context.Background())
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityMatcherOutput).ToGroupIdentityMatcherPtrOutputWithContext(ctx)
}

// GroupIdentityMatcherPtrInput is an input type that accepts GroupIdentityMatcherArgs, GroupIdentityMatcherPtr and GroupIdentityMatcherPtrOutput values.
// You can construct a concrete instance of `GroupIdentityMatcherPtrInput` via:
//
//	        GroupIdentityMatcherArgs{...}
//
//	or:
//
//	        nil
type GroupIdentityMatcherPtrInput interface {
	pulumi.Input

	ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput
	ToGroupIdentityMatcherPtrOutputWithContext(context.Context) GroupIdentityMatcherPtrOutput
}

type groupIdentityMatcherPtrType GroupIdentityMatcherArgs

func GroupIdentityMatcherPtr(v *GroupIdentityMatcherArgs) GroupIdentityMatcherPtrInput {
	return (*groupIdentityMatcherPtrType)(v)
}

func (*groupIdentityMatcherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentityMatcher)(nil)).Elem()
}

func (i *groupIdentityMatcherPtrType) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return i.ToGroupIdentityMatcherPtrOutputWithContext(context.Background())
}

func (i *groupIdentityMatcherPtrType) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityMatcherPtrOutput)
}

func (i *groupIdentityMatcherPtrType) ToOutput(ctx context.Context) pulumix.Output[*GroupIdentityMatcher] {
	return pulumix.Output[*GroupIdentityMatcher]{
		OutputState: i.ToGroupIdentityMatcherPtrOutputWithContext(ctx).OutputState,
	}
}

type GroupIdentityMatcherOutput struct{ *pulumi.OutputState }

func (GroupIdentityMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentityMatcher)(nil)).Elem()
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherOutput() GroupIdentityMatcherOutput {
	return o
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherOutputWithContext(ctx context.Context) GroupIdentityMatcherOutput {
	return o
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return o.ToGroupIdentityMatcherPtrOutputWithContext(context.Background())
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupIdentityMatcher) *GroupIdentityMatcher {
		return &v
	}).(GroupIdentityMatcherPtrOutput)
}

func (o GroupIdentityMatcherOutput) ToOutput(ctx context.Context) pulumix.Output[GroupIdentityMatcher] {
	return pulumix.Output[GroupIdentityMatcher]{
		OutputState: o.OutputState,
	}
}

func (o GroupIdentityMatcherOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GroupIdentityMatcher) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GroupIdentityMatcherOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupIdentityMatcher) *string { return v.Language }).(pulumi.StringPtrOutput)
}

type GroupIdentityMatcherPtrOutput struct{ *pulumi.OutputState }

func (GroupIdentityMatcherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentityMatcher)(nil)).Elem()
}

func (o GroupIdentityMatcherPtrOutput) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return o
}

func (o GroupIdentityMatcherPtrOutput) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return o
}

func (o GroupIdentityMatcherPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GroupIdentityMatcher] {
	return pulumix.Output[*GroupIdentityMatcher]{
		OutputState: o.OutputState,
	}
}

func (o GroupIdentityMatcherPtrOutput) Elem() GroupIdentityMatcherOutput {
	return o.ApplyT(func(v *GroupIdentityMatcher) GroupIdentityMatcher {
		if v != nil {
			return *v
		}
		var ret GroupIdentityMatcher
		return ret
	}).(GroupIdentityMatcherOutput)
}

func (o GroupIdentityMatcherPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentityMatcher) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o GroupIdentityMatcherPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentityMatcher) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

type GroupMemberQuery struct {
	Fetch *string               `pulumi:"fetch"`
	Spec  *GroupMemberQuerySpec `pulumi:"spec"`
}

// GroupMemberQueryInput is an input type that accepts GroupMemberQueryArgs and GroupMemberQueryOutput values.
// You can construct a concrete instance of `GroupMemberQueryInput` via:
//
//	GroupMemberQueryArgs{...}
type GroupMemberQueryInput interface {
	pulumi.Input

	ToGroupMemberQueryOutput() GroupMemberQueryOutput
	ToGroupMemberQueryOutputWithContext(context.Context) GroupMemberQueryOutput
}

type GroupMemberQueryArgs struct {
	Fetch pulumi.StringPtrInput        `pulumi:"fetch"`
	Spec  GroupMemberQuerySpecPtrInput `pulumi:"spec"`
}

func (GroupMemberQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuery)(nil)).Elem()
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryOutput() GroupMemberQueryOutput {
	return i.ToGroupMemberQueryOutputWithContext(context.Background())
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryOutputWithContext(ctx context.Context) GroupMemberQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQueryOutput)
}

func (i GroupMemberQueryArgs) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuery] {
	return pulumix.Output[GroupMemberQuery]{
		OutputState: i.ToGroupMemberQueryOutputWithContext(ctx).OutputState,
	}
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return i.ToGroupMemberQueryPtrOutputWithContext(context.Background())
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQueryOutput).ToGroupMemberQueryPtrOutputWithContext(ctx)
}

// GroupMemberQueryPtrInput is an input type that accepts GroupMemberQueryArgs, GroupMemberQueryPtr and GroupMemberQueryPtrOutput values.
// You can construct a concrete instance of `GroupMemberQueryPtrInput` via:
//
//	        GroupMemberQueryArgs{...}
//
//	or:
//
//	        nil
type GroupMemberQueryPtrInput interface {
	pulumi.Input

	ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput
	ToGroupMemberQueryPtrOutputWithContext(context.Context) GroupMemberQueryPtrOutput
}

type groupMemberQueryPtrType GroupMemberQueryArgs

func GroupMemberQueryPtr(v *GroupMemberQueryArgs) GroupMemberQueryPtrInput {
	return (*groupMemberQueryPtrType)(v)
}

func (*groupMemberQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuery)(nil)).Elem()
}

func (i *groupMemberQueryPtrType) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return i.ToGroupMemberQueryPtrOutputWithContext(context.Background())
}

func (i *groupMemberQueryPtrType) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQueryPtrOutput)
}

func (i *groupMemberQueryPtrType) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuery] {
	return pulumix.Output[*GroupMemberQuery]{
		OutputState: i.ToGroupMemberQueryPtrOutputWithContext(ctx).OutputState,
	}
}

type GroupMemberQueryOutput struct{ *pulumi.OutputState }

func (GroupMemberQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuery)(nil)).Elem()
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryOutput() GroupMemberQueryOutput {
	return o
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryOutputWithContext(ctx context.Context) GroupMemberQueryOutput {
	return o
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return o.ToGroupMemberQueryPtrOutputWithContext(context.Background())
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMemberQuery) *GroupMemberQuery {
		return &v
	}).(GroupMemberQueryPtrOutput)
}

func (o GroupMemberQueryOutput) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuery] {
	return pulumix.Output[GroupMemberQuery]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQueryOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuery) *string { return v.Fetch }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQueryOutput) Spec() GroupMemberQuerySpecPtrOutput {
	return o.ApplyT(func(v GroupMemberQuery) *GroupMemberQuerySpec { return v.Spec }).(GroupMemberQuerySpecPtrOutput)
}

type GroupMemberQueryPtrOutput struct{ *pulumi.OutputState }

func (GroupMemberQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuery)(nil)).Elem()
}

func (o GroupMemberQueryPtrOutput) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return o
}

func (o GroupMemberQueryPtrOutput) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return o
}

func (o GroupMemberQueryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuery] {
	return pulumix.Output[*GroupMemberQuery]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQueryPtrOutput) Elem() GroupMemberQueryOutput {
	return o.ApplyT(func(v *GroupMemberQuery) GroupMemberQuery {
		if v != nil {
			return *v
		}
		var ret GroupMemberQuery
		return ret
	}).(GroupMemberQueryOutput)
}

func (o GroupMemberQueryPtrOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMemberQuery) *string {
		if v == nil {
			return nil
		}
		return v.Fetch
	}).(pulumi.StringPtrOutput)
}

func (o GroupMemberQueryPtrOutput) Spec() GroupMemberQuerySpecPtrOutput {
	return o.ApplyT(func(v *GroupMemberQuery) *GroupMemberQuerySpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(GroupMemberQuerySpecPtrOutput)
}

type GroupMemberQuerySpec struct {
	Match *string                    `pulumi:"match"`
	Terms []GroupMemberQuerySpecTerm `pulumi:"terms"`
}

// GroupMemberQuerySpecInput is an input type that accepts GroupMemberQuerySpecArgs and GroupMemberQuerySpecOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecInput` via:
//
//	GroupMemberQuerySpecArgs{...}
type GroupMemberQuerySpecInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecOutput() GroupMemberQuerySpecOutput
	ToGroupMemberQuerySpecOutputWithContext(context.Context) GroupMemberQuerySpecOutput
}

type GroupMemberQuerySpecArgs struct {
	Match pulumi.StringPtrInput              `pulumi:"match"`
	Terms GroupMemberQuerySpecTermArrayInput `pulumi:"terms"`
}

func (GroupMemberQuerySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpec)(nil)).Elem()
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecOutput() GroupMemberQuerySpecOutput {
	return i.ToGroupMemberQuerySpecOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecOutputWithContext(ctx context.Context) GroupMemberQuerySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecOutput)
}

func (i GroupMemberQuerySpecArgs) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpec] {
	return pulumix.Output[GroupMemberQuerySpec]{
		OutputState: i.ToGroupMemberQuerySpecOutputWithContext(ctx).OutputState,
	}
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return i.ToGroupMemberQuerySpecPtrOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecOutput).ToGroupMemberQuerySpecPtrOutputWithContext(ctx)
}

// GroupMemberQuerySpecPtrInput is an input type that accepts GroupMemberQuerySpecArgs, GroupMemberQuerySpecPtr and GroupMemberQuerySpecPtrOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecPtrInput` via:
//
//	        GroupMemberQuerySpecArgs{...}
//
//	or:
//
//	        nil
type GroupMemberQuerySpecPtrInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput
	ToGroupMemberQuerySpecPtrOutputWithContext(context.Context) GroupMemberQuerySpecPtrOutput
}

type groupMemberQuerySpecPtrType GroupMemberQuerySpecArgs

func GroupMemberQuerySpecPtr(v *GroupMemberQuerySpecArgs) GroupMemberQuerySpecPtrInput {
	return (*groupMemberQuerySpecPtrType)(v)
}

func (*groupMemberQuerySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuerySpec)(nil)).Elem()
}

func (i *groupMemberQuerySpecPtrType) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return i.ToGroupMemberQuerySpecPtrOutputWithContext(context.Background())
}

func (i *groupMemberQuerySpecPtrType) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecPtrOutput)
}

func (i *groupMemberQuerySpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuerySpec] {
	return pulumix.Output[*GroupMemberQuerySpec]{
		OutputState: i.ToGroupMemberQuerySpecPtrOutputWithContext(ctx).OutputState,
	}
}

type GroupMemberQuerySpecOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpec)(nil)).Elem()
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecOutput() GroupMemberQuerySpecOutput {
	return o
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecOutputWithContext(ctx context.Context) GroupMemberQuerySpecOutput {
	return o
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return o.ToGroupMemberQuerySpecPtrOutputWithContext(context.Background())
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMemberQuerySpec) *GroupMemberQuerySpec {
		return &v
	}).(GroupMemberQuerySpecPtrOutput)
}

func (o GroupMemberQuerySpecOutput) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpec] {
	return pulumix.Output[GroupMemberQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpec) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecOutput) Terms() GroupMemberQuerySpecTermArrayOutput {
	return o.ApplyT(func(v GroupMemberQuerySpec) []GroupMemberQuerySpecTerm { return v.Terms }).(GroupMemberQuerySpecTermArrayOutput)
}

type GroupMemberQuerySpecPtrOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuerySpec)(nil)).Elem()
}

func (o GroupMemberQuerySpecPtrOutput) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return o
}

func (o GroupMemberQuerySpecPtrOutput) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return o
}

func (o GroupMemberQuerySpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuerySpec] {
	return pulumix.Output[*GroupMemberQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecPtrOutput) Elem() GroupMemberQuerySpecOutput {
	return o.ApplyT(func(v *GroupMemberQuerySpec) GroupMemberQuerySpec {
		if v != nil {
			return *v
		}
		var ret GroupMemberQuerySpec
		return ret
	}).(GroupMemberQuerySpecOutput)
}

func (o GroupMemberQuerySpecPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMemberQuerySpec) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecPtrOutput) Terms() GroupMemberQuerySpecTermArrayOutput {
	return o.ApplyT(func(v *GroupMemberQuerySpec) []GroupMemberQuerySpecTerm {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(GroupMemberQuerySpecTermArrayOutput)
}

type GroupMemberQuerySpecTerm struct {
	Op       *string `pulumi:"op"`
	Property *string `pulumi:"property"`
	Rel      *string `pulumi:"rel"`
	Tag      *string `pulumi:"tag"`
	Value    *string `pulumi:"value"`
}

// GroupMemberQuerySpecTermInput is an input type that accepts GroupMemberQuerySpecTermArgs and GroupMemberQuerySpecTermOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecTermInput` via:
//
//	GroupMemberQuerySpecTermArgs{...}
type GroupMemberQuerySpecTermInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecTermOutput() GroupMemberQuerySpecTermOutput
	ToGroupMemberQuerySpecTermOutputWithContext(context.Context) GroupMemberQuerySpecTermOutput
}

type GroupMemberQuerySpecTermArgs struct {
	Op       pulumi.StringPtrInput `pulumi:"op"`
	Property pulumi.StringPtrInput `pulumi:"property"`
	Rel      pulumi.StringPtrInput `pulumi:"rel"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (GroupMemberQuerySpecTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (i GroupMemberQuerySpecTermArgs) ToGroupMemberQuerySpecTermOutput() GroupMemberQuerySpecTermOutput {
	return i.ToGroupMemberQuerySpecTermOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecTermArgs) ToGroupMemberQuerySpecTermOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecTermOutput)
}

func (i GroupMemberQuerySpecTermArgs) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpecTerm] {
	return pulumix.Output[GroupMemberQuerySpecTerm]{
		OutputState: i.ToGroupMemberQuerySpecTermOutputWithContext(ctx).OutputState,
	}
}

// GroupMemberQuerySpecTermArrayInput is an input type that accepts GroupMemberQuerySpecTermArray and GroupMemberQuerySpecTermArrayOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecTermArrayInput` via:
//
//	GroupMemberQuerySpecTermArray{ GroupMemberQuerySpecTermArgs{...} }
type GroupMemberQuerySpecTermArrayInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecTermArrayOutput() GroupMemberQuerySpecTermArrayOutput
	ToGroupMemberQuerySpecTermArrayOutputWithContext(context.Context) GroupMemberQuerySpecTermArrayOutput
}

type GroupMemberQuerySpecTermArray []GroupMemberQuerySpecTermInput

func (GroupMemberQuerySpecTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (i GroupMemberQuerySpecTermArray) ToGroupMemberQuerySpecTermArrayOutput() GroupMemberQuerySpecTermArrayOutput {
	return i.ToGroupMemberQuerySpecTermArrayOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecTermArray) ToGroupMemberQuerySpecTermArrayOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecTermArrayOutput)
}

func (i GroupMemberQuerySpecTermArray) ToOutput(ctx context.Context) pulumix.Output[[]GroupMemberQuerySpecTerm] {
	return pulumix.Output[[]GroupMemberQuerySpecTerm]{
		OutputState: i.ToGroupMemberQuerySpecTermArrayOutputWithContext(ctx).OutputState,
	}
}

type GroupMemberQuerySpecTermOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (o GroupMemberQuerySpecTermOutput) ToGroupMemberQuerySpecTermOutput() GroupMemberQuerySpecTermOutput {
	return o
}

func (o GroupMemberQuerySpecTermOutput) ToGroupMemberQuerySpecTermOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermOutput {
	return o
}

func (o GroupMemberQuerySpecTermOutput) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpecTerm] {
	return pulumix.Output[GroupMemberQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecTermOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecTermOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecTermOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecTermOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GroupMemberQuerySpecTermArrayOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (o GroupMemberQuerySpecTermArrayOutput) ToGroupMemberQuerySpecTermArrayOutput() GroupMemberQuerySpecTermArrayOutput {
	return o
}

func (o GroupMemberQuerySpecTermArrayOutput) ToGroupMemberQuerySpecTermArrayOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermArrayOutput {
	return o
}

func (o GroupMemberQuerySpecTermArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GroupMemberQuerySpecTerm] {
	return pulumix.Output[[]GroupMemberQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecTermArrayOutput) Index(i pulumi.IntInput) GroupMemberQuerySpecTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMemberQuerySpecTerm {
		return vs[0].([]GroupMemberQuerySpecTerm)[vs[1].(int)]
	}).(GroupMemberQuerySpecTermOutput)
}

type GvcControlplaneTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Sampling   float64           `pulumi:"sampling"`
}

// GvcControlplaneTracingInput is an input type that accepts GvcControlplaneTracingArgs and GvcControlplaneTracingOutput values.
// You can construct a concrete instance of `GvcControlplaneTracingInput` via:
//
//	GvcControlplaneTracingArgs{...}
type GvcControlplaneTracingInput interface {
	pulumi.Input

	ToGvcControlplaneTracingOutput() GvcControlplaneTracingOutput
	ToGvcControlplaneTracingOutputWithContext(context.Context) GvcControlplaneTracingOutput
}

type GvcControlplaneTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Sampling   pulumi.Float64Input   `pulumi:"sampling"`
}

func (GvcControlplaneTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcControlplaneTracing)(nil)).Elem()
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingOutput() GvcControlplaneTracingOutput {
	return i.ToGvcControlplaneTracingOutputWithContext(context.Background())
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingOutputWithContext(ctx context.Context) GvcControlplaneTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcControlplaneTracingOutput)
}

func (i GvcControlplaneTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GvcControlplaneTracing] {
	return pulumix.Output[GvcControlplaneTracing]{
		OutputState: i.ToGvcControlplaneTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return i.ToGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcControlplaneTracingOutput).ToGvcControlplaneTracingPtrOutputWithContext(ctx)
}

// GvcControlplaneTracingPtrInput is an input type that accepts GvcControlplaneTracingArgs, GvcControlplaneTracingPtr and GvcControlplaneTracingPtrOutput values.
// You can construct a concrete instance of `GvcControlplaneTracingPtrInput` via:
//
//	        GvcControlplaneTracingArgs{...}
//
//	or:
//
//	        nil
type GvcControlplaneTracingPtrInput interface {
	pulumi.Input

	ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput
	ToGvcControlplaneTracingPtrOutputWithContext(context.Context) GvcControlplaneTracingPtrOutput
}

type gvcControlplaneTracingPtrType GvcControlplaneTracingArgs

func GvcControlplaneTracingPtr(v *GvcControlplaneTracingArgs) GvcControlplaneTracingPtrInput {
	return (*gvcControlplaneTracingPtrType)(v)
}

func (*gvcControlplaneTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcControlplaneTracing)(nil)).Elem()
}

func (i *gvcControlplaneTracingPtrType) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return i.ToGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i *gvcControlplaneTracingPtrType) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcControlplaneTracingPtrOutput)
}

func (i *gvcControlplaneTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcControlplaneTracing] {
	return pulumix.Output[*GvcControlplaneTracing]{
		OutputState: i.ToGvcControlplaneTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcControlplaneTracingOutput struct{ *pulumi.OutputState }

func (GvcControlplaneTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcControlplaneTracing)(nil)).Elem()
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingOutput() GvcControlplaneTracingOutput {
	return o
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingOutputWithContext(ctx context.Context) GvcControlplaneTracingOutput {
	return o
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return o.ToGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcControlplaneTracing) *GvcControlplaneTracing {
		return &v
	}).(GvcControlplaneTracingPtrOutput)
}

func (o GvcControlplaneTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GvcControlplaneTracing] {
	return pulumix.Output[GvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcControlplaneTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GvcControlplaneTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GvcControlplaneTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v GvcControlplaneTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type GvcControlplaneTracingPtrOutput struct{ *pulumi.OutputState }

func (GvcControlplaneTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcControlplaneTracing)(nil)).Elem()
}

func (o GvcControlplaneTracingPtrOutput) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return o
}

func (o GvcControlplaneTracingPtrOutput) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return o
}

func (o GvcControlplaneTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcControlplaneTracing] {
	return pulumix.Output[*GvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcControlplaneTracingPtrOutput) Elem() GvcControlplaneTracingOutput {
	return o.ApplyT(func(v *GvcControlplaneTracing) GvcControlplaneTracing {
		if v != nil {
			return *v
		}
		var ret GvcControlplaneTracing
		return ret
	}).(GvcControlplaneTracingOutput)
}

func (o GvcControlplaneTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GvcControlplaneTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GvcControlplaneTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GvcControlplaneTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type GvcLightstepTracing struct {
	Credentials *string           `pulumi:"credentials"`
	CustomTags  map[string]string `pulumi:"customTags"`
	Endpoint    string            `pulumi:"endpoint"`
	Sampling    float64           `pulumi:"sampling"`
}

// GvcLightstepTracingInput is an input type that accepts GvcLightstepTracingArgs and GvcLightstepTracingOutput values.
// You can construct a concrete instance of `GvcLightstepTracingInput` via:
//
//	GvcLightstepTracingArgs{...}
type GvcLightstepTracingInput interface {
	pulumi.Input

	ToGvcLightstepTracingOutput() GvcLightstepTracingOutput
	ToGvcLightstepTracingOutputWithContext(context.Context) GvcLightstepTracingOutput
}

type GvcLightstepTracingArgs struct {
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	CustomTags  pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint    pulumi.StringInput    `pulumi:"endpoint"`
	Sampling    pulumi.Float64Input   `pulumi:"sampling"`
}

func (GvcLightstepTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLightstepTracing)(nil)).Elem()
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingOutput() GvcLightstepTracingOutput {
	return i.ToGvcLightstepTracingOutputWithContext(context.Background())
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingOutputWithContext(ctx context.Context) GvcLightstepTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLightstepTracingOutput)
}

func (i GvcLightstepTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GvcLightstepTracing] {
	return pulumix.Output[GvcLightstepTracing]{
		OutputState: i.ToGvcLightstepTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return i.ToGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLightstepTracingOutput).ToGvcLightstepTracingPtrOutputWithContext(ctx)
}

// GvcLightstepTracingPtrInput is an input type that accepts GvcLightstepTracingArgs, GvcLightstepTracingPtr and GvcLightstepTracingPtrOutput values.
// You can construct a concrete instance of `GvcLightstepTracingPtrInput` via:
//
//	        GvcLightstepTracingArgs{...}
//
//	or:
//
//	        nil
type GvcLightstepTracingPtrInput interface {
	pulumi.Input

	ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput
	ToGvcLightstepTracingPtrOutputWithContext(context.Context) GvcLightstepTracingPtrOutput
}

type gvcLightstepTracingPtrType GvcLightstepTracingArgs

func GvcLightstepTracingPtr(v *GvcLightstepTracingArgs) GvcLightstepTracingPtrInput {
	return (*gvcLightstepTracingPtrType)(v)
}

func (*gvcLightstepTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLightstepTracing)(nil)).Elem()
}

func (i *gvcLightstepTracingPtrType) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return i.ToGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i *gvcLightstepTracingPtrType) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLightstepTracingPtrOutput)
}

func (i *gvcLightstepTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcLightstepTracing] {
	return pulumix.Output[*GvcLightstepTracing]{
		OutputState: i.ToGvcLightstepTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcLightstepTracingOutput struct{ *pulumi.OutputState }

func (GvcLightstepTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLightstepTracing)(nil)).Elem()
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingOutput() GvcLightstepTracingOutput {
	return o
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingOutputWithContext(ctx context.Context) GvcLightstepTracingOutput {
	return o
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return o.ToGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcLightstepTracing) *GvcLightstepTracing {
		return &v
	}).(GvcLightstepTracingPtrOutput)
}

func (o GvcLightstepTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GvcLightstepTracing] {
	return pulumix.Output[GvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcLightstepTracingOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GvcLightstepTracing) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

func (o GvcLightstepTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GvcLightstepTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GvcLightstepTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GvcLightstepTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GvcLightstepTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v GvcLightstepTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type GvcLightstepTracingPtrOutput struct{ *pulumi.OutputState }

func (GvcLightstepTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLightstepTracing)(nil)).Elem()
}

func (o GvcLightstepTracingPtrOutput) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return o
}

func (o GvcLightstepTracingPtrOutput) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return o
}

func (o GvcLightstepTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcLightstepTracing] {
	return pulumix.Output[*GvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcLightstepTracingPtrOutput) Elem() GvcLightstepTracingOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) GvcLightstepTracing {
		if v != nil {
			return *v
		}
		var ret GvcLightstepTracing
		return ret
	}).(GvcLightstepTracingOutput)
}

func (o GvcLightstepTracingPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o GvcLightstepTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GvcLightstepTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GvcLightstepTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type GvcLoadBalancer struct {
	Dedicated      bool                     `pulumi:"dedicated"`
	Redirect       *GvcLoadBalancerRedirect `pulumi:"redirect"`
	TrustedProxies *int                     `pulumi:"trustedProxies"`
}

// GvcLoadBalancerInput is an input type that accepts GvcLoadBalancerArgs and GvcLoadBalancerOutput values.
// You can construct a concrete instance of `GvcLoadBalancerInput` via:
//
//	GvcLoadBalancerArgs{...}
type GvcLoadBalancerInput interface {
	pulumi.Input

	ToGvcLoadBalancerOutput() GvcLoadBalancerOutput
	ToGvcLoadBalancerOutputWithContext(context.Context) GvcLoadBalancerOutput
}

type GvcLoadBalancerArgs struct {
	Dedicated      pulumi.BoolInput                `pulumi:"dedicated"`
	Redirect       GvcLoadBalancerRedirectPtrInput `pulumi:"redirect"`
	TrustedProxies pulumi.IntPtrInput              `pulumi:"trustedProxies"`
}

func (GvcLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancer)(nil)).Elem()
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerOutput() GvcLoadBalancerOutput {
	return i.ToGvcLoadBalancerOutputWithContext(context.Background())
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerOutputWithContext(ctx context.Context) GvcLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerOutput)
}

func (i GvcLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancer] {
	return pulumix.Output[GvcLoadBalancer]{
		OutputState: i.ToGvcLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return i.ToGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerOutput).ToGvcLoadBalancerPtrOutputWithContext(ctx)
}

// GvcLoadBalancerPtrInput is an input type that accepts GvcLoadBalancerArgs, GvcLoadBalancerPtr and GvcLoadBalancerPtrOutput values.
// You can construct a concrete instance of `GvcLoadBalancerPtrInput` via:
//
//	        GvcLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type GvcLoadBalancerPtrInput interface {
	pulumi.Input

	ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput
	ToGvcLoadBalancerPtrOutputWithContext(context.Context) GvcLoadBalancerPtrOutput
}

type gvcLoadBalancerPtrType GvcLoadBalancerArgs

func GvcLoadBalancerPtr(v *GvcLoadBalancerArgs) GvcLoadBalancerPtrInput {
	return (*gvcLoadBalancerPtrType)(v)
}

func (*gvcLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancer)(nil)).Elem()
}

func (i *gvcLoadBalancerPtrType) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return i.ToGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *gvcLoadBalancerPtrType) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerPtrOutput)
}

func (i *gvcLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancer] {
	return pulumix.Output[*GvcLoadBalancer]{
		OutputState: i.ToGvcLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcLoadBalancerOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancer)(nil)).Elem()
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerOutput() GvcLoadBalancerOutput {
	return o
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerOutputWithContext(ctx context.Context) GvcLoadBalancerOutput {
	return o
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return o.ToGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcLoadBalancer) *GvcLoadBalancer {
		return &v
	}).(GvcLoadBalancerPtrOutput)
}

func (o GvcLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancer] {
	return pulumix.Output[GvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerOutput) Dedicated() pulumi.BoolOutput {
	return o.ApplyT(func(v GvcLoadBalancer) bool { return v.Dedicated }).(pulumi.BoolOutput)
}

func (o GvcLoadBalancerOutput) Redirect() GvcLoadBalancerRedirectPtrOutput {
	return o.ApplyT(func(v GvcLoadBalancer) *GvcLoadBalancerRedirect { return v.Redirect }).(GvcLoadBalancerRedirectPtrOutput)
}

func (o GvcLoadBalancerOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GvcLoadBalancer) *int { return v.TrustedProxies }).(pulumi.IntPtrOutput)
}

type GvcLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancer)(nil)).Elem()
}

func (o GvcLoadBalancerPtrOutput) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return o
}

func (o GvcLoadBalancerPtrOutput) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return o
}

func (o GvcLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancer] {
	return pulumix.Output[*GvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerPtrOutput) Elem() GvcLoadBalancerOutput {
	return o.ApplyT(func(v *GvcLoadBalancer) GvcLoadBalancer {
		if v != nil {
			return *v
		}
		var ret GvcLoadBalancer
		return ret
	}).(GvcLoadBalancerOutput)
}

func (o GvcLoadBalancerPtrOutput) Dedicated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GvcLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return &v.Dedicated
	}).(pulumi.BoolPtrOutput)
}

func (o GvcLoadBalancerPtrOutput) Redirect() GvcLoadBalancerRedirectPtrOutput {
	return o.ApplyT(func(v *GvcLoadBalancer) *GvcLoadBalancerRedirect {
		if v == nil {
			return nil
		}
		return v.Redirect
	}).(GvcLoadBalancerRedirectPtrOutput)
}

func (o GvcLoadBalancerPtrOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GvcLoadBalancer) *int {
		if v == nil {
			return nil
		}
		return v.TrustedProxies
	}).(pulumi.IntPtrOutput)
}

type GvcLoadBalancerRedirect struct {
	Class *GvcLoadBalancerRedirectClass `pulumi:"class"`
}

// GvcLoadBalancerRedirectInput is an input type that accepts GvcLoadBalancerRedirectArgs and GvcLoadBalancerRedirectOutput values.
// You can construct a concrete instance of `GvcLoadBalancerRedirectInput` via:
//
//	GvcLoadBalancerRedirectArgs{...}
type GvcLoadBalancerRedirectInput interface {
	pulumi.Input

	ToGvcLoadBalancerRedirectOutput() GvcLoadBalancerRedirectOutput
	ToGvcLoadBalancerRedirectOutputWithContext(context.Context) GvcLoadBalancerRedirectOutput
}

type GvcLoadBalancerRedirectArgs struct {
	Class GvcLoadBalancerRedirectClassPtrInput `pulumi:"class"`
}

func (GvcLoadBalancerRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancerRedirect)(nil)).Elem()
}

func (i GvcLoadBalancerRedirectArgs) ToGvcLoadBalancerRedirectOutput() GvcLoadBalancerRedirectOutput {
	return i.ToGvcLoadBalancerRedirectOutputWithContext(context.Background())
}

func (i GvcLoadBalancerRedirectArgs) ToGvcLoadBalancerRedirectOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerRedirectOutput)
}

func (i GvcLoadBalancerRedirectArgs) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancerRedirect] {
	return pulumix.Output[GvcLoadBalancerRedirect]{
		OutputState: i.ToGvcLoadBalancerRedirectOutputWithContext(ctx).OutputState,
	}
}

func (i GvcLoadBalancerRedirectArgs) ToGvcLoadBalancerRedirectPtrOutput() GvcLoadBalancerRedirectPtrOutput {
	return i.ToGvcLoadBalancerRedirectPtrOutputWithContext(context.Background())
}

func (i GvcLoadBalancerRedirectArgs) ToGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerRedirectOutput).ToGvcLoadBalancerRedirectPtrOutputWithContext(ctx)
}

// GvcLoadBalancerRedirectPtrInput is an input type that accepts GvcLoadBalancerRedirectArgs, GvcLoadBalancerRedirectPtr and GvcLoadBalancerRedirectPtrOutput values.
// You can construct a concrete instance of `GvcLoadBalancerRedirectPtrInput` via:
//
//	        GvcLoadBalancerRedirectArgs{...}
//
//	or:
//
//	        nil
type GvcLoadBalancerRedirectPtrInput interface {
	pulumi.Input

	ToGvcLoadBalancerRedirectPtrOutput() GvcLoadBalancerRedirectPtrOutput
	ToGvcLoadBalancerRedirectPtrOutputWithContext(context.Context) GvcLoadBalancerRedirectPtrOutput
}

type gvcLoadBalancerRedirectPtrType GvcLoadBalancerRedirectArgs

func GvcLoadBalancerRedirectPtr(v *GvcLoadBalancerRedirectArgs) GvcLoadBalancerRedirectPtrInput {
	return (*gvcLoadBalancerRedirectPtrType)(v)
}

func (*gvcLoadBalancerRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancerRedirect)(nil)).Elem()
}

func (i *gvcLoadBalancerRedirectPtrType) ToGvcLoadBalancerRedirectPtrOutput() GvcLoadBalancerRedirectPtrOutput {
	return i.ToGvcLoadBalancerRedirectPtrOutputWithContext(context.Background())
}

func (i *gvcLoadBalancerRedirectPtrType) ToGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerRedirectPtrOutput)
}

func (i *gvcLoadBalancerRedirectPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancerRedirect] {
	return pulumix.Output[*GvcLoadBalancerRedirect]{
		OutputState: i.ToGvcLoadBalancerRedirectPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcLoadBalancerRedirectOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancerRedirect)(nil)).Elem()
}

func (o GvcLoadBalancerRedirectOutput) ToGvcLoadBalancerRedirectOutput() GvcLoadBalancerRedirectOutput {
	return o
}

func (o GvcLoadBalancerRedirectOutput) ToGvcLoadBalancerRedirectOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectOutput {
	return o
}

func (o GvcLoadBalancerRedirectOutput) ToGvcLoadBalancerRedirectPtrOutput() GvcLoadBalancerRedirectPtrOutput {
	return o.ToGvcLoadBalancerRedirectPtrOutputWithContext(context.Background())
}

func (o GvcLoadBalancerRedirectOutput) ToGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcLoadBalancerRedirect) *GvcLoadBalancerRedirect {
		return &v
	}).(GvcLoadBalancerRedirectPtrOutput)
}

func (o GvcLoadBalancerRedirectOutput) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancerRedirect] {
	return pulumix.Output[GvcLoadBalancerRedirect]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerRedirectOutput) Class() GvcLoadBalancerRedirectClassPtrOutput {
	return o.ApplyT(func(v GvcLoadBalancerRedirect) *GvcLoadBalancerRedirectClass { return v.Class }).(GvcLoadBalancerRedirectClassPtrOutput)
}

type GvcLoadBalancerRedirectPtrOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancerRedirect)(nil)).Elem()
}

func (o GvcLoadBalancerRedirectPtrOutput) ToGvcLoadBalancerRedirectPtrOutput() GvcLoadBalancerRedirectPtrOutput {
	return o
}

func (o GvcLoadBalancerRedirectPtrOutput) ToGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectPtrOutput {
	return o
}

func (o GvcLoadBalancerRedirectPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancerRedirect] {
	return pulumix.Output[*GvcLoadBalancerRedirect]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerRedirectPtrOutput) Elem() GvcLoadBalancerRedirectOutput {
	return o.ApplyT(func(v *GvcLoadBalancerRedirect) GvcLoadBalancerRedirect {
		if v != nil {
			return *v
		}
		var ret GvcLoadBalancerRedirect
		return ret
	}).(GvcLoadBalancerRedirectOutput)
}

func (o GvcLoadBalancerRedirectPtrOutput) Class() GvcLoadBalancerRedirectClassPtrOutput {
	return o.ApplyT(func(v *GvcLoadBalancerRedirect) *GvcLoadBalancerRedirectClass {
		if v == nil {
			return nil
		}
		return v.Class
	}).(GvcLoadBalancerRedirectClassPtrOutput)
}

type GvcLoadBalancerRedirectClass struct {
	Status5xx *string `pulumi:"status5xx"`
}

// GvcLoadBalancerRedirectClassInput is an input type that accepts GvcLoadBalancerRedirectClassArgs and GvcLoadBalancerRedirectClassOutput values.
// You can construct a concrete instance of `GvcLoadBalancerRedirectClassInput` via:
//
//	GvcLoadBalancerRedirectClassArgs{...}
type GvcLoadBalancerRedirectClassInput interface {
	pulumi.Input

	ToGvcLoadBalancerRedirectClassOutput() GvcLoadBalancerRedirectClassOutput
	ToGvcLoadBalancerRedirectClassOutputWithContext(context.Context) GvcLoadBalancerRedirectClassOutput
}

type GvcLoadBalancerRedirectClassArgs struct {
	Status5xx pulumi.StringPtrInput `pulumi:"status5xx"`
}

func (GvcLoadBalancerRedirectClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (i GvcLoadBalancerRedirectClassArgs) ToGvcLoadBalancerRedirectClassOutput() GvcLoadBalancerRedirectClassOutput {
	return i.ToGvcLoadBalancerRedirectClassOutputWithContext(context.Background())
}

func (i GvcLoadBalancerRedirectClassArgs) ToGvcLoadBalancerRedirectClassOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerRedirectClassOutput)
}

func (i GvcLoadBalancerRedirectClassArgs) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancerRedirectClass] {
	return pulumix.Output[GvcLoadBalancerRedirectClass]{
		OutputState: i.ToGvcLoadBalancerRedirectClassOutputWithContext(ctx).OutputState,
	}
}

func (i GvcLoadBalancerRedirectClassArgs) ToGvcLoadBalancerRedirectClassPtrOutput() GvcLoadBalancerRedirectClassPtrOutput {
	return i.ToGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Background())
}

func (i GvcLoadBalancerRedirectClassArgs) ToGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerRedirectClassOutput).ToGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx)
}

// GvcLoadBalancerRedirectClassPtrInput is an input type that accepts GvcLoadBalancerRedirectClassArgs, GvcLoadBalancerRedirectClassPtr and GvcLoadBalancerRedirectClassPtrOutput values.
// You can construct a concrete instance of `GvcLoadBalancerRedirectClassPtrInput` via:
//
//	        GvcLoadBalancerRedirectClassArgs{...}
//
//	or:
//
//	        nil
type GvcLoadBalancerRedirectClassPtrInput interface {
	pulumi.Input

	ToGvcLoadBalancerRedirectClassPtrOutput() GvcLoadBalancerRedirectClassPtrOutput
	ToGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Context) GvcLoadBalancerRedirectClassPtrOutput
}

type gvcLoadBalancerRedirectClassPtrType GvcLoadBalancerRedirectClassArgs

func GvcLoadBalancerRedirectClassPtr(v *GvcLoadBalancerRedirectClassArgs) GvcLoadBalancerRedirectClassPtrInput {
	return (*gvcLoadBalancerRedirectClassPtrType)(v)
}

func (*gvcLoadBalancerRedirectClassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (i *gvcLoadBalancerRedirectClassPtrType) ToGvcLoadBalancerRedirectClassPtrOutput() GvcLoadBalancerRedirectClassPtrOutput {
	return i.ToGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Background())
}

func (i *gvcLoadBalancerRedirectClassPtrType) ToGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerRedirectClassPtrOutput)
}

func (i *gvcLoadBalancerRedirectClassPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancerRedirectClass] {
	return pulumix.Output[*GvcLoadBalancerRedirectClass]{
		OutputState: i.ToGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcLoadBalancerRedirectClassOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerRedirectClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (o GvcLoadBalancerRedirectClassOutput) ToGvcLoadBalancerRedirectClassOutput() GvcLoadBalancerRedirectClassOutput {
	return o
}

func (o GvcLoadBalancerRedirectClassOutput) ToGvcLoadBalancerRedirectClassOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectClassOutput {
	return o
}

func (o GvcLoadBalancerRedirectClassOutput) ToGvcLoadBalancerRedirectClassPtrOutput() GvcLoadBalancerRedirectClassPtrOutput {
	return o.ToGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Background())
}

func (o GvcLoadBalancerRedirectClassOutput) ToGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcLoadBalancerRedirectClass) *GvcLoadBalancerRedirectClass {
		return &v
	}).(GvcLoadBalancerRedirectClassPtrOutput)
}

func (o GvcLoadBalancerRedirectClassOutput) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancerRedirectClass] {
	return pulumix.Output[GvcLoadBalancerRedirectClass]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerRedirectClassOutput) Status5xx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GvcLoadBalancerRedirectClass) *string { return v.Status5xx }).(pulumi.StringPtrOutput)
}

type GvcLoadBalancerRedirectClassPtrOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerRedirectClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (o GvcLoadBalancerRedirectClassPtrOutput) ToGvcLoadBalancerRedirectClassPtrOutput() GvcLoadBalancerRedirectClassPtrOutput {
	return o
}

func (o GvcLoadBalancerRedirectClassPtrOutput) ToGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GvcLoadBalancerRedirectClassPtrOutput {
	return o
}

func (o GvcLoadBalancerRedirectClassPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancerRedirectClass] {
	return pulumix.Output[*GvcLoadBalancerRedirectClass]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerRedirectClassPtrOutput) Elem() GvcLoadBalancerRedirectClassOutput {
	return o.ApplyT(func(v *GvcLoadBalancerRedirectClass) GvcLoadBalancerRedirectClass {
		if v != nil {
			return *v
		}
		var ret GvcLoadBalancerRedirectClass
		return ret
	}).(GvcLoadBalancerRedirectClassOutput)
}

func (o GvcLoadBalancerRedirectClassPtrOutput) Status5xx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcLoadBalancerRedirectClass) *string {
		if v == nil {
			return nil
		}
		return v.Status5xx
	}).(pulumi.StringPtrOutput)
}

type GvcOtelTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Endpoint   string            `pulumi:"endpoint"`
	Sampling   float64           `pulumi:"sampling"`
}

// GvcOtelTracingInput is an input type that accepts GvcOtelTracingArgs and GvcOtelTracingOutput values.
// You can construct a concrete instance of `GvcOtelTracingInput` via:
//
//	GvcOtelTracingArgs{...}
type GvcOtelTracingInput interface {
	pulumi.Input

	ToGvcOtelTracingOutput() GvcOtelTracingOutput
	ToGvcOtelTracingOutputWithContext(context.Context) GvcOtelTracingOutput
}

type GvcOtelTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint   pulumi.StringInput    `pulumi:"endpoint"`
	Sampling   pulumi.Float64Input   `pulumi:"sampling"`
}

func (GvcOtelTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcOtelTracing)(nil)).Elem()
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingOutput() GvcOtelTracingOutput {
	return i.ToGvcOtelTracingOutputWithContext(context.Background())
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingOutputWithContext(ctx context.Context) GvcOtelTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcOtelTracingOutput)
}

func (i GvcOtelTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GvcOtelTracing] {
	return pulumix.Output[GvcOtelTracing]{
		OutputState: i.ToGvcOtelTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return i.ToGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcOtelTracingOutput).ToGvcOtelTracingPtrOutputWithContext(ctx)
}

// GvcOtelTracingPtrInput is an input type that accepts GvcOtelTracingArgs, GvcOtelTracingPtr and GvcOtelTracingPtrOutput values.
// You can construct a concrete instance of `GvcOtelTracingPtrInput` via:
//
//	        GvcOtelTracingArgs{...}
//
//	or:
//
//	        nil
type GvcOtelTracingPtrInput interface {
	pulumi.Input

	ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput
	ToGvcOtelTracingPtrOutputWithContext(context.Context) GvcOtelTracingPtrOutput
}

type gvcOtelTracingPtrType GvcOtelTracingArgs

func GvcOtelTracingPtr(v *GvcOtelTracingArgs) GvcOtelTracingPtrInput {
	return (*gvcOtelTracingPtrType)(v)
}

func (*gvcOtelTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcOtelTracing)(nil)).Elem()
}

func (i *gvcOtelTracingPtrType) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return i.ToGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i *gvcOtelTracingPtrType) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcOtelTracingPtrOutput)
}

func (i *gvcOtelTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcOtelTracing] {
	return pulumix.Output[*GvcOtelTracing]{
		OutputState: i.ToGvcOtelTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcOtelTracingOutput struct{ *pulumi.OutputState }

func (GvcOtelTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcOtelTracing)(nil)).Elem()
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingOutput() GvcOtelTracingOutput {
	return o
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingOutputWithContext(ctx context.Context) GvcOtelTracingOutput {
	return o
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return o.ToGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcOtelTracing) *GvcOtelTracing {
		return &v
	}).(GvcOtelTracingPtrOutput)
}

func (o GvcOtelTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GvcOtelTracing] {
	return pulumix.Output[GvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcOtelTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GvcOtelTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GvcOtelTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GvcOtelTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GvcOtelTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v GvcOtelTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type GvcOtelTracingPtrOutput struct{ *pulumi.OutputState }

func (GvcOtelTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcOtelTracing)(nil)).Elem()
}

func (o GvcOtelTracingPtrOutput) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return o
}

func (o GvcOtelTracingPtrOutput) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return o
}

func (o GvcOtelTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcOtelTracing] {
	return pulumix.Output[*GvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcOtelTracingPtrOutput) Elem() GvcOtelTracingOutput {
	return o.ApplyT(func(v *GvcOtelTracing) GvcOtelTracing {
		if v != nil {
			return *v
		}
		var ret GvcOtelTracing
		return ret
	}).(GvcOtelTracingOutput)
}

func (o GvcOtelTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GvcOtelTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GvcOtelTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcOtelTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GvcOtelTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GvcOtelTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type GvcSidecar struct {
	Envoy string `pulumi:"envoy"`
}

// GvcSidecarInput is an input type that accepts GvcSidecarArgs and GvcSidecarOutput values.
// You can construct a concrete instance of `GvcSidecarInput` via:
//
//	GvcSidecarArgs{...}
type GvcSidecarInput interface {
	pulumi.Input

	ToGvcSidecarOutput() GvcSidecarOutput
	ToGvcSidecarOutputWithContext(context.Context) GvcSidecarOutput
}

type GvcSidecarArgs struct {
	Envoy pulumi.StringInput `pulumi:"envoy"`
}

func (GvcSidecarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcSidecar)(nil)).Elem()
}

func (i GvcSidecarArgs) ToGvcSidecarOutput() GvcSidecarOutput {
	return i.ToGvcSidecarOutputWithContext(context.Background())
}

func (i GvcSidecarArgs) ToGvcSidecarOutputWithContext(ctx context.Context) GvcSidecarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcSidecarOutput)
}

func (i GvcSidecarArgs) ToOutput(ctx context.Context) pulumix.Output[GvcSidecar] {
	return pulumix.Output[GvcSidecar]{
		OutputState: i.ToGvcSidecarOutputWithContext(ctx).OutputState,
	}
}

func (i GvcSidecarArgs) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return i.ToGvcSidecarPtrOutputWithContext(context.Background())
}

func (i GvcSidecarArgs) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcSidecarOutput).ToGvcSidecarPtrOutputWithContext(ctx)
}

// GvcSidecarPtrInput is an input type that accepts GvcSidecarArgs, GvcSidecarPtr and GvcSidecarPtrOutput values.
// You can construct a concrete instance of `GvcSidecarPtrInput` via:
//
//	        GvcSidecarArgs{...}
//
//	or:
//
//	        nil
type GvcSidecarPtrInput interface {
	pulumi.Input

	ToGvcSidecarPtrOutput() GvcSidecarPtrOutput
	ToGvcSidecarPtrOutputWithContext(context.Context) GvcSidecarPtrOutput
}

type gvcSidecarPtrType GvcSidecarArgs

func GvcSidecarPtr(v *GvcSidecarArgs) GvcSidecarPtrInput {
	return (*gvcSidecarPtrType)(v)
}

func (*gvcSidecarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcSidecar)(nil)).Elem()
}

func (i *gvcSidecarPtrType) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return i.ToGvcSidecarPtrOutputWithContext(context.Background())
}

func (i *gvcSidecarPtrType) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcSidecarPtrOutput)
}

func (i *gvcSidecarPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcSidecar] {
	return pulumix.Output[*GvcSidecar]{
		OutputState: i.ToGvcSidecarPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcSidecarOutput struct{ *pulumi.OutputState }

func (GvcSidecarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcSidecar)(nil)).Elem()
}

func (o GvcSidecarOutput) ToGvcSidecarOutput() GvcSidecarOutput {
	return o
}

func (o GvcSidecarOutput) ToGvcSidecarOutputWithContext(ctx context.Context) GvcSidecarOutput {
	return o
}

func (o GvcSidecarOutput) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return o.ToGvcSidecarPtrOutputWithContext(context.Background())
}

func (o GvcSidecarOutput) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcSidecar) *GvcSidecar {
		return &v
	}).(GvcSidecarPtrOutput)
}

func (o GvcSidecarOutput) ToOutput(ctx context.Context) pulumix.Output[GvcSidecar] {
	return pulumix.Output[GvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GvcSidecarOutput) Envoy() pulumi.StringOutput {
	return o.ApplyT(func(v GvcSidecar) string { return v.Envoy }).(pulumi.StringOutput)
}

type GvcSidecarPtrOutput struct{ *pulumi.OutputState }

func (GvcSidecarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcSidecar)(nil)).Elem()
}

func (o GvcSidecarPtrOutput) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return o
}

func (o GvcSidecarPtrOutput) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return o
}

func (o GvcSidecarPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcSidecar] {
	return pulumix.Output[*GvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GvcSidecarPtrOutput) Elem() GvcSidecarOutput {
	return o.ApplyT(func(v *GvcSidecar) GvcSidecar {
		if v != nil {
			return *v
		}
		var ret GvcSidecar
		return ret
	}).(GvcSidecarOutput)
}

func (o GvcSidecarPtrOutput) Envoy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcSidecar) *string {
		if v == nil {
			return nil
		}
		return &v.Envoy
	}).(pulumi.StringPtrOutput)
}

type IdentityAwsAccessPolicy struct {
	CloudAccountLink string   `pulumi:"cloudAccountLink"`
	PolicyRefs       []string `pulumi:"policyRefs"`
	RoleName         *string  `pulumi:"roleName"`
}

// IdentityAwsAccessPolicyInput is an input type that accepts IdentityAwsAccessPolicyArgs and IdentityAwsAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityAwsAccessPolicyInput` via:
//
//	IdentityAwsAccessPolicyArgs{...}
type IdentityAwsAccessPolicyInput interface {
	pulumi.Input

	ToIdentityAwsAccessPolicyOutput() IdentityAwsAccessPolicyOutput
	ToIdentityAwsAccessPolicyOutputWithContext(context.Context) IdentityAwsAccessPolicyOutput
}

type IdentityAwsAccessPolicyArgs struct {
	CloudAccountLink pulumi.StringInput      `pulumi:"cloudAccountLink"`
	PolicyRefs       pulumi.StringArrayInput `pulumi:"policyRefs"`
	RoleName         pulumi.StringPtrInput   `pulumi:"roleName"`
}

func (IdentityAwsAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAwsAccessPolicy)(nil)).Elem()
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyOutput() IdentityAwsAccessPolicyOutput {
	return i.ToIdentityAwsAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAccessPolicyOutput)
}

func (i IdentityAwsAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityAwsAccessPolicy] {
	return pulumix.Output[IdentityAwsAccessPolicy]{
		OutputState: i.ToIdentityAwsAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return i.ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAccessPolicyOutput).ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityAwsAccessPolicyPtrInput is an input type that accepts IdentityAwsAccessPolicyArgs, IdentityAwsAccessPolicyPtr and IdentityAwsAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityAwsAccessPolicyPtrInput` via:
//
//	        IdentityAwsAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityAwsAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput
	ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Context) IdentityAwsAccessPolicyPtrOutput
}

type identityAwsAccessPolicyPtrType IdentityAwsAccessPolicyArgs

func IdentityAwsAccessPolicyPtr(v *IdentityAwsAccessPolicyArgs) IdentityAwsAccessPolicyPtrInput {
	return (*identityAwsAccessPolicyPtrType)(v)
}

func (*identityAwsAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAwsAccessPolicy)(nil)).Elem()
}

func (i *identityAwsAccessPolicyPtrType) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return i.ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityAwsAccessPolicyPtrType) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAccessPolicyPtrOutput)
}

func (i *identityAwsAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityAwsAccessPolicy] {
	return pulumix.Output[*IdentityAwsAccessPolicy]{
		OutputState: i.ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityAwsAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityAwsAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAwsAccessPolicy)(nil)).Elem()
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyOutput() IdentityAwsAccessPolicyOutput {
	return o
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyOutput {
	return o
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return o.ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityAwsAccessPolicy) *IdentityAwsAccessPolicy {
		return &v
	}).(IdentityAwsAccessPolicyPtrOutput)
}

func (o IdentityAwsAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityAwsAccessPolicy] {
	return pulumix.Output[IdentityAwsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAwsAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityAwsAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityAwsAccessPolicyOutput) PolicyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityAwsAccessPolicy) []string { return v.PolicyRefs }).(pulumi.StringArrayOutput)
}

func (o IdentityAwsAccessPolicyOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAwsAccessPolicy) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type IdentityAwsAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityAwsAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAwsAccessPolicy)(nil)).Elem()
}

func (o IdentityAwsAccessPolicyPtrOutput) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return o
}

func (o IdentityAwsAccessPolicyPtrOutput) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return o
}

func (o IdentityAwsAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityAwsAccessPolicy] {
	return pulumix.Output[*IdentityAwsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAwsAccessPolicyPtrOutput) Elem() IdentityAwsAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) IdentityAwsAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityAwsAccessPolicy
		return ret
	}).(IdentityAwsAccessPolicyOutput)
}

func (o IdentityAwsAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityAwsAccessPolicyPtrOutput) PolicyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) []string {
		if v == nil {
			return nil
		}
		return v.PolicyRefs
	}).(pulumi.StringArrayOutput)
}

func (o IdentityAwsAccessPolicyPtrOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RoleName
	}).(pulumi.StringPtrOutput)
}

type IdentityAzureAccessPolicy struct {
	CloudAccountLink string                                    `pulumi:"cloudAccountLink"`
	RoleAssignments  []IdentityAzureAccessPolicyRoleAssignment `pulumi:"roleAssignments"`
}

// IdentityAzureAccessPolicyInput is an input type that accepts IdentityAzureAccessPolicyArgs and IdentityAzureAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyInput` via:
//
//	IdentityAzureAccessPolicyArgs{...}
type IdentityAzureAccessPolicyInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyOutput() IdentityAzureAccessPolicyOutput
	ToIdentityAzureAccessPolicyOutputWithContext(context.Context) IdentityAzureAccessPolicyOutput
}

type IdentityAzureAccessPolicyArgs struct {
	CloudAccountLink pulumi.StringInput                                `pulumi:"cloudAccountLink"`
	RoleAssignments  IdentityAzureAccessPolicyRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (IdentityAzureAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicy)(nil)).Elem()
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyOutput() IdentityAzureAccessPolicyOutput {
	return i.ToIdentityAzureAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyOutput)
}

func (i IdentityAzureAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicy] {
	return pulumix.Output[IdentityAzureAccessPolicy]{
		OutputState: i.ToIdentityAzureAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return i.ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyOutput).ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityAzureAccessPolicyPtrInput is an input type that accepts IdentityAzureAccessPolicyArgs, IdentityAzureAccessPolicyPtr and IdentityAzureAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyPtrInput` via:
//
//	        IdentityAzureAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityAzureAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput
	ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Context) IdentityAzureAccessPolicyPtrOutput
}

type identityAzureAccessPolicyPtrType IdentityAzureAccessPolicyArgs

func IdentityAzureAccessPolicyPtr(v *IdentityAzureAccessPolicyArgs) IdentityAzureAccessPolicyPtrInput {
	return (*identityAzureAccessPolicyPtrType)(v)
}

func (*identityAzureAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAzureAccessPolicy)(nil)).Elem()
}

func (i *identityAzureAccessPolicyPtrType) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return i.ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityAzureAccessPolicyPtrType) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyPtrOutput)
}

func (i *identityAzureAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityAzureAccessPolicy] {
	return pulumix.Output[*IdentityAzureAccessPolicy]{
		OutputState: i.ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityAzureAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicy)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyOutput() IdentityAzureAccessPolicyOutput {
	return o
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyOutput {
	return o
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return o.ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityAzureAccessPolicy) *IdentityAzureAccessPolicy {
		return &v
	}).(IdentityAzureAccessPolicyPtrOutput)
}

func (o IdentityAzureAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicy] {
	return pulumix.Output[IdentityAzureAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityAzureAccessPolicyOutput) RoleAssignments() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicy) []IdentityAzureAccessPolicyRoleAssignment { return v.RoleAssignments }).(IdentityAzureAccessPolicyRoleAssignmentArrayOutput)
}

type IdentityAzureAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAzureAccessPolicy)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyPtrOutput) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return o
}

func (o IdentityAzureAccessPolicyPtrOutput) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return o
}

func (o IdentityAzureAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityAzureAccessPolicy] {
	return pulumix.Output[*IdentityAzureAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyPtrOutput) Elem() IdentityAzureAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityAzureAccessPolicy) IdentityAzureAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityAzureAccessPolicy
		return ret
	}).(IdentityAzureAccessPolicyOutput)
}

func (o IdentityAzureAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAzureAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityAzureAccessPolicyPtrOutput) RoleAssignments() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o.ApplyT(func(v *IdentityAzureAccessPolicy) []IdentityAzureAccessPolicyRoleAssignment {
		if v == nil {
			return nil
		}
		return v.RoleAssignments
	}).(IdentityAzureAccessPolicyRoleAssignmentArrayOutput)
}

type IdentityAzureAccessPolicyRoleAssignment struct {
	Roles []string `pulumi:"roles"`
	Scope *string  `pulumi:"scope"`
}

// IdentityAzureAccessPolicyRoleAssignmentInput is an input type that accepts IdentityAzureAccessPolicyRoleAssignmentArgs and IdentityAzureAccessPolicyRoleAssignmentOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyRoleAssignmentInput` via:
//
//	IdentityAzureAccessPolicyRoleAssignmentArgs{...}
type IdentityAzureAccessPolicyRoleAssignmentInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyRoleAssignmentOutput() IdentityAzureAccessPolicyRoleAssignmentOutput
	ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(context.Context) IdentityAzureAccessPolicyRoleAssignmentOutput
}

type IdentityAzureAccessPolicyRoleAssignmentArgs struct {
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	Scope pulumi.StringPtrInput   `pulumi:"scope"`
}

func (IdentityAzureAccessPolicyRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (i IdentityAzureAccessPolicyRoleAssignmentArgs) ToIdentityAzureAccessPolicyRoleAssignmentOutput() IdentityAzureAccessPolicyRoleAssignmentOutput {
	return i.ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyRoleAssignmentArgs) ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyRoleAssignmentOutput)
}

func (i IdentityAzureAccessPolicyRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: i.ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// IdentityAzureAccessPolicyRoleAssignmentArrayInput is an input type that accepts IdentityAzureAccessPolicyRoleAssignmentArray and IdentityAzureAccessPolicyRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyRoleAssignmentArrayInput` via:
//
//	IdentityAzureAccessPolicyRoleAssignmentArray{ IdentityAzureAccessPolicyRoleAssignmentArgs{...} }
type IdentityAzureAccessPolicyRoleAssignmentArrayInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyRoleAssignmentArrayOutput() IdentityAzureAccessPolicyRoleAssignmentArrayOutput
	ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(context.Context) IdentityAzureAccessPolicyRoleAssignmentArrayOutput
}

type IdentityAzureAccessPolicyRoleAssignmentArray []IdentityAzureAccessPolicyRoleAssignmentInput

func (IdentityAzureAccessPolicyRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (i IdentityAzureAccessPolicyRoleAssignmentArray) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutput() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return i.ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyRoleAssignmentArray) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyRoleAssignmentArrayOutput)
}

func (i IdentityAzureAccessPolicyRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: i.ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityAzureAccessPolicyRoleAssignmentOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) ToIdentityAzureAccessPolicyRoleAssignmentOutput() IdentityAzureAccessPolicyRoleAssignmentOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicyRoleAssignment) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicyRoleAssignment) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type IdentityAzureAccessPolicyRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutput() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) Index(i pulumi.IntInput) IdentityAzureAccessPolicyRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityAzureAccessPolicyRoleAssignment {
		return vs[0].([]IdentityAzureAccessPolicyRoleAssignment)[vs[1].(int)]
	}).(IdentityAzureAccessPolicyRoleAssignmentOutput)
}

type IdentityGcpAccessPolicy struct {
	Bindings         []IdentityGcpAccessPolicyBinding `pulumi:"bindings"`
	CloudAccountLink string                           `pulumi:"cloudAccountLink"`
	Scopes           *string                          `pulumi:"scopes"`
	ServiceAccount   *string                          `pulumi:"serviceAccount"`
}

// IdentityGcpAccessPolicyInput is an input type that accepts IdentityGcpAccessPolicyArgs and IdentityGcpAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyInput` via:
//
//	IdentityGcpAccessPolicyArgs{...}
type IdentityGcpAccessPolicyInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyOutput() IdentityGcpAccessPolicyOutput
	ToIdentityGcpAccessPolicyOutputWithContext(context.Context) IdentityGcpAccessPolicyOutput
}

type IdentityGcpAccessPolicyArgs struct {
	Bindings         IdentityGcpAccessPolicyBindingArrayInput `pulumi:"bindings"`
	CloudAccountLink pulumi.StringInput                       `pulumi:"cloudAccountLink"`
	Scopes           pulumi.StringPtrInput                    `pulumi:"scopes"`
	ServiceAccount   pulumi.StringPtrInput                    `pulumi:"serviceAccount"`
}

func (IdentityGcpAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicy)(nil)).Elem()
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyOutput() IdentityGcpAccessPolicyOutput {
	return i.ToIdentityGcpAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyOutput)
}

func (i IdentityGcpAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicy] {
	return pulumix.Output[IdentityGcpAccessPolicy]{
		OutputState: i.ToIdentityGcpAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return i.ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyOutput).ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityGcpAccessPolicyPtrInput is an input type that accepts IdentityGcpAccessPolicyArgs, IdentityGcpAccessPolicyPtr and IdentityGcpAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyPtrInput` via:
//
//	        IdentityGcpAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityGcpAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput
	ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Context) IdentityGcpAccessPolicyPtrOutput
}

type identityGcpAccessPolicyPtrType IdentityGcpAccessPolicyArgs

func IdentityGcpAccessPolicyPtr(v *IdentityGcpAccessPolicyArgs) IdentityGcpAccessPolicyPtrInput {
	return (*identityGcpAccessPolicyPtrType)(v)
}

func (*identityGcpAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityGcpAccessPolicy)(nil)).Elem()
}

func (i *identityGcpAccessPolicyPtrType) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return i.ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityGcpAccessPolicyPtrType) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyPtrOutput)
}

func (i *identityGcpAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityGcpAccessPolicy] {
	return pulumix.Output[*IdentityGcpAccessPolicy]{
		OutputState: i.ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityGcpAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicy)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyOutput() IdentityGcpAccessPolicyOutput {
	return o
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyOutput {
	return o
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return o.ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityGcpAccessPolicy) *IdentityGcpAccessPolicy {
		return &v
	}).(IdentityGcpAccessPolicyPtrOutput)
}

func (o IdentityGcpAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicy] {
	return pulumix.Output[IdentityGcpAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyOutput) Bindings() IdentityGcpAccessPolicyBindingArrayOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) []IdentityGcpAccessPolicyBinding { return v.Bindings }).(IdentityGcpAccessPolicyBindingArrayOutput)
}

func (o IdentityGcpAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityGcpAccessPolicyOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type IdentityGcpAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityGcpAccessPolicy)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyPtrOutput) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return o
}

func (o IdentityGcpAccessPolicyPtrOutput) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return o
}

func (o IdentityGcpAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityGcpAccessPolicy] {
	return pulumix.Output[*IdentityGcpAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyPtrOutput) Elem() IdentityGcpAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) IdentityGcpAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityGcpAccessPolicy
		return ret
	}).(IdentityGcpAccessPolicyOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) Bindings() IdentityGcpAccessPolicyBindingArrayOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) []IdentityGcpAccessPolicyBinding {
		if v == nil {
			return nil
		}
		return v.Bindings
	}).(IdentityGcpAccessPolicyBindingArrayOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

type IdentityGcpAccessPolicyBinding struct {
	Resource *string  `pulumi:"resource"`
	Roles    []string `pulumi:"roles"`
}

// IdentityGcpAccessPolicyBindingInput is an input type that accepts IdentityGcpAccessPolicyBindingArgs and IdentityGcpAccessPolicyBindingOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyBindingInput` via:
//
//	IdentityGcpAccessPolicyBindingArgs{...}
type IdentityGcpAccessPolicyBindingInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyBindingOutput() IdentityGcpAccessPolicyBindingOutput
	ToIdentityGcpAccessPolicyBindingOutputWithContext(context.Context) IdentityGcpAccessPolicyBindingOutput
}

type IdentityGcpAccessPolicyBindingArgs struct {
	Resource pulumi.StringPtrInput   `pulumi:"resource"`
	Roles    pulumi.StringArrayInput `pulumi:"roles"`
}

func (IdentityGcpAccessPolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (i IdentityGcpAccessPolicyBindingArgs) ToIdentityGcpAccessPolicyBindingOutput() IdentityGcpAccessPolicyBindingOutput {
	return i.ToIdentityGcpAccessPolicyBindingOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyBindingArgs) ToIdentityGcpAccessPolicyBindingOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyBindingOutput)
}

func (i IdentityGcpAccessPolicyBindingArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[IdentityGcpAccessPolicyBinding]{
		OutputState: i.ToIdentityGcpAccessPolicyBindingOutputWithContext(ctx).OutputState,
	}
}

// IdentityGcpAccessPolicyBindingArrayInput is an input type that accepts IdentityGcpAccessPolicyBindingArray and IdentityGcpAccessPolicyBindingArrayOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyBindingArrayInput` via:
//
//	IdentityGcpAccessPolicyBindingArray{ IdentityGcpAccessPolicyBindingArgs{...} }
type IdentityGcpAccessPolicyBindingArrayInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyBindingArrayOutput() IdentityGcpAccessPolicyBindingArrayOutput
	ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(context.Context) IdentityGcpAccessPolicyBindingArrayOutput
}

type IdentityGcpAccessPolicyBindingArray []IdentityGcpAccessPolicyBindingInput

func (IdentityGcpAccessPolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (i IdentityGcpAccessPolicyBindingArray) ToIdentityGcpAccessPolicyBindingArrayOutput() IdentityGcpAccessPolicyBindingArrayOutput {
	return i.ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyBindingArray) ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyBindingArrayOutput)
}

func (i IdentityGcpAccessPolicyBindingArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[[]IdentityGcpAccessPolicyBinding]{
		OutputState: i.ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityGcpAccessPolicyBindingOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyBindingOutput) ToIdentityGcpAccessPolicyBindingOutput() IdentityGcpAccessPolicyBindingOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingOutput) ToIdentityGcpAccessPolicyBindingOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[IdentityGcpAccessPolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyBindingOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicyBinding) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyBindingOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicyBinding) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type IdentityGcpAccessPolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) ToIdentityGcpAccessPolicyBindingArrayOutput() IdentityGcpAccessPolicyBindingArrayOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingArrayOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[[]IdentityGcpAccessPolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) Index(i pulumi.IntInput) IdentityGcpAccessPolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityGcpAccessPolicyBinding {
		return vs[0].([]IdentityGcpAccessPolicyBinding)[vs[1].(int)]
	}).(IdentityGcpAccessPolicyBindingOutput)
}

type IdentityNativeNetworkResource struct {
	AwsPrivateLink    *IdentityNativeNetworkResourceAwsPrivateLink    `pulumi:"awsPrivateLink"`
	Fqdn              string                                          `pulumi:"fqdn"`
	GcpServiceConnect *IdentityNativeNetworkResourceGcpServiceConnect `pulumi:"gcpServiceConnect"`
	Name              string                                          `pulumi:"name"`
	Ports             []int                                           `pulumi:"ports"`
}

// IdentityNativeNetworkResourceInput is an input type that accepts IdentityNativeNetworkResourceArgs and IdentityNativeNetworkResourceOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceInput` via:
//
//	IdentityNativeNetworkResourceArgs{...}
type IdentityNativeNetworkResourceInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceOutput() IdentityNativeNetworkResourceOutput
	ToIdentityNativeNetworkResourceOutputWithContext(context.Context) IdentityNativeNetworkResourceOutput
}

type IdentityNativeNetworkResourceArgs struct {
	AwsPrivateLink    IdentityNativeNetworkResourceAwsPrivateLinkPtrInput    `pulumi:"awsPrivateLink"`
	Fqdn              pulumi.StringInput                                     `pulumi:"fqdn"`
	GcpServiceConnect IdentityNativeNetworkResourceGcpServiceConnectPtrInput `pulumi:"gcpServiceConnect"`
	Name              pulumi.StringInput                                     `pulumi:"name"`
	Ports             pulumi.IntArrayInput                                   `pulumi:"ports"`
}

func (IdentityNativeNetworkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResource)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceArgs) ToIdentityNativeNetworkResourceOutput() IdentityNativeNetworkResourceOutput {
	return i.ToIdentityNativeNetworkResourceOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceArgs) ToIdentityNativeNetworkResourceOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceOutput)
}

func (i IdentityNativeNetworkResourceArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResource] {
	return pulumix.Output[IdentityNativeNetworkResource]{
		OutputState: i.ToIdentityNativeNetworkResourceOutputWithContext(ctx).OutputState,
	}
}

// IdentityNativeNetworkResourceArrayInput is an input type that accepts IdentityNativeNetworkResourceArray and IdentityNativeNetworkResourceArrayOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceArrayInput` via:
//
//	IdentityNativeNetworkResourceArray{ IdentityNativeNetworkResourceArgs{...} }
type IdentityNativeNetworkResourceArrayInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceArrayOutput() IdentityNativeNetworkResourceArrayOutput
	ToIdentityNativeNetworkResourceArrayOutputWithContext(context.Context) IdentityNativeNetworkResourceArrayOutput
}

type IdentityNativeNetworkResourceArray []IdentityNativeNetworkResourceInput

func (IdentityNativeNetworkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNativeNetworkResource)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceArray) ToIdentityNativeNetworkResourceArrayOutput() IdentityNativeNetworkResourceArrayOutput {
	return i.ToIdentityNativeNetworkResourceArrayOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceArray) ToIdentityNativeNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceArrayOutput)
}

func (i IdentityNativeNetworkResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNativeNetworkResource] {
	return pulumix.Output[[]IdentityNativeNetworkResource]{
		OutputState: i.ToIdentityNativeNetworkResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityNativeNetworkResourceOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResource)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceOutput) ToIdentityNativeNetworkResourceOutput() IdentityNativeNetworkResourceOutput {
	return o
}

func (o IdentityNativeNetworkResourceOutput) ToIdentityNativeNetworkResourceOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceOutput {
	return o
}

func (o IdentityNativeNetworkResourceOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResource] {
	return pulumix.Output[IdentityNativeNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceOutput) AwsPrivateLink() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) *IdentityNativeNetworkResourceAwsPrivateLink {
		return v.AwsPrivateLink
	}).(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput)
}

func (o IdentityNativeNetworkResourceOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) string { return v.Fqdn }).(pulumi.StringOutput)
}

func (o IdentityNativeNetworkResourceOutput) GcpServiceConnect() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) *IdentityNativeNetworkResourceGcpServiceConnect {
		return v.GcpServiceConnect
	}).(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput)
}

func (o IdentityNativeNetworkResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) string { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityNativeNetworkResourceOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type IdentityNativeNetworkResourceArrayOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNativeNetworkResource)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceArrayOutput) ToIdentityNativeNetworkResourceArrayOutput() IdentityNativeNetworkResourceArrayOutput {
	return o
}

func (o IdentityNativeNetworkResourceArrayOutput) ToIdentityNativeNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceArrayOutput {
	return o
}

func (o IdentityNativeNetworkResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNativeNetworkResource] {
	return pulumix.Output[[]IdentityNativeNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceArrayOutput) Index(i pulumi.IntInput) IdentityNativeNetworkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityNativeNetworkResource {
		return vs[0].([]IdentityNativeNetworkResource)[vs[1].(int)]
	}).(IdentityNativeNetworkResourceOutput)
}

type IdentityNativeNetworkResourceAwsPrivateLink struct {
	EndpointServiceName string `pulumi:"endpointServiceName"`
}

// IdentityNativeNetworkResourceAwsPrivateLinkInput is an input type that accepts IdentityNativeNetworkResourceAwsPrivateLinkArgs and IdentityNativeNetworkResourceAwsPrivateLinkOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceAwsPrivateLinkInput` via:
//
//	IdentityNativeNetworkResourceAwsPrivateLinkArgs{...}
type IdentityNativeNetworkResourceAwsPrivateLinkInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceAwsPrivateLinkOutput() IdentityNativeNetworkResourceAwsPrivateLinkOutput
	ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(context.Context) IdentityNativeNetworkResourceAwsPrivateLinkOutput
}

type IdentityNativeNetworkResourceAwsPrivateLinkArgs struct {
	EndpointServiceName pulumi.StringInput `pulumi:"endpointServiceName"`
}

func (IdentityNativeNetworkResourceAwsPrivateLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkOutput() IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return i.ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceAwsPrivateLinkOutput)
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: i.ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return i.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceAwsPrivateLinkOutput).ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx)
}

// IdentityNativeNetworkResourceAwsPrivateLinkPtrInput is an input type that accepts IdentityNativeNetworkResourceAwsPrivateLinkArgs, IdentityNativeNetworkResourceAwsPrivateLinkPtr and IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceAwsPrivateLinkPtrInput` via:
//
//	        IdentityNativeNetworkResourceAwsPrivateLinkArgs{...}
//
//	or:
//
//	        nil
type IdentityNativeNetworkResourceAwsPrivateLinkPtrInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput
	ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput
}

type identityNativeNetworkResourceAwsPrivateLinkPtrType IdentityNativeNetworkResourceAwsPrivateLinkArgs

func IdentityNativeNetworkResourceAwsPrivateLinkPtr(v *IdentityNativeNetworkResourceAwsPrivateLinkArgs) IdentityNativeNetworkResourceAwsPrivateLinkPtrInput {
	return (*identityNativeNetworkResourceAwsPrivateLinkPtrType)(v)
}

func (*identityNativeNetworkResourceAwsPrivateLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (i *identityNativeNetworkResourceAwsPrivateLinkPtrType) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return i.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Background())
}

func (i *identityNativeNetworkResourceAwsPrivateLinkPtrType) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput)
}

func (i *identityNativeNetworkResourceAwsPrivateLinkPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: i.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNativeNetworkResourceAwsPrivateLinkOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceAwsPrivateLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkOutput() IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Background())
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNativeNetworkResourceAwsPrivateLink) *IdentityNativeNetworkResourceAwsPrivateLink {
		return &v
	}).(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput)
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) EndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResourceAwsPrivateLink) string { return v.EndpointServiceName }).(pulumi.StringOutput)
}

type IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) Elem() IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceAwsPrivateLink) IdentityNativeNetworkResourceAwsPrivateLink {
		if v != nil {
			return *v
		}
		var ret IdentityNativeNetworkResourceAwsPrivateLink
		return ret
	}).(IdentityNativeNetworkResourceAwsPrivateLinkOutput)
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) EndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceAwsPrivateLink) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointServiceName
	}).(pulumi.StringPtrOutput)
}

type IdentityNativeNetworkResourceGcpServiceConnect struct {
	TargetService string `pulumi:"targetService"`
}

// IdentityNativeNetworkResourceGcpServiceConnectInput is an input type that accepts IdentityNativeNetworkResourceGcpServiceConnectArgs and IdentityNativeNetworkResourceGcpServiceConnectOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceGcpServiceConnectInput` via:
//
//	IdentityNativeNetworkResourceGcpServiceConnectArgs{...}
type IdentityNativeNetworkResourceGcpServiceConnectInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceGcpServiceConnectOutput() IdentityNativeNetworkResourceGcpServiceConnectOutput
	ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(context.Context) IdentityNativeNetworkResourceGcpServiceConnectOutput
}

type IdentityNativeNetworkResourceGcpServiceConnectArgs struct {
	TargetService pulumi.StringInput `pulumi:"targetService"`
}

func (IdentityNativeNetworkResourceGcpServiceConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectOutput() IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return i.ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceGcpServiceConnectOutput)
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: i.ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return i.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceGcpServiceConnectOutput).ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx)
}

// IdentityNativeNetworkResourceGcpServiceConnectPtrInput is an input type that accepts IdentityNativeNetworkResourceGcpServiceConnectArgs, IdentityNativeNetworkResourceGcpServiceConnectPtr and IdentityNativeNetworkResourceGcpServiceConnectPtrOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceGcpServiceConnectPtrInput` via:
//
//	        IdentityNativeNetworkResourceGcpServiceConnectArgs{...}
//
//	or:
//
//	        nil
type IdentityNativeNetworkResourceGcpServiceConnectPtrInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput
	ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput
}

type identityNativeNetworkResourceGcpServiceConnectPtrType IdentityNativeNetworkResourceGcpServiceConnectArgs

func IdentityNativeNetworkResourceGcpServiceConnectPtr(v *IdentityNativeNetworkResourceGcpServiceConnectArgs) IdentityNativeNetworkResourceGcpServiceConnectPtrInput {
	return (*identityNativeNetworkResourceGcpServiceConnectPtrType)(v)
}

func (*identityNativeNetworkResourceGcpServiceConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (i *identityNativeNetworkResourceGcpServiceConnectPtrType) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return i.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Background())
}

func (i *identityNativeNetworkResourceGcpServiceConnectPtrType) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput)
}

func (i *identityNativeNetworkResourceGcpServiceConnectPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: i.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNativeNetworkResourceGcpServiceConnectOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceGcpServiceConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectOutput() IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Background())
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNativeNetworkResourceGcpServiceConnect) *IdentityNativeNetworkResourceGcpServiceConnect {
		return &v
	}).(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput)
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) TargetService() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResourceGcpServiceConnect) string { return v.TargetService }).(pulumi.StringOutput)
}

type IdentityNativeNetworkResourceGcpServiceConnectPtrOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) Elem() IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceGcpServiceConnect) IdentityNativeNetworkResourceGcpServiceConnect {
		if v != nil {
			return *v
		}
		var ret IdentityNativeNetworkResourceGcpServiceConnect
		return ret
	}).(IdentityNativeNetworkResourceGcpServiceConnectOutput)
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) TargetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceGcpServiceConnect) *string {
		if v == nil {
			return nil
		}
		return &v.TargetService
	}).(pulumi.StringPtrOutput)
}

type IdentityNetworkResource struct {
	AgentLink  string   `pulumi:"agentLink"`
	Fqdn       *string  `pulumi:"fqdn"`
	Ips        []string `pulumi:"ips"`
	Name       string   `pulumi:"name"`
	Ports      []int    `pulumi:"ports"`
	ResolverIp *string  `pulumi:"resolverIp"`
}

// IdentityNetworkResourceInput is an input type that accepts IdentityNetworkResourceArgs and IdentityNetworkResourceOutput values.
// You can construct a concrete instance of `IdentityNetworkResourceInput` via:
//
//	IdentityNetworkResourceArgs{...}
type IdentityNetworkResourceInput interface {
	pulumi.Input

	ToIdentityNetworkResourceOutput() IdentityNetworkResourceOutput
	ToIdentityNetworkResourceOutputWithContext(context.Context) IdentityNetworkResourceOutput
}

type IdentityNetworkResourceArgs struct {
	AgentLink  pulumi.StringInput      `pulumi:"agentLink"`
	Fqdn       pulumi.StringPtrInput   `pulumi:"fqdn"`
	Ips        pulumi.StringArrayInput `pulumi:"ips"`
	Name       pulumi.StringInput      `pulumi:"name"`
	Ports      pulumi.IntArrayInput    `pulumi:"ports"`
	ResolverIp pulumi.StringPtrInput   `pulumi:"resolverIp"`
}

func (IdentityNetworkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNetworkResource)(nil)).Elem()
}

func (i IdentityNetworkResourceArgs) ToIdentityNetworkResourceOutput() IdentityNetworkResourceOutput {
	return i.ToIdentityNetworkResourceOutputWithContext(context.Background())
}

func (i IdentityNetworkResourceArgs) ToIdentityNetworkResourceOutputWithContext(ctx context.Context) IdentityNetworkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkResourceOutput)
}

func (i IdentityNetworkResourceArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNetworkResource] {
	return pulumix.Output[IdentityNetworkResource]{
		OutputState: i.ToIdentityNetworkResourceOutputWithContext(ctx).OutputState,
	}
}

// IdentityNetworkResourceArrayInput is an input type that accepts IdentityNetworkResourceArray and IdentityNetworkResourceArrayOutput values.
// You can construct a concrete instance of `IdentityNetworkResourceArrayInput` via:
//
//	IdentityNetworkResourceArray{ IdentityNetworkResourceArgs{...} }
type IdentityNetworkResourceArrayInput interface {
	pulumi.Input

	ToIdentityNetworkResourceArrayOutput() IdentityNetworkResourceArrayOutput
	ToIdentityNetworkResourceArrayOutputWithContext(context.Context) IdentityNetworkResourceArrayOutput
}

type IdentityNetworkResourceArray []IdentityNetworkResourceInput

func (IdentityNetworkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNetworkResource)(nil)).Elem()
}

func (i IdentityNetworkResourceArray) ToIdentityNetworkResourceArrayOutput() IdentityNetworkResourceArrayOutput {
	return i.ToIdentityNetworkResourceArrayOutputWithContext(context.Background())
}

func (i IdentityNetworkResourceArray) ToIdentityNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNetworkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkResourceArrayOutput)
}

func (i IdentityNetworkResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNetworkResource] {
	return pulumix.Output[[]IdentityNetworkResource]{
		OutputState: i.ToIdentityNetworkResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityNetworkResourceOutput struct{ *pulumi.OutputState }

func (IdentityNetworkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNetworkResource)(nil)).Elem()
}

func (o IdentityNetworkResourceOutput) ToIdentityNetworkResourceOutput() IdentityNetworkResourceOutput {
	return o
}

func (o IdentityNetworkResourceOutput) ToIdentityNetworkResourceOutputWithContext(ctx context.Context) IdentityNetworkResourceOutput {
	return o
}

func (o IdentityNetworkResourceOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNetworkResource] {
	return pulumix.Output[IdentityNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNetworkResourceOutput) AgentLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNetworkResource) string { return v.AgentLink }).(pulumi.StringOutput)
}

func (o IdentityNetworkResourceOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityNetworkResource) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

func (o IdentityNetworkResourceOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNetworkResource) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o IdentityNetworkResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNetworkResource) string { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityNetworkResourceOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IdentityNetworkResource) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o IdentityNetworkResourceOutput) ResolverIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityNetworkResource) *string { return v.ResolverIp }).(pulumi.StringPtrOutput)
}

type IdentityNetworkResourceArrayOutput struct{ *pulumi.OutputState }

func (IdentityNetworkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNetworkResource)(nil)).Elem()
}

func (o IdentityNetworkResourceArrayOutput) ToIdentityNetworkResourceArrayOutput() IdentityNetworkResourceArrayOutput {
	return o
}

func (o IdentityNetworkResourceArrayOutput) ToIdentityNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNetworkResourceArrayOutput {
	return o
}

func (o IdentityNetworkResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNetworkResource] {
	return pulumix.Output[[]IdentityNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNetworkResourceArrayOutput) Index(i pulumi.IntInput) IdentityNetworkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityNetworkResource {
		return vs[0].([]IdentityNetworkResource)[vs[1].(int)]
	}).(IdentityNetworkResourceOutput)
}

type IdentityNgsAccessPolicy struct {
	CloudAccountLink string                       `pulumi:"cloudAccountLink"`
	Data             *int                         `pulumi:"data"`
	Payload          *int                         `pulumi:"payload"`
	Pub              *IdentityNgsAccessPolicyPub  `pulumi:"pub"`
	Resp             *IdentityNgsAccessPolicyResp `pulumi:"resp"`
	Sub              *IdentityNgsAccessPolicySub  `pulumi:"sub"`
	Subs             *int                         `pulumi:"subs"`
}

// IdentityNgsAccessPolicyInput is an input type that accepts IdentityNgsAccessPolicyArgs and IdentityNgsAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyInput` via:
//
//	IdentityNgsAccessPolicyArgs{...}
type IdentityNgsAccessPolicyInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyOutput() IdentityNgsAccessPolicyOutput
	ToIdentityNgsAccessPolicyOutputWithContext(context.Context) IdentityNgsAccessPolicyOutput
}

type IdentityNgsAccessPolicyArgs struct {
	CloudAccountLink pulumi.StringInput                  `pulumi:"cloudAccountLink"`
	Data             pulumi.IntPtrInput                  `pulumi:"data"`
	Payload          pulumi.IntPtrInput                  `pulumi:"payload"`
	Pub              IdentityNgsAccessPolicyPubPtrInput  `pulumi:"pub"`
	Resp             IdentityNgsAccessPolicyRespPtrInput `pulumi:"resp"`
	Sub              IdentityNgsAccessPolicySubPtrInput  `pulumi:"sub"`
	Subs             pulumi.IntPtrInput                  `pulumi:"subs"`
}

func (IdentityNgsAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicy)(nil)).Elem()
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyOutput() IdentityNgsAccessPolicyOutput {
	return i.ToIdentityNgsAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyOutput)
}

func (i IdentityNgsAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicy] {
	return pulumix.Output[IdentityNgsAccessPolicy]{
		OutputState: i.ToIdentityNgsAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return i.ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyOutput).ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicyPtrInput is an input type that accepts IdentityNgsAccessPolicyArgs, IdentityNgsAccessPolicyPtr and IdentityNgsAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyPtrInput` via:
//
//	        IdentityNgsAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput
	ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Context) IdentityNgsAccessPolicyPtrOutput
}

type identityNgsAccessPolicyPtrType IdentityNgsAccessPolicyArgs

func IdentityNgsAccessPolicyPtr(v *IdentityNgsAccessPolicyArgs) IdentityNgsAccessPolicyPtrInput {
	return (*identityNgsAccessPolicyPtrType)(v)
}

func (*identityNgsAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicy)(nil)).Elem()
}

func (i *identityNgsAccessPolicyPtrType) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return i.ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicyPtrType) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPtrOutput)
}

func (i *identityNgsAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicy] {
	return pulumix.Output[*IdentityNgsAccessPolicy]{
		OutputState: i.ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicy)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyOutput() IdentityNgsAccessPolicyOutput {
	return o
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyOutput {
	return o
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return o.ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicy {
		return &v
	}).(IdentityNgsAccessPolicyPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicy] {
	return pulumix.Output[IdentityNgsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityNgsAccessPolicyOutput) Data() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *int { return v.Data }).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Payload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *int { return v.Payload }).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Pub() IdentityNgsAccessPolicyPubPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyPub { return v.Pub }).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Resp() IdentityNgsAccessPolicyRespPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyResp { return v.Resp }).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Sub() IdentityNgsAccessPolicySubPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicySub { return v.Sub }).(IdentityNgsAccessPolicySubPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Subs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *int { return v.Subs }).(pulumi.IntPtrOutput)
}

type IdentityNgsAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicy)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyPtrOutput) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPtrOutput) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicy] {
	return pulumix.Output[*IdentityNgsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyPtrOutput) Elem() IdentityNgsAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) IdentityNgsAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicy
		return ret
	}).(IdentityNgsAccessPolicyOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Data() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Payload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Pub() IdentityNgsAccessPolicyPubPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyPub {
		if v == nil {
			return nil
		}
		return v.Pub
	}).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Resp() IdentityNgsAccessPolicyRespPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyResp {
		if v == nil {
			return nil
		}
		return v.Resp
	}).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Sub() IdentityNgsAccessPolicySubPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *IdentityNgsAccessPolicySub {
		if v == nil {
			return nil
		}
		return v.Sub
	}).(IdentityNgsAccessPolicySubPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Subs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Subs
	}).(pulumi.IntPtrOutput)
}

type IdentityNgsAccessPolicyPub struct {
	Allows []string `pulumi:"allows"`
	Denies []string `pulumi:"denies"`
}

// IdentityNgsAccessPolicyPubInput is an input type that accepts IdentityNgsAccessPolicyPubArgs and IdentityNgsAccessPolicyPubOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyPubInput` via:
//
//	IdentityNgsAccessPolicyPubArgs{...}
type IdentityNgsAccessPolicyPubInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyPubOutput() IdentityNgsAccessPolicyPubOutput
	ToIdentityNgsAccessPolicyPubOutputWithContext(context.Context) IdentityNgsAccessPolicyPubOutput
}

type IdentityNgsAccessPolicyPubArgs struct {
	Allows pulumi.StringArrayInput `pulumi:"allows"`
	Denies pulumi.StringArrayInput `pulumi:"denies"`
}

func (IdentityNgsAccessPolicyPubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubOutput() IdentityNgsAccessPolicyPubOutput {
	return i.ToIdentityNgsAccessPolicyPubOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPubOutput)
}

func (i IdentityNgsAccessPolicyPubArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyPub] {
	return pulumix.Output[IdentityNgsAccessPolicyPub]{
		OutputState: i.ToIdentityNgsAccessPolicyPubOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return i.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPubOutput).ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicyPubPtrInput is an input type that accepts IdentityNgsAccessPolicyPubArgs, IdentityNgsAccessPolicyPubPtr and IdentityNgsAccessPolicyPubPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyPubPtrInput` via:
//
//	        IdentityNgsAccessPolicyPubArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicyPubPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput
	ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Context) IdentityNgsAccessPolicyPubPtrOutput
}

type identityNgsAccessPolicyPubPtrType IdentityNgsAccessPolicyPubArgs

func IdentityNgsAccessPolicyPubPtr(v *IdentityNgsAccessPolicyPubArgs) IdentityNgsAccessPolicyPubPtrInput {
	return (*identityNgsAccessPolicyPubPtrType)(v)
}

func (*identityNgsAccessPolicyPubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (i *identityNgsAccessPolicyPubPtrType) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return i.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicyPubPtrType) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (i *identityNgsAccessPolicyPubPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyPub] {
	return pulumix.Output[*IdentityNgsAccessPolicyPub]{
		OutputState: i.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicyPubOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyPubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubOutput() IdentityNgsAccessPolicyPubOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return o.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicyPub) *IdentityNgsAccessPolicyPub {
		return &v
	}).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (o IdentityNgsAccessPolicyPubOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyPub] {
	return pulumix.Output[IdentityNgsAccessPolicyPub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyPubOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyPub) []string { return v.Allows }).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicyPubOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyPub) []string { return v.Denies }).(pulumi.StringArrayOutput)
}

type IdentityNgsAccessPolicyPubPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyPubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyPubPtrOutput) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubPtrOutput) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyPub] {
	return pulumix.Output[*IdentityNgsAccessPolicyPub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyPubPtrOutput) Elem() IdentityNgsAccessPolicyPubOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyPub) IdentityNgsAccessPolicyPub {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicyPub
		return ret
	}).(IdentityNgsAccessPolicyPubOutput)
}

func (o IdentityNgsAccessPolicyPubPtrOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyPub) []string {
		if v == nil {
			return nil
		}
		return v.Allows
	}).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicyPubPtrOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyPub) []string {
		if v == nil {
			return nil
		}
		return v.Denies
	}).(pulumi.StringArrayOutput)
}

type IdentityNgsAccessPolicyResp struct {
	Max *int    `pulumi:"max"`
	Ttl *string `pulumi:"ttl"`
}

// IdentityNgsAccessPolicyRespInput is an input type that accepts IdentityNgsAccessPolicyRespArgs and IdentityNgsAccessPolicyRespOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyRespInput` via:
//
//	IdentityNgsAccessPolicyRespArgs{...}
type IdentityNgsAccessPolicyRespInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyRespOutput() IdentityNgsAccessPolicyRespOutput
	ToIdentityNgsAccessPolicyRespOutputWithContext(context.Context) IdentityNgsAccessPolicyRespOutput
}

type IdentityNgsAccessPolicyRespArgs struct {
	Max pulumi.IntPtrInput    `pulumi:"max"`
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (IdentityNgsAccessPolicyRespArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespOutput() IdentityNgsAccessPolicyRespOutput {
	return i.ToIdentityNgsAccessPolicyRespOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyRespOutput)
}

func (i IdentityNgsAccessPolicyRespArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyResp] {
	return pulumix.Output[IdentityNgsAccessPolicyResp]{
		OutputState: i.ToIdentityNgsAccessPolicyRespOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return i.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyRespOutput).ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicyRespPtrInput is an input type that accepts IdentityNgsAccessPolicyRespArgs, IdentityNgsAccessPolicyRespPtr and IdentityNgsAccessPolicyRespPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyRespPtrInput` via:
//
//	        IdentityNgsAccessPolicyRespArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicyRespPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput
	ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Context) IdentityNgsAccessPolicyRespPtrOutput
}

type identityNgsAccessPolicyRespPtrType IdentityNgsAccessPolicyRespArgs

func IdentityNgsAccessPolicyRespPtr(v *IdentityNgsAccessPolicyRespArgs) IdentityNgsAccessPolicyRespPtrInput {
	return (*identityNgsAccessPolicyRespPtrType)(v)
}

func (*identityNgsAccessPolicyRespPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (i *identityNgsAccessPolicyRespPtrType) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return i.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicyRespPtrType) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (i *identityNgsAccessPolicyRespPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyResp] {
	return pulumix.Output[*IdentityNgsAccessPolicyResp]{
		OutputState: i.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicyRespOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyRespOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespOutput() IdentityNgsAccessPolicyRespOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return o.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicyResp) *IdentityNgsAccessPolicyResp {
		return &v
	}).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (o IdentityNgsAccessPolicyRespOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyResp] {
	return pulumix.Output[IdentityNgsAccessPolicyResp]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyRespOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyResp) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyRespOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyResp) *string { return v.Ttl }).(pulumi.StringPtrOutput)
}

type IdentityNgsAccessPolicyRespPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyRespPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyRespPtrOutput) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespPtrOutput) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyResp] {
	return pulumix.Output[*IdentityNgsAccessPolicyResp]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyRespPtrOutput) Elem() IdentityNgsAccessPolicyRespOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyResp) IdentityNgsAccessPolicyResp {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicyResp
		return ret
	}).(IdentityNgsAccessPolicyRespOutput)
}

func (o IdentityNgsAccessPolicyRespPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyResp) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyRespPtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyResp) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type IdentityNgsAccessPolicySub struct {
	Allows []string `pulumi:"allows"`
	Denies []string `pulumi:"denies"`
}

// IdentityNgsAccessPolicySubInput is an input type that accepts IdentityNgsAccessPolicySubArgs and IdentityNgsAccessPolicySubOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicySubInput` via:
//
//	IdentityNgsAccessPolicySubArgs{...}
type IdentityNgsAccessPolicySubInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicySubOutput() IdentityNgsAccessPolicySubOutput
	ToIdentityNgsAccessPolicySubOutputWithContext(context.Context) IdentityNgsAccessPolicySubOutput
}

type IdentityNgsAccessPolicySubArgs struct {
	Allows pulumi.StringArrayInput `pulumi:"allows"`
	Denies pulumi.StringArrayInput `pulumi:"denies"`
}

func (IdentityNgsAccessPolicySubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubOutput() IdentityNgsAccessPolicySubOutput {
	return i.ToIdentityNgsAccessPolicySubOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicySubOutput)
}

func (i IdentityNgsAccessPolicySubArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicySub] {
	return pulumix.Output[IdentityNgsAccessPolicySub]{
		OutputState: i.ToIdentityNgsAccessPolicySubOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return i.ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicySubOutput).ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicySubPtrInput is an input type that accepts IdentityNgsAccessPolicySubArgs, IdentityNgsAccessPolicySubPtr and IdentityNgsAccessPolicySubPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicySubPtrInput` via:
//
//	        IdentityNgsAccessPolicySubArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicySubPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput
	ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Context) IdentityNgsAccessPolicySubPtrOutput
}

type identityNgsAccessPolicySubPtrType IdentityNgsAccessPolicySubArgs

func IdentityNgsAccessPolicySubPtr(v *IdentityNgsAccessPolicySubArgs) IdentityNgsAccessPolicySubPtrInput {
	return (*identityNgsAccessPolicySubPtrType)(v)
}

func (*identityNgsAccessPolicySubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (i *identityNgsAccessPolicySubPtrType) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return i.ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicySubPtrType) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicySubPtrOutput)
}

func (i *identityNgsAccessPolicySubPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicySub] {
	return pulumix.Output[*IdentityNgsAccessPolicySub]{
		OutputState: i.ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicySubOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicySubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubOutput() IdentityNgsAccessPolicySubOutput {
	return o
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubOutput {
	return o
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return o.ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicySub) *IdentityNgsAccessPolicySub {
		return &v
	}).(IdentityNgsAccessPolicySubPtrOutput)
}

func (o IdentityNgsAccessPolicySubOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicySub] {
	return pulumix.Output[IdentityNgsAccessPolicySub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicySubOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicySub) []string { return v.Allows }).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicySubOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicySub) []string { return v.Denies }).(pulumi.StringArrayOutput)
}

type IdentityNgsAccessPolicySubPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicySubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicySubPtrOutput) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicySubPtrOutput) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicySubPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicySub] {
	return pulumix.Output[*IdentityNgsAccessPolicySub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicySubPtrOutput) Elem() IdentityNgsAccessPolicySubOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicySub) IdentityNgsAccessPolicySub {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicySub
		return ret
	}).(IdentityNgsAccessPolicySubOutput)
}

func (o IdentityNgsAccessPolicySubPtrOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicySub) []string {
		if v == nil {
			return nil
		}
		return v.Allows
	}).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicySubPtrOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicySub) []string {
		if v == nil {
			return nil
		}
		return v.Denies
	}).(pulumi.StringArrayOutput)
}

type IpSetLocation struct {
	Name            string `pulumi:"name"`
	RetentionPolicy string `pulumi:"retentionPolicy"`
}

// IpSetLocationInput is an input type that accepts IpSetLocationArgs and IpSetLocationOutput values.
// You can construct a concrete instance of `IpSetLocationInput` via:
//
//	IpSetLocationArgs{...}
type IpSetLocationInput interface {
	pulumi.Input

	ToIpSetLocationOutput() IpSetLocationOutput
	ToIpSetLocationOutputWithContext(context.Context) IpSetLocationOutput
}

type IpSetLocationArgs struct {
	Name            pulumi.StringInput `pulumi:"name"`
	RetentionPolicy pulumi.StringInput `pulumi:"retentionPolicy"`
}

func (IpSetLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetLocation)(nil)).Elem()
}

func (i IpSetLocationArgs) ToIpSetLocationOutput() IpSetLocationOutput {
	return i.ToIpSetLocationOutputWithContext(context.Background())
}

func (i IpSetLocationArgs) ToIpSetLocationOutputWithContext(ctx context.Context) IpSetLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetLocationOutput)
}

func (i IpSetLocationArgs) ToOutput(ctx context.Context) pulumix.Output[IpSetLocation] {
	return pulumix.Output[IpSetLocation]{
		OutputState: i.ToIpSetLocationOutputWithContext(ctx).OutputState,
	}
}

// IpSetLocationArrayInput is an input type that accepts IpSetLocationArray and IpSetLocationArrayOutput values.
// You can construct a concrete instance of `IpSetLocationArrayInput` via:
//
//	IpSetLocationArray{ IpSetLocationArgs{...} }
type IpSetLocationArrayInput interface {
	pulumi.Input

	ToIpSetLocationArrayOutput() IpSetLocationArrayOutput
	ToIpSetLocationArrayOutputWithContext(context.Context) IpSetLocationArrayOutput
}

type IpSetLocationArray []IpSetLocationInput

func (IpSetLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetLocation)(nil)).Elem()
}

func (i IpSetLocationArray) ToIpSetLocationArrayOutput() IpSetLocationArrayOutput {
	return i.ToIpSetLocationArrayOutputWithContext(context.Background())
}

func (i IpSetLocationArray) ToIpSetLocationArrayOutputWithContext(ctx context.Context) IpSetLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetLocationArrayOutput)
}

func (i IpSetLocationArray) ToOutput(ctx context.Context) pulumix.Output[[]IpSetLocation] {
	return pulumix.Output[[]IpSetLocation]{
		OutputState: i.ToIpSetLocationArrayOutputWithContext(ctx).OutputState,
	}
}

type IpSetLocationOutput struct{ *pulumi.OutputState }

func (IpSetLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetLocation)(nil)).Elem()
}

func (o IpSetLocationOutput) ToIpSetLocationOutput() IpSetLocationOutput {
	return o
}

func (o IpSetLocationOutput) ToIpSetLocationOutputWithContext(ctx context.Context) IpSetLocationOutput {
	return o
}

func (o IpSetLocationOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetLocation] {
	return pulumix.Output[IpSetLocation]{
		OutputState: o.OutputState,
	}
}

func (o IpSetLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetLocation) string { return v.Name }).(pulumi.StringOutput)
}

func (o IpSetLocationOutput) RetentionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetLocation) string { return v.RetentionPolicy }).(pulumi.StringOutput)
}

type IpSetLocationArrayOutput struct{ *pulumi.OutputState }

func (IpSetLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetLocation)(nil)).Elem()
}

func (o IpSetLocationArrayOutput) ToIpSetLocationArrayOutput() IpSetLocationArrayOutput {
	return o
}

func (o IpSetLocationArrayOutput) ToIpSetLocationArrayOutputWithContext(ctx context.Context) IpSetLocationArrayOutput {
	return o
}

func (o IpSetLocationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IpSetLocation] {
	return pulumix.Output[[]IpSetLocation]{
		OutputState: o.OutputState,
	}
}

func (o IpSetLocationArrayOutput) Index(i pulumi.IntInput) IpSetLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSetLocation {
		return vs[0].([]IpSetLocation)[vs[1].(int)]
	}).(IpSetLocationOutput)
}

type IpSetStatus struct {
	Error       *string                `pulumi:"error"`
	IpAddresses []IpSetStatusIpAddress `pulumi:"ipAddresses"`
}

// IpSetStatusInput is an input type that accepts IpSetStatusArgs and IpSetStatusOutput values.
// You can construct a concrete instance of `IpSetStatusInput` via:
//
//	IpSetStatusArgs{...}
type IpSetStatusInput interface {
	pulumi.Input

	ToIpSetStatusOutput() IpSetStatusOutput
	ToIpSetStatusOutputWithContext(context.Context) IpSetStatusOutput
}

type IpSetStatusArgs struct {
	Error       pulumi.StringPtrInput          `pulumi:"error"`
	IpAddresses IpSetStatusIpAddressArrayInput `pulumi:"ipAddresses"`
}

func (IpSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetStatus)(nil)).Elem()
}

func (i IpSetStatusArgs) ToIpSetStatusOutput() IpSetStatusOutput {
	return i.ToIpSetStatusOutputWithContext(context.Background())
}

func (i IpSetStatusArgs) ToIpSetStatusOutputWithContext(ctx context.Context) IpSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetStatusOutput)
}

func (i IpSetStatusArgs) ToOutput(ctx context.Context) pulumix.Output[IpSetStatus] {
	return pulumix.Output[IpSetStatus]{
		OutputState: i.ToIpSetStatusOutputWithContext(ctx).OutputState,
	}
}

// IpSetStatusArrayInput is an input type that accepts IpSetStatusArray and IpSetStatusArrayOutput values.
// You can construct a concrete instance of `IpSetStatusArrayInput` via:
//
//	IpSetStatusArray{ IpSetStatusArgs{...} }
type IpSetStatusArrayInput interface {
	pulumi.Input

	ToIpSetStatusArrayOutput() IpSetStatusArrayOutput
	ToIpSetStatusArrayOutputWithContext(context.Context) IpSetStatusArrayOutput
}

type IpSetStatusArray []IpSetStatusInput

func (IpSetStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetStatus)(nil)).Elem()
}

func (i IpSetStatusArray) ToIpSetStatusArrayOutput() IpSetStatusArrayOutput {
	return i.ToIpSetStatusArrayOutputWithContext(context.Background())
}

func (i IpSetStatusArray) ToIpSetStatusArrayOutputWithContext(ctx context.Context) IpSetStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetStatusArrayOutput)
}

func (i IpSetStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]IpSetStatus] {
	return pulumix.Output[[]IpSetStatus]{
		OutputState: i.ToIpSetStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type IpSetStatusOutput struct{ *pulumi.OutputState }

func (IpSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetStatus)(nil)).Elem()
}

func (o IpSetStatusOutput) ToIpSetStatusOutput() IpSetStatusOutput {
	return o
}

func (o IpSetStatusOutput) ToIpSetStatusOutputWithContext(ctx context.Context) IpSetStatusOutput {
	return o
}

func (o IpSetStatusOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetStatus] {
	return pulumix.Output[IpSetStatus]{
		OutputState: o.OutputState,
	}
}

func (o IpSetStatusOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSetStatus) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o IpSetStatusOutput) IpAddresses() IpSetStatusIpAddressArrayOutput {
	return o.ApplyT(func(v IpSetStatus) []IpSetStatusIpAddress { return v.IpAddresses }).(IpSetStatusIpAddressArrayOutput)
}

type IpSetStatusArrayOutput struct{ *pulumi.OutputState }

func (IpSetStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetStatus)(nil)).Elem()
}

func (o IpSetStatusArrayOutput) ToIpSetStatusArrayOutput() IpSetStatusArrayOutput {
	return o
}

func (o IpSetStatusArrayOutput) ToIpSetStatusArrayOutputWithContext(ctx context.Context) IpSetStatusArrayOutput {
	return o
}

func (o IpSetStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IpSetStatus] {
	return pulumix.Output[[]IpSetStatus]{
		OutputState: o.OutputState,
	}
}

func (o IpSetStatusArrayOutput) Index(i pulumi.IntInput) IpSetStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSetStatus {
		return vs[0].([]IpSetStatus)[vs[1].(int)]
	}).(IpSetStatusOutput)
}

type IpSetStatusIpAddress struct {
	Created *string `pulumi:"created"`
	Id      *string `pulumi:"id"`
	Ip      *string `pulumi:"ip"`
	Name    *string `pulumi:"name"`
	State   *string `pulumi:"state"`
}

// IpSetStatusIpAddressInput is an input type that accepts IpSetStatusIpAddressArgs and IpSetStatusIpAddressOutput values.
// You can construct a concrete instance of `IpSetStatusIpAddressInput` via:
//
//	IpSetStatusIpAddressArgs{...}
type IpSetStatusIpAddressInput interface {
	pulumi.Input

	ToIpSetStatusIpAddressOutput() IpSetStatusIpAddressOutput
	ToIpSetStatusIpAddressOutputWithContext(context.Context) IpSetStatusIpAddressOutput
}

type IpSetStatusIpAddressArgs struct {
	Created pulumi.StringPtrInput `pulumi:"created"`
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Ip      pulumi.StringPtrInput `pulumi:"ip"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	State   pulumi.StringPtrInput `pulumi:"state"`
}

func (IpSetStatusIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetStatusIpAddress)(nil)).Elem()
}

func (i IpSetStatusIpAddressArgs) ToIpSetStatusIpAddressOutput() IpSetStatusIpAddressOutput {
	return i.ToIpSetStatusIpAddressOutputWithContext(context.Background())
}

func (i IpSetStatusIpAddressArgs) ToIpSetStatusIpAddressOutputWithContext(ctx context.Context) IpSetStatusIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetStatusIpAddressOutput)
}

func (i IpSetStatusIpAddressArgs) ToOutput(ctx context.Context) pulumix.Output[IpSetStatusIpAddress] {
	return pulumix.Output[IpSetStatusIpAddress]{
		OutputState: i.ToIpSetStatusIpAddressOutputWithContext(ctx).OutputState,
	}
}

// IpSetStatusIpAddressArrayInput is an input type that accepts IpSetStatusIpAddressArray and IpSetStatusIpAddressArrayOutput values.
// You can construct a concrete instance of `IpSetStatusIpAddressArrayInput` via:
//
//	IpSetStatusIpAddressArray{ IpSetStatusIpAddressArgs{...} }
type IpSetStatusIpAddressArrayInput interface {
	pulumi.Input

	ToIpSetStatusIpAddressArrayOutput() IpSetStatusIpAddressArrayOutput
	ToIpSetStatusIpAddressArrayOutputWithContext(context.Context) IpSetStatusIpAddressArrayOutput
}

type IpSetStatusIpAddressArray []IpSetStatusIpAddressInput

func (IpSetStatusIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetStatusIpAddress)(nil)).Elem()
}

func (i IpSetStatusIpAddressArray) ToIpSetStatusIpAddressArrayOutput() IpSetStatusIpAddressArrayOutput {
	return i.ToIpSetStatusIpAddressArrayOutputWithContext(context.Background())
}

func (i IpSetStatusIpAddressArray) ToIpSetStatusIpAddressArrayOutputWithContext(ctx context.Context) IpSetStatusIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetStatusIpAddressArrayOutput)
}

func (i IpSetStatusIpAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]IpSetStatusIpAddress] {
	return pulumix.Output[[]IpSetStatusIpAddress]{
		OutputState: i.ToIpSetStatusIpAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type IpSetStatusIpAddressOutput struct{ *pulumi.OutputState }

func (IpSetStatusIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetStatusIpAddress)(nil)).Elem()
}

func (o IpSetStatusIpAddressOutput) ToIpSetStatusIpAddressOutput() IpSetStatusIpAddressOutput {
	return o
}

func (o IpSetStatusIpAddressOutput) ToIpSetStatusIpAddressOutputWithContext(ctx context.Context) IpSetStatusIpAddressOutput {
	return o
}

func (o IpSetStatusIpAddressOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetStatusIpAddress] {
	return pulumix.Output[IpSetStatusIpAddress]{
		OutputState: o.OutputState,
	}
}

func (o IpSetStatusIpAddressOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSetStatusIpAddress) *string { return v.Created }).(pulumi.StringPtrOutput)
}

func (o IpSetStatusIpAddressOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSetStatusIpAddress) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o IpSetStatusIpAddressOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSetStatusIpAddress) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o IpSetStatusIpAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSetStatusIpAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o IpSetStatusIpAddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSetStatusIpAddress) *string { return v.State }).(pulumi.StringPtrOutput)
}

type IpSetStatusIpAddressArrayOutput struct{ *pulumi.OutputState }

func (IpSetStatusIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetStatusIpAddress)(nil)).Elem()
}

func (o IpSetStatusIpAddressArrayOutput) ToIpSetStatusIpAddressArrayOutput() IpSetStatusIpAddressArrayOutput {
	return o
}

func (o IpSetStatusIpAddressArrayOutput) ToIpSetStatusIpAddressArrayOutputWithContext(ctx context.Context) IpSetStatusIpAddressArrayOutput {
	return o
}

func (o IpSetStatusIpAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IpSetStatusIpAddress] {
	return pulumix.Output[[]IpSetStatusIpAddress]{
		OutputState: o.OutputState,
	}
}

func (o IpSetStatusIpAddressArrayOutput) Index(i pulumi.IntInput) IpSetStatusIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSetStatusIpAddress {
		return vs[0].([]IpSetStatusIpAddress)[vs[1].(int)]
	}).(IpSetStatusIpAddressOutput)
}

type LocationGeo struct {
	City      *string  `pulumi:"city"`
	Continent *string  `pulumi:"continent"`
	Country   *string  `pulumi:"country"`
	Lat       *float64 `pulumi:"lat"`
	Lon       *float64 `pulumi:"lon"`
	State     *string  `pulumi:"state"`
}

// LocationGeoInput is an input type that accepts LocationGeoArgs and LocationGeoOutput values.
// You can construct a concrete instance of `LocationGeoInput` via:
//
//	LocationGeoArgs{...}
type LocationGeoInput interface {
	pulumi.Input

	ToLocationGeoOutput() LocationGeoOutput
	ToLocationGeoOutputWithContext(context.Context) LocationGeoOutput
}

type LocationGeoArgs struct {
	City      pulumi.StringPtrInput  `pulumi:"city"`
	Continent pulumi.StringPtrInput  `pulumi:"continent"`
	Country   pulumi.StringPtrInput  `pulumi:"country"`
	Lat       pulumi.Float64PtrInput `pulumi:"lat"`
	Lon       pulumi.Float64PtrInput `pulumi:"lon"`
	State     pulumi.StringPtrInput  `pulumi:"state"`
}

func (LocationGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationGeo)(nil)).Elem()
}

func (i LocationGeoArgs) ToLocationGeoOutput() LocationGeoOutput {
	return i.ToLocationGeoOutputWithContext(context.Background())
}

func (i LocationGeoArgs) ToLocationGeoOutputWithContext(ctx context.Context) LocationGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationGeoOutput)
}

func (i LocationGeoArgs) ToOutput(ctx context.Context) pulumix.Output[LocationGeo] {
	return pulumix.Output[LocationGeo]{
		OutputState: i.ToLocationGeoOutputWithContext(ctx).OutputState,
	}
}

// LocationGeoArrayInput is an input type that accepts LocationGeoArray and LocationGeoArrayOutput values.
// You can construct a concrete instance of `LocationGeoArrayInput` via:
//
//	LocationGeoArray{ LocationGeoArgs{...} }
type LocationGeoArrayInput interface {
	pulumi.Input

	ToLocationGeoArrayOutput() LocationGeoArrayOutput
	ToLocationGeoArrayOutputWithContext(context.Context) LocationGeoArrayOutput
}

type LocationGeoArray []LocationGeoInput

func (LocationGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationGeo)(nil)).Elem()
}

func (i LocationGeoArray) ToLocationGeoArrayOutput() LocationGeoArrayOutput {
	return i.ToLocationGeoArrayOutputWithContext(context.Background())
}

func (i LocationGeoArray) ToLocationGeoArrayOutputWithContext(ctx context.Context) LocationGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationGeoArrayOutput)
}

func (i LocationGeoArray) ToOutput(ctx context.Context) pulumix.Output[[]LocationGeo] {
	return pulumix.Output[[]LocationGeo]{
		OutputState: i.ToLocationGeoArrayOutputWithContext(ctx).OutputState,
	}
}

type LocationGeoOutput struct{ *pulumi.OutputState }

func (LocationGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationGeo)(nil)).Elem()
}

func (o LocationGeoOutput) ToLocationGeoOutput() LocationGeoOutput {
	return o
}

func (o LocationGeoOutput) ToLocationGeoOutputWithContext(ctx context.Context) LocationGeoOutput {
	return o
}

func (o LocationGeoOutput) ToOutput(ctx context.Context) pulumix.Output[LocationGeo] {
	return pulumix.Output[LocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o LocationGeoOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationGeo) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o LocationGeoOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationGeo) *string { return v.Continent }).(pulumi.StringPtrOutput)
}

func (o LocationGeoOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationGeo) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o LocationGeoOutput) Lat() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LocationGeo) *float64 { return v.Lat }).(pulumi.Float64PtrOutput)
}

func (o LocationGeoOutput) Lon() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LocationGeo) *float64 { return v.Lon }).(pulumi.Float64PtrOutput)
}

func (o LocationGeoOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationGeo) *string { return v.State }).(pulumi.StringPtrOutput)
}

type LocationGeoArrayOutput struct{ *pulumi.OutputState }

func (LocationGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationGeo)(nil)).Elem()
}

func (o LocationGeoArrayOutput) ToLocationGeoArrayOutput() LocationGeoArrayOutput {
	return o
}

func (o LocationGeoArrayOutput) ToLocationGeoArrayOutputWithContext(ctx context.Context) LocationGeoArrayOutput {
	return o
}

func (o LocationGeoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LocationGeo] {
	return pulumix.Output[[]LocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o LocationGeoArrayOutput) Index(i pulumi.IntInput) LocationGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocationGeo {
		return vs[0].([]LocationGeo)[vs[1].(int)]
	}).(LocationGeoOutput)
}

type Mk8sAddOns struct {
	AwsEcr                *Mk8sAddOnsAwsEcr                `pulumi:"awsEcr"`
	AwsEfs                *Mk8sAddOnsAwsEfs                `pulumi:"awsEfs"`
	AwsElb                *Mk8sAddOnsAwsElb                `pulumi:"awsElb"`
	AwsWorkloadIdentity   *bool                            `pulumi:"awsWorkloadIdentity"`
	AzureAcr              *Mk8sAddOnsAzureAcr              `pulumi:"azureAcr"`
	AzureWorkloadIdentity *Mk8sAddOnsAzureWorkloadIdentity `pulumi:"azureWorkloadIdentity"`
	Dashboard             *bool                            `pulumi:"dashboard"`
	LocalPathStorage      *bool                            `pulumi:"localPathStorage"`
	Logs                  *Mk8sAddOnsLogs                  `pulumi:"logs"`
	Metrics               *Mk8sAddOnsMetrics               `pulumi:"metrics"`
	Nvidia                *Mk8sAddOnsNvidia                `pulumi:"nvidia"`
	Sysbox                *bool                            `pulumi:"sysbox"`
}

// Mk8sAddOnsInput is an input type that accepts Mk8sAddOnsArgs and Mk8sAddOnsOutput values.
// You can construct a concrete instance of `Mk8sAddOnsInput` via:
//
//	Mk8sAddOnsArgs{...}
type Mk8sAddOnsInput interface {
	pulumi.Input

	ToMk8sAddOnsOutput() Mk8sAddOnsOutput
	ToMk8sAddOnsOutputWithContext(context.Context) Mk8sAddOnsOutput
}

type Mk8sAddOnsArgs struct {
	AwsEcr                Mk8sAddOnsAwsEcrPtrInput                `pulumi:"awsEcr"`
	AwsEfs                Mk8sAddOnsAwsEfsPtrInput                `pulumi:"awsEfs"`
	AwsElb                Mk8sAddOnsAwsElbPtrInput                `pulumi:"awsElb"`
	AwsWorkloadIdentity   pulumi.BoolPtrInput                     `pulumi:"awsWorkloadIdentity"`
	AzureAcr              Mk8sAddOnsAzureAcrPtrInput              `pulumi:"azureAcr"`
	AzureWorkloadIdentity Mk8sAddOnsAzureWorkloadIdentityPtrInput `pulumi:"azureWorkloadIdentity"`
	Dashboard             pulumi.BoolPtrInput                     `pulumi:"dashboard"`
	LocalPathStorage      pulumi.BoolPtrInput                     `pulumi:"localPathStorage"`
	Logs                  Mk8sAddOnsLogsPtrInput                  `pulumi:"logs"`
	Metrics               Mk8sAddOnsMetricsPtrInput               `pulumi:"metrics"`
	Nvidia                Mk8sAddOnsNvidiaPtrInput                `pulumi:"nvidia"`
	Sysbox                pulumi.BoolPtrInput                     `pulumi:"sysbox"`
}

func (Mk8sAddOnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOns)(nil)).Elem()
}

func (i Mk8sAddOnsArgs) ToMk8sAddOnsOutput() Mk8sAddOnsOutput {
	return i.ToMk8sAddOnsOutputWithContext(context.Background())
}

func (i Mk8sAddOnsArgs) ToMk8sAddOnsOutputWithContext(ctx context.Context) Mk8sAddOnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsOutput)
}

func (i Mk8sAddOnsArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOns] {
	return pulumix.Output[Mk8sAddOns]{
		OutputState: i.ToMk8sAddOnsOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsArgs) ToMk8sAddOnsPtrOutput() Mk8sAddOnsPtrOutput {
	return i.ToMk8sAddOnsPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsArgs) ToMk8sAddOnsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsOutput).ToMk8sAddOnsPtrOutputWithContext(ctx)
}

// Mk8sAddOnsPtrInput is an input type that accepts Mk8sAddOnsArgs, Mk8sAddOnsPtr and Mk8sAddOnsPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsPtrInput` via:
//
//	        Mk8sAddOnsArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsPtrOutput() Mk8sAddOnsPtrOutput
	ToMk8sAddOnsPtrOutputWithContext(context.Context) Mk8sAddOnsPtrOutput
}

type mk8sAddOnsPtrType Mk8sAddOnsArgs

func Mk8sAddOnsPtr(v *Mk8sAddOnsArgs) Mk8sAddOnsPtrInput {
	return (*mk8sAddOnsPtrType)(v)
}

func (*mk8sAddOnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOns)(nil)).Elem()
}

func (i *mk8sAddOnsPtrType) ToMk8sAddOnsPtrOutput() Mk8sAddOnsPtrOutput {
	return i.ToMk8sAddOnsPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsPtrType) ToMk8sAddOnsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsPtrOutput)
}

func (i *mk8sAddOnsPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOns] {
	return pulumix.Output[*Mk8sAddOns]{
		OutputState: i.ToMk8sAddOnsPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOns)(nil)).Elem()
}

func (o Mk8sAddOnsOutput) ToMk8sAddOnsOutput() Mk8sAddOnsOutput {
	return o
}

func (o Mk8sAddOnsOutput) ToMk8sAddOnsOutputWithContext(ctx context.Context) Mk8sAddOnsOutput {
	return o
}

func (o Mk8sAddOnsOutput) ToMk8sAddOnsPtrOutput() Mk8sAddOnsPtrOutput {
	return o.ToMk8sAddOnsPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsOutput) ToMk8sAddOnsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOns) *Mk8sAddOns {
		return &v
	}).(Mk8sAddOnsPtrOutput)
}

func (o Mk8sAddOnsOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOns] {
	return pulumix.Output[Mk8sAddOns]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsOutput) AwsEcr() Mk8sAddOnsAwsEcrPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsAwsEcr { return v.AwsEcr }).(Mk8sAddOnsAwsEcrPtrOutput)
}

func (o Mk8sAddOnsOutput) AwsEfs() Mk8sAddOnsAwsEfsPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsAwsEfs { return v.AwsEfs }).(Mk8sAddOnsAwsEfsPtrOutput)
}

func (o Mk8sAddOnsOutput) AwsElb() Mk8sAddOnsAwsElbPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsAwsElb { return v.AwsElb }).(Mk8sAddOnsAwsElbPtrOutput)
}

func (o Mk8sAddOnsOutput) AwsWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *bool { return v.AwsWorkloadIdentity }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsOutput) AzureAcr() Mk8sAddOnsAzureAcrPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsAzureAcr { return v.AzureAcr }).(Mk8sAddOnsAzureAcrPtrOutput)
}

func (o Mk8sAddOnsOutput) AzureWorkloadIdentity() Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsAzureWorkloadIdentity { return v.AzureWorkloadIdentity }).(Mk8sAddOnsAzureWorkloadIdentityPtrOutput)
}

func (o Mk8sAddOnsOutput) Dashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *bool { return v.Dashboard }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsOutput) LocalPathStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *bool { return v.LocalPathStorage }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsOutput) Logs() Mk8sAddOnsLogsPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsLogs { return v.Logs }).(Mk8sAddOnsLogsPtrOutput)
}

func (o Mk8sAddOnsOutput) Metrics() Mk8sAddOnsMetricsPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsMetrics { return v.Metrics }).(Mk8sAddOnsMetricsPtrOutput)
}

func (o Mk8sAddOnsOutput) Nvidia() Mk8sAddOnsNvidiaPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *Mk8sAddOnsNvidia { return v.Nvidia }).(Mk8sAddOnsNvidiaPtrOutput)
}

func (o Mk8sAddOnsOutput) Sysbox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOns) *bool { return v.Sysbox }).(pulumi.BoolPtrOutput)
}

type Mk8sAddOnsPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOns)(nil)).Elem()
}

func (o Mk8sAddOnsPtrOutput) ToMk8sAddOnsPtrOutput() Mk8sAddOnsPtrOutput {
	return o
}

func (o Mk8sAddOnsPtrOutput) ToMk8sAddOnsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsPtrOutput {
	return o
}

func (o Mk8sAddOnsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOns] {
	return pulumix.Output[*Mk8sAddOns]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsPtrOutput) Elem() Mk8sAddOnsOutput {
	return o.ApplyT(func(v *Mk8sAddOns) Mk8sAddOns {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOns
		return ret
	}).(Mk8sAddOnsOutput)
}

func (o Mk8sAddOnsPtrOutput) AwsEcr() Mk8sAddOnsAwsEcrPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsAwsEcr {
		if v == nil {
			return nil
		}
		return v.AwsEcr
	}).(Mk8sAddOnsAwsEcrPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) AwsEfs() Mk8sAddOnsAwsEfsPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsAwsEfs {
		if v == nil {
			return nil
		}
		return v.AwsEfs
	}).(Mk8sAddOnsAwsEfsPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) AwsElb() Mk8sAddOnsAwsElbPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsAwsElb {
		if v == nil {
			return nil
		}
		return v.AwsElb
	}).(Mk8sAddOnsAwsElbPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) AwsWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *bool {
		if v == nil {
			return nil
		}
		return v.AwsWorkloadIdentity
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) AzureAcr() Mk8sAddOnsAzureAcrPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsAzureAcr {
		if v == nil {
			return nil
		}
		return v.AzureAcr
	}).(Mk8sAddOnsAzureAcrPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) AzureWorkloadIdentity() Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsAzureWorkloadIdentity {
		if v == nil {
			return nil
		}
		return v.AzureWorkloadIdentity
	}).(Mk8sAddOnsAzureWorkloadIdentityPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) Dashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *bool {
		if v == nil {
			return nil
		}
		return v.Dashboard
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) LocalPathStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *bool {
		if v == nil {
			return nil
		}
		return v.LocalPathStorage
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) Logs() Mk8sAddOnsLogsPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsLogs {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(Mk8sAddOnsLogsPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) Metrics() Mk8sAddOnsMetricsPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsMetrics {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(Mk8sAddOnsMetricsPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) Nvidia() Mk8sAddOnsNvidiaPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *Mk8sAddOnsNvidia {
		if v == nil {
			return nil
		}
		return v.Nvidia
	}).(Mk8sAddOnsNvidiaPtrOutput)
}

func (o Mk8sAddOnsPtrOutput) Sysbox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOns) *bool {
		if v == nil {
			return nil
		}
		return v.Sysbox
	}).(pulumi.BoolPtrOutput)
}

type Mk8sAddOnsAwsEcr struct {
	_sentinel *bool   `pulumi:"_sentinel"`
	RoleArn   *string `pulumi:"roleArn"`
}

// Mk8sAddOnsAwsEcrInput is an input type that accepts Mk8sAddOnsAwsEcrArgs and Mk8sAddOnsAwsEcrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAwsEcrInput` via:
//
//	Mk8sAddOnsAwsEcrArgs{...}
type Mk8sAddOnsAwsEcrInput interface {
	pulumi.Input

	ToMk8sAddOnsAwsEcrOutput() Mk8sAddOnsAwsEcrOutput
	ToMk8sAddOnsAwsEcrOutputWithContext(context.Context) Mk8sAddOnsAwsEcrOutput
}

type Mk8sAddOnsAwsEcrArgs struct {
	_sentinel pulumi.BoolPtrInput   `pulumi:"_sentinel"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (Mk8sAddOnsAwsEcrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAwsEcr)(nil)).Elem()
}

func (i Mk8sAddOnsAwsEcrArgs) ToMk8sAddOnsAwsEcrOutput() Mk8sAddOnsAwsEcrOutput {
	return i.ToMk8sAddOnsAwsEcrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAwsEcrArgs) ToMk8sAddOnsAwsEcrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEcrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsEcrOutput)
}

func (i Mk8sAddOnsAwsEcrArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAwsEcr] {
	return pulumix.Output[Mk8sAddOnsAwsEcr]{
		OutputState: i.ToMk8sAddOnsAwsEcrOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsAwsEcrArgs) ToMk8sAddOnsAwsEcrPtrOutput() Mk8sAddOnsAwsEcrPtrOutput {
	return i.ToMk8sAddOnsAwsEcrPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAwsEcrArgs) ToMk8sAddOnsAwsEcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsEcrOutput).ToMk8sAddOnsAwsEcrPtrOutputWithContext(ctx)
}

// Mk8sAddOnsAwsEcrPtrInput is an input type that accepts Mk8sAddOnsAwsEcrArgs, Mk8sAddOnsAwsEcrPtr and Mk8sAddOnsAwsEcrPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAwsEcrPtrInput` via:
//
//	        Mk8sAddOnsAwsEcrArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsAwsEcrPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsAwsEcrPtrOutput() Mk8sAddOnsAwsEcrPtrOutput
	ToMk8sAddOnsAwsEcrPtrOutputWithContext(context.Context) Mk8sAddOnsAwsEcrPtrOutput
}

type mk8sAddOnsAwsEcrPtrType Mk8sAddOnsAwsEcrArgs

func Mk8sAddOnsAwsEcrPtr(v *Mk8sAddOnsAwsEcrArgs) Mk8sAddOnsAwsEcrPtrInput {
	return (*mk8sAddOnsAwsEcrPtrType)(v)
}

func (*mk8sAddOnsAwsEcrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAwsEcr)(nil)).Elem()
}

func (i *mk8sAddOnsAwsEcrPtrType) ToMk8sAddOnsAwsEcrPtrOutput() Mk8sAddOnsAwsEcrPtrOutput {
	return i.ToMk8sAddOnsAwsEcrPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsAwsEcrPtrType) ToMk8sAddOnsAwsEcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsEcrPtrOutput)
}

func (i *mk8sAddOnsAwsEcrPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAwsEcr] {
	return pulumix.Output[*Mk8sAddOnsAwsEcr]{
		OutputState: i.ToMk8sAddOnsAwsEcrPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsAwsEcrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAwsEcrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAwsEcr)(nil)).Elem()
}

func (o Mk8sAddOnsAwsEcrOutput) ToMk8sAddOnsAwsEcrOutput() Mk8sAddOnsAwsEcrOutput {
	return o
}

func (o Mk8sAddOnsAwsEcrOutput) ToMk8sAddOnsAwsEcrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEcrOutput {
	return o
}

func (o Mk8sAddOnsAwsEcrOutput) ToMk8sAddOnsAwsEcrPtrOutput() Mk8sAddOnsAwsEcrPtrOutput {
	return o.ToMk8sAddOnsAwsEcrPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsAwsEcrOutput) ToMk8sAddOnsAwsEcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEcrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsAwsEcr) *Mk8sAddOnsAwsEcr {
		return &v
	}).(Mk8sAddOnsAwsEcrPtrOutput)
}

func (o Mk8sAddOnsAwsEcrOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAwsEcr] {
	return pulumix.Output[Mk8sAddOnsAwsEcr]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAwsEcrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAwsEcr) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAwsEcrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAwsEcr) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAwsEcrPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAwsEcrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAwsEcr)(nil)).Elem()
}

func (o Mk8sAddOnsAwsEcrPtrOutput) ToMk8sAddOnsAwsEcrPtrOutput() Mk8sAddOnsAwsEcrPtrOutput {
	return o
}

func (o Mk8sAddOnsAwsEcrPtrOutput) ToMk8sAddOnsAwsEcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEcrPtrOutput {
	return o
}

func (o Mk8sAddOnsAwsEcrPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAwsEcr] {
	return pulumix.Output[*Mk8sAddOnsAwsEcr]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAwsEcrPtrOutput) Elem() Mk8sAddOnsAwsEcrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsEcr) Mk8sAddOnsAwsEcr {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsAwsEcr
		return ret
	}).(Mk8sAddOnsAwsEcrOutput)
}

func (o Mk8sAddOnsAwsEcrPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsEcr) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAwsEcrPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsEcr) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAwsEfs struct {
	_sentinel *bool   `pulumi:"_sentinel"`
	RoleArn   *string `pulumi:"roleArn"`
}

// Mk8sAddOnsAwsEfsInput is an input type that accepts Mk8sAddOnsAwsEfsArgs and Mk8sAddOnsAwsEfsOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAwsEfsInput` via:
//
//	Mk8sAddOnsAwsEfsArgs{...}
type Mk8sAddOnsAwsEfsInput interface {
	pulumi.Input

	ToMk8sAddOnsAwsEfsOutput() Mk8sAddOnsAwsEfsOutput
	ToMk8sAddOnsAwsEfsOutputWithContext(context.Context) Mk8sAddOnsAwsEfsOutput
}

type Mk8sAddOnsAwsEfsArgs struct {
	_sentinel pulumi.BoolPtrInput   `pulumi:"_sentinel"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (Mk8sAddOnsAwsEfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAwsEfs)(nil)).Elem()
}

func (i Mk8sAddOnsAwsEfsArgs) ToMk8sAddOnsAwsEfsOutput() Mk8sAddOnsAwsEfsOutput {
	return i.ToMk8sAddOnsAwsEfsOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAwsEfsArgs) ToMk8sAddOnsAwsEfsOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsEfsOutput)
}

func (i Mk8sAddOnsAwsEfsArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAwsEfs] {
	return pulumix.Output[Mk8sAddOnsAwsEfs]{
		OutputState: i.ToMk8sAddOnsAwsEfsOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsAwsEfsArgs) ToMk8sAddOnsAwsEfsPtrOutput() Mk8sAddOnsAwsEfsPtrOutput {
	return i.ToMk8sAddOnsAwsEfsPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAwsEfsArgs) ToMk8sAddOnsAwsEfsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsEfsOutput).ToMk8sAddOnsAwsEfsPtrOutputWithContext(ctx)
}

// Mk8sAddOnsAwsEfsPtrInput is an input type that accepts Mk8sAddOnsAwsEfsArgs, Mk8sAddOnsAwsEfsPtr and Mk8sAddOnsAwsEfsPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAwsEfsPtrInput` via:
//
//	        Mk8sAddOnsAwsEfsArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsAwsEfsPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsAwsEfsPtrOutput() Mk8sAddOnsAwsEfsPtrOutput
	ToMk8sAddOnsAwsEfsPtrOutputWithContext(context.Context) Mk8sAddOnsAwsEfsPtrOutput
}

type mk8sAddOnsAwsEfsPtrType Mk8sAddOnsAwsEfsArgs

func Mk8sAddOnsAwsEfsPtr(v *Mk8sAddOnsAwsEfsArgs) Mk8sAddOnsAwsEfsPtrInput {
	return (*mk8sAddOnsAwsEfsPtrType)(v)
}

func (*mk8sAddOnsAwsEfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAwsEfs)(nil)).Elem()
}

func (i *mk8sAddOnsAwsEfsPtrType) ToMk8sAddOnsAwsEfsPtrOutput() Mk8sAddOnsAwsEfsPtrOutput {
	return i.ToMk8sAddOnsAwsEfsPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsAwsEfsPtrType) ToMk8sAddOnsAwsEfsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsEfsPtrOutput)
}

func (i *mk8sAddOnsAwsEfsPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAwsEfs] {
	return pulumix.Output[*Mk8sAddOnsAwsEfs]{
		OutputState: i.ToMk8sAddOnsAwsEfsPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsAwsEfsOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAwsEfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAwsEfs)(nil)).Elem()
}

func (o Mk8sAddOnsAwsEfsOutput) ToMk8sAddOnsAwsEfsOutput() Mk8sAddOnsAwsEfsOutput {
	return o
}

func (o Mk8sAddOnsAwsEfsOutput) ToMk8sAddOnsAwsEfsOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEfsOutput {
	return o
}

func (o Mk8sAddOnsAwsEfsOutput) ToMk8sAddOnsAwsEfsPtrOutput() Mk8sAddOnsAwsEfsPtrOutput {
	return o.ToMk8sAddOnsAwsEfsPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsAwsEfsOutput) ToMk8sAddOnsAwsEfsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsAwsEfs) *Mk8sAddOnsAwsEfs {
		return &v
	}).(Mk8sAddOnsAwsEfsPtrOutput)
}

func (o Mk8sAddOnsAwsEfsOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAwsEfs] {
	return pulumix.Output[Mk8sAddOnsAwsEfs]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAwsEfsOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAwsEfs) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAwsEfsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAwsEfs) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAwsEfsPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAwsEfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAwsEfs)(nil)).Elem()
}

func (o Mk8sAddOnsAwsEfsPtrOutput) ToMk8sAddOnsAwsEfsPtrOutput() Mk8sAddOnsAwsEfsPtrOutput {
	return o
}

func (o Mk8sAddOnsAwsEfsPtrOutput) ToMk8sAddOnsAwsEfsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsEfsPtrOutput {
	return o
}

func (o Mk8sAddOnsAwsEfsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAwsEfs] {
	return pulumix.Output[*Mk8sAddOnsAwsEfs]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAwsEfsPtrOutput) Elem() Mk8sAddOnsAwsEfsOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsEfs) Mk8sAddOnsAwsEfs {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsAwsEfs
		return ret
	}).(Mk8sAddOnsAwsEfsOutput)
}

func (o Mk8sAddOnsAwsEfsPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsEfs) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAwsEfsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsEfs) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAwsElb struct {
	_sentinel *bool   `pulumi:"_sentinel"`
	RoleArn   *string `pulumi:"roleArn"`
}

// Mk8sAddOnsAwsElbInput is an input type that accepts Mk8sAddOnsAwsElbArgs and Mk8sAddOnsAwsElbOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAwsElbInput` via:
//
//	Mk8sAddOnsAwsElbArgs{...}
type Mk8sAddOnsAwsElbInput interface {
	pulumi.Input

	ToMk8sAddOnsAwsElbOutput() Mk8sAddOnsAwsElbOutput
	ToMk8sAddOnsAwsElbOutputWithContext(context.Context) Mk8sAddOnsAwsElbOutput
}

type Mk8sAddOnsAwsElbArgs struct {
	_sentinel pulumi.BoolPtrInput   `pulumi:"_sentinel"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (Mk8sAddOnsAwsElbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAwsElb)(nil)).Elem()
}

func (i Mk8sAddOnsAwsElbArgs) ToMk8sAddOnsAwsElbOutput() Mk8sAddOnsAwsElbOutput {
	return i.ToMk8sAddOnsAwsElbOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAwsElbArgs) ToMk8sAddOnsAwsElbOutputWithContext(ctx context.Context) Mk8sAddOnsAwsElbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsElbOutput)
}

func (i Mk8sAddOnsAwsElbArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAwsElb] {
	return pulumix.Output[Mk8sAddOnsAwsElb]{
		OutputState: i.ToMk8sAddOnsAwsElbOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsAwsElbArgs) ToMk8sAddOnsAwsElbPtrOutput() Mk8sAddOnsAwsElbPtrOutput {
	return i.ToMk8sAddOnsAwsElbPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAwsElbArgs) ToMk8sAddOnsAwsElbPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsElbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsElbOutput).ToMk8sAddOnsAwsElbPtrOutputWithContext(ctx)
}

// Mk8sAddOnsAwsElbPtrInput is an input type that accepts Mk8sAddOnsAwsElbArgs, Mk8sAddOnsAwsElbPtr and Mk8sAddOnsAwsElbPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAwsElbPtrInput` via:
//
//	        Mk8sAddOnsAwsElbArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsAwsElbPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsAwsElbPtrOutput() Mk8sAddOnsAwsElbPtrOutput
	ToMk8sAddOnsAwsElbPtrOutputWithContext(context.Context) Mk8sAddOnsAwsElbPtrOutput
}

type mk8sAddOnsAwsElbPtrType Mk8sAddOnsAwsElbArgs

func Mk8sAddOnsAwsElbPtr(v *Mk8sAddOnsAwsElbArgs) Mk8sAddOnsAwsElbPtrInput {
	return (*mk8sAddOnsAwsElbPtrType)(v)
}

func (*mk8sAddOnsAwsElbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAwsElb)(nil)).Elem()
}

func (i *mk8sAddOnsAwsElbPtrType) ToMk8sAddOnsAwsElbPtrOutput() Mk8sAddOnsAwsElbPtrOutput {
	return i.ToMk8sAddOnsAwsElbPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsAwsElbPtrType) ToMk8sAddOnsAwsElbPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsElbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAwsElbPtrOutput)
}

func (i *mk8sAddOnsAwsElbPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAwsElb] {
	return pulumix.Output[*Mk8sAddOnsAwsElb]{
		OutputState: i.ToMk8sAddOnsAwsElbPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsAwsElbOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAwsElbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAwsElb)(nil)).Elem()
}

func (o Mk8sAddOnsAwsElbOutput) ToMk8sAddOnsAwsElbOutput() Mk8sAddOnsAwsElbOutput {
	return o
}

func (o Mk8sAddOnsAwsElbOutput) ToMk8sAddOnsAwsElbOutputWithContext(ctx context.Context) Mk8sAddOnsAwsElbOutput {
	return o
}

func (o Mk8sAddOnsAwsElbOutput) ToMk8sAddOnsAwsElbPtrOutput() Mk8sAddOnsAwsElbPtrOutput {
	return o.ToMk8sAddOnsAwsElbPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsAwsElbOutput) ToMk8sAddOnsAwsElbPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsElbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsAwsElb) *Mk8sAddOnsAwsElb {
		return &v
	}).(Mk8sAddOnsAwsElbPtrOutput)
}

func (o Mk8sAddOnsAwsElbOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAwsElb] {
	return pulumix.Output[Mk8sAddOnsAwsElb]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAwsElbOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAwsElb) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAwsElbOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAwsElb) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAwsElbPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAwsElbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAwsElb)(nil)).Elem()
}

func (o Mk8sAddOnsAwsElbPtrOutput) ToMk8sAddOnsAwsElbPtrOutput() Mk8sAddOnsAwsElbPtrOutput {
	return o
}

func (o Mk8sAddOnsAwsElbPtrOutput) ToMk8sAddOnsAwsElbPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAwsElbPtrOutput {
	return o
}

func (o Mk8sAddOnsAwsElbPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAwsElb] {
	return pulumix.Output[*Mk8sAddOnsAwsElb]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAwsElbPtrOutput) Elem() Mk8sAddOnsAwsElbOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsElb) Mk8sAddOnsAwsElb {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsAwsElb
		return ret
	}).(Mk8sAddOnsAwsElbOutput)
}

func (o Mk8sAddOnsAwsElbPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsElb) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAwsElbPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAwsElb) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAzureAcr struct {
	ClientId string `pulumi:"clientId"`
}

// Mk8sAddOnsAzureAcrInput is an input type that accepts Mk8sAddOnsAzureAcrArgs and Mk8sAddOnsAzureAcrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAzureAcrInput` via:
//
//	Mk8sAddOnsAzureAcrArgs{...}
type Mk8sAddOnsAzureAcrInput interface {
	pulumi.Input

	ToMk8sAddOnsAzureAcrOutput() Mk8sAddOnsAzureAcrOutput
	ToMk8sAddOnsAzureAcrOutputWithContext(context.Context) Mk8sAddOnsAzureAcrOutput
}

type Mk8sAddOnsAzureAcrArgs struct {
	ClientId pulumi.StringInput `pulumi:"clientId"`
}

func (Mk8sAddOnsAzureAcrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAzureAcr)(nil)).Elem()
}

func (i Mk8sAddOnsAzureAcrArgs) ToMk8sAddOnsAzureAcrOutput() Mk8sAddOnsAzureAcrOutput {
	return i.ToMk8sAddOnsAzureAcrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAzureAcrArgs) ToMk8sAddOnsAzureAcrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureAcrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAzureAcrOutput)
}

func (i Mk8sAddOnsAzureAcrArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAzureAcr] {
	return pulumix.Output[Mk8sAddOnsAzureAcr]{
		OutputState: i.ToMk8sAddOnsAzureAcrOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsAzureAcrArgs) ToMk8sAddOnsAzureAcrPtrOutput() Mk8sAddOnsAzureAcrPtrOutput {
	return i.ToMk8sAddOnsAzureAcrPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAzureAcrArgs) ToMk8sAddOnsAzureAcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureAcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAzureAcrOutput).ToMk8sAddOnsAzureAcrPtrOutputWithContext(ctx)
}

// Mk8sAddOnsAzureAcrPtrInput is an input type that accepts Mk8sAddOnsAzureAcrArgs, Mk8sAddOnsAzureAcrPtr and Mk8sAddOnsAzureAcrPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAzureAcrPtrInput` via:
//
//	        Mk8sAddOnsAzureAcrArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsAzureAcrPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsAzureAcrPtrOutput() Mk8sAddOnsAzureAcrPtrOutput
	ToMk8sAddOnsAzureAcrPtrOutputWithContext(context.Context) Mk8sAddOnsAzureAcrPtrOutput
}

type mk8sAddOnsAzureAcrPtrType Mk8sAddOnsAzureAcrArgs

func Mk8sAddOnsAzureAcrPtr(v *Mk8sAddOnsAzureAcrArgs) Mk8sAddOnsAzureAcrPtrInput {
	return (*mk8sAddOnsAzureAcrPtrType)(v)
}

func (*mk8sAddOnsAzureAcrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAzureAcr)(nil)).Elem()
}

func (i *mk8sAddOnsAzureAcrPtrType) ToMk8sAddOnsAzureAcrPtrOutput() Mk8sAddOnsAzureAcrPtrOutput {
	return i.ToMk8sAddOnsAzureAcrPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsAzureAcrPtrType) ToMk8sAddOnsAzureAcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureAcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAzureAcrPtrOutput)
}

func (i *mk8sAddOnsAzureAcrPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAzureAcr] {
	return pulumix.Output[*Mk8sAddOnsAzureAcr]{
		OutputState: i.ToMk8sAddOnsAzureAcrPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsAzureAcrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAzureAcrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAzureAcr)(nil)).Elem()
}

func (o Mk8sAddOnsAzureAcrOutput) ToMk8sAddOnsAzureAcrOutput() Mk8sAddOnsAzureAcrOutput {
	return o
}

func (o Mk8sAddOnsAzureAcrOutput) ToMk8sAddOnsAzureAcrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureAcrOutput {
	return o
}

func (o Mk8sAddOnsAzureAcrOutput) ToMk8sAddOnsAzureAcrPtrOutput() Mk8sAddOnsAzureAcrPtrOutput {
	return o.ToMk8sAddOnsAzureAcrPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsAzureAcrOutput) ToMk8sAddOnsAzureAcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureAcrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsAzureAcr) *Mk8sAddOnsAzureAcr {
		return &v
	}).(Mk8sAddOnsAzureAcrPtrOutput)
}

func (o Mk8sAddOnsAzureAcrOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAzureAcr] {
	return pulumix.Output[Mk8sAddOnsAzureAcr]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAzureAcrOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sAddOnsAzureAcr) string { return v.ClientId }).(pulumi.StringOutput)
}

type Mk8sAddOnsAzureAcrPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAzureAcrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAzureAcr)(nil)).Elem()
}

func (o Mk8sAddOnsAzureAcrPtrOutput) ToMk8sAddOnsAzureAcrPtrOutput() Mk8sAddOnsAzureAcrPtrOutput {
	return o
}

func (o Mk8sAddOnsAzureAcrPtrOutput) ToMk8sAddOnsAzureAcrPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureAcrPtrOutput {
	return o
}

func (o Mk8sAddOnsAzureAcrPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAzureAcr] {
	return pulumix.Output[*Mk8sAddOnsAzureAcr]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAzureAcrPtrOutput) Elem() Mk8sAddOnsAzureAcrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAzureAcr) Mk8sAddOnsAzureAcr {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsAzureAcr
		return ret
	}).(Mk8sAddOnsAzureAcrOutput)
}

func (o Mk8sAddOnsAzureAcrPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAzureAcr) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAzureWorkloadIdentity struct {
	_sentinel *bool   `pulumi:"_sentinel"`
	TenantId  *string `pulumi:"tenantId"`
}

// Mk8sAddOnsAzureWorkloadIdentityInput is an input type that accepts Mk8sAddOnsAzureWorkloadIdentityArgs and Mk8sAddOnsAzureWorkloadIdentityOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAzureWorkloadIdentityInput` via:
//
//	Mk8sAddOnsAzureWorkloadIdentityArgs{...}
type Mk8sAddOnsAzureWorkloadIdentityInput interface {
	pulumi.Input

	ToMk8sAddOnsAzureWorkloadIdentityOutput() Mk8sAddOnsAzureWorkloadIdentityOutput
	ToMk8sAddOnsAzureWorkloadIdentityOutputWithContext(context.Context) Mk8sAddOnsAzureWorkloadIdentityOutput
}

type Mk8sAddOnsAzureWorkloadIdentityArgs struct {
	_sentinel pulumi.BoolPtrInput   `pulumi:"_sentinel"`
	TenantId  pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (Mk8sAddOnsAzureWorkloadIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAzureWorkloadIdentity)(nil)).Elem()
}

func (i Mk8sAddOnsAzureWorkloadIdentityArgs) ToMk8sAddOnsAzureWorkloadIdentityOutput() Mk8sAddOnsAzureWorkloadIdentityOutput {
	return i.ToMk8sAddOnsAzureWorkloadIdentityOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAzureWorkloadIdentityArgs) ToMk8sAddOnsAzureWorkloadIdentityOutputWithContext(ctx context.Context) Mk8sAddOnsAzureWorkloadIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAzureWorkloadIdentityOutput)
}

func (i Mk8sAddOnsAzureWorkloadIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAzureWorkloadIdentity] {
	return pulumix.Output[Mk8sAddOnsAzureWorkloadIdentity]{
		OutputState: i.ToMk8sAddOnsAzureWorkloadIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsAzureWorkloadIdentityArgs) ToMk8sAddOnsAzureWorkloadIdentityPtrOutput() Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return i.ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsAzureWorkloadIdentityArgs) ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAzureWorkloadIdentityOutput).ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(ctx)
}

// Mk8sAddOnsAzureWorkloadIdentityPtrInput is an input type that accepts Mk8sAddOnsAzureWorkloadIdentityArgs, Mk8sAddOnsAzureWorkloadIdentityPtr and Mk8sAddOnsAzureWorkloadIdentityPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsAzureWorkloadIdentityPtrInput` via:
//
//	        Mk8sAddOnsAzureWorkloadIdentityArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsAzureWorkloadIdentityPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsAzureWorkloadIdentityPtrOutput() Mk8sAddOnsAzureWorkloadIdentityPtrOutput
	ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(context.Context) Mk8sAddOnsAzureWorkloadIdentityPtrOutput
}

type mk8sAddOnsAzureWorkloadIdentityPtrType Mk8sAddOnsAzureWorkloadIdentityArgs

func Mk8sAddOnsAzureWorkloadIdentityPtr(v *Mk8sAddOnsAzureWorkloadIdentityArgs) Mk8sAddOnsAzureWorkloadIdentityPtrInput {
	return (*mk8sAddOnsAzureWorkloadIdentityPtrType)(v)
}

func (*mk8sAddOnsAzureWorkloadIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAzureWorkloadIdentity)(nil)).Elem()
}

func (i *mk8sAddOnsAzureWorkloadIdentityPtrType) ToMk8sAddOnsAzureWorkloadIdentityPtrOutput() Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return i.ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsAzureWorkloadIdentityPtrType) ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsAzureWorkloadIdentityPtrOutput)
}

func (i *mk8sAddOnsAzureWorkloadIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAzureWorkloadIdentity] {
	return pulumix.Output[*Mk8sAddOnsAzureWorkloadIdentity]{
		OutputState: i.ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsAzureWorkloadIdentityOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAzureWorkloadIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsAzureWorkloadIdentity)(nil)).Elem()
}

func (o Mk8sAddOnsAzureWorkloadIdentityOutput) ToMk8sAddOnsAzureWorkloadIdentityOutput() Mk8sAddOnsAzureWorkloadIdentityOutput {
	return o
}

func (o Mk8sAddOnsAzureWorkloadIdentityOutput) ToMk8sAddOnsAzureWorkloadIdentityOutputWithContext(ctx context.Context) Mk8sAddOnsAzureWorkloadIdentityOutput {
	return o
}

func (o Mk8sAddOnsAzureWorkloadIdentityOutput) ToMk8sAddOnsAzureWorkloadIdentityPtrOutput() Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return o.ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsAzureWorkloadIdentityOutput) ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsAzureWorkloadIdentity) *Mk8sAddOnsAzureWorkloadIdentity {
		return &v
	}).(Mk8sAddOnsAzureWorkloadIdentityPtrOutput)
}

func (o Mk8sAddOnsAzureWorkloadIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsAzureWorkloadIdentity] {
	return pulumix.Output[Mk8sAddOnsAzureWorkloadIdentity]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAzureWorkloadIdentityOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAzureWorkloadIdentity) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAzureWorkloadIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsAzureWorkloadIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsAzureWorkloadIdentityPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsAzureWorkloadIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsAzureWorkloadIdentity)(nil)).Elem()
}

func (o Mk8sAddOnsAzureWorkloadIdentityPtrOutput) ToMk8sAddOnsAzureWorkloadIdentityPtrOutput() Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return o
}

func (o Mk8sAddOnsAzureWorkloadIdentityPtrOutput) ToMk8sAddOnsAzureWorkloadIdentityPtrOutputWithContext(ctx context.Context) Mk8sAddOnsAzureWorkloadIdentityPtrOutput {
	return o
}

func (o Mk8sAddOnsAzureWorkloadIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsAzureWorkloadIdentity] {
	return pulumix.Output[*Mk8sAddOnsAzureWorkloadIdentity]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsAzureWorkloadIdentityPtrOutput) Elem() Mk8sAddOnsAzureWorkloadIdentityOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAzureWorkloadIdentity) Mk8sAddOnsAzureWorkloadIdentity {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsAzureWorkloadIdentity
		return ret
	}).(Mk8sAddOnsAzureWorkloadIdentityOutput)
}

func (o Mk8sAddOnsAzureWorkloadIdentityPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAzureWorkloadIdentity) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsAzureWorkloadIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsAzureWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsLogs struct {
	_sentinel         *bool   `pulumi:"_sentinel"`
	AuditEnabled      *bool   `pulumi:"auditEnabled"`
	ExcludeNamespaces *string `pulumi:"excludeNamespaces"`
	IncludeNamespaces *string `pulumi:"includeNamespaces"`
}

// Mk8sAddOnsLogsInput is an input type that accepts Mk8sAddOnsLogsArgs and Mk8sAddOnsLogsOutput values.
// You can construct a concrete instance of `Mk8sAddOnsLogsInput` via:
//
//	Mk8sAddOnsLogsArgs{...}
type Mk8sAddOnsLogsInput interface {
	pulumi.Input

	ToMk8sAddOnsLogsOutput() Mk8sAddOnsLogsOutput
	ToMk8sAddOnsLogsOutputWithContext(context.Context) Mk8sAddOnsLogsOutput
}

type Mk8sAddOnsLogsArgs struct {
	_sentinel         pulumi.BoolPtrInput   `pulumi:"_sentinel"`
	AuditEnabled      pulumi.BoolPtrInput   `pulumi:"auditEnabled"`
	ExcludeNamespaces pulumi.StringPtrInput `pulumi:"excludeNamespaces"`
	IncludeNamespaces pulumi.StringPtrInput `pulumi:"includeNamespaces"`
}

func (Mk8sAddOnsLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsLogs)(nil)).Elem()
}

func (i Mk8sAddOnsLogsArgs) ToMk8sAddOnsLogsOutput() Mk8sAddOnsLogsOutput {
	return i.ToMk8sAddOnsLogsOutputWithContext(context.Background())
}

func (i Mk8sAddOnsLogsArgs) ToMk8sAddOnsLogsOutputWithContext(ctx context.Context) Mk8sAddOnsLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsLogsOutput)
}

func (i Mk8sAddOnsLogsArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsLogs] {
	return pulumix.Output[Mk8sAddOnsLogs]{
		OutputState: i.ToMk8sAddOnsLogsOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsLogsArgs) ToMk8sAddOnsLogsPtrOutput() Mk8sAddOnsLogsPtrOutput {
	return i.ToMk8sAddOnsLogsPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsLogsArgs) ToMk8sAddOnsLogsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsLogsOutput).ToMk8sAddOnsLogsPtrOutputWithContext(ctx)
}

// Mk8sAddOnsLogsPtrInput is an input type that accepts Mk8sAddOnsLogsArgs, Mk8sAddOnsLogsPtr and Mk8sAddOnsLogsPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsLogsPtrInput` via:
//
//	        Mk8sAddOnsLogsArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsLogsPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsLogsPtrOutput() Mk8sAddOnsLogsPtrOutput
	ToMk8sAddOnsLogsPtrOutputWithContext(context.Context) Mk8sAddOnsLogsPtrOutput
}

type mk8sAddOnsLogsPtrType Mk8sAddOnsLogsArgs

func Mk8sAddOnsLogsPtr(v *Mk8sAddOnsLogsArgs) Mk8sAddOnsLogsPtrInput {
	return (*mk8sAddOnsLogsPtrType)(v)
}

func (*mk8sAddOnsLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsLogs)(nil)).Elem()
}

func (i *mk8sAddOnsLogsPtrType) ToMk8sAddOnsLogsPtrOutput() Mk8sAddOnsLogsPtrOutput {
	return i.ToMk8sAddOnsLogsPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsLogsPtrType) ToMk8sAddOnsLogsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsLogsPtrOutput)
}

func (i *mk8sAddOnsLogsPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsLogs] {
	return pulumix.Output[*Mk8sAddOnsLogs]{
		OutputState: i.ToMk8sAddOnsLogsPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsLogsOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsLogs)(nil)).Elem()
}

func (o Mk8sAddOnsLogsOutput) ToMk8sAddOnsLogsOutput() Mk8sAddOnsLogsOutput {
	return o
}

func (o Mk8sAddOnsLogsOutput) ToMk8sAddOnsLogsOutputWithContext(ctx context.Context) Mk8sAddOnsLogsOutput {
	return o
}

func (o Mk8sAddOnsLogsOutput) ToMk8sAddOnsLogsPtrOutput() Mk8sAddOnsLogsPtrOutput {
	return o.ToMk8sAddOnsLogsPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsLogsOutput) ToMk8sAddOnsLogsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsLogs) *Mk8sAddOnsLogs {
		return &v
	}).(Mk8sAddOnsLogsPtrOutput)
}

func (o Mk8sAddOnsLogsOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsLogs] {
	return pulumix.Output[Mk8sAddOnsLogs]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsLogsOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsLogs) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsLogsOutput) AuditEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsLogs) *bool { return v.AuditEnabled }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsLogsOutput) ExcludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsLogs) *string { return v.ExcludeNamespaces }).(pulumi.StringPtrOutput)
}

func (o Mk8sAddOnsLogsOutput) IncludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsLogs) *string { return v.IncludeNamespaces }).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsLogsPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsLogs)(nil)).Elem()
}

func (o Mk8sAddOnsLogsPtrOutput) ToMk8sAddOnsLogsPtrOutput() Mk8sAddOnsLogsPtrOutput {
	return o
}

func (o Mk8sAddOnsLogsPtrOutput) ToMk8sAddOnsLogsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsLogsPtrOutput {
	return o
}

func (o Mk8sAddOnsLogsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsLogs] {
	return pulumix.Output[*Mk8sAddOnsLogs]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsLogsPtrOutput) Elem() Mk8sAddOnsLogsOutput {
	return o.ApplyT(func(v *Mk8sAddOnsLogs) Mk8sAddOnsLogs {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsLogs
		return ret
	}).(Mk8sAddOnsLogsOutput)
}

func (o Mk8sAddOnsLogsPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsLogs) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsLogsPtrOutput) AuditEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsLogs) *bool {
		if v == nil {
			return nil
		}
		return v.AuditEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsLogsPtrOutput) ExcludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsLogs) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeNamespaces
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAddOnsLogsPtrOutput) IncludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsLogs) *string {
		if v == nil {
			return nil
		}
		return v.IncludeNamespaces
	}).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsMetrics struct {
	_sentinel       *bool                             `pulumi:"_sentinel"`
	ApiServer       *bool                             `pulumi:"apiServer"`
	Cadvisor        *bool                             `pulumi:"cadvisor"`
	CoreDns         *bool                             `pulumi:"coreDns"`
	KubeState       *bool                             `pulumi:"kubeState"`
	Kubelet         *bool                             `pulumi:"kubelet"`
	NodeExporter    *bool                             `pulumi:"nodeExporter"`
	ScrapeAnnotated *Mk8sAddOnsMetricsScrapeAnnotated `pulumi:"scrapeAnnotated"`
}

// Mk8sAddOnsMetricsInput is an input type that accepts Mk8sAddOnsMetricsArgs and Mk8sAddOnsMetricsOutput values.
// You can construct a concrete instance of `Mk8sAddOnsMetricsInput` via:
//
//	Mk8sAddOnsMetricsArgs{...}
type Mk8sAddOnsMetricsInput interface {
	pulumi.Input

	ToMk8sAddOnsMetricsOutput() Mk8sAddOnsMetricsOutput
	ToMk8sAddOnsMetricsOutputWithContext(context.Context) Mk8sAddOnsMetricsOutput
}

type Mk8sAddOnsMetricsArgs struct {
	_sentinel       pulumi.BoolPtrInput                      `pulumi:"_sentinel"`
	ApiServer       pulumi.BoolPtrInput                      `pulumi:"apiServer"`
	Cadvisor        pulumi.BoolPtrInput                      `pulumi:"cadvisor"`
	CoreDns         pulumi.BoolPtrInput                      `pulumi:"coreDns"`
	KubeState       pulumi.BoolPtrInput                      `pulumi:"kubeState"`
	Kubelet         pulumi.BoolPtrInput                      `pulumi:"kubelet"`
	NodeExporter    pulumi.BoolPtrInput                      `pulumi:"nodeExporter"`
	ScrapeAnnotated Mk8sAddOnsMetricsScrapeAnnotatedPtrInput `pulumi:"scrapeAnnotated"`
}

func (Mk8sAddOnsMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsMetrics)(nil)).Elem()
}

func (i Mk8sAddOnsMetricsArgs) ToMk8sAddOnsMetricsOutput() Mk8sAddOnsMetricsOutput {
	return i.ToMk8sAddOnsMetricsOutputWithContext(context.Background())
}

func (i Mk8sAddOnsMetricsArgs) ToMk8sAddOnsMetricsOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsMetricsOutput)
}

func (i Mk8sAddOnsMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsMetrics] {
	return pulumix.Output[Mk8sAddOnsMetrics]{
		OutputState: i.ToMk8sAddOnsMetricsOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsMetricsArgs) ToMk8sAddOnsMetricsPtrOutput() Mk8sAddOnsMetricsPtrOutput {
	return i.ToMk8sAddOnsMetricsPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsMetricsArgs) ToMk8sAddOnsMetricsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsMetricsOutput).ToMk8sAddOnsMetricsPtrOutputWithContext(ctx)
}

// Mk8sAddOnsMetricsPtrInput is an input type that accepts Mk8sAddOnsMetricsArgs, Mk8sAddOnsMetricsPtr and Mk8sAddOnsMetricsPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsMetricsPtrInput` via:
//
//	        Mk8sAddOnsMetricsArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsMetricsPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsMetricsPtrOutput() Mk8sAddOnsMetricsPtrOutput
	ToMk8sAddOnsMetricsPtrOutputWithContext(context.Context) Mk8sAddOnsMetricsPtrOutput
}

type mk8sAddOnsMetricsPtrType Mk8sAddOnsMetricsArgs

func Mk8sAddOnsMetricsPtr(v *Mk8sAddOnsMetricsArgs) Mk8sAddOnsMetricsPtrInput {
	return (*mk8sAddOnsMetricsPtrType)(v)
}

func (*mk8sAddOnsMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsMetrics)(nil)).Elem()
}

func (i *mk8sAddOnsMetricsPtrType) ToMk8sAddOnsMetricsPtrOutput() Mk8sAddOnsMetricsPtrOutput {
	return i.ToMk8sAddOnsMetricsPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsMetricsPtrType) ToMk8sAddOnsMetricsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsMetricsPtrOutput)
}

func (i *mk8sAddOnsMetricsPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsMetrics] {
	return pulumix.Output[*Mk8sAddOnsMetrics]{
		OutputState: i.ToMk8sAddOnsMetricsPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsMetricsOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsMetrics)(nil)).Elem()
}

func (o Mk8sAddOnsMetricsOutput) ToMk8sAddOnsMetricsOutput() Mk8sAddOnsMetricsOutput {
	return o
}

func (o Mk8sAddOnsMetricsOutput) ToMk8sAddOnsMetricsOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsOutput {
	return o
}

func (o Mk8sAddOnsMetricsOutput) ToMk8sAddOnsMetricsPtrOutput() Mk8sAddOnsMetricsPtrOutput {
	return o.ToMk8sAddOnsMetricsPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsMetricsOutput) ToMk8sAddOnsMetricsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsMetrics) *Mk8sAddOnsMetrics {
		return &v
	}).(Mk8sAddOnsMetricsPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsMetrics] {
	return pulumix.Output[Mk8sAddOnsMetrics]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsMetricsOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) ApiServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *bool { return v.ApiServer }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) Cadvisor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *bool { return v.Cadvisor }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) CoreDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *bool { return v.CoreDns }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) KubeState() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *bool { return v.KubeState }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) Kubelet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *bool { return v.Kubelet }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) NodeExporter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *bool { return v.NodeExporter }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsOutput) ScrapeAnnotated() Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetrics) *Mk8sAddOnsMetricsScrapeAnnotated { return v.ScrapeAnnotated }).(Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput)
}

type Mk8sAddOnsMetricsPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsMetrics)(nil)).Elem()
}

func (o Mk8sAddOnsMetricsPtrOutput) ToMk8sAddOnsMetricsPtrOutput() Mk8sAddOnsMetricsPtrOutput {
	return o
}

func (o Mk8sAddOnsMetricsPtrOutput) ToMk8sAddOnsMetricsPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsPtrOutput {
	return o
}

func (o Mk8sAddOnsMetricsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsMetrics] {
	return pulumix.Output[*Mk8sAddOnsMetrics]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsMetricsPtrOutput) Elem() Mk8sAddOnsMetricsOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) Mk8sAddOnsMetrics {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsMetrics
		return ret
	}).(Mk8sAddOnsMetricsOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) ApiServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.ApiServer
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) Cadvisor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.Cadvisor
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) CoreDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.CoreDns
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) KubeState() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.KubeState
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) Kubelet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.Kubelet
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) NodeExporter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.NodeExporter
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsPtrOutput) ScrapeAnnotated() Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetrics) *Mk8sAddOnsMetricsScrapeAnnotated {
		if v == nil {
			return nil
		}
		return v.ScrapeAnnotated
	}).(Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput)
}

type Mk8sAddOnsMetricsScrapeAnnotated struct {
	_sentinel         *bool   `pulumi:"_sentinel"`
	ExcludeNamespaces *string `pulumi:"excludeNamespaces"`
	IncludeNamespaces *string `pulumi:"includeNamespaces"`
	IntervalSeconds   *int    `pulumi:"intervalSeconds"`
	RetainLabels      *string `pulumi:"retainLabels"`
}

// Mk8sAddOnsMetricsScrapeAnnotatedInput is an input type that accepts Mk8sAddOnsMetricsScrapeAnnotatedArgs and Mk8sAddOnsMetricsScrapeAnnotatedOutput values.
// You can construct a concrete instance of `Mk8sAddOnsMetricsScrapeAnnotatedInput` via:
//
//	Mk8sAddOnsMetricsScrapeAnnotatedArgs{...}
type Mk8sAddOnsMetricsScrapeAnnotatedInput interface {
	pulumi.Input

	ToMk8sAddOnsMetricsScrapeAnnotatedOutput() Mk8sAddOnsMetricsScrapeAnnotatedOutput
	ToMk8sAddOnsMetricsScrapeAnnotatedOutputWithContext(context.Context) Mk8sAddOnsMetricsScrapeAnnotatedOutput
}

type Mk8sAddOnsMetricsScrapeAnnotatedArgs struct {
	_sentinel         pulumi.BoolPtrInput   `pulumi:"_sentinel"`
	ExcludeNamespaces pulumi.StringPtrInput `pulumi:"excludeNamespaces"`
	IncludeNamespaces pulumi.StringPtrInput `pulumi:"includeNamespaces"`
	IntervalSeconds   pulumi.IntPtrInput    `pulumi:"intervalSeconds"`
	RetainLabels      pulumi.StringPtrInput `pulumi:"retainLabels"`
}

func (Mk8sAddOnsMetricsScrapeAnnotatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsMetricsScrapeAnnotated)(nil)).Elem()
}

func (i Mk8sAddOnsMetricsScrapeAnnotatedArgs) ToMk8sAddOnsMetricsScrapeAnnotatedOutput() Mk8sAddOnsMetricsScrapeAnnotatedOutput {
	return i.ToMk8sAddOnsMetricsScrapeAnnotatedOutputWithContext(context.Background())
}

func (i Mk8sAddOnsMetricsScrapeAnnotatedArgs) ToMk8sAddOnsMetricsScrapeAnnotatedOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsScrapeAnnotatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsMetricsScrapeAnnotatedOutput)
}

func (i Mk8sAddOnsMetricsScrapeAnnotatedArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsMetricsScrapeAnnotated] {
	return pulumix.Output[Mk8sAddOnsMetricsScrapeAnnotated]{
		OutputState: i.ToMk8sAddOnsMetricsScrapeAnnotatedOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsMetricsScrapeAnnotatedArgs) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutput() Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return i.ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsMetricsScrapeAnnotatedArgs) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsMetricsScrapeAnnotatedOutput).ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(ctx)
}

// Mk8sAddOnsMetricsScrapeAnnotatedPtrInput is an input type that accepts Mk8sAddOnsMetricsScrapeAnnotatedArgs, Mk8sAddOnsMetricsScrapeAnnotatedPtr and Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsMetricsScrapeAnnotatedPtrInput` via:
//
//	        Mk8sAddOnsMetricsScrapeAnnotatedArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsMetricsScrapeAnnotatedPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutput() Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput
	ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(context.Context) Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput
}

type mk8sAddOnsMetricsScrapeAnnotatedPtrType Mk8sAddOnsMetricsScrapeAnnotatedArgs

func Mk8sAddOnsMetricsScrapeAnnotatedPtr(v *Mk8sAddOnsMetricsScrapeAnnotatedArgs) Mk8sAddOnsMetricsScrapeAnnotatedPtrInput {
	return (*mk8sAddOnsMetricsScrapeAnnotatedPtrType)(v)
}

func (*mk8sAddOnsMetricsScrapeAnnotatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsMetricsScrapeAnnotated)(nil)).Elem()
}

func (i *mk8sAddOnsMetricsScrapeAnnotatedPtrType) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutput() Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return i.ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsMetricsScrapeAnnotatedPtrType) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput)
}

func (i *mk8sAddOnsMetricsScrapeAnnotatedPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsMetricsScrapeAnnotated] {
	return pulumix.Output[*Mk8sAddOnsMetricsScrapeAnnotated]{
		OutputState: i.ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsMetricsScrapeAnnotatedOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsMetricsScrapeAnnotatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsMetricsScrapeAnnotated)(nil)).Elem()
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) ToMk8sAddOnsMetricsScrapeAnnotatedOutput() Mk8sAddOnsMetricsScrapeAnnotatedOutput {
	return o
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) ToMk8sAddOnsMetricsScrapeAnnotatedOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsScrapeAnnotatedOutput {
	return o
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutput() Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return o.ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsMetricsScrapeAnnotated) *Mk8sAddOnsMetricsScrapeAnnotated {
		return &v
	}).(Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsMetricsScrapeAnnotated] {
	return pulumix.Output[Mk8sAddOnsMetricsScrapeAnnotated]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetricsScrapeAnnotated) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) ExcludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetricsScrapeAnnotated) *string { return v.ExcludeNamespaces }).(pulumi.StringPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) IncludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetricsScrapeAnnotated) *string { return v.IncludeNamespaces }).(pulumi.StringPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetricsScrapeAnnotated) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedOutput) RetainLabels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsMetricsScrapeAnnotated) *string { return v.RetainLabels }).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsMetricsScrapeAnnotated)(nil)).Elem()
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutput() Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return o
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) ToMk8sAddOnsMetricsScrapeAnnotatedPtrOutputWithContext(ctx context.Context) Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput {
	return o
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsMetricsScrapeAnnotated] {
	return pulumix.Output[*Mk8sAddOnsMetricsScrapeAnnotated]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) Elem() Mk8sAddOnsMetricsScrapeAnnotatedOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetricsScrapeAnnotated) Mk8sAddOnsMetricsScrapeAnnotated {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsMetricsScrapeAnnotated
		return ret
	}).(Mk8sAddOnsMetricsScrapeAnnotatedOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetricsScrapeAnnotated) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) ExcludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetricsScrapeAnnotated) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeNamespaces
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) IncludeNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetricsScrapeAnnotated) *string {
		if v == nil {
			return nil
		}
		return v.IncludeNamespaces
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetricsScrapeAnnotated) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

func (o Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput) RetainLabels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsMetricsScrapeAnnotated) *string {
		if v == nil {
			return nil
		}
		return v.RetainLabels
	}).(pulumi.StringPtrOutput)
}

type Mk8sAddOnsNvidia struct {
	_sentinel     *bool `pulumi:"_sentinel"`
	TaintGpuNodes *bool `pulumi:"taintGpuNodes"`
}

// Mk8sAddOnsNvidiaInput is an input type that accepts Mk8sAddOnsNvidiaArgs and Mk8sAddOnsNvidiaOutput values.
// You can construct a concrete instance of `Mk8sAddOnsNvidiaInput` via:
//
//	Mk8sAddOnsNvidiaArgs{...}
type Mk8sAddOnsNvidiaInput interface {
	pulumi.Input

	ToMk8sAddOnsNvidiaOutput() Mk8sAddOnsNvidiaOutput
	ToMk8sAddOnsNvidiaOutputWithContext(context.Context) Mk8sAddOnsNvidiaOutput
}

type Mk8sAddOnsNvidiaArgs struct {
	_sentinel     pulumi.BoolPtrInput `pulumi:"_sentinel"`
	TaintGpuNodes pulumi.BoolPtrInput `pulumi:"taintGpuNodes"`
}

func (Mk8sAddOnsNvidiaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsNvidia)(nil)).Elem()
}

func (i Mk8sAddOnsNvidiaArgs) ToMk8sAddOnsNvidiaOutput() Mk8sAddOnsNvidiaOutput {
	return i.ToMk8sAddOnsNvidiaOutputWithContext(context.Background())
}

func (i Mk8sAddOnsNvidiaArgs) ToMk8sAddOnsNvidiaOutputWithContext(ctx context.Context) Mk8sAddOnsNvidiaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsNvidiaOutput)
}

func (i Mk8sAddOnsNvidiaArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsNvidia] {
	return pulumix.Output[Mk8sAddOnsNvidia]{
		OutputState: i.ToMk8sAddOnsNvidiaOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAddOnsNvidiaArgs) ToMk8sAddOnsNvidiaPtrOutput() Mk8sAddOnsNvidiaPtrOutput {
	return i.ToMk8sAddOnsNvidiaPtrOutputWithContext(context.Background())
}

func (i Mk8sAddOnsNvidiaArgs) ToMk8sAddOnsNvidiaPtrOutputWithContext(ctx context.Context) Mk8sAddOnsNvidiaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsNvidiaOutput).ToMk8sAddOnsNvidiaPtrOutputWithContext(ctx)
}

// Mk8sAddOnsNvidiaPtrInput is an input type that accepts Mk8sAddOnsNvidiaArgs, Mk8sAddOnsNvidiaPtr and Mk8sAddOnsNvidiaPtrOutput values.
// You can construct a concrete instance of `Mk8sAddOnsNvidiaPtrInput` via:
//
//	        Mk8sAddOnsNvidiaArgs{...}
//
//	or:
//
//	        nil
type Mk8sAddOnsNvidiaPtrInput interface {
	pulumi.Input

	ToMk8sAddOnsNvidiaPtrOutput() Mk8sAddOnsNvidiaPtrOutput
	ToMk8sAddOnsNvidiaPtrOutputWithContext(context.Context) Mk8sAddOnsNvidiaPtrOutput
}

type mk8sAddOnsNvidiaPtrType Mk8sAddOnsNvidiaArgs

func Mk8sAddOnsNvidiaPtr(v *Mk8sAddOnsNvidiaArgs) Mk8sAddOnsNvidiaPtrInput {
	return (*mk8sAddOnsNvidiaPtrType)(v)
}

func (*mk8sAddOnsNvidiaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsNvidia)(nil)).Elem()
}

func (i *mk8sAddOnsNvidiaPtrType) ToMk8sAddOnsNvidiaPtrOutput() Mk8sAddOnsNvidiaPtrOutput {
	return i.ToMk8sAddOnsNvidiaPtrOutputWithContext(context.Background())
}

func (i *mk8sAddOnsNvidiaPtrType) ToMk8sAddOnsNvidiaPtrOutputWithContext(ctx context.Context) Mk8sAddOnsNvidiaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAddOnsNvidiaPtrOutput)
}

func (i *mk8sAddOnsNvidiaPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsNvidia] {
	return pulumix.Output[*Mk8sAddOnsNvidia]{
		OutputState: i.ToMk8sAddOnsNvidiaPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAddOnsNvidiaOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsNvidiaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAddOnsNvidia)(nil)).Elem()
}

func (o Mk8sAddOnsNvidiaOutput) ToMk8sAddOnsNvidiaOutput() Mk8sAddOnsNvidiaOutput {
	return o
}

func (o Mk8sAddOnsNvidiaOutput) ToMk8sAddOnsNvidiaOutputWithContext(ctx context.Context) Mk8sAddOnsNvidiaOutput {
	return o
}

func (o Mk8sAddOnsNvidiaOutput) ToMk8sAddOnsNvidiaPtrOutput() Mk8sAddOnsNvidiaPtrOutput {
	return o.ToMk8sAddOnsNvidiaPtrOutputWithContext(context.Background())
}

func (o Mk8sAddOnsNvidiaOutput) ToMk8sAddOnsNvidiaPtrOutputWithContext(ctx context.Context) Mk8sAddOnsNvidiaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAddOnsNvidia) *Mk8sAddOnsNvidia {
		return &v
	}).(Mk8sAddOnsNvidiaPtrOutput)
}

func (o Mk8sAddOnsNvidiaOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAddOnsNvidia] {
	return pulumix.Output[Mk8sAddOnsNvidia]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsNvidiaOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsNvidia) *bool { return v._sentinel }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsNvidiaOutput) TaintGpuNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAddOnsNvidia) *bool { return v.TaintGpuNodes }).(pulumi.BoolPtrOutput)
}

type Mk8sAddOnsNvidiaPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAddOnsNvidiaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAddOnsNvidia)(nil)).Elem()
}

func (o Mk8sAddOnsNvidiaPtrOutput) ToMk8sAddOnsNvidiaPtrOutput() Mk8sAddOnsNvidiaPtrOutput {
	return o
}

func (o Mk8sAddOnsNvidiaPtrOutput) ToMk8sAddOnsNvidiaPtrOutputWithContext(ctx context.Context) Mk8sAddOnsNvidiaPtrOutput {
	return o
}

func (o Mk8sAddOnsNvidiaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAddOnsNvidia] {
	return pulumix.Output[*Mk8sAddOnsNvidia]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAddOnsNvidiaPtrOutput) Elem() Mk8sAddOnsNvidiaOutput {
	return o.ApplyT(func(v *Mk8sAddOnsNvidia) Mk8sAddOnsNvidia {
		if v != nil {
			return *v
		}
		var ret Mk8sAddOnsNvidia
		return ret
	}).(Mk8sAddOnsNvidiaOutput)
}

func (o Mk8sAddOnsNvidiaPtrOutput) _sentinel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsNvidia) *bool {
		if v == nil {
			return nil
		}
		return v._sentinel
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAddOnsNvidiaPtrOutput) TaintGpuNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAddOnsNvidia) *bool {
		if v == nil {
			return nil
		}
		return v.TaintGpuNodes
	}).(pulumi.BoolPtrOutput)
}

type Mk8sAwsProvider struct {
	Autoscaler           *Mk8sAwsProviderAutoscaler       `pulumi:"autoscaler"`
	AwsTags              map[string]string                `pulumi:"awsTags"`
	DeployRoleArn        string                           `pulumi:"deployRoleArn"`
	DeployRoleChains     []Mk8sAwsProviderDeployRoleChain `pulumi:"deployRoleChains"`
	DiskEncryptionKeyArn *string                          `pulumi:"diskEncryptionKeyArn"`
	Image                Mk8sAwsProviderImage             `pulumi:"image"`
	KeyPair              *string                          `pulumi:"keyPair"`
	Networking           Mk8sAwsProviderNetworking        `pulumi:"networking"`
	NodePools            []Mk8sAwsProviderNodePool        `pulumi:"nodePools"`
	PreInstallScript     *string                          `pulumi:"preInstallScript"`
	Region               string                           `pulumi:"region"`
	SecurityGroupIds     []string                         `pulumi:"securityGroupIds"`
	SkipCreateRoles      *bool                            `pulumi:"skipCreateRoles"`
	VpcId                string                           `pulumi:"vpcId"`
}

// Mk8sAwsProviderInput is an input type that accepts Mk8sAwsProviderArgs and Mk8sAwsProviderOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderInput` via:
//
//	Mk8sAwsProviderArgs{...}
type Mk8sAwsProviderInput interface {
	pulumi.Input

	ToMk8sAwsProviderOutput() Mk8sAwsProviderOutput
	ToMk8sAwsProviderOutputWithContext(context.Context) Mk8sAwsProviderOutput
}

type Mk8sAwsProviderArgs struct {
	Autoscaler           Mk8sAwsProviderAutoscalerPtrInput        `pulumi:"autoscaler"`
	AwsTags              pulumi.StringMapInput                    `pulumi:"awsTags"`
	DeployRoleArn        pulumi.StringInput                       `pulumi:"deployRoleArn"`
	DeployRoleChains     Mk8sAwsProviderDeployRoleChainArrayInput `pulumi:"deployRoleChains"`
	DiskEncryptionKeyArn pulumi.StringPtrInput                    `pulumi:"diskEncryptionKeyArn"`
	Image                Mk8sAwsProviderImageInput                `pulumi:"image"`
	KeyPair              pulumi.StringPtrInput                    `pulumi:"keyPair"`
	Networking           Mk8sAwsProviderNetworkingInput           `pulumi:"networking"`
	NodePools            Mk8sAwsProviderNodePoolArrayInput        `pulumi:"nodePools"`
	PreInstallScript     pulumi.StringPtrInput                    `pulumi:"preInstallScript"`
	Region               pulumi.StringInput                       `pulumi:"region"`
	SecurityGroupIds     pulumi.StringArrayInput                  `pulumi:"securityGroupIds"`
	SkipCreateRoles      pulumi.BoolPtrInput                      `pulumi:"skipCreateRoles"`
	VpcId                pulumi.StringInput                       `pulumi:"vpcId"`
}

func (Mk8sAwsProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProvider)(nil)).Elem()
}

func (i Mk8sAwsProviderArgs) ToMk8sAwsProviderOutput() Mk8sAwsProviderOutput {
	return i.ToMk8sAwsProviderOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderArgs) ToMk8sAwsProviderOutputWithContext(ctx context.Context) Mk8sAwsProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderOutput)
}

func (i Mk8sAwsProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProvider] {
	return pulumix.Output[Mk8sAwsProvider]{
		OutputState: i.ToMk8sAwsProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAwsProviderArgs) ToMk8sAwsProviderPtrOutput() Mk8sAwsProviderPtrOutput {
	return i.ToMk8sAwsProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderArgs) ToMk8sAwsProviderPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderOutput).ToMk8sAwsProviderPtrOutputWithContext(ctx)
}

// Mk8sAwsProviderPtrInput is an input type that accepts Mk8sAwsProviderArgs, Mk8sAwsProviderPtr and Mk8sAwsProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderPtrInput` via:
//
//	        Mk8sAwsProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sAwsProviderPtrInput interface {
	pulumi.Input

	ToMk8sAwsProviderPtrOutput() Mk8sAwsProviderPtrOutput
	ToMk8sAwsProviderPtrOutputWithContext(context.Context) Mk8sAwsProviderPtrOutput
}

type mk8sAwsProviderPtrType Mk8sAwsProviderArgs

func Mk8sAwsProviderPtr(v *Mk8sAwsProviderArgs) Mk8sAwsProviderPtrInput {
	return (*mk8sAwsProviderPtrType)(v)
}

func (*mk8sAwsProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProvider)(nil)).Elem()
}

func (i *mk8sAwsProviderPtrType) ToMk8sAwsProviderPtrOutput() Mk8sAwsProviderPtrOutput {
	return i.ToMk8sAwsProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sAwsProviderPtrType) ToMk8sAwsProviderPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderPtrOutput)
}

func (i *mk8sAwsProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProvider] {
	return pulumix.Output[*Mk8sAwsProvider]{
		OutputState: i.ToMk8sAwsProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProvider)(nil)).Elem()
}

func (o Mk8sAwsProviderOutput) ToMk8sAwsProviderOutput() Mk8sAwsProviderOutput {
	return o
}

func (o Mk8sAwsProviderOutput) ToMk8sAwsProviderOutputWithContext(ctx context.Context) Mk8sAwsProviderOutput {
	return o
}

func (o Mk8sAwsProviderOutput) ToMk8sAwsProviderPtrOutput() Mk8sAwsProviderPtrOutput {
	return o.ToMk8sAwsProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sAwsProviderOutput) ToMk8sAwsProviderPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAwsProvider) *Mk8sAwsProvider {
		return &v
	}).(Mk8sAwsProviderPtrOutput)
}

func (o Mk8sAwsProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProvider] {
	return pulumix.Output[Mk8sAwsProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderOutput) Autoscaler() Mk8sAwsProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) *Mk8sAwsProviderAutoscaler { return v.Autoscaler }).(Mk8sAwsProviderAutoscalerPtrOutput)
}

func (o Mk8sAwsProviderOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

func (o Mk8sAwsProviderOutput) DeployRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) string { return v.DeployRoleArn }).(pulumi.StringOutput)
}

func (o Mk8sAwsProviderOutput) DeployRoleChains() Mk8sAwsProviderDeployRoleChainArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) []Mk8sAwsProviderDeployRoleChain { return v.DeployRoleChains }).(Mk8sAwsProviderDeployRoleChainArrayOutput)
}

func (o Mk8sAwsProviderOutput) DiskEncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) *string { return v.DiskEncryptionKeyArn }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderOutput) Image() Mk8sAwsProviderImageOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) Mk8sAwsProviderImage { return v.Image }).(Mk8sAwsProviderImageOutput)
}

func (o Mk8sAwsProviderOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) *string { return v.KeyPair }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderOutput) Networking() Mk8sAwsProviderNetworkingOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) Mk8sAwsProviderNetworking { return v.Networking }).(Mk8sAwsProviderNetworkingOutput)
}

func (o Mk8sAwsProviderOutput) NodePools() Mk8sAwsProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) []Mk8sAwsProviderNodePool { return v.NodePools }).(Mk8sAwsProviderNodePoolArrayOutput)
}

func (o Mk8sAwsProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) string { return v.Region }).(pulumi.StringOutput)
}

func (o Mk8sAwsProviderOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o Mk8sAwsProviderOutput) SkipCreateRoles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) *bool { return v.SkipCreateRoles }).(pulumi.BoolPtrOutput)
}

func (o Mk8sAwsProviderOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sAwsProvider) string { return v.VpcId }).(pulumi.StringOutput)
}

type Mk8sAwsProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProvider)(nil)).Elem()
}

func (o Mk8sAwsProviderPtrOutput) ToMk8sAwsProviderPtrOutput() Mk8sAwsProviderPtrOutput {
	return o
}

func (o Mk8sAwsProviderPtrOutput) ToMk8sAwsProviderPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderPtrOutput {
	return o
}

func (o Mk8sAwsProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProvider] {
	return pulumix.Output[*Mk8sAwsProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderPtrOutput) Elem() Mk8sAwsProviderOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) Mk8sAwsProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sAwsProvider
		return ret
	}).(Mk8sAwsProviderOutput)
}

func (o Mk8sAwsProviderPtrOutput) Autoscaler() Mk8sAwsProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *Mk8sAwsProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sAwsProviderAutoscalerPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

func (o Mk8sAwsProviderPtrOutput) DeployRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *string {
		if v == nil {
			return nil
		}
		return &v.DeployRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) DeployRoleChains() Mk8sAwsProviderDeployRoleChainArrayOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) []Mk8sAwsProviderDeployRoleChain {
		if v == nil {
			return nil
		}
		return v.DeployRoleChains
	}).(Mk8sAwsProviderDeployRoleChainArrayOutput)
}

func (o Mk8sAwsProviderPtrOutput) DiskEncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionKeyArn
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) Image() Mk8sAwsProviderImagePtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *Mk8sAwsProviderImage {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(Mk8sAwsProviderImagePtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *string {
		if v == nil {
			return nil
		}
		return v.KeyPair
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) Networking() Mk8sAwsProviderNetworkingPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *Mk8sAwsProviderNetworking {
		if v == nil {
			return nil
		}
		return &v.Networking
	}).(Mk8sAwsProviderNetworkingPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) NodePools() Mk8sAwsProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) []Mk8sAwsProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sAwsProviderNodePoolArrayOutput)
}

func (o Mk8sAwsProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sAwsProviderPtrOutput) SkipCreateRoles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *bool {
		if v == nil {
			return nil
		}
		return v.SkipCreateRoles
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sAwsProviderPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProvider) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sAwsProviderAutoscalerInput is an input type that accepts Mk8sAwsProviderAutoscalerArgs and Mk8sAwsProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderAutoscalerInput` via:
//
//	Mk8sAwsProviderAutoscalerArgs{...}
type Mk8sAwsProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sAwsProviderAutoscalerOutput() Mk8sAwsProviderAutoscalerOutput
	ToMk8sAwsProviderAutoscalerOutputWithContext(context.Context) Mk8sAwsProviderAutoscalerOutput
}

type Mk8sAwsProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sAwsProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sAwsProviderAutoscalerArgs) ToMk8sAwsProviderAutoscalerOutput() Mk8sAwsProviderAutoscalerOutput {
	return i.ToMk8sAwsProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderAutoscalerArgs) ToMk8sAwsProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sAwsProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderAutoscalerOutput)
}

func (i Mk8sAwsProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderAutoscaler] {
	return pulumix.Output[Mk8sAwsProviderAutoscaler]{
		OutputState: i.ToMk8sAwsProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAwsProviderAutoscalerArgs) ToMk8sAwsProviderAutoscalerPtrOutput() Mk8sAwsProviderAutoscalerPtrOutput {
	return i.ToMk8sAwsProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderAutoscalerArgs) ToMk8sAwsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderAutoscalerOutput).ToMk8sAwsProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sAwsProviderAutoscalerPtrInput is an input type that accepts Mk8sAwsProviderAutoscalerArgs, Mk8sAwsProviderAutoscalerPtr and Mk8sAwsProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderAutoscalerPtrInput` via:
//
//	        Mk8sAwsProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sAwsProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sAwsProviderAutoscalerPtrOutput() Mk8sAwsProviderAutoscalerPtrOutput
	ToMk8sAwsProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sAwsProviderAutoscalerPtrOutput
}

type mk8sAwsProviderAutoscalerPtrType Mk8sAwsProviderAutoscalerArgs

func Mk8sAwsProviderAutoscalerPtr(v *Mk8sAwsProviderAutoscalerArgs) Mk8sAwsProviderAutoscalerPtrInput {
	return (*mk8sAwsProviderAutoscalerPtrType)(v)
}

func (*mk8sAwsProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sAwsProviderAutoscalerPtrType) ToMk8sAwsProviderAutoscalerPtrOutput() Mk8sAwsProviderAutoscalerPtrOutput {
	return i.ToMk8sAwsProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sAwsProviderAutoscalerPtrType) ToMk8sAwsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderAutoscalerPtrOutput)
}

func (i *mk8sAwsProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProviderAutoscaler] {
	return pulumix.Output[*Mk8sAwsProviderAutoscaler]{
		OutputState: i.ToMk8sAwsProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sAwsProviderAutoscalerOutput) ToMk8sAwsProviderAutoscalerOutput() Mk8sAwsProviderAutoscalerOutput {
	return o
}

func (o Mk8sAwsProviderAutoscalerOutput) ToMk8sAwsProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sAwsProviderAutoscalerOutput {
	return o
}

func (o Mk8sAwsProviderAutoscalerOutput) ToMk8sAwsProviderAutoscalerPtrOutput() Mk8sAwsProviderAutoscalerPtrOutput {
	return o.ToMk8sAwsProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sAwsProviderAutoscalerOutput) ToMk8sAwsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAwsProviderAutoscaler) *Mk8sAwsProviderAutoscaler {
		return &v
	}).(Mk8sAwsProviderAutoscalerPtrOutput)
}

func (o Mk8sAwsProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderAutoscaler] {
	return pulumix.Output[Mk8sAwsProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sAwsProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sAwsProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) ToMk8sAwsProviderAutoscalerPtrOutput() Mk8sAwsProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) ToMk8sAwsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProviderAutoscaler] {
	return pulumix.Output[*Mk8sAwsProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) Elem() Mk8sAwsProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderAutoscaler) Mk8sAwsProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sAwsProviderAutoscaler
		return ret
	}).(Mk8sAwsProviderAutoscalerOutput)
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sAwsProviderDeployRoleChain struct {
	ExternalId        *string `pulumi:"externalId"`
	RoleArn           string  `pulumi:"roleArn"`
	SessionNamePrefix *string `pulumi:"sessionNamePrefix"`
}

// Mk8sAwsProviderDeployRoleChainInput is an input type that accepts Mk8sAwsProviderDeployRoleChainArgs and Mk8sAwsProviderDeployRoleChainOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderDeployRoleChainInput` via:
//
//	Mk8sAwsProviderDeployRoleChainArgs{...}
type Mk8sAwsProviderDeployRoleChainInput interface {
	pulumi.Input

	ToMk8sAwsProviderDeployRoleChainOutput() Mk8sAwsProviderDeployRoleChainOutput
	ToMk8sAwsProviderDeployRoleChainOutputWithContext(context.Context) Mk8sAwsProviderDeployRoleChainOutput
}

type Mk8sAwsProviderDeployRoleChainArgs struct {
	ExternalId        pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn           pulumi.StringInput    `pulumi:"roleArn"`
	SessionNamePrefix pulumi.StringPtrInput `pulumi:"sessionNamePrefix"`
}

func (Mk8sAwsProviderDeployRoleChainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderDeployRoleChain)(nil)).Elem()
}

func (i Mk8sAwsProviderDeployRoleChainArgs) ToMk8sAwsProviderDeployRoleChainOutput() Mk8sAwsProviderDeployRoleChainOutput {
	return i.ToMk8sAwsProviderDeployRoleChainOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderDeployRoleChainArgs) ToMk8sAwsProviderDeployRoleChainOutputWithContext(ctx context.Context) Mk8sAwsProviderDeployRoleChainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderDeployRoleChainOutput)
}

func (i Mk8sAwsProviderDeployRoleChainArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderDeployRoleChain] {
	return pulumix.Output[Mk8sAwsProviderDeployRoleChain]{
		OutputState: i.ToMk8sAwsProviderDeployRoleChainOutputWithContext(ctx).OutputState,
	}
}

// Mk8sAwsProviderDeployRoleChainArrayInput is an input type that accepts Mk8sAwsProviderDeployRoleChainArray and Mk8sAwsProviderDeployRoleChainArrayOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderDeployRoleChainArrayInput` via:
//
//	Mk8sAwsProviderDeployRoleChainArray{ Mk8sAwsProviderDeployRoleChainArgs{...} }
type Mk8sAwsProviderDeployRoleChainArrayInput interface {
	pulumi.Input

	ToMk8sAwsProviderDeployRoleChainArrayOutput() Mk8sAwsProviderDeployRoleChainArrayOutput
	ToMk8sAwsProviderDeployRoleChainArrayOutputWithContext(context.Context) Mk8sAwsProviderDeployRoleChainArrayOutput
}

type Mk8sAwsProviderDeployRoleChainArray []Mk8sAwsProviderDeployRoleChainInput

func (Mk8sAwsProviderDeployRoleChainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sAwsProviderDeployRoleChain)(nil)).Elem()
}

func (i Mk8sAwsProviderDeployRoleChainArray) ToMk8sAwsProviderDeployRoleChainArrayOutput() Mk8sAwsProviderDeployRoleChainArrayOutput {
	return i.ToMk8sAwsProviderDeployRoleChainArrayOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderDeployRoleChainArray) ToMk8sAwsProviderDeployRoleChainArrayOutputWithContext(ctx context.Context) Mk8sAwsProviderDeployRoleChainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderDeployRoleChainArrayOutput)
}

func (i Mk8sAwsProviderDeployRoleChainArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sAwsProviderDeployRoleChain] {
	return pulumix.Output[[]Mk8sAwsProviderDeployRoleChain]{
		OutputState: i.ToMk8sAwsProviderDeployRoleChainArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderDeployRoleChainOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderDeployRoleChainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderDeployRoleChain)(nil)).Elem()
}

func (o Mk8sAwsProviderDeployRoleChainOutput) ToMk8sAwsProviderDeployRoleChainOutput() Mk8sAwsProviderDeployRoleChainOutput {
	return o
}

func (o Mk8sAwsProviderDeployRoleChainOutput) ToMk8sAwsProviderDeployRoleChainOutputWithContext(ctx context.Context) Mk8sAwsProviderDeployRoleChainOutput {
	return o
}

func (o Mk8sAwsProviderDeployRoleChainOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderDeployRoleChain] {
	return pulumix.Output[Mk8sAwsProviderDeployRoleChain]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderDeployRoleChainOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderDeployRoleChain) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderDeployRoleChainOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sAwsProviderDeployRoleChain) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o Mk8sAwsProviderDeployRoleChainOutput) SessionNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderDeployRoleChain) *string { return v.SessionNamePrefix }).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderDeployRoleChainArrayOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderDeployRoleChainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sAwsProviderDeployRoleChain)(nil)).Elem()
}

func (o Mk8sAwsProviderDeployRoleChainArrayOutput) ToMk8sAwsProviderDeployRoleChainArrayOutput() Mk8sAwsProviderDeployRoleChainArrayOutput {
	return o
}

func (o Mk8sAwsProviderDeployRoleChainArrayOutput) ToMk8sAwsProviderDeployRoleChainArrayOutputWithContext(ctx context.Context) Mk8sAwsProviderDeployRoleChainArrayOutput {
	return o
}

func (o Mk8sAwsProviderDeployRoleChainArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sAwsProviderDeployRoleChain] {
	return pulumix.Output[[]Mk8sAwsProviderDeployRoleChain]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderDeployRoleChainArrayOutput) Index(i pulumi.IntInput) Mk8sAwsProviderDeployRoleChainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sAwsProviderDeployRoleChain {
		return vs[0].([]Mk8sAwsProviderDeployRoleChain)[vs[1].(int)]
	}).(Mk8sAwsProviderDeployRoleChainOutput)
}

type Mk8sAwsProviderImage struct {
	Exact       *string `pulumi:"exact"`
	Recommended *string `pulumi:"recommended"`
}

// Mk8sAwsProviderImageInput is an input type that accepts Mk8sAwsProviderImageArgs and Mk8sAwsProviderImageOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderImageInput` via:
//
//	Mk8sAwsProviderImageArgs{...}
type Mk8sAwsProviderImageInput interface {
	pulumi.Input

	ToMk8sAwsProviderImageOutput() Mk8sAwsProviderImageOutput
	ToMk8sAwsProviderImageOutputWithContext(context.Context) Mk8sAwsProviderImageOutput
}

type Mk8sAwsProviderImageArgs struct {
	Exact       pulumi.StringPtrInput `pulumi:"exact"`
	Recommended pulumi.StringPtrInput `pulumi:"recommended"`
}

func (Mk8sAwsProviderImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderImage)(nil)).Elem()
}

func (i Mk8sAwsProviderImageArgs) ToMk8sAwsProviderImageOutput() Mk8sAwsProviderImageOutput {
	return i.ToMk8sAwsProviderImageOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderImageArgs) ToMk8sAwsProviderImageOutputWithContext(ctx context.Context) Mk8sAwsProviderImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderImageOutput)
}

func (i Mk8sAwsProviderImageArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderImage] {
	return pulumix.Output[Mk8sAwsProviderImage]{
		OutputState: i.ToMk8sAwsProviderImageOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAwsProviderImageArgs) ToMk8sAwsProviderImagePtrOutput() Mk8sAwsProviderImagePtrOutput {
	return i.ToMk8sAwsProviderImagePtrOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderImageArgs) ToMk8sAwsProviderImagePtrOutputWithContext(ctx context.Context) Mk8sAwsProviderImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderImageOutput).ToMk8sAwsProviderImagePtrOutputWithContext(ctx)
}

// Mk8sAwsProviderImagePtrInput is an input type that accepts Mk8sAwsProviderImageArgs, Mk8sAwsProviderImagePtr and Mk8sAwsProviderImagePtrOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderImagePtrInput` via:
//
//	        Mk8sAwsProviderImageArgs{...}
//
//	or:
//
//	        nil
type Mk8sAwsProviderImagePtrInput interface {
	pulumi.Input

	ToMk8sAwsProviderImagePtrOutput() Mk8sAwsProviderImagePtrOutput
	ToMk8sAwsProviderImagePtrOutputWithContext(context.Context) Mk8sAwsProviderImagePtrOutput
}

type mk8sAwsProviderImagePtrType Mk8sAwsProviderImageArgs

func Mk8sAwsProviderImagePtr(v *Mk8sAwsProviderImageArgs) Mk8sAwsProviderImagePtrInput {
	return (*mk8sAwsProviderImagePtrType)(v)
}

func (*mk8sAwsProviderImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProviderImage)(nil)).Elem()
}

func (i *mk8sAwsProviderImagePtrType) ToMk8sAwsProviderImagePtrOutput() Mk8sAwsProviderImagePtrOutput {
	return i.ToMk8sAwsProviderImagePtrOutputWithContext(context.Background())
}

func (i *mk8sAwsProviderImagePtrType) ToMk8sAwsProviderImagePtrOutputWithContext(ctx context.Context) Mk8sAwsProviderImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderImagePtrOutput)
}

func (i *mk8sAwsProviderImagePtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProviderImage] {
	return pulumix.Output[*Mk8sAwsProviderImage]{
		OutputState: i.ToMk8sAwsProviderImagePtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderImageOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderImage)(nil)).Elem()
}

func (o Mk8sAwsProviderImageOutput) ToMk8sAwsProviderImageOutput() Mk8sAwsProviderImageOutput {
	return o
}

func (o Mk8sAwsProviderImageOutput) ToMk8sAwsProviderImageOutputWithContext(ctx context.Context) Mk8sAwsProviderImageOutput {
	return o
}

func (o Mk8sAwsProviderImageOutput) ToMk8sAwsProviderImagePtrOutput() Mk8sAwsProviderImagePtrOutput {
	return o.ToMk8sAwsProviderImagePtrOutputWithContext(context.Background())
}

func (o Mk8sAwsProviderImageOutput) ToMk8sAwsProviderImagePtrOutputWithContext(ctx context.Context) Mk8sAwsProviderImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAwsProviderImage) *Mk8sAwsProviderImage {
		return &v
	}).(Mk8sAwsProviderImagePtrOutput)
}

func (o Mk8sAwsProviderImageOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderImage] {
	return pulumix.Output[Mk8sAwsProviderImage]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderImageOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderImage) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderImageOutput) Recommended() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderImage) *string { return v.Recommended }).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderImagePtrOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProviderImage)(nil)).Elem()
}

func (o Mk8sAwsProviderImagePtrOutput) ToMk8sAwsProviderImagePtrOutput() Mk8sAwsProviderImagePtrOutput {
	return o
}

func (o Mk8sAwsProviderImagePtrOutput) ToMk8sAwsProviderImagePtrOutputWithContext(ctx context.Context) Mk8sAwsProviderImagePtrOutput {
	return o
}

func (o Mk8sAwsProviderImagePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProviderImage] {
	return pulumix.Output[*Mk8sAwsProviderImage]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderImagePtrOutput) Elem() Mk8sAwsProviderImageOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderImage) Mk8sAwsProviderImage {
		if v != nil {
			return *v
		}
		var ret Mk8sAwsProviderImage
		return ret
	}).(Mk8sAwsProviderImageOutput)
}

func (o Mk8sAwsProviderImagePtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderImage) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderImagePtrOutput) Recommended() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderImage) *string {
		if v == nil {
			return nil
		}
		return v.Recommended
	}).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderNetworking struct {
	PodNetwork     *string `pulumi:"podNetwork"`
	ServiceNetwork *string `pulumi:"serviceNetwork"`
}

// Mk8sAwsProviderNetworkingInput is an input type that accepts Mk8sAwsProviderNetworkingArgs and Mk8sAwsProviderNetworkingOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderNetworkingInput` via:
//
//	Mk8sAwsProviderNetworkingArgs{...}
type Mk8sAwsProviderNetworkingInput interface {
	pulumi.Input

	ToMk8sAwsProviderNetworkingOutput() Mk8sAwsProviderNetworkingOutput
	ToMk8sAwsProviderNetworkingOutputWithContext(context.Context) Mk8sAwsProviderNetworkingOutput
}

type Mk8sAwsProviderNetworkingArgs struct {
	PodNetwork     pulumi.StringPtrInput `pulumi:"podNetwork"`
	ServiceNetwork pulumi.StringPtrInput `pulumi:"serviceNetwork"`
}

func (Mk8sAwsProviderNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNetworking)(nil)).Elem()
}

func (i Mk8sAwsProviderNetworkingArgs) ToMk8sAwsProviderNetworkingOutput() Mk8sAwsProviderNetworkingOutput {
	return i.ToMk8sAwsProviderNetworkingOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderNetworkingArgs) ToMk8sAwsProviderNetworkingOutputWithContext(ctx context.Context) Mk8sAwsProviderNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNetworkingOutput)
}

func (i Mk8sAwsProviderNetworkingArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNetworking] {
	return pulumix.Output[Mk8sAwsProviderNetworking]{
		OutputState: i.ToMk8sAwsProviderNetworkingOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sAwsProviderNetworkingArgs) ToMk8sAwsProviderNetworkingPtrOutput() Mk8sAwsProviderNetworkingPtrOutput {
	return i.ToMk8sAwsProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderNetworkingArgs) ToMk8sAwsProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNetworkingOutput).ToMk8sAwsProviderNetworkingPtrOutputWithContext(ctx)
}

// Mk8sAwsProviderNetworkingPtrInput is an input type that accepts Mk8sAwsProviderNetworkingArgs, Mk8sAwsProviderNetworkingPtr and Mk8sAwsProviderNetworkingPtrOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderNetworkingPtrInput` via:
//
//	        Mk8sAwsProviderNetworkingArgs{...}
//
//	or:
//
//	        nil
type Mk8sAwsProviderNetworkingPtrInput interface {
	pulumi.Input

	ToMk8sAwsProviderNetworkingPtrOutput() Mk8sAwsProviderNetworkingPtrOutput
	ToMk8sAwsProviderNetworkingPtrOutputWithContext(context.Context) Mk8sAwsProviderNetworkingPtrOutput
}

type mk8sAwsProviderNetworkingPtrType Mk8sAwsProviderNetworkingArgs

func Mk8sAwsProviderNetworkingPtr(v *Mk8sAwsProviderNetworkingArgs) Mk8sAwsProviderNetworkingPtrInput {
	return (*mk8sAwsProviderNetworkingPtrType)(v)
}

func (*mk8sAwsProviderNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProviderNetworking)(nil)).Elem()
}

func (i *mk8sAwsProviderNetworkingPtrType) ToMk8sAwsProviderNetworkingPtrOutput() Mk8sAwsProviderNetworkingPtrOutput {
	return i.ToMk8sAwsProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i *mk8sAwsProviderNetworkingPtrType) ToMk8sAwsProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNetworkingPtrOutput)
}

func (i *mk8sAwsProviderNetworkingPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProviderNetworking] {
	return pulumix.Output[*Mk8sAwsProviderNetworking]{
		OutputState: i.ToMk8sAwsProviderNetworkingPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderNetworkingOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNetworking)(nil)).Elem()
}

func (o Mk8sAwsProviderNetworkingOutput) ToMk8sAwsProviderNetworkingOutput() Mk8sAwsProviderNetworkingOutput {
	return o
}

func (o Mk8sAwsProviderNetworkingOutput) ToMk8sAwsProviderNetworkingOutputWithContext(ctx context.Context) Mk8sAwsProviderNetworkingOutput {
	return o
}

func (o Mk8sAwsProviderNetworkingOutput) ToMk8sAwsProviderNetworkingPtrOutput() Mk8sAwsProviderNetworkingPtrOutput {
	return o.ToMk8sAwsProviderNetworkingPtrOutputWithContext(context.Background())
}

func (o Mk8sAwsProviderNetworkingOutput) ToMk8sAwsProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sAwsProviderNetworking) *Mk8sAwsProviderNetworking {
		return &v
	}).(Mk8sAwsProviderNetworkingPtrOutput)
}

func (o Mk8sAwsProviderNetworkingOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNetworking] {
	return pulumix.Output[Mk8sAwsProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderNetworkingOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNetworking) *string { return v.PodNetwork }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderNetworkingOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNetworking) *string { return v.ServiceNetwork }).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderNetworkingPtrOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sAwsProviderNetworking)(nil)).Elem()
}

func (o Mk8sAwsProviderNetworkingPtrOutput) ToMk8sAwsProviderNetworkingPtrOutput() Mk8sAwsProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sAwsProviderNetworkingPtrOutput) ToMk8sAwsProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sAwsProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sAwsProviderNetworkingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sAwsProviderNetworking] {
	return pulumix.Output[*Mk8sAwsProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderNetworkingPtrOutput) Elem() Mk8sAwsProviderNetworkingOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderNetworking) Mk8sAwsProviderNetworking {
		if v != nil {
			return *v
		}
		var ret Mk8sAwsProviderNetworking
		return ret
	}).(Mk8sAwsProviderNetworkingOutput)
}

func (o Mk8sAwsProviderNetworkingPtrOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.PodNetwork
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderNetworkingPtrOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sAwsProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNetwork
	}).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderNodePool struct {
	BootDiskSize                        *int                                 `pulumi:"bootDiskSize"`
	ExtraSecurityGroupIds               []string                             `pulumi:"extraSecurityGroupIds"`
	InstanceTypes                       []string                             `pulumi:"instanceTypes"`
	Labels                              map[string]string                    `pulumi:"labels"`
	MaxSize                             *int                                 `pulumi:"maxSize"`
	MinSize                             *int                                 `pulumi:"minSize"`
	Name                                string                               `pulumi:"name"`
	OnDemandBaseCapacity                *int                                 `pulumi:"onDemandBaseCapacity"`
	OnDemandPercentageAboveBaseCapacity *int                                 `pulumi:"onDemandPercentageAboveBaseCapacity"`
	OverrideImage                       Mk8sAwsProviderNodePoolOverrideImage `pulumi:"overrideImage"`
	SpotAllocationStrategy              *string                              `pulumi:"spotAllocationStrategy"`
	SubnetIds                           []string                             `pulumi:"subnetIds"`
	Taints                              []Mk8sAwsProviderNodePoolTaint       `pulumi:"taints"`
}

// Mk8sAwsProviderNodePoolInput is an input type that accepts Mk8sAwsProviderNodePoolArgs and Mk8sAwsProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderNodePoolInput` via:
//
//	Mk8sAwsProviderNodePoolArgs{...}
type Mk8sAwsProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sAwsProviderNodePoolOutput() Mk8sAwsProviderNodePoolOutput
	ToMk8sAwsProviderNodePoolOutputWithContext(context.Context) Mk8sAwsProviderNodePoolOutput
}

type Mk8sAwsProviderNodePoolArgs struct {
	BootDiskSize                        pulumi.IntPtrInput                        `pulumi:"bootDiskSize"`
	ExtraSecurityGroupIds               pulumi.StringArrayInput                   `pulumi:"extraSecurityGroupIds"`
	InstanceTypes                       pulumi.StringArrayInput                   `pulumi:"instanceTypes"`
	Labels                              pulumi.StringMapInput                     `pulumi:"labels"`
	MaxSize                             pulumi.IntPtrInput                        `pulumi:"maxSize"`
	MinSize                             pulumi.IntPtrInput                        `pulumi:"minSize"`
	Name                                pulumi.StringInput                        `pulumi:"name"`
	OnDemandBaseCapacity                pulumi.IntPtrInput                        `pulumi:"onDemandBaseCapacity"`
	OnDemandPercentageAboveBaseCapacity pulumi.IntPtrInput                        `pulumi:"onDemandPercentageAboveBaseCapacity"`
	OverrideImage                       Mk8sAwsProviderNodePoolOverrideImageInput `pulumi:"overrideImage"`
	SpotAllocationStrategy              pulumi.StringPtrInput                     `pulumi:"spotAllocationStrategy"`
	SubnetIds                           pulumi.StringArrayInput                   `pulumi:"subnetIds"`
	Taints                              Mk8sAwsProviderNodePoolTaintArrayInput    `pulumi:"taints"`
}

func (Mk8sAwsProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNodePool)(nil)).Elem()
}

func (i Mk8sAwsProviderNodePoolArgs) ToMk8sAwsProviderNodePoolOutput() Mk8sAwsProviderNodePoolOutput {
	return i.ToMk8sAwsProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderNodePoolArgs) ToMk8sAwsProviderNodePoolOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNodePoolOutput)
}

func (i Mk8sAwsProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNodePool] {
	return pulumix.Output[Mk8sAwsProviderNodePool]{
		OutputState: i.ToMk8sAwsProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sAwsProviderNodePoolArrayInput is an input type that accepts Mk8sAwsProviderNodePoolArray and Mk8sAwsProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderNodePoolArrayInput` via:
//
//	Mk8sAwsProviderNodePoolArray{ Mk8sAwsProviderNodePoolArgs{...} }
type Mk8sAwsProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sAwsProviderNodePoolArrayOutput() Mk8sAwsProviderNodePoolArrayOutput
	ToMk8sAwsProviderNodePoolArrayOutputWithContext(context.Context) Mk8sAwsProviderNodePoolArrayOutput
}

type Mk8sAwsProviderNodePoolArray []Mk8sAwsProviderNodePoolInput

func (Mk8sAwsProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sAwsProviderNodePool)(nil)).Elem()
}

func (i Mk8sAwsProviderNodePoolArray) ToMk8sAwsProviderNodePoolArrayOutput() Mk8sAwsProviderNodePoolArrayOutput {
	return i.ToMk8sAwsProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderNodePoolArray) ToMk8sAwsProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNodePoolArrayOutput)
}

func (i Mk8sAwsProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sAwsProviderNodePool] {
	return pulumix.Output[[]Mk8sAwsProviderNodePool]{
		OutputState: i.ToMk8sAwsProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNodePool)(nil)).Elem()
}

func (o Mk8sAwsProviderNodePoolOutput) ToMk8sAwsProviderNodePoolOutput() Mk8sAwsProviderNodePoolOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolOutput) ToMk8sAwsProviderNodePoolOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNodePool] {
	return pulumix.Output[Mk8sAwsProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderNodePoolOutput) BootDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) *int { return v.BootDiskSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) ExtraSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) []string { return v.ExtraSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) []string { return v.InstanceTypes }).(pulumi.StringArrayOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) OnDemandBaseCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) *int { return v.OnDemandBaseCapacity }).(pulumi.IntPtrOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) OnDemandPercentageAboveBaseCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) *int { return v.OnDemandPercentageAboveBaseCapacity }).(pulumi.IntPtrOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) OverrideImage() Mk8sAwsProviderNodePoolOverrideImageOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) Mk8sAwsProviderNodePoolOverrideImage { return v.OverrideImage }).(Mk8sAwsProviderNodePoolOverrideImageOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) SpotAllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) *string { return v.SpotAllocationStrategy }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o Mk8sAwsProviderNodePoolOutput) Taints() Mk8sAwsProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePool) []Mk8sAwsProviderNodePoolTaint { return v.Taints }).(Mk8sAwsProviderNodePoolTaintArrayOutput)
}

type Mk8sAwsProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sAwsProviderNodePool)(nil)).Elem()
}

func (o Mk8sAwsProviderNodePoolArrayOutput) ToMk8sAwsProviderNodePoolArrayOutput() Mk8sAwsProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolArrayOutput) ToMk8sAwsProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sAwsProviderNodePool] {
	return pulumix.Output[[]Mk8sAwsProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sAwsProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sAwsProviderNodePool {
		return vs[0].([]Mk8sAwsProviderNodePool)[vs[1].(int)]
	}).(Mk8sAwsProviderNodePoolOutput)
}

type Mk8sAwsProviderNodePoolOverrideImage struct {
	Exact       *string `pulumi:"exact"`
	Recommended *string `pulumi:"recommended"`
}

// Mk8sAwsProviderNodePoolOverrideImageInput is an input type that accepts Mk8sAwsProviderNodePoolOverrideImageArgs and Mk8sAwsProviderNodePoolOverrideImageOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderNodePoolOverrideImageInput` via:
//
//	Mk8sAwsProviderNodePoolOverrideImageArgs{...}
type Mk8sAwsProviderNodePoolOverrideImageInput interface {
	pulumi.Input

	ToMk8sAwsProviderNodePoolOverrideImageOutput() Mk8sAwsProviderNodePoolOverrideImageOutput
	ToMk8sAwsProviderNodePoolOverrideImageOutputWithContext(context.Context) Mk8sAwsProviderNodePoolOverrideImageOutput
}

type Mk8sAwsProviderNodePoolOverrideImageArgs struct {
	Exact       pulumi.StringPtrInput `pulumi:"exact"`
	Recommended pulumi.StringPtrInput `pulumi:"recommended"`
}

func (Mk8sAwsProviderNodePoolOverrideImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNodePoolOverrideImage)(nil)).Elem()
}

func (i Mk8sAwsProviderNodePoolOverrideImageArgs) ToMk8sAwsProviderNodePoolOverrideImageOutput() Mk8sAwsProviderNodePoolOverrideImageOutput {
	return i.ToMk8sAwsProviderNodePoolOverrideImageOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderNodePoolOverrideImageArgs) ToMk8sAwsProviderNodePoolOverrideImageOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolOverrideImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNodePoolOverrideImageOutput)
}

func (i Mk8sAwsProviderNodePoolOverrideImageArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNodePoolOverrideImage] {
	return pulumix.Output[Mk8sAwsProviderNodePoolOverrideImage]{
		OutputState: i.ToMk8sAwsProviderNodePoolOverrideImageOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderNodePoolOverrideImageOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderNodePoolOverrideImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNodePoolOverrideImage)(nil)).Elem()
}

func (o Mk8sAwsProviderNodePoolOverrideImageOutput) ToMk8sAwsProviderNodePoolOverrideImageOutput() Mk8sAwsProviderNodePoolOverrideImageOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolOverrideImageOutput) ToMk8sAwsProviderNodePoolOverrideImageOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolOverrideImageOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolOverrideImageOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNodePoolOverrideImage] {
	return pulumix.Output[Mk8sAwsProviderNodePoolOverrideImage]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderNodePoolOverrideImageOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePoolOverrideImage) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderNodePoolOverrideImageOutput) Recommended() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePoolOverrideImage) *string { return v.Recommended }).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sAwsProviderNodePoolTaintInput is an input type that accepts Mk8sAwsProviderNodePoolTaintArgs and Mk8sAwsProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderNodePoolTaintInput` via:
//
//	Mk8sAwsProviderNodePoolTaintArgs{...}
type Mk8sAwsProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sAwsProviderNodePoolTaintOutput() Mk8sAwsProviderNodePoolTaintOutput
	ToMk8sAwsProviderNodePoolTaintOutputWithContext(context.Context) Mk8sAwsProviderNodePoolTaintOutput
}

type Mk8sAwsProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sAwsProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sAwsProviderNodePoolTaintArgs) ToMk8sAwsProviderNodePoolTaintOutput() Mk8sAwsProviderNodePoolTaintOutput {
	return i.ToMk8sAwsProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderNodePoolTaintArgs) ToMk8sAwsProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNodePoolTaintOutput)
}

func (i Mk8sAwsProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNodePoolTaint] {
	return pulumix.Output[Mk8sAwsProviderNodePoolTaint]{
		OutputState: i.ToMk8sAwsProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sAwsProviderNodePoolTaintArrayInput is an input type that accepts Mk8sAwsProviderNodePoolTaintArray and Mk8sAwsProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sAwsProviderNodePoolTaintArrayInput` via:
//
//	Mk8sAwsProviderNodePoolTaintArray{ Mk8sAwsProviderNodePoolTaintArgs{...} }
type Mk8sAwsProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sAwsProviderNodePoolTaintArrayOutput() Mk8sAwsProviderNodePoolTaintArrayOutput
	ToMk8sAwsProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sAwsProviderNodePoolTaintArrayOutput
}

type Mk8sAwsProviderNodePoolTaintArray []Mk8sAwsProviderNodePoolTaintInput

func (Mk8sAwsProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sAwsProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sAwsProviderNodePoolTaintArray) ToMk8sAwsProviderNodePoolTaintArrayOutput() Mk8sAwsProviderNodePoolTaintArrayOutput {
	return i.ToMk8sAwsProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sAwsProviderNodePoolTaintArray) ToMk8sAwsProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sAwsProviderNodePoolTaintArrayOutput)
}

func (i Mk8sAwsProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sAwsProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sAwsProviderNodePoolTaint]{
		OutputState: i.ToMk8sAwsProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sAwsProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sAwsProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sAwsProviderNodePoolTaintOutput) ToMk8sAwsProviderNodePoolTaintOutput() Mk8sAwsProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolTaintOutput) ToMk8sAwsProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sAwsProviderNodePoolTaint] {
	return pulumix.Output[Mk8sAwsProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sAwsProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sAwsProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sAwsProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sAwsProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sAwsProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sAwsProviderNodePoolTaintArrayOutput) ToMk8sAwsProviderNodePoolTaintArrayOutput() Mk8sAwsProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolTaintArrayOutput) ToMk8sAwsProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sAwsProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sAwsProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sAwsProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sAwsProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sAwsProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sAwsProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sAwsProviderNodePoolTaint {
		return vs[0].([]Mk8sAwsProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sAwsProviderNodePoolTaintOutput)
}

type Mk8sDigitalOceanProvider struct {
	Autoscaler       *Mk8sDigitalOceanProviderAutoscaler `pulumi:"autoscaler"`
	DigitalOceanTags []string                            `pulumi:"digitalOceanTags"`
	ExtraSshKeys     []string                            `pulumi:"extraSshKeys"`
	Image            string                              `pulumi:"image"`
	Networking       Mk8sDigitalOceanProviderNetworking  `pulumi:"networking"`
	NodePools        []Mk8sDigitalOceanProviderNodePool  `pulumi:"nodePools"`
	PreInstallScript *string                             `pulumi:"preInstallScript"`
	Region           string                              `pulumi:"region"`
	ReservedIps      []string                            `pulumi:"reservedIps"`
	SshKeys          []string                            `pulumi:"sshKeys"`
	TokenSecretLink  string                              `pulumi:"tokenSecretLink"`
	VpcId            string                              `pulumi:"vpcId"`
}

// Mk8sDigitalOceanProviderInput is an input type that accepts Mk8sDigitalOceanProviderArgs and Mk8sDigitalOceanProviderOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderInput` via:
//
//	Mk8sDigitalOceanProviderArgs{...}
type Mk8sDigitalOceanProviderInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderOutput() Mk8sDigitalOceanProviderOutput
	ToMk8sDigitalOceanProviderOutputWithContext(context.Context) Mk8sDigitalOceanProviderOutput
}

type Mk8sDigitalOceanProviderArgs struct {
	Autoscaler       Mk8sDigitalOceanProviderAutoscalerPtrInput `pulumi:"autoscaler"`
	DigitalOceanTags pulumi.StringArrayInput                    `pulumi:"digitalOceanTags"`
	ExtraSshKeys     pulumi.StringArrayInput                    `pulumi:"extraSshKeys"`
	Image            pulumi.StringInput                         `pulumi:"image"`
	Networking       Mk8sDigitalOceanProviderNetworkingInput    `pulumi:"networking"`
	NodePools        Mk8sDigitalOceanProviderNodePoolArrayInput `pulumi:"nodePools"`
	PreInstallScript pulumi.StringPtrInput                      `pulumi:"preInstallScript"`
	Region           pulumi.StringInput                         `pulumi:"region"`
	ReservedIps      pulumi.StringArrayInput                    `pulumi:"reservedIps"`
	SshKeys          pulumi.StringArrayInput                    `pulumi:"sshKeys"`
	TokenSecretLink  pulumi.StringInput                         `pulumi:"tokenSecretLink"`
	VpcId            pulumi.StringInput                         `pulumi:"vpcId"`
}

func (Mk8sDigitalOceanProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProvider)(nil)).Elem()
}

func (i Mk8sDigitalOceanProviderArgs) ToMk8sDigitalOceanProviderOutput() Mk8sDigitalOceanProviderOutput {
	return i.ToMk8sDigitalOceanProviderOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderArgs) ToMk8sDigitalOceanProviderOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderOutput)
}

func (i Mk8sDigitalOceanProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProvider] {
	return pulumix.Output[Mk8sDigitalOceanProvider]{
		OutputState: i.ToMk8sDigitalOceanProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sDigitalOceanProviderArgs) ToMk8sDigitalOceanProviderPtrOutput() Mk8sDigitalOceanProviderPtrOutput {
	return i.ToMk8sDigitalOceanProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderArgs) ToMk8sDigitalOceanProviderPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderOutput).ToMk8sDigitalOceanProviderPtrOutputWithContext(ctx)
}

// Mk8sDigitalOceanProviderPtrInput is an input type that accepts Mk8sDigitalOceanProviderArgs, Mk8sDigitalOceanProviderPtr and Mk8sDigitalOceanProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderPtrInput` via:
//
//	        Mk8sDigitalOceanProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sDigitalOceanProviderPtrInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderPtrOutput() Mk8sDigitalOceanProviderPtrOutput
	ToMk8sDigitalOceanProviderPtrOutputWithContext(context.Context) Mk8sDigitalOceanProviderPtrOutput
}

type mk8sDigitalOceanProviderPtrType Mk8sDigitalOceanProviderArgs

func Mk8sDigitalOceanProviderPtr(v *Mk8sDigitalOceanProviderArgs) Mk8sDigitalOceanProviderPtrInput {
	return (*mk8sDigitalOceanProviderPtrType)(v)
}

func (*mk8sDigitalOceanProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sDigitalOceanProvider)(nil)).Elem()
}

func (i *mk8sDigitalOceanProviderPtrType) ToMk8sDigitalOceanProviderPtrOutput() Mk8sDigitalOceanProviderPtrOutput {
	return i.ToMk8sDigitalOceanProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sDigitalOceanProviderPtrType) ToMk8sDigitalOceanProviderPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderPtrOutput)
}

func (i *mk8sDigitalOceanProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sDigitalOceanProvider] {
	return pulumix.Output[*Mk8sDigitalOceanProvider]{
		OutputState: i.ToMk8sDigitalOceanProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sDigitalOceanProviderOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProvider)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderOutput) ToMk8sDigitalOceanProviderOutput() Mk8sDigitalOceanProviderOutput {
	return o
}

func (o Mk8sDigitalOceanProviderOutput) ToMk8sDigitalOceanProviderOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderOutput {
	return o
}

func (o Mk8sDigitalOceanProviderOutput) ToMk8sDigitalOceanProviderPtrOutput() Mk8sDigitalOceanProviderPtrOutput {
	return o.ToMk8sDigitalOceanProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sDigitalOceanProviderOutput) ToMk8sDigitalOceanProviderPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sDigitalOceanProvider) *Mk8sDigitalOceanProvider {
		return &v
	}).(Mk8sDigitalOceanProviderPtrOutput)
}

func (o Mk8sDigitalOceanProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProvider] {
	return pulumix.Output[Mk8sDigitalOceanProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderOutput) Autoscaler() Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) *Mk8sDigitalOceanProviderAutoscaler { return v.Autoscaler }).(Mk8sDigitalOceanProviderAutoscalerPtrOutput)
}

func (o Mk8sDigitalOceanProviderOutput) DigitalOceanTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) []string { return v.DigitalOceanTags }).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderOutput) ExtraSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) []string { return v.ExtraSshKeys }).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) string { return v.Image }).(pulumi.StringOutput)
}

func (o Mk8sDigitalOceanProviderOutput) Networking() Mk8sDigitalOceanProviderNetworkingOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) Mk8sDigitalOceanProviderNetworking { return v.Networking }).(Mk8sDigitalOceanProviderNetworkingOutput)
}

func (o Mk8sDigitalOceanProviderOutput) NodePools() Mk8sDigitalOceanProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) []Mk8sDigitalOceanProviderNodePool { return v.NodePools }).(Mk8sDigitalOceanProviderNodePoolArrayOutput)
}

func (o Mk8sDigitalOceanProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) string { return v.Region }).(pulumi.StringOutput)
}

func (o Mk8sDigitalOceanProviderOutput) ReservedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) []string { return v.ReservedIps }).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderOutput) TokenSecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) string { return v.TokenSecretLink }).(pulumi.StringOutput)
}

func (o Mk8sDigitalOceanProviderOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProvider) string { return v.VpcId }).(pulumi.StringOutput)
}

type Mk8sDigitalOceanProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sDigitalOceanProvider)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderPtrOutput) ToMk8sDigitalOceanProviderPtrOutput() Mk8sDigitalOceanProviderPtrOutput {
	return o
}

func (o Mk8sDigitalOceanProviderPtrOutput) ToMk8sDigitalOceanProviderPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderPtrOutput {
	return o
}

func (o Mk8sDigitalOceanProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sDigitalOceanProvider] {
	return pulumix.Output[*Mk8sDigitalOceanProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderPtrOutput) Elem() Mk8sDigitalOceanProviderOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) Mk8sDigitalOceanProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sDigitalOceanProvider
		return ret
	}).(Mk8sDigitalOceanProviderOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) Autoscaler() Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) *Mk8sDigitalOceanProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sDigitalOceanProviderAutoscalerPtrOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) DigitalOceanTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) []string {
		if v == nil {
			return nil
		}
		return v.DigitalOceanTags
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) ExtraSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) []string {
		if v == nil {
			return nil
		}
		return v.ExtraSshKeys
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) Networking() Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) *Mk8sDigitalOceanProviderNetworking {
		if v == nil {
			return nil
		}
		return &v.Networking
	}).(Mk8sDigitalOceanProviderNetworkingPtrOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) NodePools() Mk8sDigitalOceanProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) []Mk8sDigitalOceanProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sDigitalOceanProviderNodePoolArrayOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) ReservedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) []string {
		if v == nil {
			return nil
		}
		return v.ReservedIps
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) []string {
		if v == nil {
			return nil
		}
		return v.SshKeys
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) TokenSecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) *string {
		if v == nil {
			return nil
		}
		return &v.TokenSecretLink
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProvider) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type Mk8sDigitalOceanProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sDigitalOceanProviderAutoscalerInput is an input type that accepts Mk8sDigitalOceanProviderAutoscalerArgs and Mk8sDigitalOceanProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderAutoscalerInput` via:
//
//	Mk8sDigitalOceanProviderAutoscalerArgs{...}
type Mk8sDigitalOceanProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderAutoscalerOutput() Mk8sDigitalOceanProviderAutoscalerOutput
	ToMk8sDigitalOceanProviderAutoscalerOutputWithContext(context.Context) Mk8sDigitalOceanProviderAutoscalerOutput
}

type Mk8sDigitalOceanProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sDigitalOceanProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sDigitalOceanProviderAutoscalerArgs) ToMk8sDigitalOceanProviderAutoscalerOutput() Mk8sDigitalOceanProviderAutoscalerOutput {
	return i.ToMk8sDigitalOceanProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderAutoscalerArgs) ToMk8sDigitalOceanProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderAutoscalerOutput)
}

func (i Mk8sDigitalOceanProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderAutoscaler] {
	return pulumix.Output[Mk8sDigitalOceanProviderAutoscaler]{
		OutputState: i.ToMk8sDigitalOceanProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sDigitalOceanProviderAutoscalerArgs) ToMk8sDigitalOceanProviderAutoscalerPtrOutput() Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return i.ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderAutoscalerArgs) ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderAutoscalerOutput).ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sDigitalOceanProviderAutoscalerPtrInput is an input type that accepts Mk8sDigitalOceanProviderAutoscalerArgs, Mk8sDigitalOceanProviderAutoscalerPtr and Mk8sDigitalOceanProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderAutoscalerPtrInput` via:
//
//	        Mk8sDigitalOceanProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sDigitalOceanProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderAutoscalerPtrOutput() Mk8sDigitalOceanProviderAutoscalerPtrOutput
	ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sDigitalOceanProviderAutoscalerPtrOutput
}

type mk8sDigitalOceanProviderAutoscalerPtrType Mk8sDigitalOceanProviderAutoscalerArgs

func Mk8sDigitalOceanProviderAutoscalerPtr(v *Mk8sDigitalOceanProviderAutoscalerArgs) Mk8sDigitalOceanProviderAutoscalerPtrInput {
	return (*mk8sDigitalOceanProviderAutoscalerPtrType)(v)
}

func (*mk8sDigitalOceanProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sDigitalOceanProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sDigitalOceanProviderAutoscalerPtrType) ToMk8sDigitalOceanProviderAutoscalerPtrOutput() Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return i.ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sDigitalOceanProviderAutoscalerPtrType) ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderAutoscalerPtrOutput)
}

func (i *mk8sDigitalOceanProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sDigitalOceanProviderAutoscaler] {
	return pulumix.Output[*Mk8sDigitalOceanProviderAutoscaler]{
		OutputState: i.ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sDigitalOceanProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) ToMk8sDigitalOceanProviderAutoscalerOutput() Mk8sDigitalOceanProviderAutoscalerOutput {
	return o
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) ToMk8sDigitalOceanProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderAutoscalerOutput {
	return o
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) ToMk8sDigitalOceanProviderAutoscalerPtrOutput() Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return o.ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sDigitalOceanProviderAutoscaler) *Mk8sDigitalOceanProviderAutoscaler {
		return &v
	}).(Mk8sDigitalOceanProviderAutoscalerPtrOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderAutoscaler] {
	return pulumix.Output[Mk8sDigitalOceanProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sDigitalOceanProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sDigitalOceanProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) ToMk8sDigitalOceanProviderAutoscalerPtrOutput() Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) ToMk8sDigitalOceanProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sDigitalOceanProviderAutoscaler] {
	return pulumix.Output[*Mk8sDigitalOceanProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) Elem() Mk8sDigitalOceanProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderAutoscaler) Mk8sDigitalOceanProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sDigitalOceanProviderAutoscaler
		return ret
	}).(Mk8sDigitalOceanProviderAutoscalerOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sDigitalOceanProviderNetworking struct {
	PodNetwork     *string `pulumi:"podNetwork"`
	ServiceNetwork *string `pulumi:"serviceNetwork"`
}

// Mk8sDigitalOceanProviderNetworkingInput is an input type that accepts Mk8sDigitalOceanProviderNetworkingArgs and Mk8sDigitalOceanProviderNetworkingOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderNetworkingInput` via:
//
//	Mk8sDigitalOceanProviderNetworkingArgs{...}
type Mk8sDigitalOceanProviderNetworkingInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderNetworkingOutput() Mk8sDigitalOceanProviderNetworkingOutput
	ToMk8sDigitalOceanProviderNetworkingOutputWithContext(context.Context) Mk8sDigitalOceanProviderNetworkingOutput
}

type Mk8sDigitalOceanProviderNetworkingArgs struct {
	PodNetwork     pulumi.StringPtrInput `pulumi:"podNetwork"`
	ServiceNetwork pulumi.StringPtrInput `pulumi:"serviceNetwork"`
}

func (Mk8sDigitalOceanProviderNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderNetworking)(nil)).Elem()
}

func (i Mk8sDigitalOceanProviderNetworkingArgs) ToMk8sDigitalOceanProviderNetworkingOutput() Mk8sDigitalOceanProviderNetworkingOutput {
	return i.ToMk8sDigitalOceanProviderNetworkingOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderNetworkingArgs) ToMk8sDigitalOceanProviderNetworkingOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderNetworkingOutput)
}

func (i Mk8sDigitalOceanProviderNetworkingArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderNetworking] {
	return pulumix.Output[Mk8sDigitalOceanProviderNetworking]{
		OutputState: i.ToMk8sDigitalOceanProviderNetworkingOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sDigitalOceanProviderNetworkingArgs) ToMk8sDigitalOceanProviderNetworkingPtrOutput() Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return i.ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderNetworkingArgs) ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderNetworkingOutput).ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(ctx)
}

// Mk8sDigitalOceanProviderNetworkingPtrInput is an input type that accepts Mk8sDigitalOceanProviderNetworkingArgs, Mk8sDigitalOceanProviderNetworkingPtr and Mk8sDigitalOceanProviderNetworkingPtrOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderNetworkingPtrInput` via:
//
//	        Mk8sDigitalOceanProviderNetworkingArgs{...}
//
//	or:
//
//	        nil
type Mk8sDigitalOceanProviderNetworkingPtrInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderNetworkingPtrOutput() Mk8sDigitalOceanProviderNetworkingPtrOutput
	ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(context.Context) Mk8sDigitalOceanProviderNetworkingPtrOutput
}

type mk8sDigitalOceanProviderNetworkingPtrType Mk8sDigitalOceanProviderNetworkingArgs

func Mk8sDigitalOceanProviderNetworkingPtr(v *Mk8sDigitalOceanProviderNetworkingArgs) Mk8sDigitalOceanProviderNetworkingPtrInput {
	return (*mk8sDigitalOceanProviderNetworkingPtrType)(v)
}

func (*mk8sDigitalOceanProviderNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sDigitalOceanProviderNetworking)(nil)).Elem()
}

func (i *mk8sDigitalOceanProviderNetworkingPtrType) ToMk8sDigitalOceanProviderNetworkingPtrOutput() Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return i.ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i *mk8sDigitalOceanProviderNetworkingPtrType) ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderNetworkingPtrOutput)
}

func (i *mk8sDigitalOceanProviderNetworkingPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sDigitalOceanProviderNetworking] {
	return pulumix.Output[*Mk8sDigitalOceanProviderNetworking]{
		OutputState: i.ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sDigitalOceanProviderNetworkingOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderNetworking)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderNetworkingOutput) ToMk8sDigitalOceanProviderNetworkingOutput() Mk8sDigitalOceanProviderNetworkingOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNetworkingOutput) ToMk8sDigitalOceanProviderNetworkingOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNetworkingOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNetworkingOutput) ToMk8sDigitalOceanProviderNetworkingPtrOutput() Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return o.ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(context.Background())
}

func (o Mk8sDigitalOceanProviderNetworkingOutput) ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sDigitalOceanProviderNetworking) *Mk8sDigitalOceanProviderNetworking {
		return &v
	}).(Mk8sDigitalOceanProviderNetworkingPtrOutput)
}

func (o Mk8sDigitalOceanProviderNetworkingOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderNetworking] {
	return pulumix.Output[Mk8sDigitalOceanProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderNetworkingOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNetworking) *string { return v.PodNetwork }).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderNetworkingOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNetworking) *string { return v.ServiceNetwork }).(pulumi.StringPtrOutput)
}

type Mk8sDigitalOceanProviderNetworkingPtrOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sDigitalOceanProviderNetworking)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderNetworkingPtrOutput) ToMk8sDigitalOceanProviderNetworkingPtrOutput() Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNetworkingPtrOutput) ToMk8sDigitalOceanProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNetworkingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sDigitalOceanProviderNetworking] {
	return pulumix.Output[*Mk8sDigitalOceanProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderNetworkingPtrOutput) Elem() Mk8sDigitalOceanProviderNetworkingOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderNetworking) Mk8sDigitalOceanProviderNetworking {
		if v != nil {
			return *v
		}
		var ret Mk8sDigitalOceanProviderNetworking
		return ret
	}).(Mk8sDigitalOceanProviderNetworkingOutput)
}

func (o Mk8sDigitalOceanProviderNetworkingPtrOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.PodNetwork
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderNetworkingPtrOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sDigitalOceanProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNetwork
	}).(pulumi.StringPtrOutput)
}

type Mk8sDigitalOceanProviderNodePool struct {
	DropletSize   string                                  `pulumi:"dropletSize"`
	Labels        map[string]string                       `pulumi:"labels"`
	MaxSize       *int                                    `pulumi:"maxSize"`
	MinSize       *int                                    `pulumi:"minSize"`
	Name          string                                  `pulumi:"name"`
	OverrideImage *string                                 `pulumi:"overrideImage"`
	Taints        []Mk8sDigitalOceanProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sDigitalOceanProviderNodePoolInput is an input type that accepts Mk8sDigitalOceanProviderNodePoolArgs and Mk8sDigitalOceanProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderNodePoolInput` via:
//
//	Mk8sDigitalOceanProviderNodePoolArgs{...}
type Mk8sDigitalOceanProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderNodePoolOutput() Mk8sDigitalOceanProviderNodePoolOutput
	ToMk8sDigitalOceanProviderNodePoolOutputWithContext(context.Context) Mk8sDigitalOceanProviderNodePoolOutput
}

type Mk8sDigitalOceanProviderNodePoolArgs struct {
	DropletSize   pulumi.StringInput                              `pulumi:"dropletSize"`
	Labels        pulumi.StringMapInput                           `pulumi:"labels"`
	MaxSize       pulumi.IntPtrInput                              `pulumi:"maxSize"`
	MinSize       pulumi.IntPtrInput                              `pulumi:"minSize"`
	Name          pulumi.StringInput                              `pulumi:"name"`
	OverrideImage pulumi.StringPtrInput                           `pulumi:"overrideImage"`
	Taints        Mk8sDigitalOceanProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sDigitalOceanProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderNodePool)(nil)).Elem()
}

func (i Mk8sDigitalOceanProviderNodePoolArgs) ToMk8sDigitalOceanProviderNodePoolOutput() Mk8sDigitalOceanProviderNodePoolOutput {
	return i.ToMk8sDigitalOceanProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderNodePoolArgs) ToMk8sDigitalOceanProviderNodePoolOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderNodePoolOutput)
}

func (i Mk8sDigitalOceanProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderNodePool] {
	return pulumix.Output[Mk8sDigitalOceanProviderNodePool]{
		OutputState: i.ToMk8sDigitalOceanProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sDigitalOceanProviderNodePoolArrayInput is an input type that accepts Mk8sDigitalOceanProviderNodePoolArray and Mk8sDigitalOceanProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderNodePoolArrayInput` via:
//
//	Mk8sDigitalOceanProviderNodePoolArray{ Mk8sDigitalOceanProviderNodePoolArgs{...} }
type Mk8sDigitalOceanProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderNodePoolArrayOutput() Mk8sDigitalOceanProviderNodePoolArrayOutput
	ToMk8sDigitalOceanProviderNodePoolArrayOutputWithContext(context.Context) Mk8sDigitalOceanProviderNodePoolArrayOutput
}

type Mk8sDigitalOceanProviderNodePoolArray []Mk8sDigitalOceanProviderNodePoolInput

func (Mk8sDigitalOceanProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sDigitalOceanProviderNodePool)(nil)).Elem()
}

func (i Mk8sDigitalOceanProviderNodePoolArray) ToMk8sDigitalOceanProviderNodePoolArrayOutput() Mk8sDigitalOceanProviderNodePoolArrayOutput {
	return i.ToMk8sDigitalOceanProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderNodePoolArray) ToMk8sDigitalOceanProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderNodePoolArrayOutput)
}

func (i Mk8sDigitalOceanProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sDigitalOceanProviderNodePool] {
	return pulumix.Output[[]Mk8sDigitalOceanProviderNodePool]{
		OutputState: i.ToMk8sDigitalOceanProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sDigitalOceanProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderNodePool)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) ToMk8sDigitalOceanProviderNodePoolOutput() Mk8sDigitalOceanProviderNodePoolOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) ToMk8sDigitalOceanProviderNodePoolOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderNodePool] {
	return pulumix.Output[Mk8sDigitalOceanProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) DropletSize() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePool) string { return v.DropletSize }).(pulumi.StringOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) OverrideImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePool) *string { return v.OverrideImage }).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolOutput) Taints() Mk8sDigitalOceanProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePool) []Mk8sDigitalOceanProviderNodePoolTaint { return v.Taints }).(Mk8sDigitalOceanProviderNodePoolTaintArrayOutput)
}

type Mk8sDigitalOceanProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sDigitalOceanProviderNodePool)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderNodePoolArrayOutput) ToMk8sDigitalOceanProviderNodePoolArrayOutput() Mk8sDigitalOceanProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolArrayOutput) ToMk8sDigitalOceanProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sDigitalOceanProviderNodePool] {
	return pulumix.Output[[]Mk8sDigitalOceanProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sDigitalOceanProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sDigitalOceanProviderNodePool {
		return vs[0].([]Mk8sDigitalOceanProviderNodePool)[vs[1].(int)]
	}).(Mk8sDigitalOceanProviderNodePoolOutput)
}

type Mk8sDigitalOceanProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sDigitalOceanProviderNodePoolTaintInput is an input type that accepts Mk8sDigitalOceanProviderNodePoolTaintArgs and Mk8sDigitalOceanProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderNodePoolTaintInput` via:
//
//	Mk8sDigitalOceanProviderNodePoolTaintArgs{...}
type Mk8sDigitalOceanProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderNodePoolTaintOutput() Mk8sDigitalOceanProviderNodePoolTaintOutput
	ToMk8sDigitalOceanProviderNodePoolTaintOutputWithContext(context.Context) Mk8sDigitalOceanProviderNodePoolTaintOutput
}

type Mk8sDigitalOceanProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sDigitalOceanProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sDigitalOceanProviderNodePoolTaintArgs) ToMk8sDigitalOceanProviderNodePoolTaintOutput() Mk8sDigitalOceanProviderNodePoolTaintOutput {
	return i.ToMk8sDigitalOceanProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderNodePoolTaintArgs) ToMk8sDigitalOceanProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderNodePoolTaintOutput)
}

func (i Mk8sDigitalOceanProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderNodePoolTaint] {
	return pulumix.Output[Mk8sDigitalOceanProviderNodePoolTaint]{
		OutputState: i.ToMk8sDigitalOceanProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sDigitalOceanProviderNodePoolTaintArrayInput is an input type that accepts Mk8sDigitalOceanProviderNodePoolTaintArray and Mk8sDigitalOceanProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sDigitalOceanProviderNodePoolTaintArrayInput` via:
//
//	Mk8sDigitalOceanProviderNodePoolTaintArray{ Mk8sDigitalOceanProviderNodePoolTaintArgs{...} }
type Mk8sDigitalOceanProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sDigitalOceanProviderNodePoolTaintArrayOutput() Mk8sDigitalOceanProviderNodePoolTaintArrayOutput
	ToMk8sDigitalOceanProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sDigitalOceanProviderNodePoolTaintArrayOutput
}

type Mk8sDigitalOceanProviderNodePoolTaintArray []Mk8sDigitalOceanProviderNodePoolTaintInput

func (Mk8sDigitalOceanProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sDigitalOceanProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sDigitalOceanProviderNodePoolTaintArray) ToMk8sDigitalOceanProviderNodePoolTaintArrayOutput() Mk8sDigitalOceanProviderNodePoolTaintArrayOutput {
	return i.ToMk8sDigitalOceanProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sDigitalOceanProviderNodePoolTaintArray) ToMk8sDigitalOceanProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sDigitalOceanProviderNodePoolTaintArrayOutput)
}

func (i Mk8sDigitalOceanProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sDigitalOceanProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sDigitalOceanProviderNodePoolTaint]{
		OutputState: i.ToMk8sDigitalOceanProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sDigitalOceanProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sDigitalOceanProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderNodePoolTaintOutput) ToMk8sDigitalOceanProviderNodePoolTaintOutput() Mk8sDigitalOceanProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolTaintOutput) ToMk8sDigitalOceanProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sDigitalOceanProviderNodePoolTaint] {
	return pulumix.Output[Mk8sDigitalOceanProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sDigitalOceanProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sDigitalOceanProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sDigitalOceanProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sDigitalOceanProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sDigitalOceanProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sDigitalOceanProviderNodePoolTaintArrayOutput) ToMk8sDigitalOceanProviderNodePoolTaintArrayOutput() Mk8sDigitalOceanProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolTaintArrayOutput) ToMk8sDigitalOceanProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sDigitalOceanProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sDigitalOceanProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sDigitalOceanProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sDigitalOceanProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sDigitalOceanProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sDigitalOceanProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sDigitalOceanProviderNodePoolTaint {
		return vs[0].([]Mk8sDigitalOceanProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sDigitalOceanProviderNodePoolTaintOutput)
}

type Mk8sEphemeralProvider struct {
	Location  string                          `pulumi:"location"`
	NodePools []Mk8sEphemeralProviderNodePool `pulumi:"nodePools"`
}

// Mk8sEphemeralProviderInput is an input type that accepts Mk8sEphemeralProviderArgs and Mk8sEphemeralProviderOutput values.
// You can construct a concrete instance of `Mk8sEphemeralProviderInput` via:
//
//	Mk8sEphemeralProviderArgs{...}
type Mk8sEphemeralProviderInput interface {
	pulumi.Input

	ToMk8sEphemeralProviderOutput() Mk8sEphemeralProviderOutput
	ToMk8sEphemeralProviderOutputWithContext(context.Context) Mk8sEphemeralProviderOutput
}

type Mk8sEphemeralProviderArgs struct {
	Location  pulumi.StringInput                      `pulumi:"location"`
	NodePools Mk8sEphemeralProviderNodePoolArrayInput `pulumi:"nodePools"`
}

func (Mk8sEphemeralProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sEphemeralProvider)(nil)).Elem()
}

func (i Mk8sEphemeralProviderArgs) ToMk8sEphemeralProviderOutput() Mk8sEphemeralProviderOutput {
	return i.ToMk8sEphemeralProviderOutputWithContext(context.Background())
}

func (i Mk8sEphemeralProviderArgs) ToMk8sEphemeralProviderOutputWithContext(ctx context.Context) Mk8sEphemeralProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sEphemeralProviderOutput)
}

func (i Mk8sEphemeralProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sEphemeralProvider] {
	return pulumix.Output[Mk8sEphemeralProvider]{
		OutputState: i.ToMk8sEphemeralProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sEphemeralProviderArgs) ToMk8sEphemeralProviderPtrOutput() Mk8sEphemeralProviderPtrOutput {
	return i.ToMk8sEphemeralProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sEphemeralProviderArgs) ToMk8sEphemeralProviderPtrOutputWithContext(ctx context.Context) Mk8sEphemeralProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sEphemeralProviderOutput).ToMk8sEphemeralProviderPtrOutputWithContext(ctx)
}

// Mk8sEphemeralProviderPtrInput is an input type that accepts Mk8sEphemeralProviderArgs, Mk8sEphemeralProviderPtr and Mk8sEphemeralProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sEphemeralProviderPtrInput` via:
//
//	        Mk8sEphemeralProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sEphemeralProviderPtrInput interface {
	pulumi.Input

	ToMk8sEphemeralProviderPtrOutput() Mk8sEphemeralProviderPtrOutput
	ToMk8sEphemeralProviderPtrOutputWithContext(context.Context) Mk8sEphemeralProviderPtrOutput
}

type mk8sEphemeralProviderPtrType Mk8sEphemeralProviderArgs

func Mk8sEphemeralProviderPtr(v *Mk8sEphemeralProviderArgs) Mk8sEphemeralProviderPtrInput {
	return (*mk8sEphemeralProviderPtrType)(v)
}

func (*mk8sEphemeralProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sEphemeralProvider)(nil)).Elem()
}

func (i *mk8sEphemeralProviderPtrType) ToMk8sEphemeralProviderPtrOutput() Mk8sEphemeralProviderPtrOutput {
	return i.ToMk8sEphemeralProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sEphemeralProviderPtrType) ToMk8sEphemeralProviderPtrOutputWithContext(ctx context.Context) Mk8sEphemeralProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sEphemeralProviderPtrOutput)
}

func (i *mk8sEphemeralProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sEphemeralProvider] {
	return pulumix.Output[*Mk8sEphemeralProvider]{
		OutputState: i.ToMk8sEphemeralProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sEphemeralProviderOutput struct{ *pulumi.OutputState }

func (Mk8sEphemeralProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sEphemeralProvider)(nil)).Elem()
}

func (o Mk8sEphemeralProviderOutput) ToMk8sEphemeralProviderOutput() Mk8sEphemeralProviderOutput {
	return o
}

func (o Mk8sEphemeralProviderOutput) ToMk8sEphemeralProviderOutputWithContext(ctx context.Context) Mk8sEphemeralProviderOutput {
	return o
}

func (o Mk8sEphemeralProviderOutput) ToMk8sEphemeralProviderPtrOutput() Mk8sEphemeralProviderPtrOutput {
	return o.ToMk8sEphemeralProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sEphemeralProviderOutput) ToMk8sEphemeralProviderPtrOutputWithContext(ctx context.Context) Mk8sEphemeralProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sEphemeralProvider) *Mk8sEphemeralProvider {
		return &v
	}).(Mk8sEphemeralProviderPtrOutput)
}

func (o Mk8sEphemeralProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sEphemeralProvider] {
	return pulumix.Output[Mk8sEphemeralProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sEphemeralProviderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sEphemeralProvider) string { return v.Location }).(pulumi.StringOutput)
}

func (o Mk8sEphemeralProviderOutput) NodePools() Mk8sEphemeralProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sEphemeralProvider) []Mk8sEphemeralProviderNodePool { return v.NodePools }).(Mk8sEphemeralProviderNodePoolArrayOutput)
}

type Mk8sEphemeralProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sEphemeralProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sEphemeralProvider)(nil)).Elem()
}

func (o Mk8sEphemeralProviderPtrOutput) ToMk8sEphemeralProviderPtrOutput() Mk8sEphemeralProviderPtrOutput {
	return o
}

func (o Mk8sEphemeralProviderPtrOutput) ToMk8sEphemeralProviderPtrOutputWithContext(ctx context.Context) Mk8sEphemeralProviderPtrOutput {
	return o
}

func (o Mk8sEphemeralProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sEphemeralProvider] {
	return pulumix.Output[*Mk8sEphemeralProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sEphemeralProviderPtrOutput) Elem() Mk8sEphemeralProviderOutput {
	return o.ApplyT(func(v *Mk8sEphemeralProvider) Mk8sEphemeralProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sEphemeralProvider
		return ret
	}).(Mk8sEphemeralProviderOutput)
}

func (o Mk8sEphemeralProviderPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sEphemeralProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sEphemeralProviderPtrOutput) NodePools() Mk8sEphemeralProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sEphemeralProvider) []Mk8sEphemeralProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sEphemeralProviderNodePoolArrayOutput)
}

type Mk8sEphemeralProviderNodePool struct {
	Arch   string                               `pulumi:"arch"`
	Count  int                                  `pulumi:"count"`
	Cpu    string                               `pulumi:"cpu"`
	Flavor string                               `pulumi:"flavor"`
	Labels map[string]string                    `pulumi:"labels"`
	Memory string                               `pulumi:"memory"`
	Name   string                               `pulumi:"name"`
	Taints []Mk8sEphemeralProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sEphemeralProviderNodePoolInput is an input type that accepts Mk8sEphemeralProviderNodePoolArgs and Mk8sEphemeralProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sEphemeralProviderNodePoolInput` via:
//
//	Mk8sEphemeralProviderNodePoolArgs{...}
type Mk8sEphemeralProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sEphemeralProviderNodePoolOutput() Mk8sEphemeralProviderNodePoolOutput
	ToMk8sEphemeralProviderNodePoolOutputWithContext(context.Context) Mk8sEphemeralProviderNodePoolOutput
}

type Mk8sEphemeralProviderNodePoolArgs struct {
	Arch   pulumi.StringInput                           `pulumi:"arch"`
	Count  pulumi.IntInput                              `pulumi:"count"`
	Cpu    pulumi.StringInput                           `pulumi:"cpu"`
	Flavor pulumi.StringInput                           `pulumi:"flavor"`
	Labels pulumi.StringMapInput                        `pulumi:"labels"`
	Memory pulumi.StringInput                           `pulumi:"memory"`
	Name   pulumi.StringInput                           `pulumi:"name"`
	Taints Mk8sEphemeralProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sEphemeralProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sEphemeralProviderNodePool)(nil)).Elem()
}

func (i Mk8sEphemeralProviderNodePoolArgs) ToMk8sEphemeralProviderNodePoolOutput() Mk8sEphemeralProviderNodePoolOutput {
	return i.ToMk8sEphemeralProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sEphemeralProviderNodePoolArgs) ToMk8sEphemeralProviderNodePoolOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sEphemeralProviderNodePoolOutput)
}

func (i Mk8sEphemeralProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sEphemeralProviderNodePool] {
	return pulumix.Output[Mk8sEphemeralProviderNodePool]{
		OutputState: i.ToMk8sEphemeralProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sEphemeralProviderNodePoolArrayInput is an input type that accepts Mk8sEphemeralProviderNodePoolArray and Mk8sEphemeralProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sEphemeralProviderNodePoolArrayInput` via:
//
//	Mk8sEphemeralProviderNodePoolArray{ Mk8sEphemeralProviderNodePoolArgs{...} }
type Mk8sEphemeralProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sEphemeralProviderNodePoolArrayOutput() Mk8sEphemeralProviderNodePoolArrayOutput
	ToMk8sEphemeralProviderNodePoolArrayOutputWithContext(context.Context) Mk8sEphemeralProviderNodePoolArrayOutput
}

type Mk8sEphemeralProviderNodePoolArray []Mk8sEphemeralProviderNodePoolInput

func (Mk8sEphemeralProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sEphemeralProviderNodePool)(nil)).Elem()
}

func (i Mk8sEphemeralProviderNodePoolArray) ToMk8sEphemeralProviderNodePoolArrayOutput() Mk8sEphemeralProviderNodePoolArrayOutput {
	return i.ToMk8sEphemeralProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sEphemeralProviderNodePoolArray) ToMk8sEphemeralProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sEphemeralProviderNodePoolArrayOutput)
}

func (i Mk8sEphemeralProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sEphemeralProviderNodePool] {
	return pulumix.Output[[]Mk8sEphemeralProviderNodePool]{
		OutputState: i.ToMk8sEphemeralProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sEphemeralProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sEphemeralProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sEphemeralProviderNodePool)(nil)).Elem()
}

func (o Mk8sEphemeralProviderNodePoolOutput) ToMk8sEphemeralProviderNodePoolOutput() Mk8sEphemeralProviderNodePoolOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolOutput) ToMk8sEphemeralProviderNodePoolOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sEphemeralProviderNodePool] {
	return pulumix.Output[Mk8sEphemeralProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sEphemeralProviderNodePoolOutput) Arch() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) string { return v.Arch }).(pulumi.StringOutput)
}

func (o Mk8sEphemeralProviderNodePoolOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) int { return v.Count }).(pulumi.IntOutput)
}

func (o Mk8sEphemeralProviderNodePoolOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) string { return v.Cpu }).(pulumi.StringOutput)
}

func (o Mk8sEphemeralProviderNodePoolOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o Mk8sEphemeralProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sEphemeralProviderNodePoolOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) string { return v.Memory }).(pulumi.StringOutput)
}

func (o Mk8sEphemeralProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sEphemeralProviderNodePoolOutput) Taints() Mk8sEphemeralProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePool) []Mk8sEphemeralProviderNodePoolTaint { return v.Taints }).(Mk8sEphemeralProviderNodePoolTaintArrayOutput)
}

type Mk8sEphemeralProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sEphemeralProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sEphemeralProviderNodePool)(nil)).Elem()
}

func (o Mk8sEphemeralProviderNodePoolArrayOutput) ToMk8sEphemeralProviderNodePoolArrayOutput() Mk8sEphemeralProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolArrayOutput) ToMk8sEphemeralProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sEphemeralProviderNodePool] {
	return pulumix.Output[[]Mk8sEphemeralProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sEphemeralProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sEphemeralProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sEphemeralProviderNodePool {
		return vs[0].([]Mk8sEphemeralProviderNodePool)[vs[1].(int)]
	}).(Mk8sEphemeralProviderNodePoolOutput)
}

type Mk8sEphemeralProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sEphemeralProviderNodePoolTaintInput is an input type that accepts Mk8sEphemeralProviderNodePoolTaintArgs and Mk8sEphemeralProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sEphemeralProviderNodePoolTaintInput` via:
//
//	Mk8sEphemeralProviderNodePoolTaintArgs{...}
type Mk8sEphemeralProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sEphemeralProviderNodePoolTaintOutput() Mk8sEphemeralProviderNodePoolTaintOutput
	ToMk8sEphemeralProviderNodePoolTaintOutputWithContext(context.Context) Mk8sEphemeralProviderNodePoolTaintOutput
}

type Mk8sEphemeralProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sEphemeralProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sEphemeralProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sEphemeralProviderNodePoolTaintArgs) ToMk8sEphemeralProviderNodePoolTaintOutput() Mk8sEphemeralProviderNodePoolTaintOutput {
	return i.ToMk8sEphemeralProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sEphemeralProviderNodePoolTaintArgs) ToMk8sEphemeralProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sEphemeralProviderNodePoolTaintOutput)
}

func (i Mk8sEphemeralProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sEphemeralProviderNodePoolTaint] {
	return pulumix.Output[Mk8sEphemeralProviderNodePoolTaint]{
		OutputState: i.ToMk8sEphemeralProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sEphemeralProviderNodePoolTaintArrayInput is an input type that accepts Mk8sEphemeralProviderNodePoolTaintArray and Mk8sEphemeralProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sEphemeralProviderNodePoolTaintArrayInput` via:
//
//	Mk8sEphemeralProviderNodePoolTaintArray{ Mk8sEphemeralProviderNodePoolTaintArgs{...} }
type Mk8sEphemeralProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sEphemeralProviderNodePoolTaintArrayOutput() Mk8sEphemeralProviderNodePoolTaintArrayOutput
	ToMk8sEphemeralProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sEphemeralProviderNodePoolTaintArrayOutput
}

type Mk8sEphemeralProviderNodePoolTaintArray []Mk8sEphemeralProviderNodePoolTaintInput

func (Mk8sEphemeralProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sEphemeralProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sEphemeralProviderNodePoolTaintArray) ToMk8sEphemeralProviderNodePoolTaintArrayOutput() Mk8sEphemeralProviderNodePoolTaintArrayOutput {
	return i.ToMk8sEphemeralProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sEphemeralProviderNodePoolTaintArray) ToMk8sEphemeralProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sEphemeralProviderNodePoolTaintArrayOutput)
}

func (i Mk8sEphemeralProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sEphemeralProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sEphemeralProviderNodePoolTaint]{
		OutputState: i.ToMk8sEphemeralProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sEphemeralProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sEphemeralProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sEphemeralProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sEphemeralProviderNodePoolTaintOutput) ToMk8sEphemeralProviderNodePoolTaintOutput() Mk8sEphemeralProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolTaintOutput) ToMk8sEphemeralProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sEphemeralProviderNodePoolTaint] {
	return pulumix.Output[Mk8sEphemeralProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sEphemeralProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sEphemeralProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sEphemeralProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sEphemeralProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sEphemeralProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sEphemeralProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sEphemeralProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sEphemeralProviderNodePoolTaintArrayOutput) ToMk8sEphemeralProviderNodePoolTaintArrayOutput() Mk8sEphemeralProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolTaintArrayOutput) ToMk8sEphemeralProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sEphemeralProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sEphemeralProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sEphemeralProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sEphemeralProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sEphemeralProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sEphemeralProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sEphemeralProviderNodePoolTaint {
		return vs[0].([]Mk8sEphemeralProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sEphemeralProviderNodePoolTaintOutput)
}

type Mk8sFirewall struct {
	Description *string `pulumi:"description"`
	SourceCidr  string  `pulumi:"sourceCidr"`
}

// Mk8sFirewallInput is an input type that accepts Mk8sFirewallArgs and Mk8sFirewallOutput values.
// You can construct a concrete instance of `Mk8sFirewallInput` via:
//
//	Mk8sFirewallArgs{...}
type Mk8sFirewallInput interface {
	pulumi.Input

	ToMk8sFirewallOutput() Mk8sFirewallOutput
	ToMk8sFirewallOutputWithContext(context.Context) Mk8sFirewallOutput
}

type Mk8sFirewallArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	SourceCidr  pulumi.StringInput    `pulumi:"sourceCidr"`
}

func (Mk8sFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sFirewall)(nil)).Elem()
}

func (i Mk8sFirewallArgs) ToMk8sFirewallOutput() Mk8sFirewallOutput {
	return i.ToMk8sFirewallOutputWithContext(context.Background())
}

func (i Mk8sFirewallArgs) ToMk8sFirewallOutputWithContext(ctx context.Context) Mk8sFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sFirewallOutput)
}

func (i Mk8sFirewallArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sFirewall] {
	return pulumix.Output[Mk8sFirewall]{
		OutputState: i.ToMk8sFirewallOutputWithContext(ctx).OutputState,
	}
}

// Mk8sFirewallArrayInput is an input type that accepts Mk8sFirewallArray and Mk8sFirewallArrayOutput values.
// You can construct a concrete instance of `Mk8sFirewallArrayInput` via:
//
//	Mk8sFirewallArray{ Mk8sFirewallArgs{...} }
type Mk8sFirewallArrayInput interface {
	pulumi.Input

	ToMk8sFirewallArrayOutput() Mk8sFirewallArrayOutput
	ToMk8sFirewallArrayOutputWithContext(context.Context) Mk8sFirewallArrayOutput
}

type Mk8sFirewallArray []Mk8sFirewallInput

func (Mk8sFirewallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sFirewall)(nil)).Elem()
}

func (i Mk8sFirewallArray) ToMk8sFirewallArrayOutput() Mk8sFirewallArrayOutput {
	return i.ToMk8sFirewallArrayOutputWithContext(context.Background())
}

func (i Mk8sFirewallArray) ToMk8sFirewallArrayOutputWithContext(ctx context.Context) Mk8sFirewallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sFirewallArrayOutput)
}

func (i Mk8sFirewallArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sFirewall] {
	return pulumix.Output[[]Mk8sFirewall]{
		OutputState: i.ToMk8sFirewallArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sFirewallOutput struct{ *pulumi.OutputState }

func (Mk8sFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sFirewall)(nil)).Elem()
}

func (o Mk8sFirewallOutput) ToMk8sFirewallOutput() Mk8sFirewallOutput {
	return o
}

func (o Mk8sFirewallOutput) ToMk8sFirewallOutputWithContext(ctx context.Context) Mk8sFirewallOutput {
	return o
}

func (o Mk8sFirewallOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sFirewall] {
	return pulumix.Output[Mk8sFirewall]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sFirewallOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sFirewall) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o Mk8sFirewallOutput) SourceCidr() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sFirewall) string { return v.SourceCidr }).(pulumi.StringOutput)
}

type Mk8sFirewallArrayOutput struct{ *pulumi.OutputState }

func (Mk8sFirewallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sFirewall)(nil)).Elem()
}

func (o Mk8sFirewallArrayOutput) ToMk8sFirewallArrayOutput() Mk8sFirewallArrayOutput {
	return o
}

func (o Mk8sFirewallArrayOutput) ToMk8sFirewallArrayOutputWithContext(ctx context.Context) Mk8sFirewallArrayOutput {
	return o
}

func (o Mk8sFirewallArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sFirewall] {
	return pulumix.Output[[]Mk8sFirewall]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sFirewallArrayOutput) Index(i pulumi.IntInput) Mk8sFirewallOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sFirewall {
		return vs[0].([]Mk8sFirewall)[vs[1].(int)]
	}).(Mk8sFirewallOutput)
}

type Mk8sGenericProvider struct {
	Location   string                        `pulumi:"location"`
	Networking Mk8sGenericProviderNetworking `pulumi:"networking"`
	NodePools  []Mk8sGenericProviderNodePool `pulumi:"nodePools"`
}

// Mk8sGenericProviderInput is an input type that accepts Mk8sGenericProviderArgs and Mk8sGenericProviderOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderInput` via:
//
//	Mk8sGenericProviderArgs{...}
type Mk8sGenericProviderInput interface {
	pulumi.Input

	ToMk8sGenericProviderOutput() Mk8sGenericProviderOutput
	ToMk8sGenericProviderOutputWithContext(context.Context) Mk8sGenericProviderOutput
}

type Mk8sGenericProviderArgs struct {
	Location   pulumi.StringInput                    `pulumi:"location"`
	Networking Mk8sGenericProviderNetworkingInput    `pulumi:"networking"`
	NodePools  Mk8sGenericProviderNodePoolArrayInput `pulumi:"nodePools"`
}

func (Mk8sGenericProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProvider)(nil)).Elem()
}

func (i Mk8sGenericProviderArgs) ToMk8sGenericProviderOutput() Mk8sGenericProviderOutput {
	return i.ToMk8sGenericProviderOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderArgs) ToMk8sGenericProviderOutputWithContext(ctx context.Context) Mk8sGenericProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderOutput)
}

func (i Mk8sGenericProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProvider] {
	return pulumix.Output[Mk8sGenericProvider]{
		OutputState: i.ToMk8sGenericProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sGenericProviderArgs) ToMk8sGenericProviderPtrOutput() Mk8sGenericProviderPtrOutput {
	return i.ToMk8sGenericProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderArgs) ToMk8sGenericProviderPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderOutput).ToMk8sGenericProviderPtrOutputWithContext(ctx)
}

// Mk8sGenericProviderPtrInput is an input type that accepts Mk8sGenericProviderArgs, Mk8sGenericProviderPtr and Mk8sGenericProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderPtrInput` via:
//
//	        Mk8sGenericProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sGenericProviderPtrInput interface {
	pulumi.Input

	ToMk8sGenericProviderPtrOutput() Mk8sGenericProviderPtrOutput
	ToMk8sGenericProviderPtrOutputWithContext(context.Context) Mk8sGenericProviderPtrOutput
}

type mk8sGenericProviderPtrType Mk8sGenericProviderArgs

func Mk8sGenericProviderPtr(v *Mk8sGenericProviderArgs) Mk8sGenericProviderPtrInput {
	return (*mk8sGenericProviderPtrType)(v)
}

func (*mk8sGenericProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sGenericProvider)(nil)).Elem()
}

func (i *mk8sGenericProviderPtrType) ToMk8sGenericProviderPtrOutput() Mk8sGenericProviderPtrOutput {
	return i.ToMk8sGenericProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sGenericProviderPtrType) ToMk8sGenericProviderPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderPtrOutput)
}

func (i *mk8sGenericProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sGenericProvider] {
	return pulumix.Output[*Mk8sGenericProvider]{
		OutputState: i.ToMk8sGenericProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sGenericProviderOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProvider)(nil)).Elem()
}

func (o Mk8sGenericProviderOutput) ToMk8sGenericProviderOutput() Mk8sGenericProviderOutput {
	return o
}

func (o Mk8sGenericProviderOutput) ToMk8sGenericProviderOutputWithContext(ctx context.Context) Mk8sGenericProviderOutput {
	return o
}

func (o Mk8sGenericProviderOutput) ToMk8sGenericProviderPtrOutput() Mk8sGenericProviderPtrOutput {
	return o.ToMk8sGenericProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sGenericProviderOutput) ToMk8sGenericProviderPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sGenericProvider) *Mk8sGenericProvider {
		return &v
	}).(Mk8sGenericProviderPtrOutput)
}

func (o Mk8sGenericProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProvider] {
	return pulumix.Output[Mk8sGenericProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sGenericProvider) string { return v.Location }).(pulumi.StringOutput)
}

func (o Mk8sGenericProviderOutput) Networking() Mk8sGenericProviderNetworkingOutput {
	return o.ApplyT(func(v Mk8sGenericProvider) Mk8sGenericProviderNetworking { return v.Networking }).(Mk8sGenericProviderNetworkingOutput)
}

func (o Mk8sGenericProviderOutput) NodePools() Mk8sGenericProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sGenericProvider) []Mk8sGenericProviderNodePool { return v.NodePools }).(Mk8sGenericProviderNodePoolArrayOutput)
}

type Mk8sGenericProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sGenericProvider)(nil)).Elem()
}

func (o Mk8sGenericProviderPtrOutput) ToMk8sGenericProviderPtrOutput() Mk8sGenericProviderPtrOutput {
	return o
}

func (o Mk8sGenericProviderPtrOutput) ToMk8sGenericProviderPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderPtrOutput {
	return o
}

func (o Mk8sGenericProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sGenericProvider] {
	return pulumix.Output[*Mk8sGenericProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderPtrOutput) Elem() Mk8sGenericProviderOutput {
	return o.ApplyT(func(v *Mk8sGenericProvider) Mk8sGenericProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sGenericProvider
		return ret
	}).(Mk8sGenericProviderOutput)
}

func (o Mk8sGenericProviderPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sGenericProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sGenericProviderPtrOutput) Networking() Mk8sGenericProviderNetworkingPtrOutput {
	return o.ApplyT(func(v *Mk8sGenericProvider) *Mk8sGenericProviderNetworking {
		if v == nil {
			return nil
		}
		return &v.Networking
	}).(Mk8sGenericProviderNetworkingPtrOutput)
}

func (o Mk8sGenericProviderPtrOutput) NodePools() Mk8sGenericProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sGenericProvider) []Mk8sGenericProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sGenericProviderNodePoolArrayOutput)
}

type Mk8sGenericProviderNetworking struct {
	PodNetwork     *string `pulumi:"podNetwork"`
	ServiceNetwork *string `pulumi:"serviceNetwork"`
}

// Mk8sGenericProviderNetworkingInput is an input type that accepts Mk8sGenericProviderNetworkingArgs and Mk8sGenericProviderNetworkingOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderNetworkingInput` via:
//
//	Mk8sGenericProviderNetworkingArgs{...}
type Mk8sGenericProviderNetworkingInput interface {
	pulumi.Input

	ToMk8sGenericProviderNetworkingOutput() Mk8sGenericProviderNetworkingOutput
	ToMk8sGenericProviderNetworkingOutputWithContext(context.Context) Mk8sGenericProviderNetworkingOutput
}

type Mk8sGenericProviderNetworkingArgs struct {
	PodNetwork     pulumi.StringPtrInput `pulumi:"podNetwork"`
	ServiceNetwork pulumi.StringPtrInput `pulumi:"serviceNetwork"`
}

func (Mk8sGenericProviderNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProviderNetworking)(nil)).Elem()
}

func (i Mk8sGenericProviderNetworkingArgs) ToMk8sGenericProviderNetworkingOutput() Mk8sGenericProviderNetworkingOutput {
	return i.ToMk8sGenericProviderNetworkingOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderNetworkingArgs) ToMk8sGenericProviderNetworkingOutputWithContext(ctx context.Context) Mk8sGenericProviderNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderNetworkingOutput)
}

func (i Mk8sGenericProviderNetworkingArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProviderNetworking] {
	return pulumix.Output[Mk8sGenericProviderNetworking]{
		OutputState: i.ToMk8sGenericProviderNetworkingOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sGenericProviderNetworkingArgs) ToMk8sGenericProviderNetworkingPtrOutput() Mk8sGenericProviderNetworkingPtrOutput {
	return i.ToMk8sGenericProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderNetworkingArgs) ToMk8sGenericProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderNetworkingOutput).ToMk8sGenericProviderNetworkingPtrOutputWithContext(ctx)
}

// Mk8sGenericProviderNetworkingPtrInput is an input type that accepts Mk8sGenericProviderNetworkingArgs, Mk8sGenericProviderNetworkingPtr and Mk8sGenericProviderNetworkingPtrOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderNetworkingPtrInput` via:
//
//	        Mk8sGenericProviderNetworkingArgs{...}
//
//	or:
//
//	        nil
type Mk8sGenericProviderNetworkingPtrInput interface {
	pulumi.Input

	ToMk8sGenericProviderNetworkingPtrOutput() Mk8sGenericProviderNetworkingPtrOutput
	ToMk8sGenericProviderNetworkingPtrOutputWithContext(context.Context) Mk8sGenericProviderNetworkingPtrOutput
}

type mk8sGenericProviderNetworkingPtrType Mk8sGenericProviderNetworkingArgs

func Mk8sGenericProviderNetworkingPtr(v *Mk8sGenericProviderNetworkingArgs) Mk8sGenericProviderNetworkingPtrInput {
	return (*mk8sGenericProviderNetworkingPtrType)(v)
}

func (*mk8sGenericProviderNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sGenericProviderNetworking)(nil)).Elem()
}

func (i *mk8sGenericProviderNetworkingPtrType) ToMk8sGenericProviderNetworkingPtrOutput() Mk8sGenericProviderNetworkingPtrOutput {
	return i.ToMk8sGenericProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i *mk8sGenericProviderNetworkingPtrType) ToMk8sGenericProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderNetworkingPtrOutput)
}

func (i *mk8sGenericProviderNetworkingPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sGenericProviderNetworking] {
	return pulumix.Output[*Mk8sGenericProviderNetworking]{
		OutputState: i.ToMk8sGenericProviderNetworkingPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sGenericProviderNetworkingOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProviderNetworking)(nil)).Elem()
}

func (o Mk8sGenericProviderNetworkingOutput) ToMk8sGenericProviderNetworkingOutput() Mk8sGenericProviderNetworkingOutput {
	return o
}

func (o Mk8sGenericProviderNetworkingOutput) ToMk8sGenericProviderNetworkingOutputWithContext(ctx context.Context) Mk8sGenericProviderNetworkingOutput {
	return o
}

func (o Mk8sGenericProviderNetworkingOutput) ToMk8sGenericProviderNetworkingPtrOutput() Mk8sGenericProviderNetworkingPtrOutput {
	return o.ToMk8sGenericProviderNetworkingPtrOutputWithContext(context.Background())
}

func (o Mk8sGenericProviderNetworkingOutput) ToMk8sGenericProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sGenericProviderNetworking) *Mk8sGenericProviderNetworking {
		return &v
	}).(Mk8sGenericProviderNetworkingPtrOutput)
}

func (o Mk8sGenericProviderNetworkingOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProviderNetworking] {
	return pulumix.Output[Mk8sGenericProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderNetworkingOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNetworking) *string { return v.PodNetwork }).(pulumi.StringPtrOutput)
}

func (o Mk8sGenericProviderNetworkingOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNetworking) *string { return v.ServiceNetwork }).(pulumi.StringPtrOutput)
}

type Mk8sGenericProviderNetworkingPtrOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sGenericProviderNetworking)(nil)).Elem()
}

func (o Mk8sGenericProviderNetworkingPtrOutput) ToMk8sGenericProviderNetworkingPtrOutput() Mk8sGenericProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sGenericProviderNetworkingPtrOutput) ToMk8sGenericProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sGenericProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sGenericProviderNetworkingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sGenericProviderNetworking] {
	return pulumix.Output[*Mk8sGenericProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderNetworkingPtrOutput) Elem() Mk8sGenericProviderNetworkingOutput {
	return o.ApplyT(func(v *Mk8sGenericProviderNetworking) Mk8sGenericProviderNetworking {
		if v != nil {
			return *v
		}
		var ret Mk8sGenericProviderNetworking
		return ret
	}).(Mk8sGenericProviderNetworkingOutput)
}

func (o Mk8sGenericProviderNetworkingPtrOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sGenericProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.PodNetwork
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sGenericProviderNetworkingPtrOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sGenericProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNetwork
	}).(pulumi.StringPtrOutput)
}

type Mk8sGenericProviderNodePool struct {
	Labels map[string]string                  `pulumi:"labels"`
	Name   string                             `pulumi:"name"`
	Taints []Mk8sGenericProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sGenericProviderNodePoolInput is an input type that accepts Mk8sGenericProviderNodePoolArgs and Mk8sGenericProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderNodePoolInput` via:
//
//	Mk8sGenericProviderNodePoolArgs{...}
type Mk8sGenericProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sGenericProviderNodePoolOutput() Mk8sGenericProviderNodePoolOutput
	ToMk8sGenericProviderNodePoolOutputWithContext(context.Context) Mk8sGenericProviderNodePoolOutput
}

type Mk8sGenericProviderNodePoolArgs struct {
	Labels pulumi.StringMapInput                      `pulumi:"labels"`
	Name   pulumi.StringInput                         `pulumi:"name"`
	Taints Mk8sGenericProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sGenericProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProviderNodePool)(nil)).Elem()
}

func (i Mk8sGenericProviderNodePoolArgs) ToMk8sGenericProviderNodePoolOutput() Mk8sGenericProviderNodePoolOutput {
	return i.ToMk8sGenericProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderNodePoolArgs) ToMk8sGenericProviderNodePoolOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderNodePoolOutput)
}

func (i Mk8sGenericProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProviderNodePool] {
	return pulumix.Output[Mk8sGenericProviderNodePool]{
		OutputState: i.ToMk8sGenericProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sGenericProviderNodePoolArrayInput is an input type that accepts Mk8sGenericProviderNodePoolArray and Mk8sGenericProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderNodePoolArrayInput` via:
//
//	Mk8sGenericProviderNodePoolArray{ Mk8sGenericProviderNodePoolArgs{...} }
type Mk8sGenericProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sGenericProviderNodePoolArrayOutput() Mk8sGenericProviderNodePoolArrayOutput
	ToMk8sGenericProviderNodePoolArrayOutputWithContext(context.Context) Mk8sGenericProviderNodePoolArrayOutput
}

type Mk8sGenericProviderNodePoolArray []Mk8sGenericProviderNodePoolInput

func (Mk8sGenericProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sGenericProviderNodePool)(nil)).Elem()
}

func (i Mk8sGenericProviderNodePoolArray) ToMk8sGenericProviderNodePoolArrayOutput() Mk8sGenericProviderNodePoolArrayOutput {
	return i.ToMk8sGenericProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderNodePoolArray) ToMk8sGenericProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderNodePoolArrayOutput)
}

func (i Mk8sGenericProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sGenericProviderNodePool] {
	return pulumix.Output[[]Mk8sGenericProviderNodePool]{
		OutputState: i.ToMk8sGenericProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sGenericProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProviderNodePool)(nil)).Elem()
}

func (o Mk8sGenericProviderNodePoolOutput) ToMk8sGenericProviderNodePoolOutput() Mk8sGenericProviderNodePoolOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolOutput) ToMk8sGenericProviderNodePoolOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProviderNodePool] {
	return pulumix.Output[Mk8sGenericProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sGenericProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sGenericProviderNodePoolOutput) Taints() Mk8sGenericProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNodePool) []Mk8sGenericProviderNodePoolTaint { return v.Taints }).(Mk8sGenericProviderNodePoolTaintArrayOutput)
}

type Mk8sGenericProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sGenericProviderNodePool)(nil)).Elem()
}

func (o Mk8sGenericProviderNodePoolArrayOutput) ToMk8sGenericProviderNodePoolArrayOutput() Mk8sGenericProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolArrayOutput) ToMk8sGenericProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sGenericProviderNodePool] {
	return pulumix.Output[[]Mk8sGenericProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sGenericProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sGenericProviderNodePool {
		return vs[0].([]Mk8sGenericProviderNodePool)[vs[1].(int)]
	}).(Mk8sGenericProviderNodePoolOutput)
}

type Mk8sGenericProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sGenericProviderNodePoolTaintInput is an input type that accepts Mk8sGenericProviderNodePoolTaintArgs and Mk8sGenericProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderNodePoolTaintInput` via:
//
//	Mk8sGenericProviderNodePoolTaintArgs{...}
type Mk8sGenericProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sGenericProviderNodePoolTaintOutput() Mk8sGenericProviderNodePoolTaintOutput
	ToMk8sGenericProviderNodePoolTaintOutputWithContext(context.Context) Mk8sGenericProviderNodePoolTaintOutput
}

type Mk8sGenericProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sGenericProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sGenericProviderNodePoolTaintArgs) ToMk8sGenericProviderNodePoolTaintOutput() Mk8sGenericProviderNodePoolTaintOutput {
	return i.ToMk8sGenericProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderNodePoolTaintArgs) ToMk8sGenericProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderNodePoolTaintOutput)
}

func (i Mk8sGenericProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProviderNodePoolTaint] {
	return pulumix.Output[Mk8sGenericProviderNodePoolTaint]{
		OutputState: i.ToMk8sGenericProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sGenericProviderNodePoolTaintArrayInput is an input type that accepts Mk8sGenericProviderNodePoolTaintArray and Mk8sGenericProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sGenericProviderNodePoolTaintArrayInput` via:
//
//	Mk8sGenericProviderNodePoolTaintArray{ Mk8sGenericProviderNodePoolTaintArgs{...} }
type Mk8sGenericProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sGenericProviderNodePoolTaintArrayOutput() Mk8sGenericProviderNodePoolTaintArrayOutput
	ToMk8sGenericProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sGenericProviderNodePoolTaintArrayOutput
}

type Mk8sGenericProviderNodePoolTaintArray []Mk8sGenericProviderNodePoolTaintInput

func (Mk8sGenericProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sGenericProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sGenericProviderNodePoolTaintArray) ToMk8sGenericProviderNodePoolTaintArrayOutput() Mk8sGenericProviderNodePoolTaintArrayOutput {
	return i.ToMk8sGenericProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sGenericProviderNodePoolTaintArray) ToMk8sGenericProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sGenericProviderNodePoolTaintArrayOutput)
}

func (i Mk8sGenericProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sGenericProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sGenericProviderNodePoolTaint]{
		OutputState: i.ToMk8sGenericProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sGenericProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sGenericProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sGenericProviderNodePoolTaintOutput) ToMk8sGenericProviderNodePoolTaintOutput() Mk8sGenericProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolTaintOutput) ToMk8sGenericProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sGenericProviderNodePoolTaint] {
	return pulumix.Output[Mk8sGenericProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sGenericProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sGenericProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sGenericProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sGenericProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sGenericProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sGenericProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sGenericProviderNodePoolTaintArrayOutput) ToMk8sGenericProviderNodePoolTaintArrayOutput() Mk8sGenericProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolTaintArrayOutput) ToMk8sGenericProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sGenericProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sGenericProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sGenericProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sGenericProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sGenericProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sGenericProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sGenericProviderNodePoolTaint {
		return vs[0].([]Mk8sGenericProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sGenericProviderNodePoolTaintOutput)
}

type Mk8sHetznerProvider struct {
	Autoscaler               *Mk8sHetznerProviderAutoscaler               `pulumi:"autoscaler"`
	DedicatedServerNodePools []Mk8sHetznerProviderDedicatedServerNodePool `pulumi:"dedicatedServerNodePools"`
	FirewallId               *string                                      `pulumi:"firewallId"`
	FloatingIpSelector       map[string]string                            `pulumi:"floatingIpSelector"`
	HetznerLabels            map[string]string                            `pulumi:"hetznerLabels"`
	Image                    *string                                      `pulumi:"image"`
	NetworkId                string                                       `pulumi:"networkId"`
	Networking               Mk8sHetznerProviderNetworking                `pulumi:"networking"`
	NodePools                []Mk8sHetznerProviderNodePool                `pulumi:"nodePools"`
	PreInstallScript         *string                                      `pulumi:"preInstallScript"`
	Region                   string                                       `pulumi:"region"`
	SshKey                   *string                                      `pulumi:"sshKey"`
	TokenSecretLink          string                                       `pulumi:"tokenSecretLink"`
}

// Mk8sHetznerProviderInput is an input type that accepts Mk8sHetznerProviderArgs and Mk8sHetznerProviderOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderInput` via:
//
//	Mk8sHetznerProviderArgs{...}
type Mk8sHetznerProviderInput interface {
	pulumi.Input

	ToMk8sHetznerProviderOutput() Mk8sHetznerProviderOutput
	ToMk8sHetznerProviderOutputWithContext(context.Context) Mk8sHetznerProviderOutput
}

type Mk8sHetznerProviderArgs struct {
	Autoscaler               Mk8sHetznerProviderAutoscalerPtrInput                `pulumi:"autoscaler"`
	DedicatedServerNodePools Mk8sHetznerProviderDedicatedServerNodePoolArrayInput `pulumi:"dedicatedServerNodePools"`
	FirewallId               pulumi.StringPtrInput                                `pulumi:"firewallId"`
	FloatingIpSelector       pulumi.StringMapInput                                `pulumi:"floatingIpSelector"`
	HetznerLabels            pulumi.StringMapInput                                `pulumi:"hetznerLabels"`
	Image                    pulumi.StringPtrInput                                `pulumi:"image"`
	NetworkId                pulumi.StringInput                                   `pulumi:"networkId"`
	Networking               Mk8sHetznerProviderNetworkingInput                   `pulumi:"networking"`
	NodePools                Mk8sHetznerProviderNodePoolArrayInput                `pulumi:"nodePools"`
	PreInstallScript         pulumi.StringPtrInput                                `pulumi:"preInstallScript"`
	Region                   pulumi.StringInput                                   `pulumi:"region"`
	SshKey                   pulumi.StringPtrInput                                `pulumi:"sshKey"`
	TokenSecretLink          pulumi.StringInput                                   `pulumi:"tokenSecretLink"`
}

func (Mk8sHetznerProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProvider)(nil)).Elem()
}

func (i Mk8sHetznerProviderArgs) ToMk8sHetznerProviderOutput() Mk8sHetznerProviderOutput {
	return i.ToMk8sHetznerProviderOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderArgs) ToMk8sHetznerProviderOutputWithContext(ctx context.Context) Mk8sHetznerProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderOutput)
}

func (i Mk8sHetznerProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProvider] {
	return pulumix.Output[Mk8sHetznerProvider]{
		OutputState: i.ToMk8sHetznerProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sHetznerProviderArgs) ToMk8sHetznerProviderPtrOutput() Mk8sHetznerProviderPtrOutput {
	return i.ToMk8sHetznerProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderArgs) ToMk8sHetznerProviderPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderOutput).ToMk8sHetznerProviderPtrOutputWithContext(ctx)
}

// Mk8sHetznerProviderPtrInput is an input type that accepts Mk8sHetznerProviderArgs, Mk8sHetznerProviderPtr and Mk8sHetznerProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderPtrInput` via:
//
//	        Mk8sHetznerProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sHetznerProviderPtrInput interface {
	pulumi.Input

	ToMk8sHetznerProviderPtrOutput() Mk8sHetznerProviderPtrOutput
	ToMk8sHetznerProviderPtrOutputWithContext(context.Context) Mk8sHetznerProviderPtrOutput
}

type mk8sHetznerProviderPtrType Mk8sHetznerProviderArgs

func Mk8sHetznerProviderPtr(v *Mk8sHetznerProviderArgs) Mk8sHetznerProviderPtrInput {
	return (*mk8sHetznerProviderPtrType)(v)
}

func (*mk8sHetznerProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sHetznerProvider)(nil)).Elem()
}

func (i *mk8sHetznerProviderPtrType) ToMk8sHetznerProviderPtrOutput() Mk8sHetznerProviderPtrOutput {
	return i.ToMk8sHetznerProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sHetznerProviderPtrType) ToMk8sHetznerProviderPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderPtrOutput)
}

func (i *mk8sHetznerProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sHetznerProvider] {
	return pulumix.Output[*Mk8sHetznerProvider]{
		OutputState: i.ToMk8sHetznerProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sHetznerProviderOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProvider)(nil)).Elem()
}

func (o Mk8sHetznerProviderOutput) ToMk8sHetznerProviderOutput() Mk8sHetznerProviderOutput {
	return o
}

func (o Mk8sHetznerProviderOutput) ToMk8sHetznerProviderOutputWithContext(ctx context.Context) Mk8sHetznerProviderOutput {
	return o
}

func (o Mk8sHetznerProviderOutput) ToMk8sHetznerProviderPtrOutput() Mk8sHetznerProviderPtrOutput {
	return o.ToMk8sHetznerProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sHetznerProviderOutput) ToMk8sHetznerProviderPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sHetznerProvider) *Mk8sHetznerProvider {
		return &v
	}).(Mk8sHetznerProviderPtrOutput)
}

func (o Mk8sHetznerProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProvider] {
	return pulumix.Output[Mk8sHetznerProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderOutput) Autoscaler() Mk8sHetznerProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) *Mk8sHetznerProviderAutoscaler { return v.Autoscaler }).(Mk8sHetznerProviderAutoscalerPtrOutput)
}

func (o Mk8sHetznerProviderOutput) DedicatedServerNodePools() Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) []Mk8sHetznerProviderDedicatedServerNodePool {
		return v.DedicatedServerNodePools
	}).(Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput)
}

func (o Mk8sHetznerProviderOutput) FirewallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) *string { return v.FirewallId }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderOutput) FloatingIpSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) map[string]string { return v.FloatingIpSelector }).(pulumi.StringMapOutput)
}

func (o Mk8sHetznerProviderOutput) HetznerLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) map[string]string { return v.HetznerLabels }).(pulumi.StringMapOutput)
}

func (o Mk8sHetznerProviderOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) string { return v.NetworkId }).(pulumi.StringOutput)
}

func (o Mk8sHetznerProviderOutput) Networking() Mk8sHetznerProviderNetworkingOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) Mk8sHetznerProviderNetworking { return v.Networking }).(Mk8sHetznerProviderNetworkingOutput)
}

func (o Mk8sHetznerProviderOutput) NodePools() Mk8sHetznerProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) []Mk8sHetznerProviderNodePool { return v.NodePools }).(Mk8sHetznerProviderNodePoolArrayOutput)
}

func (o Mk8sHetznerProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) string { return v.Region }).(pulumi.StringOutput)
}

func (o Mk8sHetznerProviderOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderOutput) TokenSecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sHetznerProvider) string { return v.TokenSecretLink }).(pulumi.StringOutput)
}

type Mk8sHetznerProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sHetznerProvider)(nil)).Elem()
}

func (o Mk8sHetznerProviderPtrOutput) ToMk8sHetznerProviderPtrOutput() Mk8sHetznerProviderPtrOutput {
	return o
}

func (o Mk8sHetznerProviderPtrOutput) ToMk8sHetznerProviderPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderPtrOutput {
	return o
}

func (o Mk8sHetznerProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sHetznerProvider] {
	return pulumix.Output[*Mk8sHetznerProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderPtrOutput) Elem() Mk8sHetznerProviderOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) Mk8sHetznerProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sHetznerProvider
		return ret
	}).(Mk8sHetznerProviderOutput)
}

func (o Mk8sHetznerProviderPtrOutput) Autoscaler() Mk8sHetznerProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *Mk8sHetznerProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sHetznerProviderAutoscalerPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) DedicatedServerNodePools() Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) []Mk8sHetznerProviderDedicatedServerNodePool {
		if v == nil {
			return nil
		}
		return v.DedicatedServerNodePools
	}).(Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput)
}

func (o Mk8sHetznerProviderPtrOutput) FirewallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *string {
		if v == nil {
			return nil
		}
		return v.FirewallId
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) FloatingIpSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) map[string]string {
		if v == nil {
			return nil
		}
		return v.FloatingIpSelector
	}).(pulumi.StringMapOutput)
}

func (o Mk8sHetznerProviderPtrOutput) HetznerLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) map[string]string {
		if v == nil {
			return nil
		}
		return v.HetznerLabels
	}).(pulumi.StringMapOutput)
}

func (o Mk8sHetznerProviderPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkId
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) Networking() Mk8sHetznerProviderNetworkingPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *Mk8sHetznerProviderNetworking {
		if v == nil {
			return nil
		}
		return &v.Networking
	}).(Mk8sHetznerProviderNetworkingPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) NodePools() Mk8sHetznerProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) []Mk8sHetznerProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sHetznerProviderNodePoolArrayOutput)
}

func (o Mk8sHetznerProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderPtrOutput) TokenSecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProvider) *string {
		if v == nil {
			return nil
		}
		return &v.TokenSecretLink
	}).(pulumi.StringPtrOutput)
}

type Mk8sHetznerProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sHetznerProviderAutoscalerInput is an input type that accepts Mk8sHetznerProviderAutoscalerArgs and Mk8sHetznerProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderAutoscalerInput` via:
//
//	Mk8sHetznerProviderAutoscalerArgs{...}
type Mk8sHetznerProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sHetznerProviderAutoscalerOutput() Mk8sHetznerProviderAutoscalerOutput
	ToMk8sHetznerProviderAutoscalerOutputWithContext(context.Context) Mk8sHetznerProviderAutoscalerOutput
}

type Mk8sHetznerProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sHetznerProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sHetznerProviderAutoscalerArgs) ToMk8sHetznerProviderAutoscalerOutput() Mk8sHetznerProviderAutoscalerOutput {
	return i.ToMk8sHetznerProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderAutoscalerArgs) ToMk8sHetznerProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sHetznerProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderAutoscalerOutput)
}

func (i Mk8sHetznerProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderAutoscaler] {
	return pulumix.Output[Mk8sHetznerProviderAutoscaler]{
		OutputState: i.ToMk8sHetznerProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sHetznerProviderAutoscalerArgs) ToMk8sHetznerProviderAutoscalerPtrOutput() Mk8sHetznerProviderAutoscalerPtrOutput {
	return i.ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderAutoscalerArgs) ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderAutoscalerOutput).ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sHetznerProviderAutoscalerPtrInput is an input type that accepts Mk8sHetznerProviderAutoscalerArgs, Mk8sHetznerProviderAutoscalerPtr and Mk8sHetznerProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderAutoscalerPtrInput` via:
//
//	        Mk8sHetznerProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sHetznerProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sHetznerProviderAutoscalerPtrOutput() Mk8sHetznerProviderAutoscalerPtrOutput
	ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sHetznerProviderAutoscalerPtrOutput
}

type mk8sHetznerProviderAutoscalerPtrType Mk8sHetznerProviderAutoscalerArgs

func Mk8sHetznerProviderAutoscalerPtr(v *Mk8sHetznerProviderAutoscalerArgs) Mk8sHetznerProviderAutoscalerPtrInput {
	return (*mk8sHetznerProviderAutoscalerPtrType)(v)
}

func (*mk8sHetznerProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sHetznerProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sHetznerProviderAutoscalerPtrType) ToMk8sHetznerProviderAutoscalerPtrOutput() Mk8sHetznerProviderAutoscalerPtrOutput {
	return i.ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sHetznerProviderAutoscalerPtrType) ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderAutoscalerPtrOutput)
}

func (i *mk8sHetznerProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sHetznerProviderAutoscaler] {
	return pulumix.Output[*Mk8sHetznerProviderAutoscaler]{
		OutputState: i.ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sHetznerProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sHetznerProviderAutoscalerOutput) ToMk8sHetznerProviderAutoscalerOutput() Mk8sHetznerProviderAutoscalerOutput {
	return o
}

func (o Mk8sHetznerProviderAutoscalerOutput) ToMk8sHetznerProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sHetznerProviderAutoscalerOutput {
	return o
}

func (o Mk8sHetznerProviderAutoscalerOutput) ToMk8sHetznerProviderAutoscalerPtrOutput() Mk8sHetznerProviderAutoscalerPtrOutput {
	return o.ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sHetznerProviderAutoscalerOutput) ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sHetznerProviderAutoscaler) *Mk8sHetznerProviderAutoscaler {
		return &v
	}).(Mk8sHetznerProviderAutoscalerPtrOutput)
}

func (o Mk8sHetznerProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderAutoscaler] {
	return pulumix.Output[Mk8sHetznerProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sHetznerProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sHetznerProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sHetznerProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) ToMk8sHetznerProviderAutoscalerPtrOutput() Mk8sHetznerProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) ToMk8sHetznerProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sHetznerProviderAutoscaler] {
	return pulumix.Output[*Mk8sHetznerProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) Elem() Mk8sHetznerProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderAutoscaler) Mk8sHetznerProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sHetznerProviderAutoscaler
		return ret
	}).(Mk8sHetznerProviderAutoscalerOutput)
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sHetznerProviderDedicatedServerNodePool struct {
	Labels map[string]string                                 `pulumi:"labels"`
	Name   string                                            `pulumi:"name"`
	Taints []Mk8sHetznerProviderDedicatedServerNodePoolTaint `pulumi:"taints"`
}

// Mk8sHetznerProviderDedicatedServerNodePoolInput is an input type that accepts Mk8sHetznerProviderDedicatedServerNodePoolArgs and Mk8sHetznerProviderDedicatedServerNodePoolOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderDedicatedServerNodePoolInput` via:
//
//	Mk8sHetznerProviderDedicatedServerNodePoolArgs{...}
type Mk8sHetznerProviderDedicatedServerNodePoolInput interface {
	pulumi.Input

	ToMk8sHetznerProviderDedicatedServerNodePoolOutput() Mk8sHetznerProviderDedicatedServerNodePoolOutput
	ToMk8sHetznerProviderDedicatedServerNodePoolOutputWithContext(context.Context) Mk8sHetznerProviderDedicatedServerNodePoolOutput
}

type Mk8sHetznerProviderDedicatedServerNodePoolArgs struct {
	Labels pulumi.StringMapInput                                     `pulumi:"labels"`
	Name   pulumi.StringInput                                        `pulumi:"name"`
	Taints Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sHetznerProviderDedicatedServerNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePool)(nil)).Elem()
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolArgs) ToMk8sHetznerProviderDedicatedServerNodePoolOutput() Mk8sHetznerProviderDedicatedServerNodePoolOutput {
	return i.ToMk8sHetznerProviderDedicatedServerNodePoolOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolArgs) ToMk8sHetznerProviderDedicatedServerNodePoolOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderDedicatedServerNodePoolOutput)
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePool] {
	return pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePool]{
		OutputState: i.ToMk8sHetznerProviderDedicatedServerNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sHetznerProviderDedicatedServerNodePoolArrayInput is an input type that accepts Mk8sHetznerProviderDedicatedServerNodePoolArray and Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderDedicatedServerNodePoolArrayInput` via:
//
//	Mk8sHetznerProviderDedicatedServerNodePoolArray{ Mk8sHetznerProviderDedicatedServerNodePoolArgs{...} }
type Mk8sHetznerProviderDedicatedServerNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutput() Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput
	ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutputWithContext(context.Context) Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput
}

type Mk8sHetznerProviderDedicatedServerNodePoolArray []Mk8sHetznerProviderDedicatedServerNodePoolInput

func (Mk8sHetznerProviderDedicatedServerNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderDedicatedServerNodePool)(nil)).Elem()
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolArray) ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutput() Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput {
	return i.ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolArray) ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput)
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePool] {
	return pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePool]{
		OutputState: i.ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sHetznerProviderDedicatedServerNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderDedicatedServerNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePool)(nil)).Elem()
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolOutput) ToMk8sHetznerProviderDedicatedServerNodePoolOutput() Mk8sHetznerProviderDedicatedServerNodePoolOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolOutput) ToMk8sHetznerProviderDedicatedServerNodePoolOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePool] {
	return pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderDedicatedServerNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderDedicatedServerNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolOutput) Taints() Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderDedicatedServerNodePool) []Mk8sHetznerProviderDedicatedServerNodePoolTaint {
		return v.Taints
	}).(Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput)
}

type Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderDedicatedServerNodePool)(nil)).Elem()
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput) ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutput() Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput) ToMk8sHetznerProviderDedicatedServerNodePoolArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePool] {
	return pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sHetznerProviderDedicatedServerNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sHetznerProviderDedicatedServerNodePool {
		return vs[0].([]Mk8sHetznerProviderDedicatedServerNodePool)[vs[1].(int)]
	}).(Mk8sHetznerProviderDedicatedServerNodePoolOutput)
}

type Mk8sHetznerProviderDedicatedServerNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sHetznerProviderDedicatedServerNodePoolTaintInput is an input type that accepts Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs and Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderDedicatedServerNodePoolTaintInput` via:
//
//	Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs{...}
type Mk8sHetznerProviderDedicatedServerNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutput() Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput
	ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutputWithContext(context.Context) Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput
}

type Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePoolTaint)(nil)).Elem()
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs) ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutput() Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput {
	return i.ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs) ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput)
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePoolTaint] {
	return pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePoolTaint]{
		OutputState: i.ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayInput is an input type that accepts Mk8sHetznerProviderDedicatedServerNodePoolTaintArray and Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayInput` via:
//
//	Mk8sHetznerProviderDedicatedServerNodePoolTaintArray{ Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs{...} }
type Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput() Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput
	ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutputWithContext(context.Context) Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput
}

type Mk8sHetznerProviderDedicatedServerNodePoolTaintArray []Mk8sHetznerProviderDedicatedServerNodePoolTaintInput

func (Mk8sHetznerProviderDedicatedServerNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderDedicatedServerNodePoolTaint)(nil)).Elem()
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolTaintArray) ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput() Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput {
	return i.ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolTaintArray) ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput)
}

func (i Mk8sHetznerProviderDedicatedServerNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePoolTaint] {
	return pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePoolTaint]{
		OutputState: i.ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePoolTaint)(nil)).Elem()
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput) ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutput() Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput) ToMk8sHetznerProviderDedicatedServerNodePoolTaintOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePoolTaint] {
	return pulumix.Output[Mk8sHetznerProviderDedicatedServerNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderDedicatedServerNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderDedicatedServerNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderDedicatedServerNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderDedicatedServerNodePoolTaint)(nil)).Elem()
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput) ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput() Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput) ToMk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePoolTaint] {
	return pulumix.Output[[]Mk8sHetznerProviderDedicatedServerNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sHetznerProviderDedicatedServerNodePoolTaint {
		return vs[0].([]Mk8sHetznerProviderDedicatedServerNodePoolTaint)[vs[1].(int)]
	}).(Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput)
}

type Mk8sHetznerProviderNetworking struct {
	PodNetwork     *string `pulumi:"podNetwork"`
	ServiceNetwork *string `pulumi:"serviceNetwork"`
}

// Mk8sHetznerProviderNetworkingInput is an input type that accepts Mk8sHetznerProviderNetworkingArgs and Mk8sHetznerProviderNetworkingOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderNetworkingInput` via:
//
//	Mk8sHetznerProviderNetworkingArgs{...}
type Mk8sHetznerProviderNetworkingInput interface {
	pulumi.Input

	ToMk8sHetznerProviderNetworkingOutput() Mk8sHetznerProviderNetworkingOutput
	ToMk8sHetznerProviderNetworkingOutputWithContext(context.Context) Mk8sHetznerProviderNetworkingOutput
}

type Mk8sHetznerProviderNetworkingArgs struct {
	PodNetwork     pulumi.StringPtrInput `pulumi:"podNetwork"`
	ServiceNetwork pulumi.StringPtrInput `pulumi:"serviceNetwork"`
}

func (Mk8sHetznerProviderNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderNetworking)(nil)).Elem()
}

func (i Mk8sHetznerProviderNetworkingArgs) ToMk8sHetznerProviderNetworkingOutput() Mk8sHetznerProviderNetworkingOutput {
	return i.ToMk8sHetznerProviderNetworkingOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderNetworkingArgs) ToMk8sHetznerProviderNetworkingOutputWithContext(ctx context.Context) Mk8sHetznerProviderNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderNetworkingOutput)
}

func (i Mk8sHetznerProviderNetworkingArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderNetworking] {
	return pulumix.Output[Mk8sHetznerProviderNetworking]{
		OutputState: i.ToMk8sHetznerProviderNetworkingOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sHetznerProviderNetworkingArgs) ToMk8sHetznerProviderNetworkingPtrOutput() Mk8sHetznerProviderNetworkingPtrOutput {
	return i.ToMk8sHetznerProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderNetworkingArgs) ToMk8sHetznerProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderNetworkingOutput).ToMk8sHetznerProviderNetworkingPtrOutputWithContext(ctx)
}

// Mk8sHetznerProviderNetworkingPtrInput is an input type that accepts Mk8sHetznerProviderNetworkingArgs, Mk8sHetznerProviderNetworkingPtr and Mk8sHetznerProviderNetworkingPtrOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderNetworkingPtrInput` via:
//
//	        Mk8sHetznerProviderNetworkingArgs{...}
//
//	or:
//
//	        nil
type Mk8sHetznerProviderNetworkingPtrInput interface {
	pulumi.Input

	ToMk8sHetznerProviderNetworkingPtrOutput() Mk8sHetznerProviderNetworkingPtrOutput
	ToMk8sHetznerProviderNetworkingPtrOutputWithContext(context.Context) Mk8sHetznerProviderNetworkingPtrOutput
}

type mk8sHetznerProviderNetworkingPtrType Mk8sHetznerProviderNetworkingArgs

func Mk8sHetznerProviderNetworkingPtr(v *Mk8sHetznerProviderNetworkingArgs) Mk8sHetznerProviderNetworkingPtrInput {
	return (*mk8sHetznerProviderNetworkingPtrType)(v)
}

func (*mk8sHetznerProviderNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sHetznerProviderNetworking)(nil)).Elem()
}

func (i *mk8sHetznerProviderNetworkingPtrType) ToMk8sHetznerProviderNetworkingPtrOutput() Mk8sHetznerProviderNetworkingPtrOutput {
	return i.ToMk8sHetznerProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i *mk8sHetznerProviderNetworkingPtrType) ToMk8sHetznerProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderNetworkingPtrOutput)
}

func (i *mk8sHetznerProviderNetworkingPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sHetznerProviderNetworking] {
	return pulumix.Output[*Mk8sHetznerProviderNetworking]{
		OutputState: i.ToMk8sHetznerProviderNetworkingPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sHetznerProviderNetworkingOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderNetworking)(nil)).Elem()
}

func (o Mk8sHetznerProviderNetworkingOutput) ToMk8sHetznerProviderNetworkingOutput() Mk8sHetznerProviderNetworkingOutput {
	return o
}

func (o Mk8sHetznerProviderNetworkingOutput) ToMk8sHetznerProviderNetworkingOutputWithContext(ctx context.Context) Mk8sHetznerProviderNetworkingOutput {
	return o
}

func (o Mk8sHetznerProviderNetworkingOutput) ToMk8sHetznerProviderNetworkingPtrOutput() Mk8sHetznerProviderNetworkingPtrOutput {
	return o.ToMk8sHetznerProviderNetworkingPtrOutputWithContext(context.Background())
}

func (o Mk8sHetznerProviderNetworkingOutput) ToMk8sHetznerProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sHetznerProviderNetworking) *Mk8sHetznerProviderNetworking {
		return &v
	}).(Mk8sHetznerProviderNetworkingPtrOutput)
}

func (o Mk8sHetznerProviderNetworkingOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderNetworking] {
	return pulumix.Output[Mk8sHetznerProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderNetworkingOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNetworking) *string { return v.PodNetwork }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderNetworkingOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNetworking) *string { return v.ServiceNetwork }).(pulumi.StringPtrOutput)
}

type Mk8sHetznerProviderNetworkingPtrOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sHetznerProviderNetworking)(nil)).Elem()
}

func (o Mk8sHetznerProviderNetworkingPtrOutput) ToMk8sHetznerProviderNetworkingPtrOutput() Mk8sHetznerProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sHetznerProviderNetworkingPtrOutput) ToMk8sHetznerProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sHetznerProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sHetznerProviderNetworkingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sHetznerProviderNetworking] {
	return pulumix.Output[*Mk8sHetznerProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderNetworkingPtrOutput) Elem() Mk8sHetznerProviderNetworkingOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderNetworking) Mk8sHetznerProviderNetworking {
		if v != nil {
			return *v
		}
		var ret Mk8sHetznerProviderNetworking
		return ret
	}).(Mk8sHetznerProviderNetworkingOutput)
}

func (o Mk8sHetznerProviderNetworkingPtrOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.PodNetwork
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderNetworkingPtrOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sHetznerProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNetwork
	}).(pulumi.StringPtrOutput)
}

type Mk8sHetznerProviderNodePool struct {
	Labels        map[string]string                  `pulumi:"labels"`
	MaxSize       *int                               `pulumi:"maxSize"`
	MinSize       *int                               `pulumi:"minSize"`
	Name          string                             `pulumi:"name"`
	OverrideImage *string                            `pulumi:"overrideImage"`
	ServerType    string                             `pulumi:"serverType"`
	Taints        []Mk8sHetznerProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sHetznerProviderNodePoolInput is an input type that accepts Mk8sHetznerProviderNodePoolArgs and Mk8sHetznerProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderNodePoolInput` via:
//
//	Mk8sHetznerProviderNodePoolArgs{...}
type Mk8sHetznerProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sHetznerProviderNodePoolOutput() Mk8sHetznerProviderNodePoolOutput
	ToMk8sHetznerProviderNodePoolOutputWithContext(context.Context) Mk8sHetznerProviderNodePoolOutput
}

type Mk8sHetznerProviderNodePoolArgs struct {
	Labels        pulumi.StringMapInput                      `pulumi:"labels"`
	MaxSize       pulumi.IntPtrInput                         `pulumi:"maxSize"`
	MinSize       pulumi.IntPtrInput                         `pulumi:"minSize"`
	Name          pulumi.StringInput                         `pulumi:"name"`
	OverrideImage pulumi.StringPtrInput                      `pulumi:"overrideImage"`
	ServerType    pulumi.StringInput                         `pulumi:"serverType"`
	Taints        Mk8sHetznerProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sHetznerProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderNodePool)(nil)).Elem()
}

func (i Mk8sHetznerProviderNodePoolArgs) ToMk8sHetznerProviderNodePoolOutput() Mk8sHetznerProviderNodePoolOutput {
	return i.ToMk8sHetznerProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderNodePoolArgs) ToMk8sHetznerProviderNodePoolOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderNodePoolOutput)
}

func (i Mk8sHetznerProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderNodePool] {
	return pulumix.Output[Mk8sHetznerProviderNodePool]{
		OutputState: i.ToMk8sHetznerProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sHetznerProviderNodePoolArrayInput is an input type that accepts Mk8sHetznerProviderNodePoolArray and Mk8sHetznerProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderNodePoolArrayInput` via:
//
//	Mk8sHetznerProviderNodePoolArray{ Mk8sHetznerProviderNodePoolArgs{...} }
type Mk8sHetznerProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sHetznerProviderNodePoolArrayOutput() Mk8sHetznerProviderNodePoolArrayOutput
	ToMk8sHetznerProviderNodePoolArrayOutputWithContext(context.Context) Mk8sHetznerProviderNodePoolArrayOutput
}

type Mk8sHetznerProviderNodePoolArray []Mk8sHetznerProviderNodePoolInput

func (Mk8sHetznerProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderNodePool)(nil)).Elem()
}

func (i Mk8sHetznerProviderNodePoolArray) ToMk8sHetznerProviderNodePoolArrayOutput() Mk8sHetznerProviderNodePoolArrayOutput {
	return i.ToMk8sHetznerProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderNodePoolArray) ToMk8sHetznerProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderNodePoolArrayOutput)
}

func (i Mk8sHetznerProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderNodePool] {
	return pulumix.Output[[]Mk8sHetznerProviderNodePool]{
		OutputState: i.ToMk8sHetznerProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sHetznerProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderNodePool)(nil)).Elem()
}

func (o Mk8sHetznerProviderNodePoolOutput) ToMk8sHetznerProviderNodePoolOutput() Mk8sHetznerProviderNodePoolOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolOutput) ToMk8sHetznerProviderNodePoolOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderNodePool] {
	return pulumix.Output[Mk8sHetznerProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sHetznerProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sHetznerProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sHetznerProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sHetznerProviderNodePoolOutput) OverrideImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePool) *string { return v.OverrideImage }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderNodePoolOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePool) string { return v.ServerType }).(pulumi.StringOutput)
}

func (o Mk8sHetznerProviderNodePoolOutput) Taints() Mk8sHetznerProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePool) []Mk8sHetznerProviderNodePoolTaint { return v.Taints }).(Mk8sHetznerProviderNodePoolTaintArrayOutput)
}

type Mk8sHetznerProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderNodePool)(nil)).Elem()
}

func (o Mk8sHetznerProviderNodePoolArrayOutput) ToMk8sHetznerProviderNodePoolArrayOutput() Mk8sHetznerProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolArrayOutput) ToMk8sHetznerProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderNodePool] {
	return pulumix.Output[[]Mk8sHetznerProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sHetznerProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sHetznerProviderNodePool {
		return vs[0].([]Mk8sHetznerProviderNodePool)[vs[1].(int)]
	}).(Mk8sHetznerProviderNodePoolOutput)
}

type Mk8sHetznerProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sHetznerProviderNodePoolTaintInput is an input type that accepts Mk8sHetznerProviderNodePoolTaintArgs and Mk8sHetznerProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderNodePoolTaintInput` via:
//
//	Mk8sHetznerProviderNodePoolTaintArgs{...}
type Mk8sHetznerProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sHetznerProviderNodePoolTaintOutput() Mk8sHetznerProviderNodePoolTaintOutput
	ToMk8sHetznerProviderNodePoolTaintOutputWithContext(context.Context) Mk8sHetznerProviderNodePoolTaintOutput
}

type Mk8sHetznerProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sHetznerProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sHetznerProviderNodePoolTaintArgs) ToMk8sHetznerProviderNodePoolTaintOutput() Mk8sHetznerProviderNodePoolTaintOutput {
	return i.ToMk8sHetznerProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderNodePoolTaintArgs) ToMk8sHetznerProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderNodePoolTaintOutput)
}

func (i Mk8sHetznerProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderNodePoolTaint] {
	return pulumix.Output[Mk8sHetznerProviderNodePoolTaint]{
		OutputState: i.ToMk8sHetznerProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sHetznerProviderNodePoolTaintArrayInput is an input type that accepts Mk8sHetznerProviderNodePoolTaintArray and Mk8sHetznerProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sHetznerProviderNodePoolTaintArrayInput` via:
//
//	Mk8sHetznerProviderNodePoolTaintArray{ Mk8sHetznerProviderNodePoolTaintArgs{...} }
type Mk8sHetznerProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sHetznerProviderNodePoolTaintArrayOutput() Mk8sHetznerProviderNodePoolTaintArrayOutput
	ToMk8sHetznerProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sHetznerProviderNodePoolTaintArrayOutput
}

type Mk8sHetznerProviderNodePoolTaintArray []Mk8sHetznerProviderNodePoolTaintInput

func (Mk8sHetznerProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sHetznerProviderNodePoolTaintArray) ToMk8sHetznerProviderNodePoolTaintArrayOutput() Mk8sHetznerProviderNodePoolTaintArrayOutput {
	return i.ToMk8sHetznerProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sHetznerProviderNodePoolTaintArray) ToMk8sHetznerProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sHetznerProviderNodePoolTaintArrayOutput)
}

func (i Mk8sHetznerProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sHetznerProviderNodePoolTaint]{
		OutputState: i.ToMk8sHetznerProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sHetznerProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sHetznerProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sHetznerProviderNodePoolTaintOutput) ToMk8sHetznerProviderNodePoolTaintOutput() Mk8sHetznerProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolTaintOutput) ToMk8sHetznerProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sHetznerProviderNodePoolTaint] {
	return pulumix.Output[Mk8sHetznerProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sHetznerProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sHetznerProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sHetznerProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sHetznerProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sHetznerProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sHetznerProviderNodePoolTaintArrayOutput) ToMk8sHetznerProviderNodePoolTaintArrayOutput() Mk8sHetznerProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolTaintArrayOutput) ToMk8sHetznerProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sHetznerProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sHetznerProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sHetznerProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sHetznerProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sHetznerProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sHetznerProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sHetznerProviderNodePoolTaint {
		return vs[0].([]Mk8sHetznerProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sHetznerProviderNodePoolTaintOutput)
}

type Mk8sLambdalabsProvider struct {
	Autoscaler         *Mk8sLambdalabsProviderAutoscaler         `pulumi:"autoscaler"`
	NodePools          []Mk8sLambdalabsProviderNodePool          `pulumi:"nodePools"`
	PreInstallScript   *string                                   `pulumi:"preInstallScript"`
	Region             string                                    `pulumi:"region"`
	SshKey             string                                    `pulumi:"sshKey"`
	TokenSecretLink    string                                    `pulumi:"tokenSecretLink"`
	UnmanagedNodePools []Mk8sLambdalabsProviderUnmanagedNodePool `pulumi:"unmanagedNodePools"`
}

// Mk8sLambdalabsProviderInput is an input type that accepts Mk8sLambdalabsProviderArgs and Mk8sLambdalabsProviderOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderInput` via:
//
//	Mk8sLambdalabsProviderArgs{...}
type Mk8sLambdalabsProviderInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderOutput() Mk8sLambdalabsProviderOutput
	ToMk8sLambdalabsProviderOutputWithContext(context.Context) Mk8sLambdalabsProviderOutput
}

type Mk8sLambdalabsProviderArgs struct {
	Autoscaler         Mk8sLambdalabsProviderAutoscalerPtrInput          `pulumi:"autoscaler"`
	NodePools          Mk8sLambdalabsProviderNodePoolArrayInput          `pulumi:"nodePools"`
	PreInstallScript   pulumi.StringPtrInput                             `pulumi:"preInstallScript"`
	Region             pulumi.StringInput                                `pulumi:"region"`
	SshKey             pulumi.StringInput                                `pulumi:"sshKey"`
	TokenSecretLink    pulumi.StringInput                                `pulumi:"tokenSecretLink"`
	UnmanagedNodePools Mk8sLambdalabsProviderUnmanagedNodePoolArrayInput `pulumi:"unmanagedNodePools"`
}

func (Mk8sLambdalabsProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProvider)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderArgs) ToMk8sLambdalabsProviderOutput() Mk8sLambdalabsProviderOutput {
	return i.ToMk8sLambdalabsProviderOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderArgs) ToMk8sLambdalabsProviderOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderOutput)
}

func (i Mk8sLambdalabsProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProvider] {
	return pulumix.Output[Mk8sLambdalabsProvider]{
		OutputState: i.ToMk8sLambdalabsProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sLambdalabsProviderArgs) ToMk8sLambdalabsProviderPtrOutput() Mk8sLambdalabsProviderPtrOutput {
	return i.ToMk8sLambdalabsProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderArgs) ToMk8sLambdalabsProviderPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderOutput).ToMk8sLambdalabsProviderPtrOutputWithContext(ctx)
}

// Mk8sLambdalabsProviderPtrInput is an input type that accepts Mk8sLambdalabsProviderArgs, Mk8sLambdalabsProviderPtr and Mk8sLambdalabsProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderPtrInput` via:
//
//	        Mk8sLambdalabsProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sLambdalabsProviderPtrInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderPtrOutput() Mk8sLambdalabsProviderPtrOutput
	ToMk8sLambdalabsProviderPtrOutputWithContext(context.Context) Mk8sLambdalabsProviderPtrOutput
}

type mk8sLambdalabsProviderPtrType Mk8sLambdalabsProviderArgs

func Mk8sLambdalabsProviderPtr(v *Mk8sLambdalabsProviderArgs) Mk8sLambdalabsProviderPtrInput {
	return (*mk8sLambdalabsProviderPtrType)(v)
}

func (*mk8sLambdalabsProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLambdalabsProvider)(nil)).Elem()
}

func (i *mk8sLambdalabsProviderPtrType) ToMk8sLambdalabsProviderPtrOutput() Mk8sLambdalabsProviderPtrOutput {
	return i.ToMk8sLambdalabsProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sLambdalabsProviderPtrType) ToMk8sLambdalabsProviderPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderPtrOutput)
}

func (i *mk8sLambdalabsProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLambdalabsProvider] {
	return pulumix.Output[*Mk8sLambdalabsProvider]{
		OutputState: i.ToMk8sLambdalabsProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLambdalabsProviderOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProvider)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderOutput) ToMk8sLambdalabsProviderOutput() Mk8sLambdalabsProviderOutput {
	return o
}

func (o Mk8sLambdalabsProviderOutput) ToMk8sLambdalabsProviderOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderOutput {
	return o
}

func (o Mk8sLambdalabsProviderOutput) ToMk8sLambdalabsProviderPtrOutput() Mk8sLambdalabsProviderPtrOutput {
	return o.ToMk8sLambdalabsProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sLambdalabsProviderOutput) ToMk8sLambdalabsProviderPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sLambdalabsProvider) *Mk8sLambdalabsProvider {
		return &v
	}).(Mk8sLambdalabsProviderPtrOutput)
}

func (o Mk8sLambdalabsProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProvider] {
	return pulumix.Output[Mk8sLambdalabsProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderOutput) Autoscaler() Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProvider) *Mk8sLambdalabsProviderAutoscaler { return v.Autoscaler }).(Mk8sLambdalabsProviderAutoscalerPtrOutput)
}

func (o Mk8sLambdalabsProviderOutput) NodePools() Mk8sLambdalabsProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProvider) []Mk8sLambdalabsProviderNodePool { return v.NodePools }).(Mk8sLambdalabsProviderNodePoolArrayOutput)
}

func (o Mk8sLambdalabsProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProvider) string { return v.Region }).(pulumi.StringOutput)
}

func (o Mk8sLambdalabsProviderOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProvider) string { return v.SshKey }).(pulumi.StringOutput)
}

func (o Mk8sLambdalabsProviderOutput) TokenSecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProvider) string { return v.TokenSecretLink }).(pulumi.StringOutput)
}

func (o Mk8sLambdalabsProviderOutput) UnmanagedNodePools() Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProvider) []Mk8sLambdalabsProviderUnmanagedNodePool { return v.UnmanagedNodePools }).(Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput)
}

type Mk8sLambdalabsProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLambdalabsProvider)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderPtrOutput) ToMk8sLambdalabsProviderPtrOutput() Mk8sLambdalabsProviderPtrOutput {
	return o
}

func (o Mk8sLambdalabsProviderPtrOutput) ToMk8sLambdalabsProviderPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderPtrOutput {
	return o
}

func (o Mk8sLambdalabsProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLambdalabsProvider] {
	return pulumix.Output[*Mk8sLambdalabsProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderPtrOutput) Elem() Mk8sLambdalabsProviderOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) Mk8sLambdalabsProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sLambdalabsProvider
		return ret
	}).(Mk8sLambdalabsProviderOutput)
}

func (o Mk8sLambdalabsProviderPtrOutput) Autoscaler() Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) *Mk8sLambdalabsProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sLambdalabsProviderAutoscalerPtrOutput)
}

func (o Mk8sLambdalabsProviderPtrOutput) NodePools() Mk8sLambdalabsProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) []Mk8sLambdalabsProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sLambdalabsProviderNodePoolArrayOutput)
}

func (o Mk8sLambdalabsProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderPtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) *string {
		if v == nil {
			return nil
		}
		return &v.SshKey
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderPtrOutput) TokenSecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) *string {
		if v == nil {
			return nil
		}
		return &v.TokenSecretLink
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderPtrOutput) UnmanagedNodePools() Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProvider) []Mk8sLambdalabsProviderUnmanagedNodePool {
		if v == nil {
			return nil
		}
		return v.UnmanagedNodePools
	}).(Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput)
}

type Mk8sLambdalabsProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sLambdalabsProviderAutoscalerInput is an input type that accepts Mk8sLambdalabsProviderAutoscalerArgs and Mk8sLambdalabsProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderAutoscalerInput` via:
//
//	Mk8sLambdalabsProviderAutoscalerArgs{...}
type Mk8sLambdalabsProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderAutoscalerOutput() Mk8sLambdalabsProviderAutoscalerOutput
	ToMk8sLambdalabsProviderAutoscalerOutputWithContext(context.Context) Mk8sLambdalabsProviderAutoscalerOutput
}

type Mk8sLambdalabsProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sLambdalabsProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderAutoscalerArgs) ToMk8sLambdalabsProviderAutoscalerOutput() Mk8sLambdalabsProviderAutoscalerOutput {
	return i.ToMk8sLambdalabsProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderAutoscalerArgs) ToMk8sLambdalabsProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderAutoscalerOutput)
}

func (i Mk8sLambdalabsProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderAutoscaler] {
	return pulumix.Output[Mk8sLambdalabsProviderAutoscaler]{
		OutputState: i.ToMk8sLambdalabsProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sLambdalabsProviderAutoscalerArgs) ToMk8sLambdalabsProviderAutoscalerPtrOutput() Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return i.ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderAutoscalerArgs) ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderAutoscalerOutput).ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sLambdalabsProviderAutoscalerPtrInput is an input type that accepts Mk8sLambdalabsProviderAutoscalerArgs, Mk8sLambdalabsProviderAutoscalerPtr and Mk8sLambdalabsProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderAutoscalerPtrInput` via:
//
//	        Mk8sLambdalabsProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sLambdalabsProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderAutoscalerPtrOutput() Mk8sLambdalabsProviderAutoscalerPtrOutput
	ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sLambdalabsProviderAutoscalerPtrOutput
}

type mk8sLambdalabsProviderAutoscalerPtrType Mk8sLambdalabsProviderAutoscalerArgs

func Mk8sLambdalabsProviderAutoscalerPtr(v *Mk8sLambdalabsProviderAutoscalerArgs) Mk8sLambdalabsProviderAutoscalerPtrInput {
	return (*mk8sLambdalabsProviderAutoscalerPtrType)(v)
}

func (*mk8sLambdalabsProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLambdalabsProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sLambdalabsProviderAutoscalerPtrType) ToMk8sLambdalabsProviderAutoscalerPtrOutput() Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return i.ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sLambdalabsProviderAutoscalerPtrType) ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderAutoscalerPtrOutput)
}

func (i *mk8sLambdalabsProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLambdalabsProviderAutoscaler] {
	return pulumix.Output[*Mk8sLambdalabsProviderAutoscaler]{
		OutputState: i.ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLambdalabsProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) ToMk8sLambdalabsProviderAutoscalerOutput() Mk8sLambdalabsProviderAutoscalerOutput {
	return o
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) ToMk8sLambdalabsProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderAutoscalerOutput {
	return o
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) ToMk8sLambdalabsProviderAutoscalerPtrOutput() Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return o.ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sLambdalabsProviderAutoscaler) *Mk8sLambdalabsProviderAutoscaler {
		return &v
	}).(Mk8sLambdalabsProviderAutoscalerPtrOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderAutoscaler] {
	return pulumix.Output[Mk8sLambdalabsProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sLambdalabsProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLambdalabsProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) ToMk8sLambdalabsProviderAutoscalerPtrOutput() Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) ToMk8sLambdalabsProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLambdalabsProviderAutoscaler] {
	return pulumix.Output[*Mk8sLambdalabsProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) Elem() Mk8sLambdalabsProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProviderAutoscaler) Mk8sLambdalabsProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sLambdalabsProviderAutoscaler
		return ret
	}).(Mk8sLambdalabsProviderAutoscalerOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sLambdalabsProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sLambdalabsProviderNodePool struct {
	InstanceType string                                `pulumi:"instanceType"`
	Labels       map[string]string                     `pulumi:"labels"`
	MaxSize      *int                                  `pulumi:"maxSize"`
	MinSize      *int                                  `pulumi:"minSize"`
	Name         string                                `pulumi:"name"`
	Taints       []Mk8sLambdalabsProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sLambdalabsProviderNodePoolInput is an input type that accepts Mk8sLambdalabsProviderNodePoolArgs and Mk8sLambdalabsProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderNodePoolInput` via:
//
//	Mk8sLambdalabsProviderNodePoolArgs{...}
type Mk8sLambdalabsProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderNodePoolOutput() Mk8sLambdalabsProviderNodePoolOutput
	ToMk8sLambdalabsProviderNodePoolOutputWithContext(context.Context) Mk8sLambdalabsProviderNodePoolOutput
}

type Mk8sLambdalabsProviderNodePoolArgs struct {
	InstanceType pulumi.StringInput                            `pulumi:"instanceType"`
	Labels       pulumi.StringMapInput                         `pulumi:"labels"`
	MaxSize      pulumi.IntPtrInput                            `pulumi:"maxSize"`
	MinSize      pulumi.IntPtrInput                            `pulumi:"minSize"`
	Name         pulumi.StringInput                            `pulumi:"name"`
	Taints       Mk8sLambdalabsProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sLambdalabsProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderNodePool)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderNodePoolArgs) ToMk8sLambdalabsProviderNodePoolOutput() Mk8sLambdalabsProviderNodePoolOutput {
	return i.ToMk8sLambdalabsProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderNodePoolArgs) ToMk8sLambdalabsProviderNodePoolOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderNodePoolOutput)
}

func (i Mk8sLambdalabsProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderNodePool] {
	return pulumix.Output[Mk8sLambdalabsProviderNodePool]{
		OutputState: i.ToMk8sLambdalabsProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sLambdalabsProviderNodePoolArrayInput is an input type that accepts Mk8sLambdalabsProviderNodePoolArray and Mk8sLambdalabsProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderNodePoolArrayInput` via:
//
//	Mk8sLambdalabsProviderNodePoolArray{ Mk8sLambdalabsProviderNodePoolArgs{...} }
type Mk8sLambdalabsProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderNodePoolArrayOutput() Mk8sLambdalabsProviderNodePoolArrayOutput
	ToMk8sLambdalabsProviderNodePoolArrayOutputWithContext(context.Context) Mk8sLambdalabsProviderNodePoolArrayOutput
}

type Mk8sLambdalabsProviderNodePoolArray []Mk8sLambdalabsProviderNodePoolInput

func (Mk8sLambdalabsProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderNodePool)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderNodePoolArray) ToMk8sLambdalabsProviderNodePoolArrayOutput() Mk8sLambdalabsProviderNodePoolArrayOutput {
	return i.ToMk8sLambdalabsProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderNodePoolArray) ToMk8sLambdalabsProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderNodePoolArrayOutput)
}

func (i Mk8sLambdalabsProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderNodePool] {
	return pulumix.Output[[]Mk8sLambdalabsProviderNodePool]{
		OutputState: i.ToMk8sLambdalabsProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLambdalabsProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderNodePool)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderNodePoolOutput) ToMk8sLambdalabsProviderNodePoolOutput() Mk8sLambdalabsProviderNodePoolOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolOutput) ToMk8sLambdalabsProviderNodePoolOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderNodePool] {
	return pulumix.Output[Mk8sLambdalabsProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderNodePoolOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePool) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o Mk8sLambdalabsProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sLambdalabsProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sLambdalabsProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sLambdalabsProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sLambdalabsProviderNodePoolOutput) Taints() Mk8sLambdalabsProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePool) []Mk8sLambdalabsProviderNodePoolTaint { return v.Taints }).(Mk8sLambdalabsProviderNodePoolTaintArrayOutput)
}

type Mk8sLambdalabsProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderNodePool)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderNodePoolArrayOutput) ToMk8sLambdalabsProviderNodePoolArrayOutput() Mk8sLambdalabsProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolArrayOutput) ToMk8sLambdalabsProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderNodePool] {
	return pulumix.Output[[]Mk8sLambdalabsProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sLambdalabsProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sLambdalabsProviderNodePool {
		return vs[0].([]Mk8sLambdalabsProviderNodePool)[vs[1].(int)]
	}).(Mk8sLambdalabsProviderNodePoolOutput)
}

type Mk8sLambdalabsProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sLambdalabsProviderNodePoolTaintInput is an input type that accepts Mk8sLambdalabsProviderNodePoolTaintArgs and Mk8sLambdalabsProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderNodePoolTaintInput` via:
//
//	Mk8sLambdalabsProviderNodePoolTaintArgs{...}
type Mk8sLambdalabsProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderNodePoolTaintOutput() Mk8sLambdalabsProviderNodePoolTaintOutput
	ToMk8sLambdalabsProviderNodePoolTaintOutputWithContext(context.Context) Mk8sLambdalabsProviderNodePoolTaintOutput
}

type Mk8sLambdalabsProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sLambdalabsProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderNodePoolTaintArgs) ToMk8sLambdalabsProviderNodePoolTaintOutput() Mk8sLambdalabsProviderNodePoolTaintOutput {
	return i.ToMk8sLambdalabsProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderNodePoolTaintArgs) ToMk8sLambdalabsProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderNodePoolTaintOutput)
}

func (i Mk8sLambdalabsProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderNodePoolTaint] {
	return pulumix.Output[Mk8sLambdalabsProviderNodePoolTaint]{
		OutputState: i.ToMk8sLambdalabsProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sLambdalabsProviderNodePoolTaintArrayInput is an input type that accepts Mk8sLambdalabsProviderNodePoolTaintArray and Mk8sLambdalabsProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderNodePoolTaintArrayInput` via:
//
//	Mk8sLambdalabsProviderNodePoolTaintArray{ Mk8sLambdalabsProviderNodePoolTaintArgs{...} }
type Mk8sLambdalabsProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderNodePoolTaintArrayOutput() Mk8sLambdalabsProviderNodePoolTaintArrayOutput
	ToMk8sLambdalabsProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sLambdalabsProviderNodePoolTaintArrayOutput
}

type Mk8sLambdalabsProviderNodePoolTaintArray []Mk8sLambdalabsProviderNodePoolTaintInput

func (Mk8sLambdalabsProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderNodePoolTaintArray) ToMk8sLambdalabsProviderNodePoolTaintArrayOutput() Mk8sLambdalabsProviderNodePoolTaintArrayOutput {
	return i.ToMk8sLambdalabsProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderNodePoolTaintArray) ToMk8sLambdalabsProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderNodePoolTaintArrayOutput)
}

func (i Mk8sLambdalabsProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sLambdalabsProviderNodePoolTaint]{
		OutputState: i.ToMk8sLambdalabsProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLambdalabsProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderNodePoolTaintOutput) ToMk8sLambdalabsProviderNodePoolTaintOutput() Mk8sLambdalabsProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolTaintOutput) ToMk8sLambdalabsProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderNodePoolTaint] {
	return pulumix.Output[Mk8sLambdalabsProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sLambdalabsProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderNodePoolTaintArrayOutput) ToMk8sLambdalabsProviderNodePoolTaintArrayOutput() Mk8sLambdalabsProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolTaintArrayOutput) ToMk8sLambdalabsProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sLambdalabsProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sLambdalabsProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sLambdalabsProviderNodePoolTaint {
		return vs[0].([]Mk8sLambdalabsProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sLambdalabsProviderNodePoolTaintOutput)
}

type Mk8sLambdalabsProviderUnmanagedNodePool struct {
	Labels map[string]string                              `pulumi:"labels"`
	Name   string                                         `pulumi:"name"`
	Taints []Mk8sLambdalabsProviderUnmanagedNodePoolTaint `pulumi:"taints"`
}

// Mk8sLambdalabsProviderUnmanagedNodePoolInput is an input type that accepts Mk8sLambdalabsProviderUnmanagedNodePoolArgs and Mk8sLambdalabsProviderUnmanagedNodePoolOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderUnmanagedNodePoolInput` via:
//
//	Mk8sLambdalabsProviderUnmanagedNodePoolArgs{...}
type Mk8sLambdalabsProviderUnmanagedNodePoolInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderUnmanagedNodePoolOutput() Mk8sLambdalabsProviderUnmanagedNodePoolOutput
	ToMk8sLambdalabsProviderUnmanagedNodePoolOutputWithContext(context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolOutput
}

type Mk8sLambdalabsProviderUnmanagedNodePoolArgs struct {
	Labels pulumi.StringMapInput                                  `pulumi:"labels"`
	Name   pulumi.StringInput                                     `pulumi:"name"`
	Taints Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sLambdalabsProviderUnmanagedNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePool)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolArgs) ToMk8sLambdalabsProviderUnmanagedNodePoolOutput() Mk8sLambdalabsProviderUnmanagedNodePoolOutput {
	return i.ToMk8sLambdalabsProviderUnmanagedNodePoolOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolArgs) ToMk8sLambdalabsProviderUnmanagedNodePoolOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderUnmanagedNodePoolOutput)
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePool] {
	return pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePool]{
		OutputState: i.ToMk8sLambdalabsProviderUnmanagedNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sLambdalabsProviderUnmanagedNodePoolArrayInput is an input type that accepts Mk8sLambdalabsProviderUnmanagedNodePoolArray and Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderUnmanagedNodePoolArrayInput` via:
//
//	Mk8sLambdalabsProviderUnmanagedNodePoolArray{ Mk8sLambdalabsProviderUnmanagedNodePoolArgs{...} }
type Mk8sLambdalabsProviderUnmanagedNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutput() Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput
	ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutputWithContext(context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput
}

type Mk8sLambdalabsProviderUnmanagedNodePoolArray []Mk8sLambdalabsProviderUnmanagedNodePoolInput

func (Mk8sLambdalabsProviderUnmanagedNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderUnmanagedNodePool)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolArray) ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutput() Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput {
	return i.ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolArray) ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput)
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePool] {
	return pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePool]{
		OutputState: i.ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLambdalabsProviderUnmanagedNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderUnmanagedNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePool)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolOutput() Mk8sLambdalabsProviderUnmanagedNodePoolOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePool] {
	return pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderUnmanagedNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderUnmanagedNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolOutput) Taints() Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderUnmanagedNodePool) []Mk8sLambdalabsProviderUnmanagedNodePoolTaint {
		return v.Taints
	}).(Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput)
}

type Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderUnmanagedNodePool)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutput() Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePool] {
	return pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sLambdalabsProviderUnmanagedNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sLambdalabsProviderUnmanagedNodePool {
		return vs[0].([]Mk8sLambdalabsProviderUnmanagedNodePool)[vs[1].(int)]
	}).(Mk8sLambdalabsProviderUnmanagedNodePoolOutput)
}

type Mk8sLambdalabsProviderUnmanagedNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sLambdalabsProviderUnmanagedNodePoolTaintInput is an input type that accepts Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs and Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderUnmanagedNodePoolTaintInput` via:
//
//	Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs{...}
type Mk8sLambdalabsProviderUnmanagedNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutput() Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput
	ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutputWithContext(context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput
}

type Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutput() Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput {
	return i.ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput)
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePoolTaint]{
		OutputState: i.ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayInput is an input type that accepts Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray and Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayInput` via:
//
//	Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray{ Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs{...} }
type Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput() Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput
	ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutputWithContext(context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput
}

type Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray []Mk8sLambdalabsProviderUnmanagedNodePoolTaintInput

func (Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput() Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput {
	return i.ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput)
}

func (i Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePoolTaint]{
		OutputState: i.ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutput() Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[Mk8sLambdalabsProviderUnmanagedNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderUnmanagedNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderUnmanagedNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLambdalabsProviderUnmanagedNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLambdalabsProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput() Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput) ToMk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[[]Mk8sLambdalabsProviderUnmanagedNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sLambdalabsProviderUnmanagedNodePoolTaint {
		return vs[0].([]Mk8sLambdalabsProviderUnmanagedNodePoolTaint)[vs[1].(int)]
	}).(Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput)
}

type Mk8sLinodeProvider struct {
	AuthorizedKeys   []string                      `pulumi:"authorizedKeys"`
	AuthorizedUsers  []string                      `pulumi:"authorizedUsers"`
	Autoscaler       *Mk8sLinodeProviderAutoscaler `pulumi:"autoscaler"`
	FirewallId       *string                       `pulumi:"firewallId"`
	Image            string                        `pulumi:"image"`
	Networking       Mk8sLinodeProviderNetworking  `pulumi:"networking"`
	NodePools        []Mk8sLinodeProviderNodePool  `pulumi:"nodePools"`
	PreInstallScript *string                       `pulumi:"preInstallScript"`
	Region           string                        `pulumi:"region"`
	TokenSecretLink  string                        `pulumi:"tokenSecretLink"`
	VpcId            string                        `pulumi:"vpcId"`
}

// Mk8sLinodeProviderInput is an input type that accepts Mk8sLinodeProviderArgs and Mk8sLinodeProviderOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderInput` via:
//
//	Mk8sLinodeProviderArgs{...}
type Mk8sLinodeProviderInput interface {
	pulumi.Input

	ToMk8sLinodeProviderOutput() Mk8sLinodeProviderOutput
	ToMk8sLinodeProviderOutputWithContext(context.Context) Mk8sLinodeProviderOutput
}

type Mk8sLinodeProviderArgs struct {
	AuthorizedKeys   pulumi.StringArrayInput              `pulumi:"authorizedKeys"`
	AuthorizedUsers  pulumi.StringArrayInput              `pulumi:"authorizedUsers"`
	Autoscaler       Mk8sLinodeProviderAutoscalerPtrInput `pulumi:"autoscaler"`
	FirewallId       pulumi.StringPtrInput                `pulumi:"firewallId"`
	Image            pulumi.StringInput                   `pulumi:"image"`
	Networking       Mk8sLinodeProviderNetworkingInput    `pulumi:"networking"`
	NodePools        Mk8sLinodeProviderNodePoolArrayInput `pulumi:"nodePools"`
	PreInstallScript pulumi.StringPtrInput                `pulumi:"preInstallScript"`
	Region           pulumi.StringInput                   `pulumi:"region"`
	TokenSecretLink  pulumi.StringInput                   `pulumi:"tokenSecretLink"`
	VpcId            pulumi.StringInput                   `pulumi:"vpcId"`
}

func (Mk8sLinodeProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProvider)(nil)).Elem()
}

func (i Mk8sLinodeProviderArgs) ToMk8sLinodeProviderOutput() Mk8sLinodeProviderOutput {
	return i.ToMk8sLinodeProviderOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderArgs) ToMk8sLinodeProviderOutputWithContext(ctx context.Context) Mk8sLinodeProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderOutput)
}

func (i Mk8sLinodeProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProvider] {
	return pulumix.Output[Mk8sLinodeProvider]{
		OutputState: i.ToMk8sLinodeProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sLinodeProviderArgs) ToMk8sLinodeProviderPtrOutput() Mk8sLinodeProviderPtrOutput {
	return i.ToMk8sLinodeProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderArgs) ToMk8sLinodeProviderPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderOutput).ToMk8sLinodeProviderPtrOutputWithContext(ctx)
}

// Mk8sLinodeProviderPtrInput is an input type that accepts Mk8sLinodeProviderArgs, Mk8sLinodeProviderPtr and Mk8sLinodeProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderPtrInput` via:
//
//	        Mk8sLinodeProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sLinodeProviderPtrInput interface {
	pulumi.Input

	ToMk8sLinodeProviderPtrOutput() Mk8sLinodeProviderPtrOutput
	ToMk8sLinodeProviderPtrOutputWithContext(context.Context) Mk8sLinodeProviderPtrOutput
}

type mk8sLinodeProviderPtrType Mk8sLinodeProviderArgs

func Mk8sLinodeProviderPtr(v *Mk8sLinodeProviderArgs) Mk8sLinodeProviderPtrInput {
	return (*mk8sLinodeProviderPtrType)(v)
}

func (*mk8sLinodeProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLinodeProvider)(nil)).Elem()
}

func (i *mk8sLinodeProviderPtrType) ToMk8sLinodeProviderPtrOutput() Mk8sLinodeProviderPtrOutput {
	return i.ToMk8sLinodeProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sLinodeProviderPtrType) ToMk8sLinodeProviderPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderPtrOutput)
}

func (i *mk8sLinodeProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLinodeProvider] {
	return pulumix.Output[*Mk8sLinodeProvider]{
		OutputState: i.ToMk8sLinodeProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLinodeProviderOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProvider)(nil)).Elem()
}

func (o Mk8sLinodeProviderOutput) ToMk8sLinodeProviderOutput() Mk8sLinodeProviderOutput {
	return o
}

func (o Mk8sLinodeProviderOutput) ToMk8sLinodeProviderOutputWithContext(ctx context.Context) Mk8sLinodeProviderOutput {
	return o
}

func (o Mk8sLinodeProviderOutput) ToMk8sLinodeProviderPtrOutput() Mk8sLinodeProviderPtrOutput {
	return o.ToMk8sLinodeProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sLinodeProviderOutput) ToMk8sLinodeProviderPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sLinodeProvider) *Mk8sLinodeProvider {
		return &v
	}).(Mk8sLinodeProviderPtrOutput)
}

func (o Mk8sLinodeProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProvider] {
	return pulumix.Output[Mk8sLinodeProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderOutput) AuthorizedKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) []string { return v.AuthorizedKeys }).(pulumi.StringArrayOutput)
}

func (o Mk8sLinodeProviderOutput) AuthorizedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) []string { return v.AuthorizedUsers }).(pulumi.StringArrayOutput)
}

func (o Mk8sLinodeProviderOutput) Autoscaler() Mk8sLinodeProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) *Mk8sLinodeProviderAutoscaler { return v.Autoscaler }).(Mk8sLinodeProviderAutoscalerPtrOutput)
}

func (o Mk8sLinodeProviderOutput) FirewallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) *string { return v.FirewallId }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) string { return v.Image }).(pulumi.StringOutput)
}

func (o Mk8sLinodeProviderOutput) Networking() Mk8sLinodeProviderNetworkingOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) Mk8sLinodeProviderNetworking { return v.Networking }).(Mk8sLinodeProviderNetworkingOutput)
}

func (o Mk8sLinodeProviderOutput) NodePools() Mk8sLinodeProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) []Mk8sLinodeProviderNodePool { return v.NodePools }).(Mk8sLinodeProviderNodePoolArrayOutput)
}

func (o Mk8sLinodeProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) string { return v.Region }).(pulumi.StringOutput)
}

func (o Mk8sLinodeProviderOutput) TokenSecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) string { return v.TokenSecretLink }).(pulumi.StringOutput)
}

func (o Mk8sLinodeProviderOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLinodeProvider) string { return v.VpcId }).(pulumi.StringOutput)
}

type Mk8sLinodeProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLinodeProvider)(nil)).Elem()
}

func (o Mk8sLinodeProviderPtrOutput) ToMk8sLinodeProviderPtrOutput() Mk8sLinodeProviderPtrOutput {
	return o
}

func (o Mk8sLinodeProviderPtrOutput) ToMk8sLinodeProviderPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderPtrOutput {
	return o
}

func (o Mk8sLinodeProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLinodeProvider] {
	return pulumix.Output[*Mk8sLinodeProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderPtrOutput) Elem() Mk8sLinodeProviderOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) Mk8sLinodeProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sLinodeProvider
		return ret
	}).(Mk8sLinodeProviderOutput)
}

func (o Mk8sLinodeProviderPtrOutput) AuthorizedKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedKeys
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sLinodeProviderPtrOutput) AuthorizedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedUsers
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sLinodeProviderPtrOutput) Autoscaler() Mk8sLinodeProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *Mk8sLinodeProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sLinodeProviderAutoscalerPtrOutput)
}

func (o Mk8sLinodeProviderPtrOutput) FirewallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *string {
		if v == nil {
			return nil
		}
		return v.FirewallId
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderPtrOutput) Networking() Mk8sLinodeProviderNetworkingPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *Mk8sLinodeProviderNetworking {
		if v == nil {
			return nil
		}
		return &v.Networking
	}).(Mk8sLinodeProviderNetworkingPtrOutput)
}

func (o Mk8sLinodeProviderPtrOutput) NodePools() Mk8sLinodeProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) []Mk8sLinodeProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sLinodeProviderNodePoolArrayOutput)
}

func (o Mk8sLinodeProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderPtrOutput) TokenSecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *string {
		if v == nil {
			return nil
		}
		return &v.TokenSecretLink
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProvider) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type Mk8sLinodeProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sLinodeProviderAutoscalerInput is an input type that accepts Mk8sLinodeProviderAutoscalerArgs and Mk8sLinodeProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderAutoscalerInput` via:
//
//	Mk8sLinodeProviderAutoscalerArgs{...}
type Mk8sLinodeProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sLinodeProviderAutoscalerOutput() Mk8sLinodeProviderAutoscalerOutput
	ToMk8sLinodeProviderAutoscalerOutputWithContext(context.Context) Mk8sLinodeProviderAutoscalerOutput
}

type Mk8sLinodeProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sLinodeProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sLinodeProviderAutoscalerArgs) ToMk8sLinodeProviderAutoscalerOutput() Mk8sLinodeProviderAutoscalerOutput {
	return i.ToMk8sLinodeProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderAutoscalerArgs) ToMk8sLinodeProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sLinodeProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderAutoscalerOutput)
}

func (i Mk8sLinodeProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderAutoscaler] {
	return pulumix.Output[Mk8sLinodeProviderAutoscaler]{
		OutputState: i.ToMk8sLinodeProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sLinodeProviderAutoscalerArgs) ToMk8sLinodeProviderAutoscalerPtrOutput() Mk8sLinodeProviderAutoscalerPtrOutput {
	return i.ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderAutoscalerArgs) ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderAutoscalerOutput).ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sLinodeProviderAutoscalerPtrInput is an input type that accepts Mk8sLinodeProviderAutoscalerArgs, Mk8sLinodeProviderAutoscalerPtr and Mk8sLinodeProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderAutoscalerPtrInput` via:
//
//	        Mk8sLinodeProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sLinodeProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sLinodeProviderAutoscalerPtrOutput() Mk8sLinodeProviderAutoscalerPtrOutput
	ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sLinodeProviderAutoscalerPtrOutput
}

type mk8sLinodeProviderAutoscalerPtrType Mk8sLinodeProviderAutoscalerArgs

func Mk8sLinodeProviderAutoscalerPtr(v *Mk8sLinodeProviderAutoscalerArgs) Mk8sLinodeProviderAutoscalerPtrInput {
	return (*mk8sLinodeProviderAutoscalerPtrType)(v)
}

func (*mk8sLinodeProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLinodeProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sLinodeProviderAutoscalerPtrType) ToMk8sLinodeProviderAutoscalerPtrOutput() Mk8sLinodeProviderAutoscalerPtrOutput {
	return i.ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sLinodeProviderAutoscalerPtrType) ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderAutoscalerPtrOutput)
}

func (i *mk8sLinodeProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLinodeProviderAutoscaler] {
	return pulumix.Output[*Mk8sLinodeProviderAutoscaler]{
		OutputState: i.ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLinodeProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sLinodeProviderAutoscalerOutput) ToMk8sLinodeProviderAutoscalerOutput() Mk8sLinodeProviderAutoscalerOutput {
	return o
}

func (o Mk8sLinodeProviderAutoscalerOutput) ToMk8sLinodeProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sLinodeProviderAutoscalerOutput {
	return o
}

func (o Mk8sLinodeProviderAutoscalerOutput) ToMk8sLinodeProviderAutoscalerPtrOutput() Mk8sLinodeProviderAutoscalerPtrOutput {
	return o.ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sLinodeProviderAutoscalerOutput) ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sLinodeProviderAutoscaler) *Mk8sLinodeProviderAutoscaler {
		return &v
	}).(Mk8sLinodeProviderAutoscalerPtrOutput)
}

func (o Mk8sLinodeProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderAutoscaler] {
	return pulumix.Output[Mk8sLinodeProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sLinodeProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sLinodeProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLinodeProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) ToMk8sLinodeProviderAutoscalerPtrOutput() Mk8sLinodeProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) ToMk8sLinodeProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLinodeProviderAutoscaler] {
	return pulumix.Output[*Mk8sLinodeProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) Elem() Mk8sLinodeProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderAutoscaler) Mk8sLinodeProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sLinodeProviderAutoscaler
		return ret
	}).(Mk8sLinodeProviderAutoscalerOutput)
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sLinodeProviderNetworking struct {
	PodNetwork     *string `pulumi:"podNetwork"`
	ServiceNetwork *string `pulumi:"serviceNetwork"`
}

// Mk8sLinodeProviderNetworkingInput is an input type that accepts Mk8sLinodeProviderNetworkingArgs and Mk8sLinodeProviderNetworkingOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderNetworkingInput` via:
//
//	Mk8sLinodeProviderNetworkingArgs{...}
type Mk8sLinodeProviderNetworkingInput interface {
	pulumi.Input

	ToMk8sLinodeProviderNetworkingOutput() Mk8sLinodeProviderNetworkingOutput
	ToMk8sLinodeProviderNetworkingOutputWithContext(context.Context) Mk8sLinodeProviderNetworkingOutput
}

type Mk8sLinodeProviderNetworkingArgs struct {
	PodNetwork     pulumi.StringPtrInput `pulumi:"podNetwork"`
	ServiceNetwork pulumi.StringPtrInput `pulumi:"serviceNetwork"`
}

func (Mk8sLinodeProviderNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderNetworking)(nil)).Elem()
}

func (i Mk8sLinodeProviderNetworkingArgs) ToMk8sLinodeProviderNetworkingOutput() Mk8sLinodeProviderNetworkingOutput {
	return i.ToMk8sLinodeProviderNetworkingOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderNetworkingArgs) ToMk8sLinodeProviderNetworkingOutputWithContext(ctx context.Context) Mk8sLinodeProviderNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderNetworkingOutput)
}

func (i Mk8sLinodeProviderNetworkingArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderNetworking] {
	return pulumix.Output[Mk8sLinodeProviderNetworking]{
		OutputState: i.ToMk8sLinodeProviderNetworkingOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sLinodeProviderNetworkingArgs) ToMk8sLinodeProviderNetworkingPtrOutput() Mk8sLinodeProviderNetworkingPtrOutput {
	return i.ToMk8sLinodeProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderNetworkingArgs) ToMk8sLinodeProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderNetworkingOutput).ToMk8sLinodeProviderNetworkingPtrOutputWithContext(ctx)
}

// Mk8sLinodeProviderNetworkingPtrInput is an input type that accepts Mk8sLinodeProviderNetworkingArgs, Mk8sLinodeProviderNetworkingPtr and Mk8sLinodeProviderNetworkingPtrOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderNetworkingPtrInput` via:
//
//	        Mk8sLinodeProviderNetworkingArgs{...}
//
//	or:
//
//	        nil
type Mk8sLinodeProviderNetworkingPtrInput interface {
	pulumi.Input

	ToMk8sLinodeProviderNetworkingPtrOutput() Mk8sLinodeProviderNetworkingPtrOutput
	ToMk8sLinodeProviderNetworkingPtrOutputWithContext(context.Context) Mk8sLinodeProviderNetworkingPtrOutput
}

type mk8sLinodeProviderNetworkingPtrType Mk8sLinodeProviderNetworkingArgs

func Mk8sLinodeProviderNetworkingPtr(v *Mk8sLinodeProviderNetworkingArgs) Mk8sLinodeProviderNetworkingPtrInput {
	return (*mk8sLinodeProviderNetworkingPtrType)(v)
}

func (*mk8sLinodeProviderNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLinodeProviderNetworking)(nil)).Elem()
}

func (i *mk8sLinodeProviderNetworkingPtrType) ToMk8sLinodeProviderNetworkingPtrOutput() Mk8sLinodeProviderNetworkingPtrOutput {
	return i.ToMk8sLinodeProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i *mk8sLinodeProviderNetworkingPtrType) ToMk8sLinodeProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderNetworkingPtrOutput)
}

func (i *mk8sLinodeProviderNetworkingPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLinodeProviderNetworking] {
	return pulumix.Output[*Mk8sLinodeProviderNetworking]{
		OutputState: i.ToMk8sLinodeProviderNetworkingPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLinodeProviderNetworkingOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderNetworking)(nil)).Elem()
}

func (o Mk8sLinodeProviderNetworkingOutput) ToMk8sLinodeProviderNetworkingOutput() Mk8sLinodeProviderNetworkingOutput {
	return o
}

func (o Mk8sLinodeProviderNetworkingOutput) ToMk8sLinodeProviderNetworkingOutputWithContext(ctx context.Context) Mk8sLinodeProviderNetworkingOutput {
	return o
}

func (o Mk8sLinodeProviderNetworkingOutput) ToMk8sLinodeProviderNetworkingPtrOutput() Mk8sLinodeProviderNetworkingPtrOutput {
	return o.ToMk8sLinodeProviderNetworkingPtrOutputWithContext(context.Background())
}

func (o Mk8sLinodeProviderNetworkingOutput) ToMk8sLinodeProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sLinodeProviderNetworking) *Mk8sLinodeProviderNetworking {
		return &v
	}).(Mk8sLinodeProviderNetworkingPtrOutput)
}

func (o Mk8sLinodeProviderNetworkingOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderNetworking] {
	return pulumix.Output[Mk8sLinodeProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderNetworkingOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNetworking) *string { return v.PodNetwork }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderNetworkingOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNetworking) *string { return v.ServiceNetwork }).(pulumi.StringPtrOutput)
}

type Mk8sLinodeProviderNetworkingPtrOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sLinodeProviderNetworking)(nil)).Elem()
}

func (o Mk8sLinodeProviderNetworkingPtrOutput) ToMk8sLinodeProviderNetworkingPtrOutput() Mk8sLinodeProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sLinodeProviderNetworkingPtrOutput) ToMk8sLinodeProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sLinodeProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sLinodeProviderNetworkingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sLinodeProviderNetworking] {
	return pulumix.Output[*Mk8sLinodeProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderNetworkingPtrOutput) Elem() Mk8sLinodeProviderNetworkingOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderNetworking) Mk8sLinodeProviderNetworking {
		if v != nil {
			return *v
		}
		var ret Mk8sLinodeProviderNetworking
		return ret
	}).(Mk8sLinodeProviderNetworkingOutput)
}

func (o Mk8sLinodeProviderNetworkingPtrOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.PodNetwork
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderNetworkingPtrOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sLinodeProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNetwork
	}).(pulumi.StringPtrOutput)
}

type Mk8sLinodeProviderNodePool struct {
	Labels        map[string]string                 `pulumi:"labels"`
	MaxSize       *int                              `pulumi:"maxSize"`
	MinSize       *int                              `pulumi:"minSize"`
	Name          string                            `pulumi:"name"`
	OverrideImage *string                           `pulumi:"overrideImage"`
	ServerType    string                            `pulumi:"serverType"`
	SubnetId      string                            `pulumi:"subnetId"`
	Taints        []Mk8sLinodeProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sLinodeProviderNodePoolInput is an input type that accepts Mk8sLinodeProviderNodePoolArgs and Mk8sLinodeProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderNodePoolInput` via:
//
//	Mk8sLinodeProviderNodePoolArgs{...}
type Mk8sLinodeProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sLinodeProviderNodePoolOutput() Mk8sLinodeProviderNodePoolOutput
	ToMk8sLinodeProviderNodePoolOutputWithContext(context.Context) Mk8sLinodeProviderNodePoolOutput
}

type Mk8sLinodeProviderNodePoolArgs struct {
	Labels        pulumi.StringMapInput                     `pulumi:"labels"`
	MaxSize       pulumi.IntPtrInput                        `pulumi:"maxSize"`
	MinSize       pulumi.IntPtrInput                        `pulumi:"minSize"`
	Name          pulumi.StringInput                        `pulumi:"name"`
	OverrideImage pulumi.StringPtrInput                     `pulumi:"overrideImage"`
	ServerType    pulumi.StringInput                        `pulumi:"serverType"`
	SubnetId      pulumi.StringInput                        `pulumi:"subnetId"`
	Taints        Mk8sLinodeProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sLinodeProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderNodePool)(nil)).Elem()
}

func (i Mk8sLinodeProviderNodePoolArgs) ToMk8sLinodeProviderNodePoolOutput() Mk8sLinodeProviderNodePoolOutput {
	return i.ToMk8sLinodeProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderNodePoolArgs) ToMk8sLinodeProviderNodePoolOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderNodePoolOutput)
}

func (i Mk8sLinodeProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderNodePool] {
	return pulumix.Output[Mk8sLinodeProviderNodePool]{
		OutputState: i.ToMk8sLinodeProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sLinodeProviderNodePoolArrayInput is an input type that accepts Mk8sLinodeProviderNodePoolArray and Mk8sLinodeProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderNodePoolArrayInput` via:
//
//	Mk8sLinodeProviderNodePoolArray{ Mk8sLinodeProviderNodePoolArgs{...} }
type Mk8sLinodeProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sLinodeProviderNodePoolArrayOutput() Mk8sLinodeProviderNodePoolArrayOutput
	ToMk8sLinodeProviderNodePoolArrayOutputWithContext(context.Context) Mk8sLinodeProviderNodePoolArrayOutput
}

type Mk8sLinodeProviderNodePoolArray []Mk8sLinodeProviderNodePoolInput

func (Mk8sLinodeProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLinodeProviderNodePool)(nil)).Elem()
}

func (i Mk8sLinodeProviderNodePoolArray) ToMk8sLinodeProviderNodePoolArrayOutput() Mk8sLinodeProviderNodePoolArrayOutput {
	return i.ToMk8sLinodeProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderNodePoolArray) ToMk8sLinodeProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderNodePoolArrayOutput)
}

func (i Mk8sLinodeProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLinodeProviderNodePool] {
	return pulumix.Output[[]Mk8sLinodeProviderNodePool]{
		OutputState: i.ToMk8sLinodeProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLinodeProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderNodePool)(nil)).Elem()
}

func (o Mk8sLinodeProviderNodePoolOutput) ToMk8sLinodeProviderNodePoolOutput() Mk8sLinodeProviderNodePoolOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolOutput) ToMk8sLinodeProviderNodePoolOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderNodePool] {
	return pulumix.Output[Mk8sLinodeProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sLinodeProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sLinodeProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sLinodeProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sLinodeProviderNodePoolOutput) OverrideImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) *string { return v.OverrideImage }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderNodePoolOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) string { return v.ServerType }).(pulumi.StringOutput)
}

func (o Mk8sLinodeProviderNodePoolOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o Mk8sLinodeProviderNodePoolOutput) Taints() Mk8sLinodeProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePool) []Mk8sLinodeProviderNodePoolTaint { return v.Taints }).(Mk8sLinodeProviderNodePoolTaintArrayOutput)
}

type Mk8sLinodeProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLinodeProviderNodePool)(nil)).Elem()
}

func (o Mk8sLinodeProviderNodePoolArrayOutput) ToMk8sLinodeProviderNodePoolArrayOutput() Mk8sLinodeProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolArrayOutput) ToMk8sLinodeProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLinodeProviderNodePool] {
	return pulumix.Output[[]Mk8sLinodeProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sLinodeProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sLinodeProviderNodePool {
		return vs[0].([]Mk8sLinodeProviderNodePool)[vs[1].(int)]
	}).(Mk8sLinodeProviderNodePoolOutput)
}

type Mk8sLinodeProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sLinodeProviderNodePoolTaintInput is an input type that accepts Mk8sLinodeProviderNodePoolTaintArgs and Mk8sLinodeProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderNodePoolTaintInput` via:
//
//	Mk8sLinodeProviderNodePoolTaintArgs{...}
type Mk8sLinodeProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sLinodeProviderNodePoolTaintOutput() Mk8sLinodeProviderNodePoolTaintOutput
	ToMk8sLinodeProviderNodePoolTaintOutputWithContext(context.Context) Mk8sLinodeProviderNodePoolTaintOutput
}

type Mk8sLinodeProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sLinodeProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sLinodeProviderNodePoolTaintArgs) ToMk8sLinodeProviderNodePoolTaintOutput() Mk8sLinodeProviderNodePoolTaintOutput {
	return i.ToMk8sLinodeProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderNodePoolTaintArgs) ToMk8sLinodeProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderNodePoolTaintOutput)
}

func (i Mk8sLinodeProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderNodePoolTaint] {
	return pulumix.Output[Mk8sLinodeProviderNodePoolTaint]{
		OutputState: i.ToMk8sLinodeProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sLinodeProviderNodePoolTaintArrayInput is an input type that accepts Mk8sLinodeProviderNodePoolTaintArray and Mk8sLinodeProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sLinodeProviderNodePoolTaintArrayInput` via:
//
//	Mk8sLinodeProviderNodePoolTaintArray{ Mk8sLinodeProviderNodePoolTaintArgs{...} }
type Mk8sLinodeProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sLinodeProviderNodePoolTaintArrayOutput() Mk8sLinodeProviderNodePoolTaintArrayOutput
	ToMk8sLinodeProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sLinodeProviderNodePoolTaintArrayOutput
}

type Mk8sLinodeProviderNodePoolTaintArray []Mk8sLinodeProviderNodePoolTaintInput

func (Mk8sLinodeProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLinodeProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sLinodeProviderNodePoolTaintArray) ToMk8sLinodeProviderNodePoolTaintArrayOutput() Mk8sLinodeProviderNodePoolTaintArrayOutput {
	return i.ToMk8sLinodeProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sLinodeProviderNodePoolTaintArray) ToMk8sLinodeProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sLinodeProviderNodePoolTaintArrayOutput)
}

func (i Mk8sLinodeProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLinodeProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sLinodeProviderNodePoolTaint]{
		OutputState: i.ToMk8sLinodeProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sLinodeProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sLinodeProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sLinodeProviderNodePoolTaintOutput) ToMk8sLinodeProviderNodePoolTaintOutput() Mk8sLinodeProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolTaintOutput) ToMk8sLinodeProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sLinodeProviderNodePoolTaint] {
	return pulumix.Output[Mk8sLinodeProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sLinodeProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sLinodeProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sLinodeProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sLinodeProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sLinodeProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sLinodeProviderNodePoolTaintArrayOutput) ToMk8sLinodeProviderNodePoolTaintArrayOutput() Mk8sLinodeProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolTaintArrayOutput) ToMk8sLinodeProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sLinodeProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sLinodeProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sLinodeProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sLinodeProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sLinodeProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sLinodeProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sLinodeProviderNodePoolTaint {
		return vs[0].([]Mk8sLinodeProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sLinodeProviderNodePoolTaintOutput)
}

type Mk8sOblivusProvider struct {
	Autoscaler         *Mk8sOblivusProviderAutoscaler         `pulumi:"autoscaler"`
	Datacenter         string                                 `pulumi:"datacenter"`
	NodePools          []Mk8sOblivusProviderNodePool          `pulumi:"nodePools"`
	PreInstallScript   *string                                `pulumi:"preInstallScript"`
	SshKeys            []string                               `pulumi:"sshKeys"`
	TokenSecretLink    string                                 `pulumi:"tokenSecretLink"`
	UnmanagedNodePools []Mk8sOblivusProviderUnmanagedNodePool `pulumi:"unmanagedNodePools"`
}

// Mk8sOblivusProviderInput is an input type that accepts Mk8sOblivusProviderArgs and Mk8sOblivusProviderOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderInput` via:
//
//	Mk8sOblivusProviderArgs{...}
type Mk8sOblivusProviderInput interface {
	pulumi.Input

	ToMk8sOblivusProviderOutput() Mk8sOblivusProviderOutput
	ToMk8sOblivusProviderOutputWithContext(context.Context) Mk8sOblivusProviderOutput
}

type Mk8sOblivusProviderArgs struct {
	Autoscaler         Mk8sOblivusProviderAutoscalerPtrInput          `pulumi:"autoscaler"`
	Datacenter         pulumi.StringInput                             `pulumi:"datacenter"`
	NodePools          Mk8sOblivusProviderNodePoolArrayInput          `pulumi:"nodePools"`
	PreInstallScript   pulumi.StringPtrInput                          `pulumi:"preInstallScript"`
	SshKeys            pulumi.StringArrayInput                        `pulumi:"sshKeys"`
	TokenSecretLink    pulumi.StringInput                             `pulumi:"tokenSecretLink"`
	UnmanagedNodePools Mk8sOblivusProviderUnmanagedNodePoolArrayInput `pulumi:"unmanagedNodePools"`
}

func (Mk8sOblivusProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProvider)(nil)).Elem()
}

func (i Mk8sOblivusProviderArgs) ToMk8sOblivusProviderOutput() Mk8sOblivusProviderOutput {
	return i.ToMk8sOblivusProviderOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderArgs) ToMk8sOblivusProviderOutputWithContext(ctx context.Context) Mk8sOblivusProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderOutput)
}

func (i Mk8sOblivusProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProvider] {
	return pulumix.Output[Mk8sOblivusProvider]{
		OutputState: i.ToMk8sOblivusProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sOblivusProviderArgs) ToMk8sOblivusProviderPtrOutput() Mk8sOblivusProviderPtrOutput {
	return i.ToMk8sOblivusProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderArgs) ToMk8sOblivusProviderPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderOutput).ToMk8sOblivusProviderPtrOutputWithContext(ctx)
}

// Mk8sOblivusProviderPtrInput is an input type that accepts Mk8sOblivusProviderArgs, Mk8sOblivusProviderPtr and Mk8sOblivusProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderPtrInput` via:
//
//	        Mk8sOblivusProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sOblivusProviderPtrInput interface {
	pulumi.Input

	ToMk8sOblivusProviderPtrOutput() Mk8sOblivusProviderPtrOutput
	ToMk8sOblivusProviderPtrOutputWithContext(context.Context) Mk8sOblivusProviderPtrOutput
}

type mk8sOblivusProviderPtrType Mk8sOblivusProviderArgs

func Mk8sOblivusProviderPtr(v *Mk8sOblivusProviderArgs) Mk8sOblivusProviderPtrInput {
	return (*mk8sOblivusProviderPtrType)(v)
}

func (*mk8sOblivusProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sOblivusProvider)(nil)).Elem()
}

func (i *mk8sOblivusProviderPtrType) ToMk8sOblivusProviderPtrOutput() Mk8sOblivusProviderPtrOutput {
	return i.ToMk8sOblivusProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sOblivusProviderPtrType) ToMk8sOblivusProviderPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderPtrOutput)
}

func (i *mk8sOblivusProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sOblivusProvider] {
	return pulumix.Output[*Mk8sOblivusProvider]{
		OutputState: i.ToMk8sOblivusProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sOblivusProviderOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProvider)(nil)).Elem()
}

func (o Mk8sOblivusProviderOutput) ToMk8sOblivusProviderOutput() Mk8sOblivusProviderOutput {
	return o
}

func (o Mk8sOblivusProviderOutput) ToMk8sOblivusProviderOutputWithContext(ctx context.Context) Mk8sOblivusProviderOutput {
	return o
}

func (o Mk8sOblivusProviderOutput) ToMk8sOblivusProviderPtrOutput() Mk8sOblivusProviderPtrOutput {
	return o.ToMk8sOblivusProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sOblivusProviderOutput) ToMk8sOblivusProviderPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sOblivusProvider) *Mk8sOblivusProvider {
		return &v
	}).(Mk8sOblivusProviderPtrOutput)
}

func (o Mk8sOblivusProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProvider] {
	return pulumix.Output[Mk8sOblivusProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderOutput) Autoscaler() Mk8sOblivusProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProvider) *Mk8sOblivusProviderAutoscaler { return v.Autoscaler }).(Mk8sOblivusProviderAutoscalerPtrOutput)
}

func (o Mk8sOblivusProviderOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sOblivusProvider) string { return v.Datacenter }).(pulumi.StringOutput)
}

func (o Mk8sOblivusProviderOutput) NodePools() Mk8sOblivusProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sOblivusProvider) []Mk8sOblivusProviderNodePool { return v.NodePools }).(Mk8sOblivusProviderNodePoolArrayOutput)
}

func (o Mk8sOblivusProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sOblivusProvider) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

func (o Mk8sOblivusProviderOutput) TokenSecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sOblivusProvider) string { return v.TokenSecretLink }).(pulumi.StringOutput)
}

func (o Mk8sOblivusProviderOutput) UnmanagedNodePools() Mk8sOblivusProviderUnmanagedNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sOblivusProvider) []Mk8sOblivusProviderUnmanagedNodePool { return v.UnmanagedNodePools }).(Mk8sOblivusProviderUnmanagedNodePoolArrayOutput)
}

type Mk8sOblivusProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sOblivusProvider)(nil)).Elem()
}

func (o Mk8sOblivusProviderPtrOutput) ToMk8sOblivusProviderPtrOutput() Mk8sOblivusProviderPtrOutput {
	return o
}

func (o Mk8sOblivusProviderPtrOutput) ToMk8sOblivusProviderPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderPtrOutput {
	return o
}

func (o Mk8sOblivusProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sOblivusProvider] {
	return pulumix.Output[*Mk8sOblivusProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderPtrOutput) Elem() Mk8sOblivusProviderOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) Mk8sOblivusProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sOblivusProvider
		return ret
	}).(Mk8sOblivusProviderOutput)
}

func (o Mk8sOblivusProviderPtrOutput) Autoscaler() Mk8sOblivusProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) *Mk8sOblivusProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sOblivusProviderAutoscalerPtrOutput)
}

func (o Mk8sOblivusProviderPtrOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Datacenter
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderPtrOutput) NodePools() Mk8sOblivusProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) []Mk8sOblivusProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sOblivusProviderNodePoolArrayOutput)
}

func (o Mk8sOblivusProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderPtrOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) []string {
		if v == nil {
			return nil
		}
		return v.SshKeys
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sOblivusProviderPtrOutput) TokenSecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) *string {
		if v == nil {
			return nil
		}
		return &v.TokenSecretLink
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderPtrOutput) UnmanagedNodePools() Mk8sOblivusProviderUnmanagedNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sOblivusProvider) []Mk8sOblivusProviderUnmanagedNodePool {
		if v == nil {
			return nil
		}
		return v.UnmanagedNodePools
	}).(Mk8sOblivusProviderUnmanagedNodePoolArrayOutput)
}

type Mk8sOblivusProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sOblivusProviderAutoscalerInput is an input type that accepts Mk8sOblivusProviderAutoscalerArgs and Mk8sOblivusProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderAutoscalerInput` via:
//
//	Mk8sOblivusProviderAutoscalerArgs{...}
type Mk8sOblivusProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sOblivusProviderAutoscalerOutput() Mk8sOblivusProviderAutoscalerOutput
	ToMk8sOblivusProviderAutoscalerOutputWithContext(context.Context) Mk8sOblivusProviderAutoscalerOutput
}

type Mk8sOblivusProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sOblivusProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sOblivusProviderAutoscalerArgs) ToMk8sOblivusProviderAutoscalerOutput() Mk8sOblivusProviderAutoscalerOutput {
	return i.ToMk8sOblivusProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderAutoscalerArgs) ToMk8sOblivusProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sOblivusProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderAutoscalerOutput)
}

func (i Mk8sOblivusProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderAutoscaler] {
	return pulumix.Output[Mk8sOblivusProviderAutoscaler]{
		OutputState: i.ToMk8sOblivusProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sOblivusProviderAutoscalerArgs) ToMk8sOblivusProviderAutoscalerPtrOutput() Mk8sOblivusProviderAutoscalerPtrOutput {
	return i.ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderAutoscalerArgs) ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderAutoscalerOutput).ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sOblivusProviderAutoscalerPtrInput is an input type that accepts Mk8sOblivusProviderAutoscalerArgs, Mk8sOblivusProviderAutoscalerPtr and Mk8sOblivusProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderAutoscalerPtrInput` via:
//
//	        Mk8sOblivusProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sOblivusProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sOblivusProviderAutoscalerPtrOutput() Mk8sOblivusProviderAutoscalerPtrOutput
	ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sOblivusProviderAutoscalerPtrOutput
}

type mk8sOblivusProviderAutoscalerPtrType Mk8sOblivusProviderAutoscalerArgs

func Mk8sOblivusProviderAutoscalerPtr(v *Mk8sOblivusProviderAutoscalerArgs) Mk8sOblivusProviderAutoscalerPtrInput {
	return (*mk8sOblivusProviderAutoscalerPtrType)(v)
}

func (*mk8sOblivusProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sOblivusProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sOblivusProviderAutoscalerPtrType) ToMk8sOblivusProviderAutoscalerPtrOutput() Mk8sOblivusProviderAutoscalerPtrOutput {
	return i.ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sOblivusProviderAutoscalerPtrType) ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderAutoscalerPtrOutput)
}

func (i *mk8sOblivusProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sOblivusProviderAutoscaler] {
	return pulumix.Output[*Mk8sOblivusProviderAutoscaler]{
		OutputState: i.ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sOblivusProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sOblivusProviderAutoscalerOutput) ToMk8sOblivusProviderAutoscalerOutput() Mk8sOblivusProviderAutoscalerOutput {
	return o
}

func (o Mk8sOblivusProviderAutoscalerOutput) ToMk8sOblivusProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sOblivusProviderAutoscalerOutput {
	return o
}

func (o Mk8sOblivusProviderAutoscalerOutput) ToMk8sOblivusProviderAutoscalerPtrOutput() Mk8sOblivusProviderAutoscalerPtrOutput {
	return o.ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sOblivusProviderAutoscalerOutput) ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sOblivusProviderAutoscaler) *Mk8sOblivusProviderAutoscaler {
		return &v
	}).(Mk8sOblivusProviderAutoscalerPtrOutput)
}

func (o Mk8sOblivusProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderAutoscaler] {
	return pulumix.Output[Mk8sOblivusProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sOblivusProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sOblivusProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sOblivusProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) ToMk8sOblivusProviderAutoscalerPtrOutput() Mk8sOblivusProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) ToMk8sOblivusProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sOblivusProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sOblivusProviderAutoscaler] {
	return pulumix.Output[*Mk8sOblivusProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) Elem() Mk8sOblivusProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sOblivusProviderAutoscaler) Mk8sOblivusProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sOblivusProviderAutoscaler
		return ret
	}).(Mk8sOblivusProviderAutoscalerOutput)
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sOblivusProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sOblivusProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sOblivusProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sOblivusProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sOblivusProviderNodePool struct {
	Flavor  string                             `pulumi:"flavor"`
	Labels  map[string]string                  `pulumi:"labels"`
	MaxSize *int                               `pulumi:"maxSize"`
	MinSize *int                               `pulumi:"minSize"`
	Name    string                             `pulumi:"name"`
	Taints  []Mk8sOblivusProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sOblivusProviderNodePoolInput is an input type that accepts Mk8sOblivusProviderNodePoolArgs and Mk8sOblivusProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderNodePoolInput` via:
//
//	Mk8sOblivusProviderNodePoolArgs{...}
type Mk8sOblivusProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sOblivusProviderNodePoolOutput() Mk8sOblivusProviderNodePoolOutput
	ToMk8sOblivusProviderNodePoolOutputWithContext(context.Context) Mk8sOblivusProviderNodePoolOutput
}

type Mk8sOblivusProviderNodePoolArgs struct {
	Flavor  pulumi.StringInput                         `pulumi:"flavor"`
	Labels  pulumi.StringMapInput                      `pulumi:"labels"`
	MaxSize pulumi.IntPtrInput                         `pulumi:"maxSize"`
	MinSize pulumi.IntPtrInput                         `pulumi:"minSize"`
	Name    pulumi.StringInput                         `pulumi:"name"`
	Taints  Mk8sOblivusProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sOblivusProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderNodePool)(nil)).Elem()
}

func (i Mk8sOblivusProviderNodePoolArgs) ToMk8sOblivusProviderNodePoolOutput() Mk8sOblivusProviderNodePoolOutput {
	return i.ToMk8sOblivusProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderNodePoolArgs) ToMk8sOblivusProviderNodePoolOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderNodePoolOutput)
}

func (i Mk8sOblivusProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderNodePool] {
	return pulumix.Output[Mk8sOblivusProviderNodePool]{
		OutputState: i.ToMk8sOblivusProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sOblivusProviderNodePoolArrayInput is an input type that accepts Mk8sOblivusProviderNodePoolArray and Mk8sOblivusProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderNodePoolArrayInput` via:
//
//	Mk8sOblivusProviderNodePoolArray{ Mk8sOblivusProviderNodePoolArgs{...} }
type Mk8sOblivusProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sOblivusProviderNodePoolArrayOutput() Mk8sOblivusProviderNodePoolArrayOutput
	ToMk8sOblivusProviderNodePoolArrayOutputWithContext(context.Context) Mk8sOblivusProviderNodePoolArrayOutput
}

type Mk8sOblivusProviderNodePoolArray []Mk8sOblivusProviderNodePoolInput

func (Mk8sOblivusProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderNodePool)(nil)).Elem()
}

func (i Mk8sOblivusProviderNodePoolArray) ToMk8sOblivusProviderNodePoolArrayOutput() Mk8sOblivusProviderNodePoolArrayOutput {
	return i.ToMk8sOblivusProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderNodePoolArray) ToMk8sOblivusProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderNodePoolArrayOutput)
}

func (i Mk8sOblivusProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderNodePool] {
	return pulumix.Output[[]Mk8sOblivusProviderNodePool]{
		OutputState: i.ToMk8sOblivusProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sOblivusProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderNodePool)(nil)).Elem()
}

func (o Mk8sOblivusProviderNodePoolOutput) ToMk8sOblivusProviderNodePoolOutput() Mk8sOblivusProviderNodePoolOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolOutput) ToMk8sOblivusProviderNodePoolOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderNodePool] {
	return pulumix.Output[Mk8sOblivusProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderNodePoolOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePool) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o Mk8sOblivusProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sOblivusProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sOblivusProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sOblivusProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sOblivusProviderNodePoolOutput) Taints() Mk8sOblivusProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePool) []Mk8sOblivusProviderNodePoolTaint { return v.Taints }).(Mk8sOblivusProviderNodePoolTaintArrayOutput)
}

type Mk8sOblivusProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderNodePool)(nil)).Elem()
}

func (o Mk8sOblivusProviderNodePoolArrayOutput) ToMk8sOblivusProviderNodePoolArrayOutput() Mk8sOblivusProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolArrayOutput) ToMk8sOblivusProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderNodePool] {
	return pulumix.Output[[]Mk8sOblivusProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sOblivusProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sOblivusProviderNodePool {
		return vs[0].([]Mk8sOblivusProviderNodePool)[vs[1].(int)]
	}).(Mk8sOblivusProviderNodePoolOutput)
}

type Mk8sOblivusProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sOblivusProviderNodePoolTaintInput is an input type that accepts Mk8sOblivusProviderNodePoolTaintArgs and Mk8sOblivusProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderNodePoolTaintInput` via:
//
//	Mk8sOblivusProviderNodePoolTaintArgs{...}
type Mk8sOblivusProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sOblivusProviderNodePoolTaintOutput() Mk8sOblivusProviderNodePoolTaintOutput
	ToMk8sOblivusProviderNodePoolTaintOutputWithContext(context.Context) Mk8sOblivusProviderNodePoolTaintOutput
}

type Mk8sOblivusProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sOblivusProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sOblivusProviderNodePoolTaintArgs) ToMk8sOblivusProviderNodePoolTaintOutput() Mk8sOblivusProviderNodePoolTaintOutput {
	return i.ToMk8sOblivusProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderNodePoolTaintArgs) ToMk8sOblivusProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderNodePoolTaintOutput)
}

func (i Mk8sOblivusProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderNodePoolTaint] {
	return pulumix.Output[Mk8sOblivusProviderNodePoolTaint]{
		OutputState: i.ToMk8sOblivusProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sOblivusProviderNodePoolTaintArrayInput is an input type that accepts Mk8sOblivusProviderNodePoolTaintArray and Mk8sOblivusProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderNodePoolTaintArrayInput` via:
//
//	Mk8sOblivusProviderNodePoolTaintArray{ Mk8sOblivusProviderNodePoolTaintArgs{...} }
type Mk8sOblivusProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sOblivusProviderNodePoolTaintArrayOutput() Mk8sOblivusProviderNodePoolTaintArrayOutput
	ToMk8sOblivusProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sOblivusProviderNodePoolTaintArrayOutput
}

type Mk8sOblivusProviderNodePoolTaintArray []Mk8sOblivusProviderNodePoolTaintInput

func (Mk8sOblivusProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sOblivusProviderNodePoolTaintArray) ToMk8sOblivusProviderNodePoolTaintArrayOutput() Mk8sOblivusProviderNodePoolTaintArrayOutput {
	return i.ToMk8sOblivusProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderNodePoolTaintArray) ToMk8sOblivusProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderNodePoolTaintArrayOutput)
}

func (i Mk8sOblivusProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sOblivusProviderNodePoolTaint]{
		OutputState: i.ToMk8sOblivusProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sOblivusProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sOblivusProviderNodePoolTaintOutput) ToMk8sOblivusProviderNodePoolTaintOutput() Mk8sOblivusProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolTaintOutput) ToMk8sOblivusProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderNodePoolTaint] {
	return pulumix.Output[Mk8sOblivusProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sOblivusProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sOblivusProviderNodePoolTaintArrayOutput) ToMk8sOblivusProviderNodePoolTaintArrayOutput() Mk8sOblivusProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolTaintArrayOutput) ToMk8sOblivusProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sOblivusProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sOblivusProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sOblivusProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sOblivusProviderNodePoolTaint {
		return vs[0].([]Mk8sOblivusProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sOblivusProviderNodePoolTaintOutput)
}

type Mk8sOblivusProviderUnmanagedNodePool struct {
	Labels map[string]string                           `pulumi:"labels"`
	Name   string                                      `pulumi:"name"`
	Taints []Mk8sOblivusProviderUnmanagedNodePoolTaint `pulumi:"taints"`
}

// Mk8sOblivusProviderUnmanagedNodePoolInput is an input type that accepts Mk8sOblivusProviderUnmanagedNodePoolArgs and Mk8sOblivusProviderUnmanagedNodePoolOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderUnmanagedNodePoolInput` via:
//
//	Mk8sOblivusProviderUnmanagedNodePoolArgs{...}
type Mk8sOblivusProviderUnmanagedNodePoolInput interface {
	pulumi.Input

	ToMk8sOblivusProviderUnmanagedNodePoolOutput() Mk8sOblivusProviderUnmanagedNodePoolOutput
	ToMk8sOblivusProviderUnmanagedNodePoolOutputWithContext(context.Context) Mk8sOblivusProviderUnmanagedNodePoolOutput
}

type Mk8sOblivusProviderUnmanagedNodePoolArgs struct {
	Labels pulumi.StringMapInput                               `pulumi:"labels"`
	Name   pulumi.StringInput                                  `pulumi:"name"`
	Taints Mk8sOblivusProviderUnmanagedNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sOblivusProviderUnmanagedNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePool)(nil)).Elem()
}

func (i Mk8sOblivusProviderUnmanagedNodePoolArgs) ToMk8sOblivusProviderUnmanagedNodePoolOutput() Mk8sOblivusProviderUnmanagedNodePoolOutput {
	return i.ToMk8sOblivusProviderUnmanagedNodePoolOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderUnmanagedNodePoolArgs) ToMk8sOblivusProviderUnmanagedNodePoolOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderUnmanagedNodePoolOutput)
}

func (i Mk8sOblivusProviderUnmanagedNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderUnmanagedNodePool] {
	return pulumix.Output[Mk8sOblivusProviderUnmanagedNodePool]{
		OutputState: i.ToMk8sOblivusProviderUnmanagedNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sOblivusProviderUnmanagedNodePoolArrayInput is an input type that accepts Mk8sOblivusProviderUnmanagedNodePoolArray and Mk8sOblivusProviderUnmanagedNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderUnmanagedNodePoolArrayInput` via:
//
//	Mk8sOblivusProviderUnmanagedNodePoolArray{ Mk8sOblivusProviderUnmanagedNodePoolArgs{...} }
type Mk8sOblivusProviderUnmanagedNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sOblivusProviderUnmanagedNodePoolArrayOutput() Mk8sOblivusProviderUnmanagedNodePoolArrayOutput
	ToMk8sOblivusProviderUnmanagedNodePoolArrayOutputWithContext(context.Context) Mk8sOblivusProviderUnmanagedNodePoolArrayOutput
}

type Mk8sOblivusProviderUnmanagedNodePoolArray []Mk8sOblivusProviderUnmanagedNodePoolInput

func (Mk8sOblivusProviderUnmanagedNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderUnmanagedNodePool)(nil)).Elem()
}

func (i Mk8sOblivusProviderUnmanagedNodePoolArray) ToMk8sOblivusProviderUnmanagedNodePoolArrayOutput() Mk8sOblivusProviderUnmanagedNodePoolArrayOutput {
	return i.ToMk8sOblivusProviderUnmanagedNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderUnmanagedNodePoolArray) ToMk8sOblivusProviderUnmanagedNodePoolArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderUnmanagedNodePoolArrayOutput)
}

func (i Mk8sOblivusProviderUnmanagedNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePool] {
	return pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePool]{
		OutputState: i.ToMk8sOblivusProviderUnmanagedNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sOblivusProviderUnmanagedNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderUnmanagedNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePool)(nil)).Elem()
}

func (o Mk8sOblivusProviderUnmanagedNodePoolOutput) ToMk8sOblivusProviderUnmanagedNodePoolOutput() Mk8sOblivusProviderUnmanagedNodePoolOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolOutput) ToMk8sOblivusProviderUnmanagedNodePoolOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderUnmanagedNodePool] {
	return pulumix.Output[Mk8sOblivusProviderUnmanagedNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderUnmanagedNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderUnmanagedNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sOblivusProviderUnmanagedNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderUnmanagedNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sOblivusProviderUnmanagedNodePoolOutput) Taints() Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderUnmanagedNodePool) []Mk8sOblivusProviderUnmanagedNodePoolTaint {
		return v.Taints
	}).(Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput)
}

type Mk8sOblivusProviderUnmanagedNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderUnmanagedNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderUnmanagedNodePool)(nil)).Elem()
}

func (o Mk8sOblivusProviderUnmanagedNodePoolArrayOutput) ToMk8sOblivusProviderUnmanagedNodePoolArrayOutput() Mk8sOblivusProviderUnmanagedNodePoolArrayOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolArrayOutput) ToMk8sOblivusProviderUnmanagedNodePoolArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolArrayOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePool] {
	return pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderUnmanagedNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sOblivusProviderUnmanagedNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sOblivusProviderUnmanagedNodePool {
		return vs[0].([]Mk8sOblivusProviderUnmanagedNodePool)[vs[1].(int)]
	}).(Mk8sOblivusProviderUnmanagedNodePoolOutput)
}

type Mk8sOblivusProviderUnmanagedNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sOblivusProviderUnmanagedNodePoolTaintInput is an input type that accepts Mk8sOblivusProviderUnmanagedNodePoolTaintArgs and Mk8sOblivusProviderUnmanagedNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderUnmanagedNodePoolTaintInput` via:
//
//	Mk8sOblivusProviderUnmanagedNodePoolTaintArgs{...}
type Mk8sOblivusProviderUnmanagedNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sOblivusProviderUnmanagedNodePoolTaintOutput() Mk8sOblivusProviderUnmanagedNodePoolTaintOutput
	ToMk8sOblivusProviderUnmanagedNodePoolTaintOutputWithContext(context.Context) Mk8sOblivusProviderUnmanagedNodePoolTaintOutput
}

type Mk8sOblivusProviderUnmanagedNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sOblivusProviderUnmanagedNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (i Mk8sOblivusProviderUnmanagedNodePoolTaintArgs) ToMk8sOblivusProviderUnmanagedNodePoolTaintOutput() Mk8sOblivusProviderUnmanagedNodePoolTaintOutput {
	return i.ToMk8sOblivusProviderUnmanagedNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderUnmanagedNodePoolTaintArgs) ToMk8sOblivusProviderUnmanagedNodePoolTaintOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderUnmanagedNodePoolTaintOutput)
}

func (i Mk8sOblivusProviderUnmanagedNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[Mk8sOblivusProviderUnmanagedNodePoolTaint]{
		OutputState: i.ToMk8sOblivusProviderUnmanagedNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sOblivusProviderUnmanagedNodePoolTaintArrayInput is an input type that accepts Mk8sOblivusProviderUnmanagedNodePoolTaintArray and Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sOblivusProviderUnmanagedNodePoolTaintArrayInput` via:
//
//	Mk8sOblivusProviderUnmanagedNodePoolTaintArray{ Mk8sOblivusProviderUnmanagedNodePoolTaintArgs{...} }
type Mk8sOblivusProviderUnmanagedNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput() Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput
	ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutputWithContext(context.Context) Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput
}

type Mk8sOblivusProviderUnmanagedNodePoolTaintArray []Mk8sOblivusProviderUnmanagedNodePoolTaintInput

func (Mk8sOblivusProviderUnmanagedNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (i Mk8sOblivusProviderUnmanagedNodePoolTaintArray) ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput() Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput {
	return i.ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sOblivusProviderUnmanagedNodePoolTaintArray) ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput)
}

func (i Mk8sOblivusProviderUnmanagedNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePoolTaint]{
		OutputState: i.ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sOblivusProviderUnmanagedNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderUnmanagedNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintOutput) ToMk8sOblivusProviderUnmanagedNodePoolTaintOutput() Mk8sOblivusProviderUnmanagedNodePoolTaintOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintOutput) ToMk8sOblivusProviderUnmanagedNodePoolTaintOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolTaintOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sOblivusProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[Mk8sOblivusProviderUnmanagedNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderUnmanagedNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderUnmanagedNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sOblivusProviderUnmanagedNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sOblivusProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput) ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput() Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput) ToMk8sOblivusProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[[]Mk8sOblivusProviderUnmanagedNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sOblivusProviderUnmanagedNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sOblivusProviderUnmanagedNodePoolTaint {
		return vs[0].([]Mk8sOblivusProviderUnmanagedNodePoolTaint)[vs[1].(int)]
	}).(Mk8sOblivusProviderUnmanagedNodePoolTaintOutput)
}

type Mk8sPaperspaceProvider struct {
	Autoscaler         *Mk8sPaperspaceProviderAutoscaler         `pulumi:"autoscaler"`
	NetworkId          string                                    `pulumi:"networkId"`
	NodePools          []Mk8sPaperspaceProviderNodePool          `pulumi:"nodePools"`
	PreInstallScript   *string                                   `pulumi:"preInstallScript"`
	Region             string                                    `pulumi:"region"`
	SharedDrives       []string                                  `pulumi:"sharedDrives"`
	TokenSecretLink    string                                    `pulumi:"tokenSecretLink"`
	UnmanagedNodePools []Mk8sPaperspaceProviderUnmanagedNodePool `pulumi:"unmanagedNodePools"`
	UserIds            []string                                  `pulumi:"userIds"`
}

// Mk8sPaperspaceProviderInput is an input type that accepts Mk8sPaperspaceProviderArgs and Mk8sPaperspaceProviderOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderInput` via:
//
//	Mk8sPaperspaceProviderArgs{...}
type Mk8sPaperspaceProviderInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderOutput() Mk8sPaperspaceProviderOutput
	ToMk8sPaperspaceProviderOutputWithContext(context.Context) Mk8sPaperspaceProviderOutput
}

type Mk8sPaperspaceProviderArgs struct {
	Autoscaler         Mk8sPaperspaceProviderAutoscalerPtrInput          `pulumi:"autoscaler"`
	NetworkId          pulumi.StringInput                                `pulumi:"networkId"`
	NodePools          Mk8sPaperspaceProviderNodePoolArrayInput          `pulumi:"nodePools"`
	PreInstallScript   pulumi.StringPtrInput                             `pulumi:"preInstallScript"`
	Region             pulumi.StringInput                                `pulumi:"region"`
	SharedDrives       pulumi.StringArrayInput                           `pulumi:"sharedDrives"`
	TokenSecretLink    pulumi.StringInput                                `pulumi:"tokenSecretLink"`
	UnmanagedNodePools Mk8sPaperspaceProviderUnmanagedNodePoolArrayInput `pulumi:"unmanagedNodePools"`
	UserIds            pulumi.StringArrayInput                           `pulumi:"userIds"`
}

func (Mk8sPaperspaceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProvider)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderArgs) ToMk8sPaperspaceProviderOutput() Mk8sPaperspaceProviderOutput {
	return i.ToMk8sPaperspaceProviderOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderArgs) ToMk8sPaperspaceProviderOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderOutput)
}

func (i Mk8sPaperspaceProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProvider] {
	return pulumix.Output[Mk8sPaperspaceProvider]{
		OutputState: i.ToMk8sPaperspaceProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sPaperspaceProviderArgs) ToMk8sPaperspaceProviderPtrOutput() Mk8sPaperspaceProviderPtrOutput {
	return i.ToMk8sPaperspaceProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderArgs) ToMk8sPaperspaceProviderPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderOutput).ToMk8sPaperspaceProviderPtrOutputWithContext(ctx)
}

// Mk8sPaperspaceProviderPtrInput is an input type that accepts Mk8sPaperspaceProviderArgs, Mk8sPaperspaceProviderPtr and Mk8sPaperspaceProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderPtrInput` via:
//
//	        Mk8sPaperspaceProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sPaperspaceProviderPtrInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderPtrOutput() Mk8sPaperspaceProviderPtrOutput
	ToMk8sPaperspaceProviderPtrOutputWithContext(context.Context) Mk8sPaperspaceProviderPtrOutput
}

type mk8sPaperspaceProviderPtrType Mk8sPaperspaceProviderArgs

func Mk8sPaperspaceProviderPtr(v *Mk8sPaperspaceProviderArgs) Mk8sPaperspaceProviderPtrInput {
	return (*mk8sPaperspaceProviderPtrType)(v)
}

func (*mk8sPaperspaceProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sPaperspaceProvider)(nil)).Elem()
}

func (i *mk8sPaperspaceProviderPtrType) ToMk8sPaperspaceProviderPtrOutput() Mk8sPaperspaceProviderPtrOutput {
	return i.ToMk8sPaperspaceProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sPaperspaceProviderPtrType) ToMk8sPaperspaceProviderPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderPtrOutput)
}

func (i *mk8sPaperspaceProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sPaperspaceProvider] {
	return pulumix.Output[*Mk8sPaperspaceProvider]{
		OutputState: i.ToMk8sPaperspaceProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sPaperspaceProviderOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProvider)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderOutput) ToMk8sPaperspaceProviderOutput() Mk8sPaperspaceProviderOutput {
	return o
}

func (o Mk8sPaperspaceProviderOutput) ToMk8sPaperspaceProviderOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderOutput {
	return o
}

func (o Mk8sPaperspaceProviderOutput) ToMk8sPaperspaceProviderPtrOutput() Mk8sPaperspaceProviderPtrOutput {
	return o.ToMk8sPaperspaceProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sPaperspaceProviderOutput) ToMk8sPaperspaceProviderPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sPaperspaceProvider) *Mk8sPaperspaceProvider {
		return &v
	}).(Mk8sPaperspaceProviderPtrOutput)
}

func (o Mk8sPaperspaceProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProvider] {
	return pulumix.Output[Mk8sPaperspaceProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderOutput) Autoscaler() Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) *Mk8sPaperspaceProviderAutoscaler { return v.Autoscaler }).(Mk8sPaperspaceProviderAutoscalerPtrOutput)
}

func (o Mk8sPaperspaceProviderOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) string { return v.NetworkId }).(pulumi.StringOutput)
}

func (o Mk8sPaperspaceProviderOutput) NodePools() Mk8sPaperspaceProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) []Mk8sPaperspaceProviderNodePool { return v.NodePools }).(Mk8sPaperspaceProviderNodePoolArrayOutput)
}

func (o Mk8sPaperspaceProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) string { return v.Region }).(pulumi.StringOutput)
}

func (o Mk8sPaperspaceProviderOutput) SharedDrives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) []string { return v.SharedDrives }).(pulumi.StringArrayOutput)
}

func (o Mk8sPaperspaceProviderOutput) TokenSecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) string { return v.TokenSecretLink }).(pulumi.StringOutput)
}

func (o Mk8sPaperspaceProviderOutput) UnmanagedNodePools() Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) []Mk8sPaperspaceProviderUnmanagedNodePool { return v.UnmanagedNodePools }).(Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput)
}

func (o Mk8sPaperspaceProviderOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProvider) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

type Mk8sPaperspaceProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sPaperspaceProvider)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderPtrOutput) ToMk8sPaperspaceProviderPtrOutput() Mk8sPaperspaceProviderPtrOutput {
	return o
}

func (o Mk8sPaperspaceProviderPtrOutput) ToMk8sPaperspaceProviderPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderPtrOutput {
	return o
}

func (o Mk8sPaperspaceProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sPaperspaceProvider] {
	return pulumix.Output[*Mk8sPaperspaceProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderPtrOutput) Elem() Mk8sPaperspaceProviderOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) Mk8sPaperspaceProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sPaperspaceProvider
		return ret
	}).(Mk8sPaperspaceProviderOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) Autoscaler() Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) *Mk8sPaperspaceProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sPaperspaceProviderAutoscalerPtrOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkId
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) NodePools() Mk8sPaperspaceProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) []Mk8sPaperspaceProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sPaperspaceProviderNodePoolArrayOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) SharedDrives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) []string {
		if v == nil {
			return nil
		}
		return v.SharedDrives
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) TokenSecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) *string {
		if v == nil {
			return nil
		}
		return &v.TokenSecretLink
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) UnmanagedNodePools() Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) []Mk8sPaperspaceProviderUnmanagedNodePool {
		if v == nil {
			return nil
		}
		return v.UnmanagedNodePools
	}).(Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput)
}

func (o Mk8sPaperspaceProviderPtrOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProvider) []string {
		if v == nil {
			return nil
		}
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

type Mk8sPaperspaceProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sPaperspaceProviderAutoscalerInput is an input type that accepts Mk8sPaperspaceProviderAutoscalerArgs and Mk8sPaperspaceProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderAutoscalerInput` via:
//
//	Mk8sPaperspaceProviderAutoscalerArgs{...}
type Mk8sPaperspaceProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderAutoscalerOutput() Mk8sPaperspaceProviderAutoscalerOutput
	ToMk8sPaperspaceProviderAutoscalerOutputWithContext(context.Context) Mk8sPaperspaceProviderAutoscalerOutput
}

type Mk8sPaperspaceProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sPaperspaceProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderAutoscalerArgs) ToMk8sPaperspaceProviderAutoscalerOutput() Mk8sPaperspaceProviderAutoscalerOutput {
	return i.ToMk8sPaperspaceProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderAutoscalerArgs) ToMk8sPaperspaceProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderAutoscalerOutput)
}

func (i Mk8sPaperspaceProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderAutoscaler] {
	return pulumix.Output[Mk8sPaperspaceProviderAutoscaler]{
		OutputState: i.ToMk8sPaperspaceProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sPaperspaceProviderAutoscalerArgs) ToMk8sPaperspaceProviderAutoscalerPtrOutput() Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return i.ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderAutoscalerArgs) ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderAutoscalerOutput).ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sPaperspaceProviderAutoscalerPtrInput is an input type that accepts Mk8sPaperspaceProviderAutoscalerArgs, Mk8sPaperspaceProviderAutoscalerPtr and Mk8sPaperspaceProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderAutoscalerPtrInput` via:
//
//	        Mk8sPaperspaceProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sPaperspaceProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderAutoscalerPtrOutput() Mk8sPaperspaceProviderAutoscalerPtrOutput
	ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sPaperspaceProviderAutoscalerPtrOutput
}

type mk8sPaperspaceProviderAutoscalerPtrType Mk8sPaperspaceProviderAutoscalerArgs

func Mk8sPaperspaceProviderAutoscalerPtr(v *Mk8sPaperspaceProviderAutoscalerArgs) Mk8sPaperspaceProviderAutoscalerPtrInput {
	return (*mk8sPaperspaceProviderAutoscalerPtrType)(v)
}

func (*mk8sPaperspaceProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sPaperspaceProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sPaperspaceProviderAutoscalerPtrType) ToMk8sPaperspaceProviderAutoscalerPtrOutput() Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return i.ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sPaperspaceProviderAutoscalerPtrType) ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderAutoscalerPtrOutput)
}

func (i *mk8sPaperspaceProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sPaperspaceProviderAutoscaler] {
	return pulumix.Output[*Mk8sPaperspaceProviderAutoscaler]{
		OutputState: i.ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sPaperspaceProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) ToMk8sPaperspaceProviderAutoscalerOutput() Mk8sPaperspaceProviderAutoscalerOutput {
	return o
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) ToMk8sPaperspaceProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderAutoscalerOutput {
	return o
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) ToMk8sPaperspaceProviderAutoscalerPtrOutput() Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return o.ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sPaperspaceProviderAutoscaler) *Mk8sPaperspaceProviderAutoscaler {
		return &v
	}).(Mk8sPaperspaceProviderAutoscalerPtrOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderAutoscaler] {
	return pulumix.Output[Mk8sPaperspaceProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sPaperspaceProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sPaperspaceProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) ToMk8sPaperspaceProviderAutoscalerPtrOutput() Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) ToMk8sPaperspaceProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sPaperspaceProviderAutoscaler] {
	return pulumix.Output[*Mk8sPaperspaceProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) Elem() Mk8sPaperspaceProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProviderAutoscaler) Mk8sPaperspaceProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sPaperspaceProviderAutoscaler
		return ret
	}).(Mk8sPaperspaceProviderAutoscalerOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sPaperspaceProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sPaperspaceProviderNodePool struct {
	BootDiskSize *int                                  `pulumi:"bootDiskSize"`
	Labels       map[string]string                     `pulumi:"labels"`
	MachineType  string                                `pulumi:"machineType"`
	MaxSize      *int                                  `pulumi:"maxSize"`
	MinSize      *int                                  `pulumi:"minSize"`
	Name         string                                `pulumi:"name"`
	PublicIpType string                                `pulumi:"publicIpType"`
	Taints       []Mk8sPaperspaceProviderNodePoolTaint `pulumi:"taints"`
}

// Mk8sPaperspaceProviderNodePoolInput is an input type that accepts Mk8sPaperspaceProviderNodePoolArgs and Mk8sPaperspaceProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderNodePoolInput` via:
//
//	Mk8sPaperspaceProviderNodePoolArgs{...}
type Mk8sPaperspaceProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderNodePoolOutput() Mk8sPaperspaceProviderNodePoolOutput
	ToMk8sPaperspaceProviderNodePoolOutputWithContext(context.Context) Mk8sPaperspaceProviderNodePoolOutput
}

type Mk8sPaperspaceProviderNodePoolArgs struct {
	BootDiskSize pulumi.IntPtrInput                            `pulumi:"bootDiskSize"`
	Labels       pulumi.StringMapInput                         `pulumi:"labels"`
	MachineType  pulumi.StringInput                            `pulumi:"machineType"`
	MaxSize      pulumi.IntPtrInput                            `pulumi:"maxSize"`
	MinSize      pulumi.IntPtrInput                            `pulumi:"minSize"`
	Name         pulumi.StringInput                            `pulumi:"name"`
	PublicIpType pulumi.StringInput                            `pulumi:"publicIpType"`
	Taints       Mk8sPaperspaceProviderNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sPaperspaceProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderNodePool)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderNodePoolArgs) ToMk8sPaperspaceProviderNodePoolOutput() Mk8sPaperspaceProviderNodePoolOutput {
	return i.ToMk8sPaperspaceProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderNodePoolArgs) ToMk8sPaperspaceProviderNodePoolOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderNodePoolOutput)
}

func (i Mk8sPaperspaceProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderNodePool] {
	return pulumix.Output[Mk8sPaperspaceProviderNodePool]{
		OutputState: i.ToMk8sPaperspaceProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sPaperspaceProviderNodePoolArrayInput is an input type that accepts Mk8sPaperspaceProviderNodePoolArray and Mk8sPaperspaceProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderNodePoolArrayInput` via:
//
//	Mk8sPaperspaceProviderNodePoolArray{ Mk8sPaperspaceProviderNodePoolArgs{...} }
type Mk8sPaperspaceProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderNodePoolArrayOutput() Mk8sPaperspaceProviderNodePoolArrayOutput
	ToMk8sPaperspaceProviderNodePoolArrayOutputWithContext(context.Context) Mk8sPaperspaceProviderNodePoolArrayOutput
}

type Mk8sPaperspaceProviderNodePoolArray []Mk8sPaperspaceProviderNodePoolInput

func (Mk8sPaperspaceProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderNodePool)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderNodePoolArray) ToMk8sPaperspaceProviderNodePoolArrayOutput() Mk8sPaperspaceProviderNodePoolArrayOutput {
	return i.ToMk8sPaperspaceProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderNodePoolArray) ToMk8sPaperspaceProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderNodePoolArrayOutput)
}

func (i Mk8sPaperspaceProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderNodePool] {
	return pulumix.Output[[]Mk8sPaperspaceProviderNodePool]{
		OutputState: i.ToMk8sPaperspaceProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sPaperspaceProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderNodePool)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderNodePoolOutput) ToMk8sPaperspaceProviderNodePoolOutput() Mk8sPaperspaceProviderNodePoolOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolOutput) ToMk8sPaperspaceProviderNodePoolOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderNodePool] {
	return pulumix.Output[Mk8sPaperspaceProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderNodePoolOutput) BootDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) *int { return v.BootDiskSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sPaperspaceProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sPaperspaceProviderNodePoolOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o Mk8sPaperspaceProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sPaperspaceProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sPaperspaceProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sPaperspaceProviderNodePoolOutput) PublicIpType() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) string { return v.PublicIpType }).(pulumi.StringOutput)
}

func (o Mk8sPaperspaceProviderNodePoolOutput) Taints() Mk8sPaperspaceProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePool) []Mk8sPaperspaceProviderNodePoolTaint { return v.Taints }).(Mk8sPaperspaceProviderNodePoolTaintArrayOutput)
}

type Mk8sPaperspaceProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderNodePool)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderNodePoolArrayOutput) ToMk8sPaperspaceProviderNodePoolArrayOutput() Mk8sPaperspaceProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolArrayOutput) ToMk8sPaperspaceProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderNodePool] {
	return pulumix.Output[[]Mk8sPaperspaceProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sPaperspaceProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sPaperspaceProviderNodePool {
		return vs[0].([]Mk8sPaperspaceProviderNodePool)[vs[1].(int)]
	}).(Mk8sPaperspaceProviderNodePoolOutput)
}

type Mk8sPaperspaceProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sPaperspaceProviderNodePoolTaintInput is an input type that accepts Mk8sPaperspaceProviderNodePoolTaintArgs and Mk8sPaperspaceProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderNodePoolTaintInput` via:
//
//	Mk8sPaperspaceProviderNodePoolTaintArgs{...}
type Mk8sPaperspaceProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderNodePoolTaintOutput() Mk8sPaperspaceProviderNodePoolTaintOutput
	ToMk8sPaperspaceProviderNodePoolTaintOutputWithContext(context.Context) Mk8sPaperspaceProviderNodePoolTaintOutput
}

type Mk8sPaperspaceProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sPaperspaceProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderNodePoolTaintArgs) ToMk8sPaperspaceProviderNodePoolTaintOutput() Mk8sPaperspaceProviderNodePoolTaintOutput {
	return i.ToMk8sPaperspaceProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderNodePoolTaintArgs) ToMk8sPaperspaceProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderNodePoolTaintOutput)
}

func (i Mk8sPaperspaceProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderNodePoolTaint] {
	return pulumix.Output[Mk8sPaperspaceProviderNodePoolTaint]{
		OutputState: i.ToMk8sPaperspaceProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sPaperspaceProviderNodePoolTaintArrayInput is an input type that accepts Mk8sPaperspaceProviderNodePoolTaintArray and Mk8sPaperspaceProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderNodePoolTaintArrayInput` via:
//
//	Mk8sPaperspaceProviderNodePoolTaintArray{ Mk8sPaperspaceProviderNodePoolTaintArgs{...} }
type Mk8sPaperspaceProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderNodePoolTaintArrayOutput() Mk8sPaperspaceProviderNodePoolTaintArrayOutput
	ToMk8sPaperspaceProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sPaperspaceProviderNodePoolTaintArrayOutput
}

type Mk8sPaperspaceProviderNodePoolTaintArray []Mk8sPaperspaceProviderNodePoolTaintInput

func (Mk8sPaperspaceProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderNodePoolTaintArray) ToMk8sPaperspaceProviderNodePoolTaintArrayOutput() Mk8sPaperspaceProviderNodePoolTaintArrayOutput {
	return i.ToMk8sPaperspaceProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderNodePoolTaintArray) ToMk8sPaperspaceProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderNodePoolTaintArrayOutput)
}

func (i Mk8sPaperspaceProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sPaperspaceProviderNodePoolTaint]{
		OutputState: i.ToMk8sPaperspaceProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sPaperspaceProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderNodePoolTaintOutput) ToMk8sPaperspaceProviderNodePoolTaintOutput() Mk8sPaperspaceProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolTaintOutput) ToMk8sPaperspaceProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderNodePoolTaint] {
	return pulumix.Output[Mk8sPaperspaceProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sPaperspaceProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderNodePoolTaintArrayOutput) ToMk8sPaperspaceProviderNodePoolTaintArrayOutput() Mk8sPaperspaceProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolTaintArrayOutput) ToMk8sPaperspaceProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sPaperspaceProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sPaperspaceProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sPaperspaceProviderNodePoolTaint {
		return vs[0].([]Mk8sPaperspaceProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sPaperspaceProviderNodePoolTaintOutput)
}

type Mk8sPaperspaceProviderUnmanagedNodePool struct {
	Labels map[string]string                              `pulumi:"labels"`
	Name   string                                         `pulumi:"name"`
	Taints []Mk8sPaperspaceProviderUnmanagedNodePoolTaint `pulumi:"taints"`
}

// Mk8sPaperspaceProviderUnmanagedNodePoolInput is an input type that accepts Mk8sPaperspaceProviderUnmanagedNodePoolArgs and Mk8sPaperspaceProviderUnmanagedNodePoolOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderUnmanagedNodePoolInput` via:
//
//	Mk8sPaperspaceProviderUnmanagedNodePoolArgs{...}
type Mk8sPaperspaceProviderUnmanagedNodePoolInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderUnmanagedNodePoolOutput() Mk8sPaperspaceProviderUnmanagedNodePoolOutput
	ToMk8sPaperspaceProviderUnmanagedNodePoolOutputWithContext(context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolOutput
}

type Mk8sPaperspaceProviderUnmanagedNodePoolArgs struct {
	Labels pulumi.StringMapInput                                  `pulumi:"labels"`
	Name   pulumi.StringInput                                     `pulumi:"name"`
	Taints Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayInput `pulumi:"taints"`
}

func (Mk8sPaperspaceProviderUnmanagedNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePool)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolArgs) ToMk8sPaperspaceProviderUnmanagedNodePoolOutput() Mk8sPaperspaceProviderUnmanagedNodePoolOutput {
	return i.ToMk8sPaperspaceProviderUnmanagedNodePoolOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolArgs) ToMk8sPaperspaceProviderUnmanagedNodePoolOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderUnmanagedNodePoolOutput)
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePool] {
	return pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePool]{
		OutputState: i.ToMk8sPaperspaceProviderUnmanagedNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sPaperspaceProviderUnmanagedNodePoolArrayInput is an input type that accepts Mk8sPaperspaceProviderUnmanagedNodePoolArray and Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderUnmanagedNodePoolArrayInput` via:
//
//	Mk8sPaperspaceProviderUnmanagedNodePoolArray{ Mk8sPaperspaceProviderUnmanagedNodePoolArgs{...} }
type Mk8sPaperspaceProviderUnmanagedNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutput() Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput
	ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutputWithContext(context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput
}

type Mk8sPaperspaceProviderUnmanagedNodePoolArray []Mk8sPaperspaceProviderUnmanagedNodePoolInput

func (Mk8sPaperspaceProviderUnmanagedNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderUnmanagedNodePool)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolArray) ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutput() Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput {
	return i.ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolArray) ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput)
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePool] {
	return pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePool]{
		OutputState: i.ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sPaperspaceProviderUnmanagedNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderUnmanagedNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePool)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolOutput() Mk8sPaperspaceProviderUnmanagedNodePoolOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePool] {
	return pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderUnmanagedNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderUnmanagedNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolOutput) Taints() Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderUnmanagedNodePool) []Mk8sPaperspaceProviderUnmanagedNodePoolTaint {
		return v.Taints
	}).(Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput)
}

type Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderUnmanagedNodePool)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutput() Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePool] {
	return pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sPaperspaceProviderUnmanagedNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sPaperspaceProviderUnmanagedNodePool {
		return vs[0].([]Mk8sPaperspaceProviderUnmanagedNodePool)[vs[1].(int)]
	}).(Mk8sPaperspaceProviderUnmanagedNodePoolOutput)
}

type Mk8sPaperspaceProviderUnmanagedNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sPaperspaceProviderUnmanagedNodePoolTaintInput is an input type that accepts Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs and Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderUnmanagedNodePoolTaintInput` via:
//
//	Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs{...}
type Mk8sPaperspaceProviderUnmanagedNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutput() Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput
	ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutputWithContext(context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput
}

type Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutput() Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput {
	return i.ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput)
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePoolTaint]{
		OutputState: i.ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayInput is an input type that accepts Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray and Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayInput` via:
//
//	Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray{ Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs{...} }
type Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput() Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput
	ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutputWithContext(context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput
}

type Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray []Mk8sPaperspaceProviderUnmanagedNodePoolTaintInput

func (Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput() Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput {
	return i.ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput)
}

func (i Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePoolTaint]{
		OutputState: i.ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutput() Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[Mk8sPaperspaceProviderUnmanagedNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderUnmanagedNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderUnmanagedNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sPaperspaceProviderUnmanagedNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sPaperspaceProviderUnmanagedNodePoolTaint)(nil)).Elem()
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput() Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput) ToMk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePoolTaint] {
	return pulumix.Output[[]Mk8sPaperspaceProviderUnmanagedNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sPaperspaceProviderUnmanagedNodePoolTaint {
		return vs[0].([]Mk8sPaperspaceProviderUnmanagedNodePoolTaint)[vs[1].(int)]
	}).(Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput)
}

type Mk8sStatus struct {
	AddOns          []Mk8sStatusAddOn `pulumi:"addOns"`
	HomeLocation    *string           `pulumi:"homeLocation"`
	OidcProviderUrl *string           `pulumi:"oidcProviderUrl"`
	ServerUrl       *string           `pulumi:"serverUrl"`
}

// Mk8sStatusInput is an input type that accepts Mk8sStatusArgs and Mk8sStatusOutput values.
// You can construct a concrete instance of `Mk8sStatusInput` via:
//
//	Mk8sStatusArgs{...}
type Mk8sStatusInput interface {
	pulumi.Input

	ToMk8sStatusOutput() Mk8sStatusOutput
	ToMk8sStatusOutputWithContext(context.Context) Mk8sStatusOutput
}

type Mk8sStatusArgs struct {
	AddOns          Mk8sStatusAddOnArrayInput `pulumi:"addOns"`
	HomeLocation    pulumi.StringPtrInput     `pulumi:"homeLocation"`
	OidcProviderUrl pulumi.StringPtrInput     `pulumi:"oidcProviderUrl"`
	ServerUrl       pulumi.StringPtrInput     `pulumi:"serverUrl"`
}

func (Mk8sStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatus)(nil)).Elem()
}

func (i Mk8sStatusArgs) ToMk8sStatusOutput() Mk8sStatusOutput {
	return i.ToMk8sStatusOutputWithContext(context.Background())
}

func (i Mk8sStatusArgs) ToMk8sStatusOutputWithContext(ctx context.Context) Mk8sStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusOutput)
}

func (i Mk8sStatusArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatus] {
	return pulumix.Output[Mk8sStatus]{
		OutputState: i.ToMk8sStatusOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusArrayInput is an input type that accepts Mk8sStatusArray and Mk8sStatusArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusArrayInput` via:
//
//	Mk8sStatusArray{ Mk8sStatusArgs{...} }
type Mk8sStatusArrayInput interface {
	pulumi.Input

	ToMk8sStatusArrayOutput() Mk8sStatusArrayOutput
	ToMk8sStatusArrayOutputWithContext(context.Context) Mk8sStatusArrayOutput
}

type Mk8sStatusArray []Mk8sStatusInput

func (Mk8sStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatus)(nil)).Elem()
}

func (i Mk8sStatusArray) ToMk8sStatusArrayOutput() Mk8sStatusArrayOutput {
	return i.ToMk8sStatusArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusArray) ToMk8sStatusArrayOutputWithContext(ctx context.Context) Mk8sStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusArrayOutput)
}

func (i Mk8sStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatus] {
	return pulumix.Output[[]Mk8sStatus]{
		OutputState: i.ToMk8sStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusOutput struct{ *pulumi.OutputState }

func (Mk8sStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatus)(nil)).Elem()
}

func (o Mk8sStatusOutput) ToMk8sStatusOutput() Mk8sStatusOutput {
	return o
}

func (o Mk8sStatusOutput) ToMk8sStatusOutputWithContext(ctx context.Context) Mk8sStatusOutput {
	return o
}

func (o Mk8sStatusOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatus] {
	return pulumix.Output[Mk8sStatus]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusOutput) AddOns() Mk8sStatusAddOnArrayOutput {
	return o.ApplyT(func(v Mk8sStatus) []Mk8sStatusAddOn { return v.AddOns }).(Mk8sStatusAddOnArrayOutput)
}

func (o Mk8sStatusOutput) HomeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatus) *string { return v.HomeLocation }).(pulumi.StringPtrOutput)
}

func (o Mk8sStatusOutput) OidcProviderUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatus) *string { return v.OidcProviderUrl }).(pulumi.StringPtrOutput)
}

func (o Mk8sStatusOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatus) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

type Mk8sStatusArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatus)(nil)).Elem()
}

func (o Mk8sStatusArrayOutput) ToMk8sStatusArrayOutput() Mk8sStatusArrayOutput {
	return o
}

func (o Mk8sStatusArrayOutput) ToMk8sStatusArrayOutputWithContext(ctx context.Context) Mk8sStatusArrayOutput {
	return o
}

func (o Mk8sStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatus] {
	return pulumix.Output[[]Mk8sStatus]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusArrayOutput) Index(i pulumi.IntInput) Mk8sStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatus {
		return vs[0].([]Mk8sStatus)[vs[1].(int)]
	}).(Mk8sStatusOutput)
}

type Mk8sStatusAddOn struct {
	AwsEcrs               []Mk8sStatusAddOnAwsEcr              `pulumi:"awsEcrs"`
	AwsEfs                []Mk8sStatusAddOnAwsEf               `pulumi:"awsEfs"`
	AwsElbs               []Mk8sStatusAddOnAwsElb              `pulumi:"awsElbs"`
	AwsWorkloadIdentities []Mk8sStatusAddOnAwsWorkloadIdentity `pulumi:"awsWorkloadIdentities"`
	Dashboards            []Mk8sStatusAddOnDashboard           `pulumi:"dashboards"`
	Logs                  []Mk8sStatusAddOnLog                 `pulumi:"logs"`
	Metrics               []Mk8sStatusAddOnMetric              `pulumi:"metrics"`
}

// Mk8sStatusAddOnInput is an input type that accepts Mk8sStatusAddOnArgs and Mk8sStatusAddOnOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnInput` via:
//
//	Mk8sStatusAddOnArgs{...}
type Mk8sStatusAddOnInput interface {
	pulumi.Input

	ToMk8sStatusAddOnOutput() Mk8sStatusAddOnOutput
	ToMk8sStatusAddOnOutputWithContext(context.Context) Mk8sStatusAddOnOutput
}

type Mk8sStatusAddOnArgs struct {
	AwsEcrs               Mk8sStatusAddOnAwsEcrArrayInput              `pulumi:"awsEcrs"`
	AwsEfs                Mk8sStatusAddOnAwsEfArrayInput               `pulumi:"awsEfs"`
	AwsElbs               Mk8sStatusAddOnAwsElbArrayInput              `pulumi:"awsElbs"`
	AwsWorkloadIdentities Mk8sStatusAddOnAwsWorkloadIdentityArrayInput `pulumi:"awsWorkloadIdentities"`
	Dashboards            Mk8sStatusAddOnDashboardArrayInput           `pulumi:"dashboards"`
	Logs                  Mk8sStatusAddOnLogArrayInput                 `pulumi:"logs"`
	Metrics               Mk8sStatusAddOnMetricArrayInput              `pulumi:"metrics"`
}

func (Mk8sStatusAddOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOn)(nil)).Elem()
}

func (i Mk8sStatusAddOnArgs) ToMk8sStatusAddOnOutput() Mk8sStatusAddOnOutput {
	return i.ToMk8sStatusAddOnOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnArgs) ToMk8sStatusAddOnOutputWithContext(ctx context.Context) Mk8sStatusAddOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnOutput)
}

func (i Mk8sStatusAddOnArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOn] {
	return pulumix.Output[Mk8sStatusAddOn]{
		OutputState: i.ToMk8sStatusAddOnOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnArrayInput is an input type that accepts Mk8sStatusAddOnArray and Mk8sStatusAddOnArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnArrayInput` via:
//
//	Mk8sStatusAddOnArray{ Mk8sStatusAddOnArgs{...} }
type Mk8sStatusAddOnArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnArrayOutput() Mk8sStatusAddOnArrayOutput
	ToMk8sStatusAddOnArrayOutputWithContext(context.Context) Mk8sStatusAddOnArrayOutput
}

type Mk8sStatusAddOnArray []Mk8sStatusAddOnInput

func (Mk8sStatusAddOnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOn)(nil)).Elem()
}

func (i Mk8sStatusAddOnArray) ToMk8sStatusAddOnArrayOutput() Mk8sStatusAddOnArrayOutput {
	return i.ToMk8sStatusAddOnArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnArray) ToMk8sStatusAddOnArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnArrayOutput)
}

func (i Mk8sStatusAddOnArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOn] {
	return pulumix.Output[[]Mk8sStatusAddOn]{
		OutputState: i.ToMk8sStatusAddOnArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOn)(nil)).Elem()
}

func (o Mk8sStatusAddOnOutput) ToMk8sStatusAddOnOutput() Mk8sStatusAddOnOutput {
	return o
}

func (o Mk8sStatusAddOnOutput) ToMk8sStatusAddOnOutputWithContext(ctx context.Context) Mk8sStatusAddOnOutput {
	return o
}

func (o Mk8sStatusAddOnOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOn] {
	return pulumix.Output[Mk8sStatusAddOn]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnOutput) AwsEcrs() Mk8sStatusAddOnAwsEcrArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOn) []Mk8sStatusAddOnAwsEcr { return v.AwsEcrs }).(Mk8sStatusAddOnAwsEcrArrayOutput)
}

func (o Mk8sStatusAddOnOutput) AwsEfs() Mk8sStatusAddOnAwsEfArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOn) []Mk8sStatusAddOnAwsEf { return v.AwsEfs }).(Mk8sStatusAddOnAwsEfArrayOutput)
}

func (o Mk8sStatusAddOnOutput) AwsElbs() Mk8sStatusAddOnAwsElbArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOn) []Mk8sStatusAddOnAwsElb { return v.AwsElbs }).(Mk8sStatusAddOnAwsElbArrayOutput)
}

func (o Mk8sStatusAddOnOutput) AwsWorkloadIdentities() Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOn) []Mk8sStatusAddOnAwsWorkloadIdentity { return v.AwsWorkloadIdentities }).(Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput)
}

func (o Mk8sStatusAddOnOutput) Dashboards() Mk8sStatusAddOnDashboardArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOn) []Mk8sStatusAddOnDashboard { return v.Dashboards }).(Mk8sStatusAddOnDashboardArrayOutput)
}

func (o Mk8sStatusAddOnOutput) Logs() Mk8sStatusAddOnLogArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOn) []Mk8sStatusAddOnLog { return v.Logs }).(Mk8sStatusAddOnLogArrayOutput)
}

func (o Mk8sStatusAddOnOutput) Metrics() Mk8sStatusAddOnMetricArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOn) []Mk8sStatusAddOnMetric { return v.Metrics }).(Mk8sStatusAddOnMetricArrayOutput)
}

type Mk8sStatusAddOnArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOn)(nil)).Elem()
}

func (o Mk8sStatusAddOnArrayOutput) ToMk8sStatusAddOnArrayOutput() Mk8sStatusAddOnArrayOutput {
	return o
}

func (o Mk8sStatusAddOnArrayOutput) ToMk8sStatusAddOnArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnArrayOutput {
	return o
}

func (o Mk8sStatusAddOnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOn] {
	return pulumix.Output[[]Mk8sStatusAddOn]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOn {
		return vs[0].([]Mk8sStatusAddOn)[vs[1].(int)]
	}).(Mk8sStatusAddOnOutput)
}

type Mk8sStatusAddOnAwsEcr struct {
	TrustPolicy *string `pulumi:"trustPolicy"`
}

// Mk8sStatusAddOnAwsEcrInput is an input type that accepts Mk8sStatusAddOnAwsEcrArgs and Mk8sStatusAddOnAwsEcrOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsEcrInput` via:
//
//	Mk8sStatusAddOnAwsEcrArgs{...}
type Mk8sStatusAddOnAwsEcrInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsEcrOutput() Mk8sStatusAddOnAwsEcrOutput
	ToMk8sStatusAddOnAwsEcrOutputWithContext(context.Context) Mk8sStatusAddOnAwsEcrOutput
}

type Mk8sStatusAddOnAwsEcrArgs struct {
	TrustPolicy pulumi.StringPtrInput `pulumi:"trustPolicy"`
}

func (Mk8sStatusAddOnAwsEcrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsEcr)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsEcrArgs) ToMk8sStatusAddOnAwsEcrOutput() Mk8sStatusAddOnAwsEcrOutput {
	return i.ToMk8sStatusAddOnAwsEcrOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsEcrArgs) ToMk8sStatusAddOnAwsEcrOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEcrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsEcrOutput)
}

func (i Mk8sStatusAddOnAwsEcrArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsEcr] {
	return pulumix.Output[Mk8sStatusAddOnAwsEcr]{
		OutputState: i.ToMk8sStatusAddOnAwsEcrOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnAwsEcrArrayInput is an input type that accepts Mk8sStatusAddOnAwsEcrArray and Mk8sStatusAddOnAwsEcrArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsEcrArrayInput` via:
//
//	Mk8sStatusAddOnAwsEcrArray{ Mk8sStatusAddOnAwsEcrArgs{...} }
type Mk8sStatusAddOnAwsEcrArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsEcrArrayOutput() Mk8sStatusAddOnAwsEcrArrayOutput
	ToMk8sStatusAddOnAwsEcrArrayOutputWithContext(context.Context) Mk8sStatusAddOnAwsEcrArrayOutput
}

type Mk8sStatusAddOnAwsEcrArray []Mk8sStatusAddOnAwsEcrInput

func (Mk8sStatusAddOnAwsEcrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsEcr)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsEcrArray) ToMk8sStatusAddOnAwsEcrArrayOutput() Mk8sStatusAddOnAwsEcrArrayOutput {
	return i.ToMk8sStatusAddOnAwsEcrArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsEcrArray) ToMk8sStatusAddOnAwsEcrArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEcrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsEcrArrayOutput)
}

func (i Mk8sStatusAddOnAwsEcrArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsEcr] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsEcr]{
		OutputState: i.ToMk8sStatusAddOnAwsEcrArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnAwsEcrOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsEcrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsEcr)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsEcrOutput) ToMk8sStatusAddOnAwsEcrOutput() Mk8sStatusAddOnAwsEcrOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEcrOutput) ToMk8sStatusAddOnAwsEcrOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEcrOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEcrOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsEcr] {
	return pulumix.Output[Mk8sStatusAddOnAwsEcr]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsEcrOutput) TrustPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnAwsEcr) *string { return v.TrustPolicy }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnAwsEcrArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsEcrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsEcr)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsEcrArrayOutput) ToMk8sStatusAddOnAwsEcrArrayOutput() Mk8sStatusAddOnAwsEcrArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEcrArrayOutput) ToMk8sStatusAddOnAwsEcrArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEcrArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEcrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsEcr] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsEcr]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsEcrArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnAwsEcrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnAwsEcr {
		return vs[0].([]Mk8sStatusAddOnAwsEcr)[vs[1].(int)]
	}).(Mk8sStatusAddOnAwsEcrOutput)
}

type Mk8sStatusAddOnAwsEf struct {
	TrustPolicy *string `pulumi:"trustPolicy"`
}

// Mk8sStatusAddOnAwsEfInput is an input type that accepts Mk8sStatusAddOnAwsEfArgs and Mk8sStatusAddOnAwsEfOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsEfInput` via:
//
//	Mk8sStatusAddOnAwsEfArgs{...}
type Mk8sStatusAddOnAwsEfInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsEfOutput() Mk8sStatusAddOnAwsEfOutput
	ToMk8sStatusAddOnAwsEfOutputWithContext(context.Context) Mk8sStatusAddOnAwsEfOutput
}

type Mk8sStatusAddOnAwsEfArgs struct {
	TrustPolicy pulumi.StringPtrInput `pulumi:"trustPolicy"`
}

func (Mk8sStatusAddOnAwsEfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsEf)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsEfArgs) ToMk8sStatusAddOnAwsEfOutput() Mk8sStatusAddOnAwsEfOutput {
	return i.ToMk8sStatusAddOnAwsEfOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsEfArgs) ToMk8sStatusAddOnAwsEfOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsEfOutput)
}

func (i Mk8sStatusAddOnAwsEfArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsEf] {
	return pulumix.Output[Mk8sStatusAddOnAwsEf]{
		OutputState: i.ToMk8sStatusAddOnAwsEfOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnAwsEfArrayInput is an input type that accepts Mk8sStatusAddOnAwsEfArray and Mk8sStatusAddOnAwsEfArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsEfArrayInput` via:
//
//	Mk8sStatusAddOnAwsEfArray{ Mk8sStatusAddOnAwsEfArgs{...} }
type Mk8sStatusAddOnAwsEfArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsEfArrayOutput() Mk8sStatusAddOnAwsEfArrayOutput
	ToMk8sStatusAddOnAwsEfArrayOutputWithContext(context.Context) Mk8sStatusAddOnAwsEfArrayOutput
}

type Mk8sStatusAddOnAwsEfArray []Mk8sStatusAddOnAwsEfInput

func (Mk8sStatusAddOnAwsEfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsEf)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsEfArray) ToMk8sStatusAddOnAwsEfArrayOutput() Mk8sStatusAddOnAwsEfArrayOutput {
	return i.ToMk8sStatusAddOnAwsEfArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsEfArray) ToMk8sStatusAddOnAwsEfArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsEfArrayOutput)
}

func (i Mk8sStatusAddOnAwsEfArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsEf] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsEf]{
		OutputState: i.ToMk8sStatusAddOnAwsEfArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnAwsEfOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsEfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsEf)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsEfOutput) ToMk8sStatusAddOnAwsEfOutput() Mk8sStatusAddOnAwsEfOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEfOutput) ToMk8sStatusAddOnAwsEfOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEfOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEfOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsEf] {
	return pulumix.Output[Mk8sStatusAddOnAwsEf]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsEfOutput) TrustPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnAwsEf) *string { return v.TrustPolicy }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnAwsEfArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsEfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsEf)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsEfArrayOutput) ToMk8sStatusAddOnAwsEfArrayOutput() Mk8sStatusAddOnAwsEfArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEfArrayOutput) ToMk8sStatusAddOnAwsEfArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsEfArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsEfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsEf] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsEf]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsEfArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnAwsEfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnAwsEf {
		return vs[0].([]Mk8sStatusAddOnAwsEf)[vs[1].(int)]
	}).(Mk8sStatusAddOnAwsEfOutput)
}

type Mk8sStatusAddOnAwsElb struct {
	TrustPolicy *string `pulumi:"trustPolicy"`
}

// Mk8sStatusAddOnAwsElbInput is an input type that accepts Mk8sStatusAddOnAwsElbArgs and Mk8sStatusAddOnAwsElbOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsElbInput` via:
//
//	Mk8sStatusAddOnAwsElbArgs{...}
type Mk8sStatusAddOnAwsElbInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsElbOutput() Mk8sStatusAddOnAwsElbOutput
	ToMk8sStatusAddOnAwsElbOutputWithContext(context.Context) Mk8sStatusAddOnAwsElbOutput
}

type Mk8sStatusAddOnAwsElbArgs struct {
	TrustPolicy pulumi.StringPtrInput `pulumi:"trustPolicy"`
}

func (Mk8sStatusAddOnAwsElbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsElb)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsElbArgs) ToMk8sStatusAddOnAwsElbOutput() Mk8sStatusAddOnAwsElbOutput {
	return i.ToMk8sStatusAddOnAwsElbOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsElbArgs) ToMk8sStatusAddOnAwsElbOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsElbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsElbOutput)
}

func (i Mk8sStatusAddOnAwsElbArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsElb] {
	return pulumix.Output[Mk8sStatusAddOnAwsElb]{
		OutputState: i.ToMk8sStatusAddOnAwsElbOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnAwsElbArrayInput is an input type that accepts Mk8sStatusAddOnAwsElbArray and Mk8sStatusAddOnAwsElbArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsElbArrayInput` via:
//
//	Mk8sStatusAddOnAwsElbArray{ Mk8sStatusAddOnAwsElbArgs{...} }
type Mk8sStatusAddOnAwsElbArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsElbArrayOutput() Mk8sStatusAddOnAwsElbArrayOutput
	ToMk8sStatusAddOnAwsElbArrayOutputWithContext(context.Context) Mk8sStatusAddOnAwsElbArrayOutput
}

type Mk8sStatusAddOnAwsElbArray []Mk8sStatusAddOnAwsElbInput

func (Mk8sStatusAddOnAwsElbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsElb)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsElbArray) ToMk8sStatusAddOnAwsElbArrayOutput() Mk8sStatusAddOnAwsElbArrayOutput {
	return i.ToMk8sStatusAddOnAwsElbArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsElbArray) ToMk8sStatusAddOnAwsElbArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsElbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsElbArrayOutput)
}

func (i Mk8sStatusAddOnAwsElbArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsElb] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsElb]{
		OutputState: i.ToMk8sStatusAddOnAwsElbArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnAwsElbOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsElbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsElb)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsElbOutput) ToMk8sStatusAddOnAwsElbOutput() Mk8sStatusAddOnAwsElbOutput {
	return o
}

func (o Mk8sStatusAddOnAwsElbOutput) ToMk8sStatusAddOnAwsElbOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsElbOutput {
	return o
}

func (o Mk8sStatusAddOnAwsElbOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsElb] {
	return pulumix.Output[Mk8sStatusAddOnAwsElb]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsElbOutput) TrustPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnAwsElb) *string { return v.TrustPolicy }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnAwsElbArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsElbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsElb)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsElbArrayOutput) ToMk8sStatusAddOnAwsElbArrayOutput() Mk8sStatusAddOnAwsElbArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsElbArrayOutput) ToMk8sStatusAddOnAwsElbArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsElbArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsElbArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsElb] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsElb]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsElbArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnAwsElbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnAwsElb {
		return vs[0].([]Mk8sStatusAddOnAwsElb)[vs[1].(int)]
	}).(Mk8sStatusAddOnAwsElbOutput)
}

type Mk8sStatusAddOnAwsWorkloadIdentity struct {
	OidcProviderConfigs []Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig `pulumi:"oidcProviderConfigs"`
	TrustPolicy         *string                                                `pulumi:"trustPolicy"`
}

// Mk8sStatusAddOnAwsWorkloadIdentityInput is an input type that accepts Mk8sStatusAddOnAwsWorkloadIdentityArgs and Mk8sStatusAddOnAwsWorkloadIdentityOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsWorkloadIdentityInput` via:
//
//	Mk8sStatusAddOnAwsWorkloadIdentityArgs{...}
type Mk8sStatusAddOnAwsWorkloadIdentityInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsWorkloadIdentityOutput() Mk8sStatusAddOnAwsWorkloadIdentityOutput
	ToMk8sStatusAddOnAwsWorkloadIdentityOutputWithContext(context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOutput
}

type Mk8sStatusAddOnAwsWorkloadIdentityArgs struct {
	OidcProviderConfigs Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayInput `pulumi:"oidcProviderConfigs"`
	TrustPolicy         pulumi.StringPtrInput                                          `pulumi:"trustPolicy"`
}

func (Mk8sStatusAddOnAwsWorkloadIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentity)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityArgs) ToMk8sStatusAddOnAwsWorkloadIdentityOutput() Mk8sStatusAddOnAwsWorkloadIdentityOutput {
	return i.ToMk8sStatusAddOnAwsWorkloadIdentityOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityArgs) ToMk8sStatusAddOnAwsWorkloadIdentityOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsWorkloadIdentityOutput)
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentity] {
	return pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentity]{
		OutputState: i.ToMk8sStatusAddOnAwsWorkloadIdentityOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnAwsWorkloadIdentityArrayInput is an input type that accepts Mk8sStatusAddOnAwsWorkloadIdentityArray and Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsWorkloadIdentityArrayInput` via:
//
//	Mk8sStatusAddOnAwsWorkloadIdentityArray{ Mk8sStatusAddOnAwsWorkloadIdentityArgs{...} }
type Mk8sStatusAddOnAwsWorkloadIdentityArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutput() Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput
	ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutputWithContext(context.Context) Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput
}

type Mk8sStatusAddOnAwsWorkloadIdentityArray []Mk8sStatusAddOnAwsWorkloadIdentityInput

func (Mk8sStatusAddOnAwsWorkloadIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsWorkloadIdentity)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityArray) ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutput() Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput {
	return i.ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityArray) ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput)
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentity] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentity]{
		OutputState: i.ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnAwsWorkloadIdentityOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsWorkloadIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentity)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOutput) ToMk8sStatusAddOnAwsWorkloadIdentityOutput() Mk8sStatusAddOnAwsWorkloadIdentityOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOutput) ToMk8sStatusAddOnAwsWorkloadIdentityOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentity] {
	return pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentity]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOutput) OidcProviderConfigs() Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnAwsWorkloadIdentity) []Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig {
		return v.OidcProviderConfigs
	}).(Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput)
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOutput) TrustPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnAwsWorkloadIdentity) *string { return v.TrustPolicy }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsWorkloadIdentity)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput) ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutput() Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput) ToMk8sStatusAddOnAwsWorkloadIdentityArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentity] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentity]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnAwsWorkloadIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnAwsWorkloadIdentity {
		return vs[0].([]Mk8sStatusAddOnAwsWorkloadIdentity)[vs[1].(int)]
	}).(Mk8sStatusAddOnAwsWorkloadIdentityOutput)
}

type Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig struct {
	Audience    *string `pulumi:"audience"`
	ProviderUrl *string `pulumi:"providerUrl"`
}

// Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigInput is an input type that accepts Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs and Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigInput` via:
//
//	Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs{...}
type Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput() Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput
	ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutputWithContext(context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput
}

type Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs struct {
	Audience    pulumi.StringPtrInput `pulumi:"audience"`
	ProviderUrl pulumi.StringPtrInput `pulumi:"providerUrl"`
}

func (Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput() Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput {
	return i.ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput)
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig] {
	return pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig]{
		OutputState: i.ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayInput is an input type that accepts Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray and Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayInput` via:
//
//	Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray{ Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs{...} }
type Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput() Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput
	ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutputWithContext(context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput
}

type Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray []Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigInput

func (Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig)(nil)).Elem()
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput() Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput {
	return i.ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput)
}

func (i Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig]{
		OutputState: i.ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput() Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig] {
	return pulumix.Output[Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput) ProviderUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig) *string { return v.ProviderUrl }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig)(nil)).Elem()
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput() Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput) ToMk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput {
	return o
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig] {
	return pulumix.Output[[]Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig {
		return vs[0].([]Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig)[vs[1].(int)]
	}).(Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput)
}

type Mk8sStatusAddOnDashboard struct {
	Url *string `pulumi:"url"`
}

// Mk8sStatusAddOnDashboardInput is an input type that accepts Mk8sStatusAddOnDashboardArgs and Mk8sStatusAddOnDashboardOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnDashboardInput` via:
//
//	Mk8sStatusAddOnDashboardArgs{...}
type Mk8sStatusAddOnDashboardInput interface {
	pulumi.Input

	ToMk8sStatusAddOnDashboardOutput() Mk8sStatusAddOnDashboardOutput
	ToMk8sStatusAddOnDashboardOutputWithContext(context.Context) Mk8sStatusAddOnDashboardOutput
}

type Mk8sStatusAddOnDashboardArgs struct {
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (Mk8sStatusAddOnDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnDashboard)(nil)).Elem()
}

func (i Mk8sStatusAddOnDashboardArgs) ToMk8sStatusAddOnDashboardOutput() Mk8sStatusAddOnDashboardOutput {
	return i.ToMk8sStatusAddOnDashboardOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnDashboardArgs) ToMk8sStatusAddOnDashboardOutputWithContext(ctx context.Context) Mk8sStatusAddOnDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnDashboardOutput)
}

func (i Mk8sStatusAddOnDashboardArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnDashboard] {
	return pulumix.Output[Mk8sStatusAddOnDashboard]{
		OutputState: i.ToMk8sStatusAddOnDashboardOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnDashboardArrayInput is an input type that accepts Mk8sStatusAddOnDashboardArray and Mk8sStatusAddOnDashboardArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnDashboardArrayInput` via:
//
//	Mk8sStatusAddOnDashboardArray{ Mk8sStatusAddOnDashboardArgs{...} }
type Mk8sStatusAddOnDashboardArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnDashboardArrayOutput() Mk8sStatusAddOnDashboardArrayOutput
	ToMk8sStatusAddOnDashboardArrayOutputWithContext(context.Context) Mk8sStatusAddOnDashboardArrayOutput
}

type Mk8sStatusAddOnDashboardArray []Mk8sStatusAddOnDashboardInput

func (Mk8sStatusAddOnDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnDashboard)(nil)).Elem()
}

func (i Mk8sStatusAddOnDashboardArray) ToMk8sStatusAddOnDashboardArrayOutput() Mk8sStatusAddOnDashboardArrayOutput {
	return i.ToMk8sStatusAddOnDashboardArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnDashboardArray) ToMk8sStatusAddOnDashboardArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnDashboardArrayOutput)
}

func (i Mk8sStatusAddOnDashboardArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnDashboard] {
	return pulumix.Output[[]Mk8sStatusAddOnDashboard]{
		OutputState: i.ToMk8sStatusAddOnDashboardArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnDashboardOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnDashboard)(nil)).Elem()
}

func (o Mk8sStatusAddOnDashboardOutput) ToMk8sStatusAddOnDashboardOutput() Mk8sStatusAddOnDashboardOutput {
	return o
}

func (o Mk8sStatusAddOnDashboardOutput) ToMk8sStatusAddOnDashboardOutputWithContext(ctx context.Context) Mk8sStatusAddOnDashboardOutput {
	return o
}

func (o Mk8sStatusAddOnDashboardOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnDashboard] {
	return pulumix.Output[Mk8sStatusAddOnDashboard]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnDashboardOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnDashboard) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnDashboardArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnDashboard)(nil)).Elem()
}

func (o Mk8sStatusAddOnDashboardArrayOutput) ToMk8sStatusAddOnDashboardArrayOutput() Mk8sStatusAddOnDashboardArrayOutput {
	return o
}

func (o Mk8sStatusAddOnDashboardArrayOutput) ToMk8sStatusAddOnDashboardArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnDashboardArrayOutput {
	return o
}

func (o Mk8sStatusAddOnDashboardArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnDashboard] {
	return pulumix.Output[[]Mk8sStatusAddOnDashboard]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnDashboardArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnDashboard {
		return vs[0].([]Mk8sStatusAddOnDashboard)[vs[1].(int)]
	}).(Mk8sStatusAddOnDashboardOutput)
}

type Mk8sStatusAddOnLog struct {
	LokiAddress *string `pulumi:"lokiAddress"`
}

// Mk8sStatusAddOnLogInput is an input type that accepts Mk8sStatusAddOnLogArgs and Mk8sStatusAddOnLogOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnLogInput` via:
//
//	Mk8sStatusAddOnLogArgs{...}
type Mk8sStatusAddOnLogInput interface {
	pulumi.Input

	ToMk8sStatusAddOnLogOutput() Mk8sStatusAddOnLogOutput
	ToMk8sStatusAddOnLogOutputWithContext(context.Context) Mk8sStatusAddOnLogOutput
}

type Mk8sStatusAddOnLogArgs struct {
	LokiAddress pulumi.StringPtrInput `pulumi:"lokiAddress"`
}

func (Mk8sStatusAddOnLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnLog)(nil)).Elem()
}

func (i Mk8sStatusAddOnLogArgs) ToMk8sStatusAddOnLogOutput() Mk8sStatusAddOnLogOutput {
	return i.ToMk8sStatusAddOnLogOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnLogArgs) ToMk8sStatusAddOnLogOutputWithContext(ctx context.Context) Mk8sStatusAddOnLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnLogOutput)
}

func (i Mk8sStatusAddOnLogArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnLog] {
	return pulumix.Output[Mk8sStatusAddOnLog]{
		OutputState: i.ToMk8sStatusAddOnLogOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnLogArrayInput is an input type that accepts Mk8sStatusAddOnLogArray and Mk8sStatusAddOnLogArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnLogArrayInput` via:
//
//	Mk8sStatusAddOnLogArray{ Mk8sStatusAddOnLogArgs{...} }
type Mk8sStatusAddOnLogArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnLogArrayOutput() Mk8sStatusAddOnLogArrayOutput
	ToMk8sStatusAddOnLogArrayOutputWithContext(context.Context) Mk8sStatusAddOnLogArrayOutput
}

type Mk8sStatusAddOnLogArray []Mk8sStatusAddOnLogInput

func (Mk8sStatusAddOnLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnLog)(nil)).Elem()
}

func (i Mk8sStatusAddOnLogArray) ToMk8sStatusAddOnLogArrayOutput() Mk8sStatusAddOnLogArrayOutput {
	return i.ToMk8sStatusAddOnLogArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnLogArray) ToMk8sStatusAddOnLogArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnLogArrayOutput)
}

func (i Mk8sStatusAddOnLogArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnLog] {
	return pulumix.Output[[]Mk8sStatusAddOnLog]{
		OutputState: i.ToMk8sStatusAddOnLogArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnLogOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnLog)(nil)).Elem()
}

func (o Mk8sStatusAddOnLogOutput) ToMk8sStatusAddOnLogOutput() Mk8sStatusAddOnLogOutput {
	return o
}

func (o Mk8sStatusAddOnLogOutput) ToMk8sStatusAddOnLogOutputWithContext(ctx context.Context) Mk8sStatusAddOnLogOutput {
	return o
}

func (o Mk8sStatusAddOnLogOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnLog] {
	return pulumix.Output[Mk8sStatusAddOnLog]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnLogOutput) LokiAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnLog) *string { return v.LokiAddress }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnLogArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnLog)(nil)).Elem()
}

func (o Mk8sStatusAddOnLogArrayOutput) ToMk8sStatusAddOnLogArrayOutput() Mk8sStatusAddOnLogArrayOutput {
	return o
}

func (o Mk8sStatusAddOnLogArrayOutput) ToMk8sStatusAddOnLogArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnLogArrayOutput {
	return o
}

func (o Mk8sStatusAddOnLogArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnLog] {
	return pulumix.Output[[]Mk8sStatusAddOnLog]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnLogArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnLog {
		return vs[0].([]Mk8sStatusAddOnLog)[vs[1].(int)]
	}).(Mk8sStatusAddOnLogOutput)
}

type Mk8sStatusAddOnMetric struct {
	PrometheusEndpoint *string `pulumi:"prometheusEndpoint"`
	RemoteWriteConfig  *string `pulumi:"remoteWriteConfig"`
}

// Mk8sStatusAddOnMetricInput is an input type that accepts Mk8sStatusAddOnMetricArgs and Mk8sStatusAddOnMetricOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnMetricInput` via:
//
//	Mk8sStatusAddOnMetricArgs{...}
type Mk8sStatusAddOnMetricInput interface {
	pulumi.Input

	ToMk8sStatusAddOnMetricOutput() Mk8sStatusAddOnMetricOutput
	ToMk8sStatusAddOnMetricOutputWithContext(context.Context) Mk8sStatusAddOnMetricOutput
}

type Mk8sStatusAddOnMetricArgs struct {
	PrometheusEndpoint pulumi.StringPtrInput `pulumi:"prometheusEndpoint"`
	RemoteWriteConfig  pulumi.StringPtrInput `pulumi:"remoteWriteConfig"`
}

func (Mk8sStatusAddOnMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnMetric)(nil)).Elem()
}

func (i Mk8sStatusAddOnMetricArgs) ToMk8sStatusAddOnMetricOutput() Mk8sStatusAddOnMetricOutput {
	return i.ToMk8sStatusAddOnMetricOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnMetricArgs) ToMk8sStatusAddOnMetricOutputWithContext(ctx context.Context) Mk8sStatusAddOnMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnMetricOutput)
}

func (i Mk8sStatusAddOnMetricArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnMetric] {
	return pulumix.Output[Mk8sStatusAddOnMetric]{
		OutputState: i.ToMk8sStatusAddOnMetricOutputWithContext(ctx).OutputState,
	}
}

// Mk8sStatusAddOnMetricArrayInput is an input type that accepts Mk8sStatusAddOnMetricArray and Mk8sStatusAddOnMetricArrayOutput values.
// You can construct a concrete instance of `Mk8sStatusAddOnMetricArrayInput` via:
//
//	Mk8sStatusAddOnMetricArray{ Mk8sStatusAddOnMetricArgs{...} }
type Mk8sStatusAddOnMetricArrayInput interface {
	pulumi.Input

	ToMk8sStatusAddOnMetricArrayOutput() Mk8sStatusAddOnMetricArrayOutput
	ToMk8sStatusAddOnMetricArrayOutputWithContext(context.Context) Mk8sStatusAddOnMetricArrayOutput
}

type Mk8sStatusAddOnMetricArray []Mk8sStatusAddOnMetricInput

func (Mk8sStatusAddOnMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnMetric)(nil)).Elem()
}

func (i Mk8sStatusAddOnMetricArray) ToMk8sStatusAddOnMetricArrayOutput() Mk8sStatusAddOnMetricArrayOutput {
	return i.ToMk8sStatusAddOnMetricArrayOutputWithContext(context.Background())
}

func (i Mk8sStatusAddOnMetricArray) ToMk8sStatusAddOnMetricArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sStatusAddOnMetricArrayOutput)
}

func (i Mk8sStatusAddOnMetricArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnMetric] {
	return pulumix.Output[[]Mk8sStatusAddOnMetric]{
		OutputState: i.ToMk8sStatusAddOnMetricArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sStatusAddOnMetricOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sStatusAddOnMetric)(nil)).Elem()
}

func (o Mk8sStatusAddOnMetricOutput) ToMk8sStatusAddOnMetricOutput() Mk8sStatusAddOnMetricOutput {
	return o
}

func (o Mk8sStatusAddOnMetricOutput) ToMk8sStatusAddOnMetricOutputWithContext(ctx context.Context) Mk8sStatusAddOnMetricOutput {
	return o
}

func (o Mk8sStatusAddOnMetricOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sStatusAddOnMetric] {
	return pulumix.Output[Mk8sStatusAddOnMetric]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnMetricOutput) PrometheusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnMetric) *string { return v.PrometheusEndpoint }).(pulumi.StringPtrOutput)
}

func (o Mk8sStatusAddOnMetricOutput) RemoteWriteConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sStatusAddOnMetric) *string { return v.RemoteWriteConfig }).(pulumi.StringPtrOutput)
}

type Mk8sStatusAddOnMetricArrayOutput struct{ *pulumi.OutputState }

func (Mk8sStatusAddOnMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sStatusAddOnMetric)(nil)).Elem()
}

func (o Mk8sStatusAddOnMetricArrayOutput) ToMk8sStatusAddOnMetricArrayOutput() Mk8sStatusAddOnMetricArrayOutput {
	return o
}

func (o Mk8sStatusAddOnMetricArrayOutput) ToMk8sStatusAddOnMetricArrayOutputWithContext(ctx context.Context) Mk8sStatusAddOnMetricArrayOutput {
	return o
}

func (o Mk8sStatusAddOnMetricArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sStatusAddOnMetric] {
	return pulumix.Output[[]Mk8sStatusAddOnMetric]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sStatusAddOnMetricArrayOutput) Index(i pulumi.IntInput) Mk8sStatusAddOnMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sStatusAddOnMetric {
		return vs[0].([]Mk8sStatusAddOnMetric)[vs[1].(int)]
	}).(Mk8sStatusAddOnMetricOutput)
}

type Mk8sTritonProvider struct {
	Autoscaler       *Mk8sTritonProviderAutoscaler `pulumi:"autoscaler"`
	Connection       Mk8sTritonProviderConnection  `pulumi:"connection"`
	FirewallEnabled  *bool                         `pulumi:"firewallEnabled"`
	ImageId          string                        `pulumi:"imageId"`
	Location         string                        `pulumi:"location"`
	Networking       Mk8sTritonProviderNetworking  `pulumi:"networking"`
	NodePools        []Mk8sTritonProviderNodePool  `pulumi:"nodePools"`
	PreInstallScript *string                       `pulumi:"preInstallScript"`
	PrivateNetworkId string                        `pulumi:"privateNetworkId"`
	SshKeys          []string                      `pulumi:"sshKeys"`
}

// Mk8sTritonProviderInput is an input type that accepts Mk8sTritonProviderArgs and Mk8sTritonProviderOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderInput` via:
//
//	Mk8sTritonProviderArgs{...}
type Mk8sTritonProviderInput interface {
	pulumi.Input

	ToMk8sTritonProviderOutput() Mk8sTritonProviderOutput
	ToMk8sTritonProviderOutputWithContext(context.Context) Mk8sTritonProviderOutput
}

type Mk8sTritonProviderArgs struct {
	Autoscaler       Mk8sTritonProviderAutoscalerPtrInput `pulumi:"autoscaler"`
	Connection       Mk8sTritonProviderConnectionInput    `pulumi:"connection"`
	FirewallEnabled  pulumi.BoolPtrInput                  `pulumi:"firewallEnabled"`
	ImageId          pulumi.StringInput                   `pulumi:"imageId"`
	Location         pulumi.StringInput                   `pulumi:"location"`
	Networking       Mk8sTritonProviderNetworkingInput    `pulumi:"networking"`
	NodePools        Mk8sTritonProviderNodePoolArrayInput `pulumi:"nodePools"`
	PreInstallScript pulumi.StringPtrInput                `pulumi:"preInstallScript"`
	PrivateNetworkId pulumi.StringInput                   `pulumi:"privateNetworkId"`
	SshKeys          pulumi.StringArrayInput              `pulumi:"sshKeys"`
}

func (Mk8sTritonProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProvider)(nil)).Elem()
}

func (i Mk8sTritonProviderArgs) ToMk8sTritonProviderOutput() Mk8sTritonProviderOutput {
	return i.ToMk8sTritonProviderOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderArgs) ToMk8sTritonProviderOutputWithContext(ctx context.Context) Mk8sTritonProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderOutput)
}

func (i Mk8sTritonProviderArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProvider] {
	return pulumix.Output[Mk8sTritonProvider]{
		OutputState: i.ToMk8sTritonProviderOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sTritonProviderArgs) ToMk8sTritonProviderPtrOutput() Mk8sTritonProviderPtrOutput {
	return i.ToMk8sTritonProviderPtrOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderArgs) ToMk8sTritonProviderPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderOutput).ToMk8sTritonProviderPtrOutputWithContext(ctx)
}

// Mk8sTritonProviderPtrInput is an input type that accepts Mk8sTritonProviderArgs, Mk8sTritonProviderPtr and Mk8sTritonProviderPtrOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderPtrInput` via:
//
//	        Mk8sTritonProviderArgs{...}
//
//	or:
//
//	        nil
type Mk8sTritonProviderPtrInput interface {
	pulumi.Input

	ToMk8sTritonProviderPtrOutput() Mk8sTritonProviderPtrOutput
	ToMk8sTritonProviderPtrOutputWithContext(context.Context) Mk8sTritonProviderPtrOutput
}

type mk8sTritonProviderPtrType Mk8sTritonProviderArgs

func Mk8sTritonProviderPtr(v *Mk8sTritonProviderArgs) Mk8sTritonProviderPtrInput {
	return (*mk8sTritonProviderPtrType)(v)
}

func (*mk8sTritonProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProvider)(nil)).Elem()
}

func (i *mk8sTritonProviderPtrType) ToMk8sTritonProviderPtrOutput() Mk8sTritonProviderPtrOutput {
	return i.ToMk8sTritonProviderPtrOutputWithContext(context.Background())
}

func (i *mk8sTritonProviderPtrType) ToMk8sTritonProviderPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderPtrOutput)
}

func (i *mk8sTritonProviderPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProvider] {
	return pulumix.Output[*Mk8sTritonProvider]{
		OutputState: i.ToMk8sTritonProviderPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sTritonProviderOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProvider)(nil)).Elem()
}

func (o Mk8sTritonProviderOutput) ToMk8sTritonProviderOutput() Mk8sTritonProviderOutput {
	return o
}

func (o Mk8sTritonProviderOutput) ToMk8sTritonProviderOutputWithContext(ctx context.Context) Mk8sTritonProviderOutput {
	return o
}

func (o Mk8sTritonProviderOutput) ToMk8sTritonProviderPtrOutput() Mk8sTritonProviderPtrOutput {
	return o.ToMk8sTritonProviderPtrOutputWithContext(context.Background())
}

func (o Mk8sTritonProviderOutput) ToMk8sTritonProviderPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sTritonProvider) *Mk8sTritonProvider {
		return &v
	}).(Mk8sTritonProviderPtrOutput)
}

func (o Mk8sTritonProviderOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProvider] {
	return pulumix.Output[Mk8sTritonProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderOutput) Autoscaler() Mk8sTritonProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) *Mk8sTritonProviderAutoscaler { return v.Autoscaler }).(Mk8sTritonProviderAutoscalerPtrOutput)
}

func (o Mk8sTritonProviderOutput) Connection() Mk8sTritonProviderConnectionOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) Mk8sTritonProviderConnection { return v.Connection }).(Mk8sTritonProviderConnectionOutput)
}

func (o Mk8sTritonProviderOutput) FirewallEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) *bool { return v.FirewallEnabled }).(pulumi.BoolPtrOutput)
}

func (o Mk8sTritonProviderOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) string { return v.Location }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderOutput) Networking() Mk8sTritonProviderNetworkingOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) Mk8sTritonProviderNetworking { return v.Networking }).(Mk8sTritonProviderNetworkingOutput)
}

func (o Mk8sTritonProviderOutput) NodePools() Mk8sTritonProviderNodePoolArrayOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) []Mk8sTritonProviderNodePool { return v.NodePools }).(Mk8sTritonProviderNodePoolArrayOutput)
}

func (o Mk8sTritonProviderOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) *string { return v.PreInstallScript }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sTritonProvider) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

type Mk8sTritonProviderPtrOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProvider)(nil)).Elem()
}

func (o Mk8sTritonProviderPtrOutput) ToMk8sTritonProviderPtrOutput() Mk8sTritonProviderPtrOutput {
	return o
}

func (o Mk8sTritonProviderPtrOutput) ToMk8sTritonProviderPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderPtrOutput {
	return o
}

func (o Mk8sTritonProviderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProvider] {
	return pulumix.Output[*Mk8sTritonProvider]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderPtrOutput) Elem() Mk8sTritonProviderOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) Mk8sTritonProvider {
		if v != nil {
			return *v
		}
		var ret Mk8sTritonProvider
		return ret
	}).(Mk8sTritonProviderOutput)
}

func (o Mk8sTritonProviderPtrOutput) Autoscaler() Mk8sTritonProviderAutoscalerPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *Mk8sTritonProviderAutoscaler {
		if v == nil {
			return nil
		}
		return v.Autoscaler
	}).(Mk8sTritonProviderAutoscalerPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) Connection() Mk8sTritonProviderConnectionPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *Mk8sTritonProviderConnection {
		if v == nil {
			return nil
		}
		return &v.Connection
	}).(Mk8sTritonProviderConnectionPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) FirewallEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *bool {
		if v == nil {
			return nil
		}
		return v.FirewallEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ImageId
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) Networking() Mk8sTritonProviderNetworkingPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *Mk8sTritonProviderNetworking {
		if v == nil {
			return nil
		}
		return &v.Networking
	}).(Mk8sTritonProviderNetworkingPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) NodePools() Mk8sTritonProviderNodePoolArrayOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) []Mk8sTritonProviderNodePool {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(Mk8sTritonProviderNodePoolArrayOutput)
}

func (o Mk8sTritonProviderPtrOutput) PreInstallScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *string {
		if v == nil {
			return nil
		}
		return v.PreInstallScript
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) PrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateNetworkId
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderPtrOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sTritonProvider) []string {
		if v == nil {
			return nil
		}
		return v.SshKeys
	}).(pulumi.StringArrayOutput)
}

type Mk8sTritonProviderAutoscaler struct {
	Expanders            []string `pulumi:"expanders"`
	UnneededTime         *string  `pulumi:"unneededTime"`
	UnreadyTime          *string  `pulumi:"unreadyTime"`
	UtilizationThreshold *float64 `pulumi:"utilizationThreshold"`
}

// Mk8sTritonProviderAutoscalerInput is an input type that accepts Mk8sTritonProviderAutoscalerArgs and Mk8sTritonProviderAutoscalerOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderAutoscalerInput` via:
//
//	Mk8sTritonProviderAutoscalerArgs{...}
type Mk8sTritonProviderAutoscalerInput interface {
	pulumi.Input

	ToMk8sTritonProviderAutoscalerOutput() Mk8sTritonProviderAutoscalerOutput
	ToMk8sTritonProviderAutoscalerOutputWithContext(context.Context) Mk8sTritonProviderAutoscalerOutput
}

type Mk8sTritonProviderAutoscalerArgs struct {
	Expanders            pulumi.StringArrayInput `pulumi:"expanders"`
	UnneededTime         pulumi.StringPtrInput   `pulumi:"unneededTime"`
	UnreadyTime          pulumi.StringPtrInput   `pulumi:"unreadyTime"`
	UtilizationThreshold pulumi.Float64PtrInput  `pulumi:"utilizationThreshold"`
}

func (Mk8sTritonProviderAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderAutoscaler)(nil)).Elem()
}

func (i Mk8sTritonProviderAutoscalerArgs) ToMk8sTritonProviderAutoscalerOutput() Mk8sTritonProviderAutoscalerOutput {
	return i.ToMk8sTritonProviderAutoscalerOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderAutoscalerArgs) ToMk8sTritonProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sTritonProviderAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderAutoscalerOutput)
}

func (i Mk8sTritonProviderAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderAutoscaler] {
	return pulumix.Output[Mk8sTritonProviderAutoscaler]{
		OutputState: i.ToMk8sTritonProviderAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sTritonProviderAutoscalerArgs) ToMk8sTritonProviderAutoscalerPtrOutput() Mk8sTritonProviderAutoscalerPtrOutput {
	return i.ToMk8sTritonProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderAutoscalerArgs) ToMk8sTritonProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderAutoscalerOutput).ToMk8sTritonProviderAutoscalerPtrOutputWithContext(ctx)
}

// Mk8sTritonProviderAutoscalerPtrInput is an input type that accepts Mk8sTritonProviderAutoscalerArgs, Mk8sTritonProviderAutoscalerPtr and Mk8sTritonProviderAutoscalerPtrOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderAutoscalerPtrInput` via:
//
//	        Mk8sTritonProviderAutoscalerArgs{...}
//
//	or:
//
//	        nil
type Mk8sTritonProviderAutoscalerPtrInput interface {
	pulumi.Input

	ToMk8sTritonProviderAutoscalerPtrOutput() Mk8sTritonProviderAutoscalerPtrOutput
	ToMk8sTritonProviderAutoscalerPtrOutputWithContext(context.Context) Mk8sTritonProviderAutoscalerPtrOutput
}

type mk8sTritonProviderAutoscalerPtrType Mk8sTritonProviderAutoscalerArgs

func Mk8sTritonProviderAutoscalerPtr(v *Mk8sTritonProviderAutoscalerArgs) Mk8sTritonProviderAutoscalerPtrInput {
	return (*mk8sTritonProviderAutoscalerPtrType)(v)
}

func (*mk8sTritonProviderAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProviderAutoscaler)(nil)).Elem()
}

func (i *mk8sTritonProviderAutoscalerPtrType) ToMk8sTritonProviderAutoscalerPtrOutput() Mk8sTritonProviderAutoscalerPtrOutput {
	return i.ToMk8sTritonProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (i *mk8sTritonProviderAutoscalerPtrType) ToMk8sTritonProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderAutoscalerPtrOutput)
}

func (i *mk8sTritonProviderAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProviderAutoscaler] {
	return pulumix.Output[*Mk8sTritonProviderAutoscaler]{
		OutputState: i.ToMk8sTritonProviderAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sTritonProviderAutoscalerOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sTritonProviderAutoscalerOutput) ToMk8sTritonProviderAutoscalerOutput() Mk8sTritonProviderAutoscalerOutput {
	return o
}

func (o Mk8sTritonProviderAutoscalerOutput) ToMk8sTritonProviderAutoscalerOutputWithContext(ctx context.Context) Mk8sTritonProviderAutoscalerOutput {
	return o
}

func (o Mk8sTritonProviderAutoscalerOutput) ToMk8sTritonProviderAutoscalerPtrOutput() Mk8sTritonProviderAutoscalerPtrOutput {
	return o.ToMk8sTritonProviderAutoscalerPtrOutputWithContext(context.Background())
}

func (o Mk8sTritonProviderAutoscalerOutput) ToMk8sTritonProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sTritonProviderAutoscaler) *Mk8sTritonProviderAutoscaler {
		return &v
	}).(Mk8sTritonProviderAutoscalerPtrOutput)
}

func (o Mk8sTritonProviderAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderAutoscaler] {
	return pulumix.Output[Mk8sTritonProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderAutoscalerOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sTritonProviderAutoscaler) []string { return v.Expanders }).(pulumi.StringArrayOutput)
}

func (o Mk8sTritonProviderAutoscalerOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderAutoscaler) *string { return v.UnneededTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderAutoscalerOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderAutoscaler) *string { return v.UnreadyTime }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderAutoscalerOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderAutoscaler) *float64 { return v.UtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type Mk8sTritonProviderAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProviderAutoscaler)(nil)).Elem()
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) ToMk8sTritonProviderAutoscalerPtrOutput() Mk8sTritonProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) ToMk8sTritonProviderAutoscalerPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderAutoscalerPtrOutput {
	return o
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProviderAutoscaler] {
	return pulumix.Output[*Mk8sTritonProviderAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) Elem() Mk8sTritonProviderAutoscalerOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderAutoscaler) Mk8sTritonProviderAutoscaler {
		if v != nil {
			return *v
		}
		var ret Mk8sTritonProviderAutoscaler
		return ret
	}).(Mk8sTritonProviderAutoscalerOutput)
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) Expanders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderAutoscaler) []string {
		if v == nil {
			return nil
		}
		return v.Expanders
	}).(pulumi.StringArrayOutput)
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) UnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnneededTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) UnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.UnreadyTime
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderAutoscalerPtrOutput) UtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderAutoscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type Mk8sTritonProviderConnection struct {
	Account              string  `pulumi:"account"`
	PrivateKeySecretLink string  `pulumi:"privateKeySecretLink"`
	Url                  string  `pulumi:"url"`
	User                 *string `pulumi:"user"`
}

// Mk8sTritonProviderConnectionInput is an input type that accepts Mk8sTritonProviderConnectionArgs and Mk8sTritonProviderConnectionOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderConnectionInput` via:
//
//	Mk8sTritonProviderConnectionArgs{...}
type Mk8sTritonProviderConnectionInput interface {
	pulumi.Input

	ToMk8sTritonProviderConnectionOutput() Mk8sTritonProviderConnectionOutput
	ToMk8sTritonProviderConnectionOutputWithContext(context.Context) Mk8sTritonProviderConnectionOutput
}

type Mk8sTritonProviderConnectionArgs struct {
	Account              pulumi.StringInput    `pulumi:"account"`
	PrivateKeySecretLink pulumi.StringInput    `pulumi:"privateKeySecretLink"`
	Url                  pulumi.StringInput    `pulumi:"url"`
	User                 pulumi.StringPtrInput `pulumi:"user"`
}

func (Mk8sTritonProviderConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderConnection)(nil)).Elem()
}

func (i Mk8sTritonProviderConnectionArgs) ToMk8sTritonProviderConnectionOutput() Mk8sTritonProviderConnectionOutput {
	return i.ToMk8sTritonProviderConnectionOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderConnectionArgs) ToMk8sTritonProviderConnectionOutputWithContext(ctx context.Context) Mk8sTritonProviderConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderConnectionOutput)
}

func (i Mk8sTritonProviderConnectionArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderConnection] {
	return pulumix.Output[Mk8sTritonProviderConnection]{
		OutputState: i.ToMk8sTritonProviderConnectionOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sTritonProviderConnectionArgs) ToMk8sTritonProviderConnectionPtrOutput() Mk8sTritonProviderConnectionPtrOutput {
	return i.ToMk8sTritonProviderConnectionPtrOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderConnectionArgs) ToMk8sTritonProviderConnectionPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderConnectionOutput).ToMk8sTritonProviderConnectionPtrOutputWithContext(ctx)
}

// Mk8sTritonProviderConnectionPtrInput is an input type that accepts Mk8sTritonProviderConnectionArgs, Mk8sTritonProviderConnectionPtr and Mk8sTritonProviderConnectionPtrOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderConnectionPtrInput` via:
//
//	        Mk8sTritonProviderConnectionArgs{...}
//
//	or:
//
//	        nil
type Mk8sTritonProviderConnectionPtrInput interface {
	pulumi.Input

	ToMk8sTritonProviderConnectionPtrOutput() Mk8sTritonProviderConnectionPtrOutput
	ToMk8sTritonProviderConnectionPtrOutputWithContext(context.Context) Mk8sTritonProviderConnectionPtrOutput
}

type mk8sTritonProviderConnectionPtrType Mk8sTritonProviderConnectionArgs

func Mk8sTritonProviderConnectionPtr(v *Mk8sTritonProviderConnectionArgs) Mk8sTritonProviderConnectionPtrInput {
	return (*mk8sTritonProviderConnectionPtrType)(v)
}

func (*mk8sTritonProviderConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProviderConnection)(nil)).Elem()
}

func (i *mk8sTritonProviderConnectionPtrType) ToMk8sTritonProviderConnectionPtrOutput() Mk8sTritonProviderConnectionPtrOutput {
	return i.ToMk8sTritonProviderConnectionPtrOutputWithContext(context.Background())
}

func (i *mk8sTritonProviderConnectionPtrType) ToMk8sTritonProviderConnectionPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderConnectionPtrOutput)
}

func (i *mk8sTritonProviderConnectionPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProviderConnection] {
	return pulumix.Output[*Mk8sTritonProviderConnection]{
		OutputState: i.ToMk8sTritonProviderConnectionPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sTritonProviderConnectionOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderConnection)(nil)).Elem()
}

func (o Mk8sTritonProviderConnectionOutput) ToMk8sTritonProviderConnectionOutput() Mk8sTritonProviderConnectionOutput {
	return o
}

func (o Mk8sTritonProviderConnectionOutput) ToMk8sTritonProviderConnectionOutputWithContext(ctx context.Context) Mk8sTritonProviderConnectionOutput {
	return o
}

func (o Mk8sTritonProviderConnectionOutput) ToMk8sTritonProviderConnectionPtrOutput() Mk8sTritonProviderConnectionPtrOutput {
	return o.ToMk8sTritonProviderConnectionPtrOutputWithContext(context.Background())
}

func (o Mk8sTritonProviderConnectionOutput) ToMk8sTritonProviderConnectionPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sTritonProviderConnection) *Mk8sTritonProviderConnection {
		return &v
	}).(Mk8sTritonProviderConnectionPtrOutput)
}

func (o Mk8sTritonProviderConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderConnection] {
	return pulumix.Output[Mk8sTritonProviderConnection]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderConnectionOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProviderConnection) string { return v.Account }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderConnectionOutput) PrivateKeySecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProviderConnection) string { return v.PrivateKeySecretLink }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderConnectionOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProviderConnection) string { return v.Url }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderConnectionOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderConnection) *string { return v.User }).(pulumi.StringPtrOutput)
}

type Mk8sTritonProviderConnectionPtrOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProviderConnection)(nil)).Elem()
}

func (o Mk8sTritonProviderConnectionPtrOutput) ToMk8sTritonProviderConnectionPtrOutput() Mk8sTritonProviderConnectionPtrOutput {
	return o
}

func (o Mk8sTritonProviderConnectionPtrOutput) ToMk8sTritonProviderConnectionPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderConnectionPtrOutput {
	return o
}

func (o Mk8sTritonProviderConnectionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProviderConnection] {
	return pulumix.Output[*Mk8sTritonProviderConnection]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderConnectionPtrOutput) Elem() Mk8sTritonProviderConnectionOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderConnection) Mk8sTritonProviderConnection {
		if v != nil {
			return *v
		}
		var ret Mk8sTritonProviderConnection
		return ret
	}).(Mk8sTritonProviderConnectionOutput)
}

func (o Mk8sTritonProviderConnectionPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderConnection) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderConnectionPtrOutput) PrivateKeySecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderConnection) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKeySecretLink
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderConnectionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderConnection) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderConnectionPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderConnection) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type Mk8sTritonProviderNetworking struct {
	PodNetwork     *string `pulumi:"podNetwork"`
	ServiceNetwork *string `pulumi:"serviceNetwork"`
}

// Mk8sTritonProviderNetworkingInput is an input type that accepts Mk8sTritonProviderNetworkingArgs and Mk8sTritonProviderNetworkingOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderNetworkingInput` via:
//
//	Mk8sTritonProviderNetworkingArgs{...}
type Mk8sTritonProviderNetworkingInput interface {
	pulumi.Input

	ToMk8sTritonProviderNetworkingOutput() Mk8sTritonProviderNetworkingOutput
	ToMk8sTritonProviderNetworkingOutputWithContext(context.Context) Mk8sTritonProviderNetworkingOutput
}

type Mk8sTritonProviderNetworkingArgs struct {
	PodNetwork     pulumi.StringPtrInput `pulumi:"podNetwork"`
	ServiceNetwork pulumi.StringPtrInput `pulumi:"serviceNetwork"`
}

func (Mk8sTritonProviderNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderNetworking)(nil)).Elem()
}

func (i Mk8sTritonProviderNetworkingArgs) ToMk8sTritonProviderNetworkingOutput() Mk8sTritonProviderNetworkingOutput {
	return i.ToMk8sTritonProviderNetworkingOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderNetworkingArgs) ToMk8sTritonProviderNetworkingOutputWithContext(ctx context.Context) Mk8sTritonProviderNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderNetworkingOutput)
}

func (i Mk8sTritonProviderNetworkingArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderNetworking] {
	return pulumix.Output[Mk8sTritonProviderNetworking]{
		OutputState: i.ToMk8sTritonProviderNetworkingOutputWithContext(ctx).OutputState,
	}
}

func (i Mk8sTritonProviderNetworkingArgs) ToMk8sTritonProviderNetworkingPtrOutput() Mk8sTritonProviderNetworkingPtrOutput {
	return i.ToMk8sTritonProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderNetworkingArgs) ToMk8sTritonProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderNetworkingOutput).ToMk8sTritonProviderNetworkingPtrOutputWithContext(ctx)
}

// Mk8sTritonProviderNetworkingPtrInput is an input type that accepts Mk8sTritonProviderNetworkingArgs, Mk8sTritonProviderNetworkingPtr and Mk8sTritonProviderNetworkingPtrOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderNetworkingPtrInput` via:
//
//	        Mk8sTritonProviderNetworkingArgs{...}
//
//	or:
//
//	        nil
type Mk8sTritonProviderNetworkingPtrInput interface {
	pulumi.Input

	ToMk8sTritonProviderNetworkingPtrOutput() Mk8sTritonProviderNetworkingPtrOutput
	ToMk8sTritonProviderNetworkingPtrOutputWithContext(context.Context) Mk8sTritonProviderNetworkingPtrOutput
}

type mk8sTritonProviderNetworkingPtrType Mk8sTritonProviderNetworkingArgs

func Mk8sTritonProviderNetworkingPtr(v *Mk8sTritonProviderNetworkingArgs) Mk8sTritonProviderNetworkingPtrInput {
	return (*mk8sTritonProviderNetworkingPtrType)(v)
}

func (*mk8sTritonProviderNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProviderNetworking)(nil)).Elem()
}

func (i *mk8sTritonProviderNetworkingPtrType) ToMk8sTritonProviderNetworkingPtrOutput() Mk8sTritonProviderNetworkingPtrOutput {
	return i.ToMk8sTritonProviderNetworkingPtrOutputWithContext(context.Background())
}

func (i *mk8sTritonProviderNetworkingPtrType) ToMk8sTritonProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderNetworkingPtrOutput)
}

func (i *mk8sTritonProviderNetworkingPtrType) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProviderNetworking] {
	return pulumix.Output[*Mk8sTritonProviderNetworking]{
		OutputState: i.ToMk8sTritonProviderNetworkingPtrOutputWithContext(ctx).OutputState,
	}
}

type Mk8sTritonProviderNetworkingOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderNetworking)(nil)).Elem()
}

func (o Mk8sTritonProviderNetworkingOutput) ToMk8sTritonProviderNetworkingOutput() Mk8sTritonProviderNetworkingOutput {
	return o
}

func (o Mk8sTritonProviderNetworkingOutput) ToMk8sTritonProviderNetworkingOutputWithContext(ctx context.Context) Mk8sTritonProviderNetworkingOutput {
	return o
}

func (o Mk8sTritonProviderNetworkingOutput) ToMk8sTritonProviderNetworkingPtrOutput() Mk8sTritonProviderNetworkingPtrOutput {
	return o.ToMk8sTritonProviderNetworkingPtrOutputWithContext(context.Background())
}

func (o Mk8sTritonProviderNetworkingOutput) ToMk8sTritonProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mk8sTritonProviderNetworking) *Mk8sTritonProviderNetworking {
		return &v
	}).(Mk8sTritonProviderNetworkingPtrOutput)
}

func (o Mk8sTritonProviderNetworkingOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderNetworking] {
	return pulumix.Output[Mk8sTritonProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderNetworkingOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNetworking) *string { return v.PodNetwork }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderNetworkingOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNetworking) *string { return v.ServiceNetwork }).(pulumi.StringPtrOutput)
}

type Mk8sTritonProviderNetworkingPtrOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mk8sTritonProviderNetworking)(nil)).Elem()
}

func (o Mk8sTritonProviderNetworkingPtrOutput) ToMk8sTritonProviderNetworkingPtrOutput() Mk8sTritonProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sTritonProviderNetworkingPtrOutput) ToMk8sTritonProviderNetworkingPtrOutputWithContext(ctx context.Context) Mk8sTritonProviderNetworkingPtrOutput {
	return o
}

func (o Mk8sTritonProviderNetworkingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Mk8sTritonProviderNetworking] {
	return pulumix.Output[*Mk8sTritonProviderNetworking]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderNetworkingPtrOutput) Elem() Mk8sTritonProviderNetworkingOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderNetworking) Mk8sTritonProviderNetworking {
		if v != nil {
			return *v
		}
		var ret Mk8sTritonProviderNetworking
		return ret
	}).(Mk8sTritonProviderNetworkingOutput)
}

func (o Mk8sTritonProviderNetworkingPtrOutput) PodNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.PodNetwork
	}).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderNetworkingPtrOutput) ServiceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mk8sTritonProviderNetworking) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNetwork
	}).(pulumi.StringPtrOutput)
}

type Mk8sTritonProviderNodePool struct {
	Labels            map[string]string                 `pulumi:"labels"`
	MaxSize           *int                              `pulumi:"maxSize"`
	MinSize           *int                              `pulumi:"minSize"`
	Name              string                            `pulumi:"name"`
	OverrideImageId   *string                           `pulumi:"overrideImageId"`
	PackageId         string                            `pulumi:"packageId"`
	PrivateNetworkIds []string                          `pulumi:"privateNetworkIds"`
	PublicNetworkId   *string                           `pulumi:"publicNetworkId"`
	Taints            []Mk8sTritonProviderNodePoolTaint `pulumi:"taints"`
	TritonTags        map[string]string                 `pulumi:"tritonTags"`
}

// Mk8sTritonProviderNodePoolInput is an input type that accepts Mk8sTritonProviderNodePoolArgs and Mk8sTritonProviderNodePoolOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderNodePoolInput` via:
//
//	Mk8sTritonProviderNodePoolArgs{...}
type Mk8sTritonProviderNodePoolInput interface {
	pulumi.Input

	ToMk8sTritonProviderNodePoolOutput() Mk8sTritonProviderNodePoolOutput
	ToMk8sTritonProviderNodePoolOutputWithContext(context.Context) Mk8sTritonProviderNodePoolOutput
}

type Mk8sTritonProviderNodePoolArgs struct {
	Labels            pulumi.StringMapInput                     `pulumi:"labels"`
	MaxSize           pulumi.IntPtrInput                        `pulumi:"maxSize"`
	MinSize           pulumi.IntPtrInput                        `pulumi:"minSize"`
	Name              pulumi.StringInput                        `pulumi:"name"`
	OverrideImageId   pulumi.StringPtrInput                     `pulumi:"overrideImageId"`
	PackageId         pulumi.StringInput                        `pulumi:"packageId"`
	PrivateNetworkIds pulumi.StringArrayInput                   `pulumi:"privateNetworkIds"`
	PublicNetworkId   pulumi.StringPtrInput                     `pulumi:"publicNetworkId"`
	Taints            Mk8sTritonProviderNodePoolTaintArrayInput `pulumi:"taints"`
	TritonTags        pulumi.StringMapInput                     `pulumi:"tritonTags"`
}

func (Mk8sTritonProviderNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderNodePool)(nil)).Elem()
}

func (i Mk8sTritonProviderNodePoolArgs) ToMk8sTritonProviderNodePoolOutput() Mk8sTritonProviderNodePoolOutput {
	return i.ToMk8sTritonProviderNodePoolOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderNodePoolArgs) ToMk8sTritonProviderNodePoolOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderNodePoolOutput)
}

func (i Mk8sTritonProviderNodePoolArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderNodePool] {
	return pulumix.Output[Mk8sTritonProviderNodePool]{
		OutputState: i.ToMk8sTritonProviderNodePoolOutputWithContext(ctx).OutputState,
	}
}

// Mk8sTritonProviderNodePoolArrayInput is an input type that accepts Mk8sTritonProviderNodePoolArray and Mk8sTritonProviderNodePoolArrayOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderNodePoolArrayInput` via:
//
//	Mk8sTritonProviderNodePoolArray{ Mk8sTritonProviderNodePoolArgs{...} }
type Mk8sTritonProviderNodePoolArrayInput interface {
	pulumi.Input

	ToMk8sTritonProviderNodePoolArrayOutput() Mk8sTritonProviderNodePoolArrayOutput
	ToMk8sTritonProviderNodePoolArrayOutputWithContext(context.Context) Mk8sTritonProviderNodePoolArrayOutput
}

type Mk8sTritonProviderNodePoolArray []Mk8sTritonProviderNodePoolInput

func (Mk8sTritonProviderNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sTritonProviderNodePool)(nil)).Elem()
}

func (i Mk8sTritonProviderNodePoolArray) ToMk8sTritonProviderNodePoolArrayOutput() Mk8sTritonProviderNodePoolArrayOutput {
	return i.ToMk8sTritonProviderNodePoolArrayOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderNodePoolArray) ToMk8sTritonProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderNodePoolArrayOutput)
}

func (i Mk8sTritonProviderNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sTritonProviderNodePool] {
	return pulumix.Output[[]Mk8sTritonProviderNodePool]{
		OutputState: i.ToMk8sTritonProviderNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sTritonProviderNodePoolOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderNodePool)(nil)).Elem()
}

func (o Mk8sTritonProviderNodePoolOutput) ToMk8sTritonProviderNodePoolOutput() Mk8sTritonProviderNodePoolOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolOutput) ToMk8sTritonProviderNodePoolOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderNodePool] {
	return pulumix.Output[Mk8sTritonProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) OverrideImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) *string { return v.OverrideImageId }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) PackageId() pulumi.StringOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) string { return v.PackageId }).(pulumi.StringOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) PrivateNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) []string { return v.PrivateNetworkIds }).(pulumi.StringArrayOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) PublicNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) *string { return v.PublicNetworkId }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) Taints() Mk8sTritonProviderNodePoolTaintArrayOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) []Mk8sTritonProviderNodePoolTaint { return v.Taints }).(Mk8sTritonProviderNodePoolTaintArrayOutput)
}

func (o Mk8sTritonProviderNodePoolOutput) TritonTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePool) map[string]string { return v.TritonTags }).(pulumi.StringMapOutput)
}

type Mk8sTritonProviderNodePoolArrayOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sTritonProviderNodePool)(nil)).Elem()
}

func (o Mk8sTritonProviderNodePoolArrayOutput) ToMk8sTritonProviderNodePoolArrayOutput() Mk8sTritonProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolArrayOutput) ToMk8sTritonProviderNodePoolArrayOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolArrayOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sTritonProviderNodePool] {
	return pulumix.Output[[]Mk8sTritonProviderNodePool]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderNodePoolArrayOutput) Index(i pulumi.IntInput) Mk8sTritonProviderNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sTritonProviderNodePool {
		return vs[0].([]Mk8sTritonProviderNodePool)[vs[1].(int)]
	}).(Mk8sTritonProviderNodePoolOutput)
}

type Mk8sTritonProviderNodePoolTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// Mk8sTritonProviderNodePoolTaintInput is an input type that accepts Mk8sTritonProviderNodePoolTaintArgs and Mk8sTritonProviderNodePoolTaintOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderNodePoolTaintInput` via:
//
//	Mk8sTritonProviderNodePoolTaintArgs{...}
type Mk8sTritonProviderNodePoolTaintInput interface {
	pulumi.Input

	ToMk8sTritonProviderNodePoolTaintOutput() Mk8sTritonProviderNodePoolTaintOutput
	ToMk8sTritonProviderNodePoolTaintOutputWithContext(context.Context) Mk8sTritonProviderNodePoolTaintOutput
}

type Mk8sTritonProviderNodePoolTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (Mk8sTritonProviderNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sTritonProviderNodePoolTaintArgs) ToMk8sTritonProviderNodePoolTaintOutput() Mk8sTritonProviderNodePoolTaintOutput {
	return i.ToMk8sTritonProviderNodePoolTaintOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderNodePoolTaintArgs) ToMk8sTritonProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderNodePoolTaintOutput)
}

func (i Mk8sTritonProviderNodePoolTaintArgs) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderNodePoolTaint] {
	return pulumix.Output[Mk8sTritonProviderNodePoolTaint]{
		OutputState: i.ToMk8sTritonProviderNodePoolTaintOutputWithContext(ctx).OutputState,
	}
}

// Mk8sTritonProviderNodePoolTaintArrayInput is an input type that accepts Mk8sTritonProviderNodePoolTaintArray and Mk8sTritonProviderNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `Mk8sTritonProviderNodePoolTaintArrayInput` via:
//
//	Mk8sTritonProviderNodePoolTaintArray{ Mk8sTritonProviderNodePoolTaintArgs{...} }
type Mk8sTritonProviderNodePoolTaintArrayInput interface {
	pulumi.Input

	ToMk8sTritonProviderNodePoolTaintArrayOutput() Mk8sTritonProviderNodePoolTaintArrayOutput
	ToMk8sTritonProviderNodePoolTaintArrayOutputWithContext(context.Context) Mk8sTritonProviderNodePoolTaintArrayOutput
}

type Mk8sTritonProviderNodePoolTaintArray []Mk8sTritonProviderNodePoolTaintInput

func (Mk8sTritonProviderNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sTritonProviderNodePoolTaint)(nil)).Elem()
}

func (i Mk8sTritonProviderNodePoolTaintArray) ToMk8sTritonProviderNodePoolTaintArrayOutput() Mk8sTritonProviderNodePoolTaintArrayOutput {
	return i.ToMk8sTritonProviderNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i Mk8sTritonProviderNodePoolTaintArray) ToMk8sTritonProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Mk8sTritonProviderNodePoolTaintArrayOutput)
}

func (i Mk8sTritonProviderNodePoolTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sTritonProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sTritonProviderNodePoolTaint]{
		OutputState: i.ToMk8sTritonProviderNodePoolTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type Mk8sTritonProviderNodePoolTaintOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mk8sTritonProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sTritonProviderNodePoolTaintOutput) ToMk8sTritonProviderNodePoolTaintOutput() Mk8sTritonProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolTaintOutput) ToMk8sTritonProviderNodePoolTaintOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolTaintOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolTaintOutput) ToOutput(ctx context.Context) pulumix.Output[Mk8sTritonProviderNodePoolTaint] {
	return pulumix.Output[Mk8sTritonProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderNodePoolTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePoolTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o Mk8sTritonProviderNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Mk8sTritonProviderNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Mk8sTritonProviderNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (Mk8sTritonProviderNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Mk8sTritonProviderNodePoolTaint)(nil)).Elem()
}

func (o Mk8sTritonProviderNodePoolTaintArrayOutput) ToMk8sTritonProviderNodePoolTaintArrayOutput() Mk8sTritonProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolTaintArrayOutput) ToMk8sTritonProviderNodePoolTaintArrayOutputWithContext(ctx context.Context) Mk8sTritonProviderNodePoolTaintArrayOutput {
	return o
}

func (o Mk8sTritonProviderNodePoolTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Mk8sTritonProviderNodePoolTaint] {
	return pulumix.Output[[]Mk8sTritonProviderNodePoolTaint]{
		OutputState: o.OutputState,
	}
}

func (o Mk8sTritonProviderNodePoolTaintArrayOutput) Index(i pulumi.IntInput) Mk8sTritonProviderNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Mk8sTritonProviderNodePoolTaint {
		return vs[0].([]Mk8sTritonProviderNodePoolTaint)[vs[1].(int)]
	}).(Mk8sTritonProviderNodePoolTaintOutput)
}

type OrgAuthConfig struct {
	DomainAutoMembers []string `pulumi:"domainAutoMembers"`
	SamlOnly          *bool    `pulumi:"samlOnly"`
}

// OrgAuthConfigInput is an input type that accepts OrgAuthConfigArgs and OrgAuthConfigOutput values.
// You can construct a concrete instance of `OrgAuthConfigInput` via:
//
//	OrgAuthConfigArgs{...}
type OrgAuthConfigInput interface {
	pulumi.Input

	ToOrgAuthConfigOutput() OrgAuthConfigOutput
	ToOrgAuthConfigOutputWithContext(context.Context) OrgAuthConfigOutput
}

type OrgAuthConfigArgs struct {
	DomainAutoMembers pulumi.StringArrayInput `pulumi:"domainAutoMembers"`
	SamlOnly          pulumi.BoolPtrInput     `pulumi:"samlOnly"`
}

func (OrgAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgAuthConfig)(nil)).Elem()
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigOutput() OrgAuthConfigOutput {
	return i.ToOrgAuthConfigOutputWithContext(context.Background())
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigOutputWithContext(ctx context.Context) OrgAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAuthConfigOutput)
}

func (i OrgAuthConfigArgs) ToOutput(ctx context.Context) pulumix.Output[OrgAuthConfig] {
	return pulumix.Output[OrgAuthConfig]{
		OutputState: i.ToOrgAuthConfigOutputWithContext(ctx).OutputState,
	}
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return i.ToOrgAuthConfigPtrOutputWithContext(context.Background())
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAuthConfigOutput).ToOrgAuthConfigPtrOutputWithContext(ctx)
}

// OrgAuthConfigPtrInput is an input type that accepts OrgAuthConfigArgs, OrgAuthConfigPtr and OrgAuthConfigPtrOutput values.
// You can construct a concrete instance of `OrgAuthConfigPtrInput` via:
//
//	        OrgAuthConfigArgs{...}
//
//	or:
//
//	        nil
type OrgAuthConfigPtrInput interface {
	pulumi.Input

	ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput
	ToOrgAuthConfigPtrOutputWithContext(context.Context) OrgAuthConfigPtrOutput
}

type orgAuthConfigPtrType OrgAuthConfigArgs

func OrgAuthConfigPtr(v *OrgAuthConfigArgs) OrgAuthConfigPtrInput {
	return (*orgAuthConfigPtrType)(v)
}

func (*orgAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgAuthConfig)(nil)).Elem()
}

func (i *orgAuthConfigPtrType) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return i.ToOrgAuthConfigPtrOutputWithContext(context.Background())
}

func (i *orgAuthConfigPtrType) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAuthConfigPtrOutput)
}

func (i *orgAuthConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgAuthConfig] {
	return pulumix.Output[*OrgAuthConfig]{
		OutputState: i.ToOrgAuthConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgAuthConfigOutput struct{ *pulumi.OutputState }

func (OrgAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgAuthConfig)(nil)).Elem()
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigOutput() OrgAuthConfigOutput {
	return o
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigOutputWithContext(ctx context.Context) OrgAuthConfigOutput {
	return o
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return o.ToOrgAuthConfigPtrOutputWithContext(context.Background())
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgAuthConfig) *OrgAuthConfig {
		return &v
	}).(OrgAuthConfigPtrOutput)
}

func (o OrgAuthConfigOutput) ToOutput(ctx context.Context) pulumix.Output[OrgAuthConfig] {
	return pulumix.Output[OrgAuthConfig]{
		OutputState: o.OutputState,
	}
}

func (o OrgAuthConfigOutput) DomainAutoMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrgAuthConfig) []string { return v.DomainAutoMembers }).(pulumi.StringArrayOutput)
}

func (o OrgAuthConfigOutput) SamlOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgAuthConfig) *bool { return v.SamlOnly }).(pulumi.BoolPtrOutput)
}

type OrgAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (OrgAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgAuthConfig)(nil)).Elem()
}

func (o OrgAuthConfigPtrOutput) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return o
}

func (o OrgAuthConfigPtrOutput) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return o
}

func (o OrgAuthConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgAuthConfig] {
	return pulumix.Output[*OrgAuthConfig]{
		OutputState: o.OutputState,
	}
}

func (o OrgAuthConfigPtrOutput) Elem() OrgAuthConfigOutput {
	return o.ApplyT(func(v *OrgAuthConfig) OrgAuthConfig {
		if v != nil {
			return *v
		}
		var ret OrgAuthConfig
		return ret
	}).(OrgAuthConfigOutput)
}

func (o OrgAuthConfigPtrOutput) DomainAutoMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrgAuthConfig) []string {
		if v == nil {
			return nil
		}
		return v.DomainAutoMembers
	}).(pulumi.StringArrayOutput)
}

func (o OrgAuthConfigPtrOutput) SamlOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgAuthConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SamlOnly
	}).(pulumi.BoolPtrOutput)
}

type OrgLoggingCloudWatchLogging struct {
	Credentials   string            `pulumi:"credentials"`
	ExtractFields map[string]string `pulumi:"extractFields"`
	GroupName     string            `pulumi:"groupName"`
	Region        string            `pulumi:"region"`
	RetentionDays *int              `pulumi:"retentionDays"`
	StreamName    string            `pulumi:"streamName"`
}

// OrgLoggingCloudWatchLoggingInput is an input type that accepts OrgLoggingCloudWatchLoggingArgs and OrgLoggingCloudWatchLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingCloudWatchLoggingInput` via:
//
//	OrgLoggingCloudWatchLoggingArgs{...}
type OrgLoggingCloudWatchLoggingInput interface {
	pulumi.Input

	ToOrgLoggingCloudWatchLoggingOutput() OrgLoggingCloudWatchLoggingOutput
	ToOrgLoggingCloudWatchLoggingOutputWithContext(context.Context) OrgLoggingCloudWatchLoggingOutput
}

type OrgLoggingCloudWatchLoggingArgs struct {
	Credentials   pulumi.StringInput    `pulumi:"credentials"`
	ExtractFields pulumi.StringMapInput `pulumi:"extractFields"`
	GroupName     pulumi.StringInput    `pulumi:"groupName"`
	Region        pulumi.StringInput    `pulumi:"region"`
	RetentionDays pulumi.IntPtrInput    `pulumi:"retentionDays"`
	StreamName    pulumi.StringInput    `pulumi:"streamName"`
}

func (OrgLoggingCloudWatchLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (i OrgLoggingCloudWatchLoggingArgs) ToOrgLoggingCloudWatchLoggingOutput() OrgLoggingCloudWatchLoggingOutput {
	return i.ToOrgLoggingCloudWatchLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingCloudWatchLoggingArgs) ToOrgLoggingCloudWatchLoggingOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCloudWatchLoggingOutput)
}

func (i OrgLoggingCloudWatchLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCloudWatchLogging] {
	return pulumix.Output[OrgLoggingCloudWatchLogging]{
		OutputState: i.ToOrgLoggingCloudWatchLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingCloudWatchLoggingArrayInput is an input type that accepts OrgLoggingCloudWatchLoggingArray and OrgLoggingCloudWatchLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingCloudWatchLoggingArrayInput` via:
//
//	OrgLoggingCloudWatchLoggingArray{ OrgLoggingCloudWatchLoggingArgs{...} }
type OrgLoggingCloudWatchLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingCloudWatchLoggingArrayOutput() OrgLoggingCloudWatchLoggingArrayOutput
	ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(context.Context) OrgLoggingCloudWatchLoggingArrayOutput
}

type OrgLoggingCloudWatchLoggingArray []OrgLoggingCloudWatchLoggingInput

func (OrgLoggingCloudWatchLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (i OrgLoggingCloudWatchLoggingArray) ToOrgLoggingCloudWatchLoggingArrayOutput() OrgLoggingCloudWatchLoggingArrayOutput {
	return i.ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingCloudWatchLoggingArray) ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCloudWatchLoggingArrayOutput)
}

func (i OrgLoggingCloudWatchLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCloudWatchLogging] {
	return pulumix.Output[[]OrgLoggingCloudWatchLogging]{
		OutputState: i.ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingCloudWatchLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingCloudWatchLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (o OrgLoggingCloudWatchLoggingOutput) ToOrgLoggingCloudWatchLoggingOutput() OrgLoggingCloudWatchLoggingOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingOutput) ToOrgLoggingCloudWatchLoggingOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCloudWatchLogging] {
	return pulumix.Output[OrgLoggingCloudWatchLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCloudWatchLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) ExtractFields() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) map[string]string { return v.ExtractFields }).(pulumi.StringMapOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.Region }).(pulumi.StringOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) *int { return v.RetentionDays }).(pulumi.IntPtrOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.StreamName }).(pulumi.StringOutput)
}

type OrgLoggingCloudWatchLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingCloudWatchLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) ToOrgLoggingCloudWatchLoggingArrayOutput() OrgLoggingCloudWatchLoggingArrayOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingArrayOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCloudWatchLogging] {
	return pulumix.Output[[]OrgLoggingCloudWatchLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingCloudWatchLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingCloudWatchLogging {
		return vs[0].([]OrgLoggingCloudWatchLogging)[vs[1].(int)]
	}).(OrgLoggingCloudWatchLoggingOutput)
}

type OrgLoggingCoralogixLogging struct {
	App         string `pulumi:"app"`
	Cluster     string `pulumi:"cluster"`
	Credentials string `pulumi:"credentials"`
	Subsystem   string `pulumi:"subsystem"`
}

// OrgLoggingCoralogixLoggingInput is an input type that accepts OrgLoggingCoralogixLoggingArgs and OrgLoggingCoralogixLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingCoralogixLoggingInput` via:
//
//	OrgLoggingCoralogixLoggingArgs{...}
type OrgLoggingCoralogixLoggingInput interface {
	pulumi.Input

	ToOrgLoggingCoralogixLoggingOutput() OrgLoggingCoralogixLoggingOutput
	ToOrgLoggingCoralogixLoggingOutputWithContext(context.Context) OrgLoggingCoralogixLoggingOutput
}

type OrgLoggingCoralogixLoggingArgs struct {
	App         pulumi.StringInput `pulumi:"app"`
	Cluster     pulumi.StringInput `pulumi:"cluster"`
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Subsystem   pulumi.StringInput `pulumi:"subsystem"`
}

func (OrgLoggingCoralogixLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (i OrgLoggingCoralogixLoggingArgs) ToOrgLoggingCoralogixLoggingOutput() OrgLoggingCoralogixLoggingOutput {
	return i.ToOrgLoggingCoralogixLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingCoralogixLoggingArgs) ToOrgLoggingCoralogixLoggingOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCoralogixLoggingOutput)
}

func (i OrgLoggingCoralogixLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCoralogixLogging] {
	return pulumix.Output[OrgLoggingCoralogixLogging]{
		OutputState: i.ToOrgLoggingCoralogixLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingCoralogixLoggingArrayInput is an input type that accepts OrgLoggingCoralogixLoggingArray and OrgLoggingCoralogixLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingCoralogixLoggingArrayInput` via:
//
//	OrgLoggingCoralogixLoggingArray{ OrgLoggingCoralogixLoggingArgs{...} }
type OrgLoggingCoralogixLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingCoralogixLoggingArrayOutput() OrgLoggingCoralogixLoggingArrayOutput
	ToOrgLoggingCoralogixLoggingArrayOutputWithContext(context.Context) OrgLoggingCoralogixLoggingArrayOutput
}

type OrgLoggingCoralogixLoggingArray []OrgLoggingCoralogixLoggingInput

func (OrgLoggingCoralogixLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (i OrgLoggingCoralogixLoggingArray) ToOrgLoggingCoralogixLoggingArrayOutput() OrgLoggingCoralogixLoggingArrayOutput {
	return i.ToOrgLoggingCoralogixLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingCoralogixLoggingArray) ToOrgLoggingCoralogixLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCoralogixLoggingArrayOutput)
}

func (i OrgLoggingCoralogixLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCoralogixLogging] {
	return pulumix.Output[[]OrgLoggingCoralogixLogging]{
		OutputState: i.ToOrgLoggingCoralogixLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingCoralogixLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingCoralogixLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (o OrgLoggingCoralogixLoggingOutput) ToOrgLoggingCoralogixLoggingOutput() OrgLoggingCoralogixLoggingOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingOutput) ToOrgLoggingCoralogixLoggingOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCoralogixLogging] {
	return pulumix.Output[OrgLoggingCoralogixLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCoralogixLoggingOutput) App() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.App }).(pulumi.StringOutput)
}

func (o OrgLoggingCoralogixLoggingOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.Cluster }).(pulumi.StringOutput)
}

func (o OrgLoggingCoralogixLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingCoralogixLoggingOutput) Subsystem() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.Subsystem }).(pulumi.StringOutput)
}

type OrgLoggingCoralogixLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingCoralogixLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (o OrgLoggingCoralogixLoggingArrayOutput) ToOrgLoggingCoralogixLoggingArrayOutput() OrgLoggingCoralogixLoggingArrayOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingArrayOutput) ToOrgLoggingCoralogixLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingArrayOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCoralogixLogging] {
	return pulumix.Output[[]OrgLoggingCoralogixLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCoralogixLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingCoralogixLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingCoralogixLogging {
		return vs[0].([]OrgLoggingCoralogixLogging)[vs[1].(int)]
	}).(OrgLoggingCoralogixLoggingOutput)
}

type OrgLoggingDatadogLogging struct {
	Credentials string `pulumi:"credentials"`
	Host        string `pulumi:"host"`
}

// OrgLoggingDatadogLoggingInput is an input type that accepts OrgLoggingDatadogLoggingArgs and OrgLoggingDatadogLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingDatadogLoggingInput` via:
//
//	OrgLoggingDatadogLoggingArgs{...}
type OrgLoggingDatadogLoggingInput interface {
	pulumi.Input

	ToOrgLoggingDatadogLoggingOutput() OrgLoggingDatadogLoggingOutput
	ToOrgLoggingDatadogLoggingOutputWithContext(context.Context) OrgLoggingDatadogLoggingOutput
}

type OrgLoggingDatadogLoggingArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Host        pulumi.StringInput `pulumi:"host"`
}

func (OrgLoggingDatadogLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingDatadogLogging)(nil)).Elem()
}

func (i OrgLoggingDatadogLoggingArgs) ToOrgLoggingDatadogLoggingOutput() OrgLoggingDatadogLoggingOutput {
	return i.ToOrgLoggingDatadogLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingDatadogLoggingArgs) ToOrgLoggingDatadogLoggingOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingDatadogLoggingOutput)
}

func (i OrgLoggingDatadogLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingDatadogLogging] {
	return pulumix.Output[OrgLoggingDatadogLogging]{
		OutputState: i.ToOrgLoggingDatadogLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingDatadogLoggingArrayInput is an input type that accepts OrgLoggingDatadogLoggingArray and OrgLoggingDatadogLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingDatadogLoggingArrayInput` via:
//
//	OrgLoggingDatadogLoggingArray{ OrgLoggingDatadogLoggingArgs{...} }
type OrgLoggingDatadogLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingDatadogLoggingArrayOutput() OrgLoggingDatadogLoggingArrayOutput
	ToOrgLoggingDatadogLoggingArrayOutputWithContext(context.Context) OrgLoggingDatadogLoggingArrayOutput
}

type OrgLoggingDatadogLoggingArray []OrgLoggingDatadogLoggingInput

func (OrgLoggingDatadogLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingDatadogLogging)(nil)).Elem()
}

func (i OrgLoggingDatadogLoggingArray) ToOrgLoggingDatadogLoggingArrayOutput() OrgLoggingDatadogLoggingArrayOutput {
	return i.ToOrgLoggingDatadogLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingDatadogLoggingArray) ToOrgLoggingDatadogLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingDatadogLoggingArrayOutput)
}

func (i OrgLoggingDatadogLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingDatadogLogging] {
	return pulumix.Output[[]OrgLoggingDatadogLogging]{
		OutputState: i.ToOrgLoggingDatadogLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingDatadogLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingDatadogLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingDatadogLogging)(nil)).Elem()
}

func (o OrgLoggingDatadogLoggingOutput) ToOrgLoggingDatadogLoggingOutput() OrgLoggingDatadogLoggingOutput {
	return o
}

func (o OrgLoggingDatadogLoggingOutput) ToOrgLoggingDatadogLoggingOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingOutput {
	return o
}

func (o OrgLoggingDatadogLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingDatadogLogging] {
	return pulumix.Output[OrgLoggingDatadogLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingDatadogLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingDatadogLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingDatadogLoggingOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingDatadogLogging) string { return v.Host }).(pulumi.StringOutput)
}

type OrgLoggingDatadogLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingDatadogLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingDatadogLogging)(nil)).Elem()
}

func (o OrgLoggingDatadogLoggingArrayOutput) ToOrgLoggingDatadogLoggingArrayOutput() OrgLoggingDatadogLoggingArrayOutput {
	return o
}

func (o OrgLoggingDatadogLoggingArrayOutput) ToOrgLoggingDatadogLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingArrayOutput {
	return o
}

func (o OrgLoggingDatadogLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingDatadogLogging] {
	return pulumix.Output[[]OrgLoggingDatadogLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingDatadogLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingDatadogLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingDatadogLogging {
		return vs[0].([]OrgLoggingDatadogLogging)[vs[1].(int)]
	}).(OrgLoggingDatadogLoggingOutput)
}

type OrgLoggingElasticLogging struct {
	Aws          *OrgLoggingElasticLoggingAws          `pulumi:"aws"`
	ElasticCloud *OrgLoggingElasticLoggingElasticCloud `pulumi:"elasticCloud"`
	Generic      *OrgLoggingElasticLoggingGeneric      `pulumi:"generic"`
}

// OrgLoggingElasticLoggingInput is an input type that accepts OrgLoggingElasticLoggingArgs and OrgLoggingElasticLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingInput` via:
//
//	OrgLoggingElasticLoggingArgs{...}
type OrgLoggingElasticLoggingInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingOutput() OrgLoggingElasticLoggingOutput
	ToOrgLoggingElasticLoggingOutputWithContext(context.Context) OrgLoggingElasticLoggingOutput
}

type OrgLoggingElasticLoggingArgs struct {
	Aws          OrgLoggingElasticLoggingAwsPtrInput          `pulumi:"aws"`
	ElasticCloud OrgLoggingElasticLoggingElasticCloudPtrInput `pulumi:"elasticCloud"`
	Generic      OrgLoggingElasticLoggingGenericPtrInput      `pulumi:"generic"`
}

func (OrgLoggingElasticLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLogging)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingArgs) ToOrgLoggingElasticLoggingOutput() OrgLoggingElasticLoggingOutput {
	return i.ToOrgLoggingElasticLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingArgs) ToOrgLoggingElasticLoggingOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingOutput)
}

func (i OrgLoggingElasticLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLogging] {
	return pulumix.Output[OrgLoggingElasticLogging]{
		OutputState: i.ToOrgLoggingElasticLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingElasticLoggingArrayInput is an input type that accepts OrgLoggingElasticLoggingArray and OrgLoggingElasticLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingArrayInput` via:
//
//	OrgLoggingElasticLoggingArray{ OrgLoggingElasticLoggingArgs{...} }
type OrgLoggingElasticLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingArrayOutput() OrgLoggingElasticLoggingArrayOutput
	ToOrgLoggingElasticLoggingArrayOutputWithContext(context.Context) OrgLoggingElasticLoggingArrayOutput
}

type OrgLoggingElasticLoggingArray []OrgLoggingElasticLoggingInput

func (OrgLoggingElasticLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingElasticLogging)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingArray) ToOrgLoggingElasticLoggingArrayOutput() OrgLoggingElasticLoggingArrayOutput {
	return i.ToOrgLoggingElasticLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingArray) ToOrgLoggingElasticLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingArrayOutput)
}

func (i OrgLoggingElasticLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingElasticLogging] {
	return pulumix.Output[[]OrgLoggingElasticLogging]{
		OutputState: i.ToOrgLoggingElasticLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLogging)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingOutput) ToOrgLoggingElasticLoggingOutput() OrgLoggingElasticLoggingOutput {
	return o
}

func (o OrgLoggingElasticLoggingOutput) ToOrgLoggingElasticLoggingOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingOutput {
	return o
}

func (o OrgLoggingElasticLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLogging] {
	return pulumix.Output[OrgLoggingElasticLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingOutput) Aws() OrgLoggingElasticLoggingAwsPtrOutput {
	return o.ApplyT(func(v OrgLoggingElasticLogging) *OrgLoggingElasticLoggingAws { return v.Aws }).(OrgLoggingElasticLoggingAwsPtrOutput)
}

func (o OrgLoggingElasticLoggingOutput) ElasticCloud() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o.ApplyT(func(v OrgLoggingElasticLogging) *OrgLoggingElasticLoggingElasticCloud { return v.ElasticCloud }).(OrgLoggingElasticLoggingElasticCloudPtrOutput)
}

func (o OrgLoggingElasticLoggingOutput) Generic() OrgLoggingElasticLoggingGenericPtrOutput {
	return o.ApplyT(func(v OrgLoggingElasticLogging) *OrgLoggingElasticLoggingGeneric { return v.Generic }).(OrgLoggingElasticLoggingGenericPtrOutput)
}

type OrgLoggingElasticLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingElasticLogging)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingArrayOutput) ToOrgLoggingElasticLoggingArrayOutput() OrgLoggingElasticLoggingArrayOutput {
	return o
}

func (o OrgLoggingElasticLoggingArrayOutput) ToOrgLoggingElasticLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingArrayOutput {
	return o
}

func (o OrgLoggingElasticLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingElasticLogging] {
	return pulumix.Output[[]OrgLoggingElasticLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingElasticLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingElasticLogging {
		return vs[0].([]OrgLoggingElasticLogging)[vs[1].(int)]
	}).(OrgLoggingElasticLoggingOutput)
}

type OrgLoggingElasticLoggingAws struct {
	Credentials string `pulumi:"credentials"`
	Host        string `pulumi:"host"`
	Index       string `pulumi:"index"`
	Port        int    `pulumi:"port"`
	Region      string `pulumi:"region"`
	Type        string `pulumi:"type"`
}

// OrgLoggingElasticLoggingAwsInput is an input type that accepts OrgLoggingElasticLoggingAwsArgs and OrgLoggingElasticLoggingAwsOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingAwsInput` via:
//
//	OrgLoggingElasticLoggingAwsArgs{...}
type OrgLoggingElasticLoggingAwsInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingAwsOutput() OrgLoggingElasticLoggingAwsOutput
	ToOrgLoggingElasticLoggingAwsOutputWithContext(context.Context) OrgLoggingElasticLoggingAwsOutput
}

type OrgLoggingElasticLoggingAwsArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Host        pulumi.StringInput `pulumi:"host"`
	Index       pulumi.StringInput `pulumi:"index"`
	Port        pulumi.IntInput    `pulumi:"port"`
	Region      pulumi.StringInput `pulumi:"region"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (OrgLoggingElasticLoggingAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsOutput() OrgLoggingElasticLoggingAwsOutput {
	return i.ToOrgLoggingElasticLoggingAwsOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingAwsOutput)
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingAws] {
	return pulumix.Output[OrgLoggingElasticLoggingAws]{
		OutputState: i.ToOrgLoggingElasticLoggingAwsOutputWithContext(ctx).OutputState,
	}
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return i.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingAwsOutput).ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx)
}

// OrgLoggingElasticLoggingAwsPtrInput is an input type that accepts OrgLoggingElasticLoggingAwsArgs, OrgLoggingElasticLoggingAwsPtr and OrgLoggingElasticLoggingAwsPtrOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingAwsPtrInput` via:
//
//	        OrgLoggingElasticLoggingAwsArgs{...}
//
//	or:
//
//	        nil
type OrgLoggingElasticLoggingAwsPtrInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput
	ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Context) OrgLoggingElasticLoggingAwsPtrOutput
}

type orgLoggingElasticLoggingAwsPtrType OrgLoggingElasticLoggingAwsArgs

func OrgLoggingElasticLoggingAwsPtr(v *OrgLoggingElasticLoggingAwsArgs) OrgLoggingElasticLoggingAwsPtrInput {
	return (*orgLoggingElasticLoggingAwsPtrType)(v)
}

func (*orgLoggingElasticLoggingAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (i *orgLoggingElasticLoggingAwsPtrType) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return i.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Background())
}

func (i *orgLoggingElasticLoggingAwsPtrType) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingAwsPtrOutput)
}

func (i *orgLoggingElasticLoggingAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingAws] {
	return pulumix.Output[*OrgLoggingElasticLoggingAws]{
		OutputState: i.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingAwsOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsOutput() OrgLoggingElasticLoggingAwsOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return o.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Background())
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLoggingElasticLoggingAws) *OrgLoggingElasticLoggingAws {
		return &v
	}).(OrgLoggingElasticLoggingAwsPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingAws] {
	return pulumix.Output[OrgLoggingElasticLoggingAws]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingAwsOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Host }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Index }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) int { return v.Port }).(pulumi.IntOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Region }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Type }).(pulumi.StringOutput)
}

type OrgLoggingElasticLoggingAwsPtrOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingAws] {
	return pulumix.Output[*OrgLoggingElasticLoggingAws]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Elem() OrgLoggingElasticLoggingAwsOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) OrgLoggingElasticLoggingAws {
		if v != nil {
			return *v
		}
		var ret OrgLoggingElasticLoggingAws
		return ret
	}).(OrgLoggingElasticLoggingAwsOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OrgLoggingElasticLoggingElasticCloud struct {
	CloudId     string `pulumi:"cloudId"`
	Credentials string `pulumi:"credentials"`
	Index       string `pulumi:"index"`
	Type        string `pulumi:"type"`
}

// OrgLoggingElasticLoggingElasticCloudInput is an input type that accepts OrgLoggingElasticLoggingElasticCloudArgs and OrgLoggingElasticLoggingElasticCloudOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingElasticCloudInput` via:
//
//	OrgLoggingElasticLoggingElasticCloudArgs{...}
type OrgLoggingElasticLoggingElasticCloudInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingElasticCloudOutput() OrgLoggingElasticLoggingElasticCloudOutput
	ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(context.Context) OrgLoggingElasticLoggingElasticCloudOutput
}

type OrgLoggingElasticLoggingElasticCloudArgs struct {
	CloudId     pulumi.StringInput `pulumi:"cloudId"`
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Index       pulumi.StringInput `pulumi:"index"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (OrgLoggingElasticLoggingElasticCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudOutput() OrgLoggingElasticLoggingElasticCloudOutput {
	return i.ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingElasticCloudOutput)
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[OrgLoggingElasticLoggingElasticCloud]{
		OutputState: i.ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(ctx).OutputState,
	}
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return i.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingElasticCloudOutput).ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx)
}

// OrgLoggingElasticLoggingElasticCloudPtrInput is an input type that accepts OrgLoggingElasticLoggingElasticCloudArgs, OrgLoggingElasticLoggingElasticCloudPtr and OrgLoggingElasticLoggingElasticCloudPtrOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingElasticCloudPtrInput` via:
//
//	        OrgLoggingElasticLoggingElasticCloudArgs{...}
//
//	or:
//
//	        nil
type OrgLoggingElasticLoggingElasticCloudPtrInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput
	ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput
}

type orgLoggingElasticLoggingElasticCloudPtrType OrgLoggingElasticLoggingElasticCloudArgs

func OrgLoggingElasticLoggingElasticCloudPtr(v *OrgLoggingElasticLoggingElasticCloudArgs) OrgLoggingElasticLoggingElasticCloudPtrInput {
	return (*orgLoggingElasticLoggingElasticCloudPtrType)(v)
}

func (*orgLoggingElasticLoggingElasticCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (i *orgLoggingElasticLoggingElasticCloudPtrType) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return i.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Background())
}

func (i *orgLoggingElasticLoggingElasticCloudPtrType) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingElasticCloudPtrOutput)
}

func (i *orgLoggingElasticLoggingElasticCloudPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[*OrgLoggingElasticLoggingElasticCloud]{
		OutputState: i.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingElasticCloudOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingElasticCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudOutput() OrgLoggingElasticLoggingElasticCloudOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Background())
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLoggingElasticLoggingElasticCloud) *OrgLoggingElasticLoggingElasticCloud {
		return &v
	}).(OrgLoggingElasticLoggingElasticCloudPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[OrgLoggingElasticLoggingElasticCloud]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.CloudId }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.Index }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.Type }).(pulumi.StringOutput)
}

type OrgLoggingElasticLoggingElasticCloudPtrOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingElasticCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[*OrgLoggingElasticLoggingElasticCloud]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Elem() OrgLoggingElasticLoggingElasticCloudOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) OrgLoggingElasticLoggingElasticCloud {
		if v != nil {
			return *v
		}
		var ret OrgLoggingElasticLoggingElasticCloud
		return ret
	}).(OrgLoggingElasticLoggingElasticCloudOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.CloudId
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OrgLoggingElasticLoggingGeneric struct {
	Credentials string `pulumi:"credentials"`
	Host        string `pulumi:"host"`
	Index       string `pulumi:"index"`
	Path        string `pulumi:"path"`
	Port        int    `pulumi:"port"`
	Type        string `pulumi:"type"`
}

// OrgLoggingElasticLoggingGenericInput is an input type that accepts OrgLoggingElasticLoggingGenericArgs and OrgLoggingElasticLoggingGenericOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingGenericInput` via:
//
//	OrgLoggingElasticLoggingGenericArgs{...}
type OrgLoggingElasticLoggingGenericInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingGenericOutput() OrgLoggingElasticLoggingGenericOutput
	ToOrgLoggingElasticLoggingGenericOutputWithContext(context.Context) OrgLoggingElasticLoggingGenericOutput
}

type OrgLoggingElasticLoggingGenericArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Host        pulumi.StringInput `pulumi:"host"`
	Index       pulumi.StringInput `pulumi:"index"`
	Path        pulumi.StringInput `pulumi:"path"`
	Port        pulumi.IntInput    `pulumi:"port"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (OrgLoggingElasticLoggingGenericArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericOutput() OrgLoggingElasticLoggingGenericOutput {
	return i.ToOrgLoggingElasticLoggingGenericOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingGenericOutput)
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[OrgLoggingElasticLoggingGeneric]{
		OutputState: i.ToOrgLoggingElasticLoggingGenericOutputWithContext(ctx).OutputState,
	}
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return i.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingGenericOutput).ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx)
}

// OrgLoggingElasticLoggingGenericPtrInput is an input type that accepts OrgLoggingElasticLoggingGenericArgs, OrgLoggingElasticLoggingGenericPtr and OrgLoggingElasticLoggingGenericPtrOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingGenericPtrInput` via:
//
//	        OrgLoggingElasticLoggingGenericArgs{...}
//
//	or:
//
//	        nil
type OrgLoggingElasticLoggingGenericPtrInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput
	ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Context) OrgLoggingElasticLoggingGenericPtrOutput
}

type orgLoggingElasticLoggingGenericPtrType OrgLoggingElasticLoggingGenericArgs

func OrgLoggingElasticLoggingGenericPtr(v *OrgLoggingElasticLoggingGenericArgs) OrgLoggingElasticLoggingGenericPtrInput {
	return (*orgLoggingElasticLoggingGenericPtrType)(v)
}

func (*orgLoggingElasticLoggingGenericPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (i *orgLoggingElasticLoggingGenericPtrType) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return i.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Background())
}

func (i *orgLoggingElasticLoggingGenericPtrType) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingGenericPtrOutput)
}

func (i *orgLoggingElasticLoggingGenericPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[*OrgLoggingElasticLoggingGeneric]{
		OutputState: i.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingGenericOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingGenericOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericOutput() OrgLoggingElasticLoggingGenericOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return o.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Background())
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLoggingElasticLoggingGeneric) *OrgLoggingElasticLoggingGeneric {
		return &v
	}).(OrgLoggingElasticLoggingGenericPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[OrgLoggingElasticLoggingGeneric]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingGenericOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Host }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Index }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Path }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) int { return v.Port }).(pulumi.IntOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Type }).(pulumi.StringOutput)
}

type OrgLoggingElasticLoggingGenericPtrOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingGenericPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[*OrgLoggingElasticLoggingGeneric]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Elem() OrgLoggingElasticLoggingGenericOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) OrgLoggingElasticLoggingGeneric {
		if v != nil {
			return *v
		}
		var ret OrgLoggingElasticLoggingGeneric
		return ret
	}).(OrgLoggingElasticLoggingGenericOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OrgLoggingFluentdLogging struct {
	Host string `pulumi:"host"`
	Port *int   `pulumi:"port"`
}

// OrgLoggingFluentdLoggingInput is an input type that accepts OrgLoggingFluentdLoggingArgs and OrgLoggingFluentdLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingFluentdLoggingInput` via:
//
//	OrgLoggingFluentdLoggingArgs{...}
type OrgLoggingFluentdLoggingInput interface {
	pulumi.Input

	ToOrgLoggingFluentdLoggingOutput() OrgLoggingFluentdLoggingOutput
	ToOrgLoggingFluentdLoggingOutputWithContext(context.Context) OrgLoggingFluentdLoggingOutput
}

type OrgLoggingFluentdLoggingArgs struct {
	Host pulumi.StringInput `pulumi:"host"`
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (OrgLoggingFluentdLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingFluentdLogging)(nil)).Elem()
}

func (i OrgLoggingFluentdLoggingArgs) ToOrgLoggingFluentdLoggingOutput() OrgLoggingFluentdLoggingOutput {
	return i.ToOrgLoggingFluentdLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingFluentdLoggingArgs) ToOrgLoggingFluentdLoggingOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingFluentdLoggingOutput)
}

func (i OrgLoggingFluentdLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingFluentdLogging] {
	return pulumix.Output[OrgLoggingFluentdLogging]{
		OutputState: i.ToOrgLoggingFluentdLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingFluentdLoggingArrayInput is an input type that accepts OrgLoggingFluentdLoggingArray and OrgLoggingFluentdLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingFluentdLoggingArrayInput` via:
//
//	OrgLoggingFluentdLoggingArray{ OrgLoggingFluentdLoggingArgs{...} }
type OrgLoggingFluentdLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingFluentdLoggingArrayOutput() OrgLoggingFluentdLoggingArrayOutput
	ToOrgLoggingFluentdLoggingArrayOutputWithContext(context.Context) OrgLoggingFluentdLoggingArrayOutput
}

type OrgLoggingFluentdLoggingArray []OrgLoggingFluentdLoggingInput

func (OrgLoggingFluentdLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingFluentdLogging)(nil)).Elem()
}

func (i OrgLoggingFluentdLoggingArray) ToOrgLoggingFluentdLoggingArrayOutput() OrgLoggingFluentdLoggingArrayOutput {
	return i.ToOrgLoggingFluentdLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingFluentdLoggingArray) ToOrgLoggingFluentdLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingFluentdLoggingArrayOutput)
}

func (i OrgLoggingFluentdLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingFluentdLogging] {
	return pulumix.Output[[]OrgLoggingFluentdLogging]{
		OutputState: i.ToOrgLoggingFluentdLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingFluentdLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingFluentdLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingFluentdLogging)(nil)).Elem()
}

func (o OrgLoggingFluentdLoggingOutput) ToOrgLoggingFluentdLoggingOutput() OrgLoggingFluentdLoggingOutput {
	return o
}

func (o OrgLoggingFluentdLoggingOutput) ToOrgLoggingFluentdLoggingOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingOutput {
	return o
}

func (o OrgLoggingFluentdLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingFluentdLogging] {
	return pulumix.Output[OrgLoggingFluentdLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingFluentdLoggingOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingFluentdLogging) string { return v.Host }).(pulumi.StringOutput)
}

func (o OrgLoggingFluentdLoggingOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgLoggingFluentdLogging) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type OrgLoggingFluentdLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingFluentdLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingFluentdLogging)(nil)).Elem()
}

func (o OrgLoggingFluentdLoggingArrayOutput) ToOrgLoggingFluentdLoggingArrayOutput() OrgLoggingFluentdLoggingArrayOutput {
	return o
}

func (o OrgLoggingFluentdLoggingArrayOutput) ToOrgLoggingFluentdLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingArrayOutput {
	return o
}

func (o OrgLoggingFluentdLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingFluentdLogging] {
	return pulumix.Output[[]OrgLoggingFluentdLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingFluentdLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingFluentdLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingFluentdLogging {
		return vs[0].([]OrgLoggingFluentdLogging)[vs[1].(int)]
	}).(OrgLoggingFluentdLoggingOutput)
}

type OrgLoggingLogzioLogging struct {
	Credentials  string `pulumi:"credentials"`
	ListenerHost string `pulumi:"listenerHost"`
}

// OrgLoggingLogzioLoggingInput is an input type that accepts OrgLoggingLogzioLoggingArgs and OrgLoggingLogzioLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingLogzioLoggingInput` via:
//
//	OrgLoggingLogzioLoggingArgs{...}
type OrgLoggingLogzioLoggingInput interface {
	pulumi.Input

	ToOrgLoggingLogzioLoggingOutput() OrgLoggingLogzioLoggingOutput
	ToOrgLoggingLogzioLoggingOutputWithContext(context.Context) OrgLoggingLogzioLoggingOutput
}

type OrgLoggingLogzioLoggingArgs struct {
	Credentials  pulumi.StringInput `pulumi:"credentials"`
	ListenerHost pulumi.StringInput `pulumi:"listenerHost"`
}

func (OrgLoggingLogzioLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingLogzioLogging)(nil)).Elem()
}

func (i OrgLoggingLogzioLoggingArgs) ToOrgLoggingLogzioLoggingOutput() OrgLoggingLogzioLoggingOutput {
	return i.ToOrgLoggingLogzioLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingLogzioLoggingArgs) ToOrgLoggingLogzioLoggingOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingLogzioLoggingOutput)
}

func (i OrgLoggingLogzioLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingLogzioLogging] {
	return pulumix.Output[OrgLoggingLogzioLogging]{
		OutputState: i.ToOrgLoggingLogzioLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingLogzioLoggingArrayInput is an input type that accepts OrgLoggingLogzioLoggingArray and OrgLoggingLogzioLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingLogzioLoggingArrayInput` via:
//
//	OrgLoggingLogzioLoggingArray{ OrgLoggingLogzioLoggingArgs{...} }
type OrgLoggingLogzioLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingLogzioLoggingArrayOutput() OrgLoggingLogzioLoggingArrayOutput
	ToOrgLoggingLogzioLoggingArrayOutputWithContext(context.Context) OrgLoggingLogzioLoggingArrayOutput
}

type OrgLoggingLogzioLoggingArray []OrgLoggingLogzioLoggingInput

func (OrgLoggingLogzioLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingLogzioLogging)(nil)).Elem()
}

func (i OrgLoggingLogzioLoggingArray) ToOrgLoggingLogzioLoggingArrayOutput() OrgLoggingLogzioLoggingArrayOutput {
	return i.ToOrgLoggingLogzioLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingLogzioLoggingArray) ToOrgLoggingLogzioLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingLogzioLoggingArrayOutput)
}

func (i OrgLoggingLogzioLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingLogzioLogging] {
	return pulumix.Output[[]OrgLoggingLogzioLogging]{
		OutputState: i.ToOrgLoggingLogzioLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingLogzioLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingLogzioLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingLogzioLogging)(nil)).Elem()
}

func (o OrgLoggingLogzioLoggingOutput) ToOrgLoggingLogzioLoggingOutput() OrgLoggingLogzioLoggingOutput {
	return o
}

func (o OrgLoggingLogzioLoggingOutput) ToOrgLoggingLogzioLoggingOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingOutput {
	return o
}

func (o OrgLoggingLogzioLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingLogzioLogging] {
	return pulumix.Output[OrgLoggingLogzioLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingLogzioLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingLogzioLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingLogzioLoggingOutput) ListenerHost() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingLogzioLogging) string { return v.ListenerHost }).(pulumi.StringOutput)
}

type OrgLoggingLogzioLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingLogzioLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingLogzioLogging)(nil)).Elem()
}

func (o OrgLoggingLogzioLoggingArrayOutput) ToOrgLoggingLogzioLoggingArrayOutput() OrgLoggingLogzioLoggingArrayOutput {
	return o
}

func (o OrgLoggingLogzioLoggingArrayOutput) ToOrgLoggingLogzioLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingArrayOutput {
	return o
}

func (o OrgLoggingLogzioLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingLogzioLogging] {
	return pulumix.Output[[]OrgLoggingLogzioLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingLogzioLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingLogzioLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingLogzioLogging {
		return vs[0].([]OrgLoggingLogzioLogging)[vs[1].(int)]
	}).(OrgLoggingLogzioLoggingOutput)
}

type OrgLoggingS3Logging struct {
	Bucket      string  `pulumi:"bucket"`
	Credentials string  `pulumi:"credentials"`
	Prefix      *string `pulumi:"prefix"`
	Region      string  `pulumi:"region"`
}

// OrgLoggingS3LoggingInput is an input type that accepts OrgLoggingS3LoggingArgs and OrgLoggingS3LoggingOutput values.
// You can construct a concrete instance of `OrgLoggingS3LoggingInput` via:
//
//	OrgLoggingS3LoggingArgs{...}
type OrgLoggingS3LoggingInput interface {
	pulumi.Input

	ToOrgLoggingS3LoggingOutput() OrgLoggingS3LoggingOutput
	ToOrgLoggingS3LoggingOutputWithContext(context.Context) OrgLoggingS3LoggingOutput
}

type OrgLoggingS3LoggingArgs struct {
	Bucket      pulumi.StringInput    `pulumi:"bucket"`
	Credentials pulumi.StringInput    `pulumi:"credentials"`
	Prefix      pulumi.StringPtrInput `pulumi:"prefix"`
	Region      pulumi.StringInput    `pulumi:"region"`
}

func (OrgLoggingS3LoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingS3Logging)(nil)).Elem()
}

func (i OrgLoggingS3LoggingArgs) ToOrgLoggingS3LoggingOutput() OrgLoggingS3LoggingOutput {
	return i.ToOrgLoggingS3LoggingOutputWithContext(context.Background())
}

func (i OrgLoggingS3LoggingArgs) ToOrgLoggingS3LoggingOutputWithContext(ctx context.Context) OrgLoggingS3LoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingS3LoggingOutput)
}

func (i OrgLoggingS3LoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingS3Logging] {
	return pulumix.Output[OrgLoggingS3Logging]{
		OutputState: i.ToOrgLoggingS3LoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingS3LoggingArrayInput is an input type that accepts OrgLoggingS3LoggingArray and OrgLoggingS3LoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingS3LoggingArrayInput` via:
//
//	OrgLoggingS3LoggingArray{ OrgLoggingS3LoggingArgs{...} }
type OrgLoggingS3LoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingS3LoggingArrayOutput() OrgLoggingS3LoggingArrayOutput
	ToOrgLoggingS3LoggingArrayOutputWithContext(context.Context) OrgLoggingS3LoggingArrayOutput
}

type OrgLoggingS3LoggingArray []OrgLoggingS3LoggingInput

func (OrgLoggingS3LoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingS3Logging)(nil)).Elem()
}

func (i OrgLoggingS3LoggingArray) ToOrgLoggingS3LoggingArrayOutput() OrgLoggingS3LoggingArrayOutput {
	return i.ToOrgLoggingS3LoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingS3LoggingArray) ToOrgLoggingS3LoggingArrayOutputWithContext(ctx context.Context) OrgLoggingS3LoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingS3LoggingArrayOutput)
}

func (i OrgLoggingS3LoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingS3Logging] {
	return pulumix.Output[[]OrgLoggingS3Logging]{
		OutputState: i.ToOrgLoggingS3LoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingS3LoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingS3LoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingS3Logging)(nil)).Elem()
}

func (o OrgLoggingS3LoggingOutput) ToOrgLoggingS3LoggingOutput() OrgLoggingS3LoggingOutput {
	return o
}

func (o OrgLoggingS3LoggingOutput) ToOrgLoggingS3LoggingOutputWithContext(ctx context.Context) OrgLoggingS3LoggingOutput {
	return o
}

func (o OrgLoggingS3LoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingS3Logging] {
	return pulumix.Output[OrgLoggingS3Logging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingS3LoggingOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o OrgLoggingS3LoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingS3LoggingOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o OrgLoggingS3LoggingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) string { return v.Region }).(pulumi.StringOutput)
}

type OrgLoggingS3LoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingS3LoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingS3Logging)(nil)).Elem()
}

func (o OrgLoggingS3LoggingArrayOutput) ToOrgLoggingS3LoggingArrayOutput() OrgLoggingS3LoggingArrayOutput {
	return o
}

func (o OrgLoggingS3LoggingArrayOutput) ToOrgLoggingS3LoggingArrayOutputWithContext(ctx context.Context) OrgLoggingS3LoggingArrayOutput {
	return o
}

func (o OrgLoggingS3LoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingS3Logging] {
	return pulumix.Output[[]OrgLoggingS3Logging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingS3LoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingS3LoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingS3Logging {
		return vs[0].([]OrgLoggingS3Logging)[vs[1].(int)]
	}).(OrgLoggingS3LoggingOutput)
}

type OrgLoggingStackdriverLogging struct {
	Credentials string `pulumi:"credentials"`
	Location    string `pulumi:"location"`
}

// OrgLoggingStackdriverLoggingInput is an input type that accepts OrgLoggingStackdriverLoggingArgs and OrgLoggingStackdriverLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingStackdriverLoggingInput` via:
//
//	OrgLoggingStackdriverLoggingArgs{...}
type OrgLoggingStackdriverLoggingInput interface {
	pulumi.Input

	ToOrgLoggingStackdriverLoggingOutput() OrgLoggingStackdriverLoggingOutput
	ToOrgLoggingStackdriverLoggingOutputWithContext(context.Context) OrgLoggingStackdriverLoggingOutput
}

type OrgLoggingStackdriverLoggingArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Location    pulumi.StringInput `pulumi:"location"`
}

func (OrgLoggingStackdriverLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (i OrgLoggingStackdriverLoggingArgs) ToOrgLoggingStackdriverLoggingOutput() OrgLoggingStackdriverLoggingOutput {
	return i.ToOrgLoggingStackdriverLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingStackdriverLoggingArgs) ToOrgLoggingStackdriverLoggingOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingStackdriverLoggingOutput)
}

func (i OrgLoggingStackdriverLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingStackdriverLogging] {
	return pulumix.Output[OrgLoggingStackdriverLogging]{
		OutputState: i.ToOrgLoggingStackdriverLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingStackdriverLoggingArrayInput is an input type that accepts OrgLoggingStackdriverLoggingArray and OrgLoggingStackdriverLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingStackdriverLoggingArrayInput` via:
//
//	OrgLoggingStackdriverLoggingArray{ OrgLoggingStackdriverLoggingArgs{...} }
type OrgLoggingStackdriverLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingStackdriverLoggingArrayOutput() OrgLoggingStackdriverLoggingArrayOutput
	ToOrgLoggingStackdriverLoggingArrayOutputWithContext(context.Context) OrgLoggingStackdriverLoggingArrayOutput
}

type OrgLoggingStackdriverLoggingArray []OrgLoggingStackdriverLoggingInput

func (OrgLoggingStackdriverLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (i OrgLoggingStackdriverLoggingArray) ToOrgLoggingStackdriverLoggingArrayOutput() OrgLoggingStackdriverLoggingArrayOutput {
	return i.ToOrgLoggingStackdriverLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingStackdriverLoggingArray) ToOrgLoggingStackdriverLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingStackdriverLoggingArrayOutput)
}

func (i OrgLoggingStackdriverLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingStackdriverLogging] {
	return pulumix.Output[[]OrgLoggingStackdriverLogging]{
		OutputState: i.ToOrgLoggingStackdriverLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingStackdriverLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingStackdriverLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (o OrgLoggingStackdriverLoggingOutput) ToOrgLoggingStackdriverLoggingOutput() OrgLoggingStackdriverLoggingOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingOutput) ToOrgLoggingStackdriverLoggingOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingStackdriverLogging] {
	return pulumix.Output[OrgLoggingStackdriverLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingStackdriverLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingStackdriverLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingStackdriverLoggingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingStackdriverLogging) string { return v.Location }).(pulumi.StringOutput)
}

type OrgLoggingStackdriverLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingStackdriverLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (o OrgLoggingStackdriverLoggingArrayOutput) ToOrgLoggingStackdriverLoggingArrayOutput() OrgLoggingStackdriverLoggingArrayOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingArrayOutput) ToOrgLoggingStackdriverLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingArrayOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingStackdriverLogging] {
	return pulumix.Output[[]OrgLoggingStackdriverLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingStackdriverLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingStackdriverLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingStackdriverLogging {
		return vs[0].([]OrgLoggingStackdriverLogging)[vs[1].(int)]
	}).(OrgLoggingStackdriverLoggingOutput)
}

type OrgLoggingSyslogLogging struct {
	Format   *string `pulumi:"format"`
	Host     string  `pulumi:"host"`
	Mode     *string `pulumi:"mode"`
	Port     int     `pulumi:"port"`
	Severity *int    `pulumi:"severity"`
}

// OrgLoggingSyslogLoggingInput is an input type that accepts OrgLoggingSyslogLoggingArgs and OrgLoggingSyslogLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingSyslogLoggingInput` via:
//
//	OrgLoggingSyslogLoggingArgs{...}
type OrgLoggingSyslogLoggingInput interface {
	pulumi.Input

	ToOrgLoggingSyslogLoggingOutput() OrgLoggingSyslogLoggingOutput
	ToOrgLoggingSyslogLoggingOutputWithContext(context.Context) OrgLoggingSyslogLoggingOutput
}

type OrgLoggingSyslogLoggingArgs struct {
	Format   pulumi.StringPtrInput `pulumi:"format"`
	Host     pulumi.StringInput    `pulumi:"host"`
	Mode     pulumi.StringPtrInput `pulumi:"mode"`
	Port     pulumi.IntInput       `pulumi:"port"`
	Severity pulumi.IntPtrInput    `pulumi:"severity"`
}

func (OrgLoggingSyslogLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingSyslogLogging)(nil)).Elem()
}

func (i OrgLoggingSyslogLoggingArgs) ToOrgLoggingSyslogLoggingOutput() OrgLoggingSyslogLoggingOutput {
	return i.ToOrgLoggingSyslogLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingSyslogLoggingArgs) ToOrgLoggingSyslogLoggingOutputWithContext(ctx context.Context) OrgLoggingSyslogLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingSyslogLoggingOutput)
}

func (i OrgLoggingSyslogLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingSyslogLogging] {
	return pulumix.Output[OrgLoggingSyslogLogging]{
		OutputState: i.ToOrgLoggingSyslogLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingSyslogLoggingArrayInput is an input type that accepts OrgLoggingSyslogLoggingArray and OrgLoggingSyslogLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingSyslogLoggingArrayInput` via:
//
//	OrgLoggingSyslogLoggingArray{ OrgLoggingSyslogLoggingArgs{...} }
type OrgLoggingSyslogLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingSyslogLoggingArrayOutput() OrgLoggingSyslogLoggingArrayOutput
	ToOrgLoggingSyslogLoggingArrayOutputWithContext(context.Context) OrgLoggingSyslogLoggingArrayOutput
}

type OrgLoggingSyslogLoggingArray []OrgLoggingSyslogLoggingInput

func (OrgLoggingSyslogLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingSyslogLogging)(nil)).Elem()
}

func (i OrgLoggingSyslogLoggingArray) ToOrgLoggingSyslogLoggingArrayOutput() OrgLoggingSyslogLoggingArrayOutput {
	return i.ToOrgLoggingSyslogLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingSyslogLoggingArray) ToOrgLoggingSyslogLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingSyslogLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingSyslogLoggingArrayOutput)
}

func (i OrgLoggingSyslogLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingSyslogLogging] {
	return pulumix.Output[[]OrgLoggingSyslogLogging]{
		OutputState: i.ToOrgLoggingSyslogLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingSyslogLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingSyslogLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingSyslogLogging)(nil)).Elem()
}

func (o OrgLoggingSyslogLoggingOutput) ToOrgLoggingSyslogLoggingOutput() OrgLoggingSyslogLoggingOutput {
	return o
}

func (o OrgLoggingSyslogLoggingOutput) ToOrgLoggingSyslogLoggingOutputWithContext(ctx context.Context) OrgLoggingSyslogLoggingOutput {
	return o
}

func (o OrgLoggingSyslogLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingSyslogLogging] {
	return pulumix.Output[OrgLoggingSyslogLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingSyslogLoggingOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLoggingSyslogLogging) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o OrgLoggingSyslogLoggingOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingSyslogLogging) string { return v.Host }).(pulumi.StringOutput)
}

func (o OrgLoggingSyslogLoggingOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLoggingSyslogLogging) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o OrgLoggingSyslogLoggingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OrgLoggingSyslogLogging) int { return v.Port }).(pulumi.IntOutput)
}

func (o OrgLoggingSyslogLoggingOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgLoggingSyslogLogging) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

type OrgLoggingSyslogLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingSyslogLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingSyslogLogging)(nil)).Elem()
}

func (o OrgLoggingSyslogLoggingArrayOutput) ToOrgLoggingSyslogLoggingArrayOutput() OrgLoggingSyslogLoggingArrayOutput {
	return o
}

func (o OrgLoggingSyslogLoggingArrayOutput) ToOrgLoggingSyslogLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingSyslogLoggingArrayOutput {
	return o
}

func (o OrgLoggingSyslogLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingSyslogLogging] {
	return pulumix.Output[[]OrgLoggingSyslogLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingSyslogLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingSyslogLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingSyslogLogging {
		return vs[0].([]OrgLoggingSyslogLogging)[vs[1].(int)]
	}).(OrgLoggingSyslogLoggingOutput)
}

type OrgObservability struct {
	LogsRetentionDays    *int `pulumi:"logsRetentionDays"`
	MetricsRetentionDays *int `pulumi:"metricsRetentionDays"`
	TracesRetentionDays  *int `pulumi:"tracesRetentionDays"`
}

// OrgObservabilityInput is an input type that accepts OrgObservabilityArgs and OrgObservabilityOutput values.
// You can construct a concrete instance of `OrgObservabilityInput` via:
//
//	OrgObservabilityArgs{...}
type OrgObservabilityInput interface {
	pulumi.Input

	ToOrgObservabilityOutput() OrgObservabilityOutput
	ToOrgObservabilityOutputWithContext(context.Context) OrgObservabilityOutput
}

type OrgObservabilityArgs struct {
	LogsRetentionDays    pulumi.IntPtrInput `pulumi:"logsRetentionDays"`
	MetricsRetentionDays pulumi.IntPtrInput `pulumi:"metricsRetentionDays"`
	TracesRetentionDays  pulumi.IntPtrInput `pulumi:"tracesRetentionDays"`
}

func (OrgObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgObservability)(nil)).Elem()
}

func (i OrgObservabilityArgs) ToOrgObservabilityOutput() OrgObservabilityOutput {
	return i.ToOrgObservabilityOutputWithContext(context.Background())
}

func (i OrgObservabilityArgs) ToOrgObservabilityOutputWithContext(ctx context.Context) OrgObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgObservabilityOutput)
}

func (i OrgObservabilityArgs) ToOutput(ctx context.Context) pulumix.Output[OrgObservability] {
	return pulumix.Output[OrgObservability]{
		OutputState: i.ToOrgObservabilityOutputWithContext(ctx).OutputState,
	}
}

func (i OrgObservabilityArgs) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return i.ToOrgObservabilityPtrOutputWithContext(context.Background())
}

func (i OrgObservabilityArgs) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgObservabilityOutput).ToOrgObservabilityPtrOutputWithContext(ctx)
}

// OrgObservabilityPtrInput is an input type that accepts OrgObservabilityArgs, OrgObservabilityPtr and OrgObservabilityPtrOutput values.
// You can construct a concrete instance of `OrgObservabilityPtrInput` via:
//
//	        OrgObservabilityArgs{...}
//
//	or:
//
//	        nil
type OrgObservabilityPtrInput interface {
	pulumi.Input

	ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput
	ToOrgObservabilityPtrOutputWithContext(context.Context) OrgObservabilityPtrOutput
}

type orgObservabilityPtrType OrgObservabilityArgs

func OrgObservabilityPtr(v *OrgObservabilityArgs) OrgObservabilityPtrInput {
	return (*orgObservabilityPtrType)(v)
}

func (*orgObservabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgObservability)(nil)).Elem()
}

func (i *orgObservabilityPtrType) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return i.ToOrgObservabilityPtrOutputWithContext(context.Background())
}

func (i *orgObservabilityPtrType) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgObservabilityPtrOutput)
}

func (i *orgObservabilityPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgObservability] {
	return pulumix.Output[*OrgObservability]{
		OutputState: i.ToOrgObservabilityPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgObservabilityOutput struct{ *pulumi.OutputState }

func (OrgObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgObservability)(nil)).Elem()
}

func (o OrgObservabilityOutput) ToOrgObservabilityOutput() OrgObservabilityOutput {
	return o
}

func (o OrgObservabilityOutput) ToOrgObservabilityOutputWithContext(ctx context.Context) OrgObservabilityOutput {
	return o
}

func (o OrgObservabilityOutput) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return o.ToOrgObservabilityPtrOutputWithContext(context.Background())
}

func (o OrgObservabilityOutput) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgObservability) *OrgObservability {
		return &v
	}).(OrgObservabilityPtrOutput)
}

func (o OrgObservabilityOutput) ToOutput(ctx context.Context) pulumix.Output[OrgObservability] {
	return pulumix.Output[OrgObservability]{
		OutputState: o.OutputState,
	}
}

func (o OrgObservabilityOutput) LogsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgObservability) *int { return v.LogsRetentionDays }).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityOutput) MetricsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgObservability) *int { return v.MetricsRetentionDays }).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityOutput) TracesRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgObservability) *int { return v.TracesRetentionDays }).(pulumi.IntPtrOutput)
}

type OrgObservabilityPtrOutput struct{ *pulumi.OutputState }

func (OrgObservabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgObservability)(nil)).Elem()
}

func (o OrgObservabilityPtrOutput) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return o
}

func (o OrgObservabilityPtrOutput) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return o
}

func (o OrgObservabilityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgObservability] {
	return pulumix.Output[*OrgObservability]{
		OutputState: o.OutputState,
	}
}

func (o OrgObservabilityPtrOutput) Elem() OrgObservabilityOutput {
	return o.ApplyT(func(v *OrgObservability) OrgObservability {
		if v != nil {
			return *v
		}
		var ret OrgObservability
		return ret
	}).(OrgObservabilityOutput)
}

func (o OrgObservabilityPtrOutput) LogsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgObservability) *int {
		if v == nil {
			return nil
		}
		return v.LogsRetentionDays
	}).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityPtrOutput) MetricsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgObservability) *int {
		if v == nil {
			return nil
		}
		return v.MetricsRetentionDays
	}).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityPtrOutput) TracesRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgObservability) *int {
		if v == nil {
			return nil
		}
		return v.TracesRetentionDays
	}).(pulumi.IntPtrOutput)
}

type OrgSecurity struct {
	ThreatDetection *OrgSecurityThreatDetection `pulumi:"threatDetection"`
}

// OrgSecurityInput is an input type that accepts OrgSecurityArgs and OrgSecurityOutput values.
// You can construct a concrete instance of `OrgSecurityInput` via:
//
//	OrgSecurityArgs{...}
type OrgSecurityInput interface {
	pulumi.Input

	ToOrgSecurityOutput() OrgSecurityOutput
	ToOrgSecurityOutputWithContext(context.Context) OrgSecurityOutput
}

type OrgSecurityArgs struct {
	ThreatDetection OrgSecurityThreatDetectionPtrInput `pulumi:"threatDetection"`
}

func (OrgSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgSecurity)(nil)).Elem()
}

func (i OrgSecurityArgs) ToOrgSecurityOutput() OrgSecurityOutput {
	return i.ToOrgSecurityOutputWithContext(context.Background())
}

func (i OrgSecurityArgs) ToOrgSecurityOutputWithContext(ctx context.Context) OrgSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityOutput)
}

func (i OrgSecurityArgs) ToOutput(ctx context.Context) pulumix.Output[OrgSecurity] {
	return pulumix.Output[OrgSecurity]{
		OutputState: i.ToOrgSecurityOutputWithContext(ctx).OutputState,
	}
}

func (i OrgSecurityArgs) ToOrgSecurityPtrOutput() OrgSecurityPtrOutput {
	return i.ToOrgSecurityPtrOutputWithContext(context.Background())
}

func (i OrgSecurityArgs) ToOrgSecurityPtrOutputWithContext(ctx context.Context) OrgSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityOutput).ToOrgSecurityPtrOutputWithContext(ctx)
}

// OrgSecurityPtrInput is an input type that accepts OrgSecurityArgs, OrgSecurityPtr and OrgSecurityPtrOutput values.
// You can construct a concrete instance of `OrgSecurityPtrInput` via:
//
//	        OrgSecurityArgs{...}
//
//	or:
//
//	        nil
type OrgSecurityPtrInput interface {
	pulumi.Input

	ToOrgSecurityPtrOutput() OrgSecurityPtrOutput
	ToOrgSecurityPtrOutputWithContext(context.Context) OrgSecurityPtrOutput
}

type orgSecurityPtrType OrgSecurityArgs

func OrgSecurityPtr(v *OrgSecurityArgs) OrgSecurityPtrInput {
	return (*orgSecurityPtrType)(v)
}

func (*orgSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgSecurity)(nil)).Elem()
}

func (i *orgSecurityPtrType) ToOrgSecurityPtrOutput() OrgSecurityPtrOutput {
	return i.ToOrgSecurityPtrOutputWithContext(context.Background())
}

func (i *orgSecurityPtrType) ToOrgSecurityPtrOutputWithContext(ctx context.Context) OrgSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityPtrOutput)
}

func (i *orgSecurityPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgSecurity] {
	return pulumix.Output[*OrgSecurity]{
		OutputState: i.ToOrgSecurityPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgSecurityOutput struct{ *pulumi.OutputState }

func (OrgSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgSecurity)(nil)).Elem()
}

func (o OrgSecurityOutput) ToOrgSecurityOutput() OrgSecurityOutput {
	return o
}

func (o OrgSecurityOutput) ToOrgSecurityOutputWithContext(ctx context.Context) OrgSecurityOutput {
	return o
}

func (o OrgSecurityOutput) ToOrgSecurityPtrOutput() OrgSecurityPtrOutput {
	return o.ToOrgSecurityPtrOutputWithContext(context.Background())
}

func (o OrgSecurityOutput) ToOrgSecurityPtrOutputWithContext(ctx context.Context) OrgSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgSecurity) *OrgSecurity {
		return &v
	}).(OrgSecurityPtrOutput)
}

func (o OrgSecurityOutput) ToOutput(ctx context.Context) pulumix.Output[OrgSecurity] {
	return pulumix.Output[OrgSecurity]{
		OutputState: o.OutputState,
	}
}

func (o OrgSecurityOutput) ThreatDetection() OrgSecurityThreatDetectionPtrOutput {
	return o.ApplyT(func(v OrgSecurity) *OrgSecurityThreatDetection { return v.ThreatDetection }).(OrgSecurityThreatDetectionPtrOutput)
}

type OrgSecurityPtrOutput struct{ *pulumi.OutputState }

func (OrgSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgSecurity)(nil)).Elem()
}

func (o OrgSecurityPtrOutput) ToOrgSecurityPtrOutput() OrgSecurityPtrOutput {
	return o
}

func (o OrgSecurityPtrOutput) ToOrgSecurityPtrOutputWithContext(ctx context.Context) OrgSecurityPtrOutput {
	return o
}

func (o OrgSecurityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgSecurity] {
	return pulumix.Output[*OrgSecurity]{
		OutputState: o.OutputState,
	}
}

func (o OrgSecurityPtrOutput) Elem() OrgSecurityOutput {
	return o.ApplyT(func(v *OrgSecurity) OrgSecurity {
		if v != nil {
			return *v
		}
		var ret OrgSecurity
		return ret
	}).(OrgSecurityOutput)
}

func (o OrgSecurityPtrOutput) ThreatDetection() OrgSecurityThreatDetectionPtrOutput {
	return o.ApplyT(func(v *OrgSecurity) *OrgSecurityThreatDetection {
		if v == nil {
			return nil
		}
		return v.ThreatDetection
	}).(OrgSecurityThreatDetectionPtrOutput)
}

type OrgSecurityThreatDetection struct {
	Enabled         *bool                             `pulumi:"enabled"`
	MinimumSeverity *string                           `pulumi:"minimumSeverity"`
	Syslog          *OrgSecurityThreatDetectionSyslog `pulumi:"syslog"`
}

// OrgSecurityThreatDetectionInput is an input type that accepts OrgSecurityThreatDetectionArgs and OrgSecurityThreatDetectionOutput values.
// You can construct a concrete instance of `OrgSecurityThreatDetectionInput` via:
//
//	OrgSecurityThreatDetectionArgs{...}
type OrgSecurityThreatDetectionInput interface {
	pulumi.Input

	ToOrgSecurityThreatDetectionOutput() OrgSecurityThreatDetectionOutput
	ToOrgSecurityThreatDetectionOutputWithContext(context.Context) OrgSecurityThreatDetectionOutput
}

type OrgSecurityThreatDetectionArgs struct {
	Enabled         pulumi.BoolPtrInput                      `pulumi:"enabled"`
	MinimumSeverity pulumi.StringPtrInput                    `pulumi:"minimumSeverity"`
	Syslog          OrgSecurityThreatDetectionSyslogPtrInput `pulumi:"syslog"`
}

func (OrgSecurityThreatDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgSecurityThreatDetection)(nil)).Elem()
}

func (i OrgSecurityThreatDetectionArgs) ToOrgSecurityThreatDetectionOutput() OrgSecurityThreatDetectionOutput {
	return i.ToOrgSecurityThreatDetectionOutputWithContext(context.Background())
}

func (i OrgSecurityThreatDetectionArgs) ToOrgSecurityThreatDetectionOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityThreatDetectionOutput)
}

func (i OrgSecurityThreatDetectionArgs) ToOutput(ctx context.Context) pulumix.Output[OrgSecurityThreatDetection] {
	return pulumix.Output[OrgSecurityThreatDetection]{
		OutputState: i.ToOrgSecurityThreatDetectionOutputWithContext(ctx).OutputState,
	}
}

func (i OrgSecurityThreatDetectionArgs) ToOrgSecurityThreatDetectionPtrOutput() OrgSecurityThreatDetectionPtrOutput {
	return i.ToOrgSecurityThreatDetectionPtrOutputWithContext(context.Background())
}

func (i OrgSecurityThreatDetectionArgs) ToOrgSecurityThreatDetectionPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityThreatDetectionOutput).ToOrgSecurityThreatDetectionPtrOutputWithContext(ctx)
}

// OrgSecurityThreatDetectionPtrInput is an input type that accepts OrgSecurityThreatDetectionArgs, OrgSecurityThreatDetectionPtr and OrgSecurityThreatDetectionPtrOutput values.
// You can construct a concrete instance of `OrgSecurityThreatDetectionPtrInput` via:
//
//	        OrgSecurityThreatDetectionArgs{...}
//
//	or:
//
//	        nil
type OrgSecurityThreatDetectionPtrInput interface {
	pulumi.Input

	ToOrgSecurityThreatDetectionPtrOutput() OrgSecurityThreatDetectionPtrOutput
	ToOrgSecurityThreatDetectionPtrOutputWithContext(context.Context) OrgSecurityThreatDetectionPtrOutput
}

type orgSecurityThreatDetectionPtrType OrgSecurityThreatDetectionArgs

func OrgSecurityThreatDetectionPtr(v *OrgSecurityThreatDetectionArgs) OrgSecurityThreatDetectionPtrInput {
	return (*orgSecurityThreatDetectionPtrType)(v)
}

func (*orgSecurityThreatDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgSecurityThreatDetection)(nil)).Elem()
}

func (i *orgSecurityThreatDetectionPtrType) ToOrgSecurityThreatDetectionPtrOutput() OrgSecurityThreatDetectionPtrOutput {
	return i.ToOrgSecurityThreatDetectionPtrOutputWithContext(context.Background())
}

func (i *orgSecurityThreatDetectionPtrType) ToOrgSecurityThreatDetectionPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityThreatDetectionPtrOutput)
}

func (i *orgSecurityThreatDetectionPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgSecurityThreatDetection] {
	return pulumix.Output[*OrgSecurityThreatDetection]{
		OutputState: i.ToOrgSecurityThreatDetectionPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgSecurityThreatDetectionOutput struct{ *pulumi.OutputState }

func (OrgSecurityThreatDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgSecurityThreatDetection)(nil)).Elem()
}

func (o OrgSecurityThreatDetectionOutput) ToOrgSecurityThreatDetectionOutput() OrgSecurityThreatDetectionOutput {
	return o
}

func (o OrgSecurityThreatDetectionOutput) ToOrgSecurityThreatDetectionOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionOutput {
	return o
}

func (o OrgSecurityThreatDetectionOutput) ToOrgSecurityThreatDetectionPtrOutput() OrgSecurityThreatDetectionPtrOutput {
	return o.ToOrgSecurityThreatDetectionPtrOutputWithContext(context.Background())
}

func (o OrgSecurityThreatDetectionOutput) ToOrgSecurityThreatDetectionPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgSecurityThreatDetection) *OrgSecurityThreatDetection {
		return &v
	}).(OrgSecurityThreatDetectionPtrOutput)
}

func (o OrgSecurityThreatDetectionOutput) ToOutput(ctx context.Context) pulumix.Output[OrgSecurityThreatDetection] {
	return pulumix.Output[OrgSecurityThreatDetection]{
		OutputState: o.OutputState,
	}
}

func (o OrgSecurityThreatDetectionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgSecurityThreatDetection) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o OrgSecurityThreatDetectionOutput) MinimumSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgSecurityThreatDetection) *string { return v.MinimumSeverity }).(pulumi.StringPtrOutput)
}

func (o OrgSecurityThreatDetectionOutput) Syslog() OrgSecurityThreatDetectionSyslogPtrOutput {
	return o.ApplyT(func(v OrgSecurityThreatDetection) *OrgSecurityThreatDetectionSyslog { return v.Syslog }).(OrgSecurityThreatDetectionSyslogPtrOutput)
}

type OrgSecurityThreatDetectionPtrOutput struct{ *pulumi.OutputState }

func (OrgSecurityThreatDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgSecurityThreatDetection)(nil)).Elem()
}

func (o OrgSecurityThreatDetectionPtrOutput) ToOrgSecurityThreatDetectionPtrOutput() OrgSecurityThreatDetectionPtrOutput {
	return o
}

func (o OrgSecurityThreatDetectionPtrOutput) ToOrgSecurityThreatDetectionPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionPtrOutput {
	return o
}

func (o OrgSecurityThreatDetectionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgSecurityThreatDetection] {
	return pulumix.Output[*OrgSecurityThreatDetection]{
		OutputState: o.OutputState,
	}
}

func (o OrgSecurityThreatDetectionPtrOutput) Elem() OrgSecurityThreatDetectionOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetection) OrgSecurityThreatDetection {
		if v != nil {
			return *v
		}
		var ret OrgSecurityThreatDetection
		return ret
	}).(OrgSecurityThreatDetectionOutput)
}

func (o OrgSecurityThreatDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetection) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o OrgSecurityThreatDetectionPtrOutput) MinimumSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetection) *string {
		if v == nil {
			return nil
		}
		return v.MinimumSeverity
	}).(pulumi.StringPtrOutput)
}

func (o OrgSecurityThreatDetectionPtrOutput) Syslog() OrgSecurityThreatDetectionSyslogPtrOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetection) *OrgSecurityThreatDetectionSyslog {
		if v == nil {
			return nil
		}
		return v.Syslog
	}).(OrgSecurityThreatDetectionSyslogPtrOutput)
}

type OrgSecurityThreatDetectionSyslog struct {
	Host      *string `pulumi:"host"`
	Port      int     `pulumi:"port"`
	Transport *string `pulumi:"transport"`
}

// OrgSecurityThreatDetectionSyslogInput is an input type that accepts OrgSecurityThreatDetectionSyslogArgs and OrgSecurityThreatDetectionSyslogOutput values.
// You can construct a concrete instance of `OrgSecurityThreatDetectionSyslogInput` via:
//
//	OrgSecurityThreatDetectionSyslogArgs{...}
type OrgSecurityThreatDetectionSyslogInput interface {
	pulumi.Input

	ToOrgSecurityThreatDetectionSyslogOutput() OrgSecurityThreatDetectionSyslogOutput
	ToOrgSecurityThreatDetectionSyslogOutputWithContext(context.Context) OrgSecurityThreatDetectionSyslogOutput
}

type OrgSecurityThreatDetectionSyslogArgs struct {
	Host      pulumi.StringPtrInput `pulumi:"host"`
	Port      pulumi.IntInput       `pulumi:"port"`
	Transport pulumi.StringPtrInput `pulumi:"transport"`
}

func (OrgSecurityThreatDetectionSyslogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgSecurityThreatDetectionSyslog)(nil)).Elem()
}

func (i OrgSecurityThreatDetectionSyslogArgs) ToOrgSecurityThreatDetectionSyslogOutput() OrgSecurityThreatDetectionSyslogOutput {
	return i.ToOrgSecurityThreatDetectionSyslogOutputWithContext(context.Background())
}

func (i OrgSecurityThreatDetectionSyslogArgs) ToOrgSecurityThreatDetectionSyslogOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionSyslogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityThreatDetectionSyslogOutput)
}

func (i OrgSecurityThreatDetectionSyslogArgs) ToOutput(ctx context.Context) pulumix.Output[OrgSecurityThreatDetectionSyslog] {
	return pulumix.Output[OrgSecurityThreatDetectionSyslog]{
		OutputState: i.ToOrgSecurityThreatDetectionSyslogOutputWithContext(ctx).OutputState,
	}
}

func (i OrgSecurityThreatDetectionSyslogArgs) ToOrgSecurityThreatDetectionSyslogPtrOutput() OrgSecurityThreatDetectionSyslogPtrOutput {
	return i.ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(context.Background())
}

func (i OrgSecurityThreatDetectionSyslogArgs) ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionSyslogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityThreatDetectionSyslogOutput).ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(ctx)
}

// OrgSecurityThreatDetectionSyslogPtrInput is an input type that accepts OrgSecurityThreatDetectionSyslogArgs, OrgSecurityThreatDetectionSyslogPtr and OrgSecurityThreatDetectionSyslogPtrOutput values.
// You can construct a concrete instance of `OrgSecurityThreatDetectionSyslogPtrInput` via:
//
//	        OrgSecurityThreatDetectionSyslogArgs{...}
//
//	or:
//
//	        nil
type OrgSecurityThreatDetectionSyslogPtrInput interface {
	pulumi.Input

	ToOrgSecurityThreatDetectionSyslogPtrOutput() OrgSecurityThreatDetectionSyslogPtrOutput
	ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(context.Context) OrgSecurityThreatDetectionSyslogPtrOutput
}

type orgSecurityThreatDetectionSyslogPtrType OrgSecurityThreatDetectionSyslogArgs

func OrgSecurityThreatDetectionSyslogPtr(v *OrgSecurityThreatDetectionSyslogArgs) OrgSecurityThreatDetectionSyslogPtrInput {
	return (*orgSecurityThreatDetectionSyslogPtrType)(v)
}

func (*orgSecurityThreatDetectionSyslogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgSecurityThreatDetectionSyslog)(nil)).Elem()
}

func (i *orgSecurityThreatDetectionSyslogPtrType) ToOrgSecurityThreatDetectionSyslogPtrOutput() OrgSecurityThreatDetectionSyslogPtrOutput {
	return i.ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(context.Background())
}

func (i *orgSecurityThreatDetectionSyslogPtrType) ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionSyslogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgSecurityThreatDetectionSyslogPtrOutput)
}

func (i *orgSecurityThreatDetectionSyslogPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgSecurityThreatDetectionSyslog] {
	return pulumix.Output[*OrgSecurityThreatDetectionSyslog]{
		OutputState: i.ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgSecurityThreatDetectionSyslogOutput struct{ *pulumi.OutputState }

func (OrgSecurityThreatDetectionSyslogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgSecurityThreatDetectionSyslog)(nil)).Elem()
}

func (o OrgSecurityThreatDetectionSyslogOutput) ToOrgSecurityThreatDetectionSyslogOutput() OrgSecurityThreatDetectionSyslogOutput {
	return o
}

func (o OrgSecurityThreatDetectionSyslogOutput) ToOrgSecurityThreatDetectionSyslogOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionSyslogOutput {
	return o
}

func (o OrgSecurityThreatDetectionSyslogOutput) ToOrgSecurityThreatDetectionSyslogPtrOutput() OrgSecurityThreatDetectionSyslogPtrOutput {
	return o.ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(context.Background())
}

func (o OrgSecurityThreatDetectionSyslogOutput) ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionSyslogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgSecurityThreatDetectionSyslog) *OrgSecurityThreatDetectionSyslog {
		return &v
	}).(OrgSecurityThreatDetectionSyslogPtrOutput)
}

func (o OrgSecurityThreatDetectionSyslogOutput) ToOutput(ctx context.Context) pulumix.Output[OrgSecurityThreatDetectionSyslog] {
	return pulumix.Output[OrgSecurityThreatDetectionSyslog]{
		OutputState: o.OutputState,
	}
}

func (o OrgSecurityThreatDetectionSyslogOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgSecurityThreatDetectionSyslog) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o OrgSecurityThreatDetectionSyslogOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OrgSecurityThreatDetectionSyslog) int { return v.Port }).(pulumi.IntOutput)
}

func (o OrgSecurityThreatDetectionSyslogOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgSecurityThreatDetectionSyslog) *string { return v.Transport }).(pulumi.StringPtrOutput)
}

type OrgSecurityThreatDetectionSyslogPtrOutput struct{ *pulumi.OutputState }

func (OrgSecurityThreatDetectionSyslogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgSecurityThreatDetectionSyslog)(nil)).Elem()
}

func (o OrgSecurityThreatDetectionSyslogPtrOutput) ToOrgSecurityThreatDetectionSyslogPtrOutput() OrgSecurityThreatDetectionSyslogPtrOutput {
	return o
}

func (o OrgSecurityThreatDetectionSyslogPtrOutput) ToOrgSecurityThreatDetectionSyslogPtrOutputWithContext(ctx context.Context) OrgSecurityThreatDetectionSyslogPtrOutput {
	return o
}

func (o OrgSecurityThreatDetectionSyslogPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgSecurityThreatDetectionSyslog] {
	return pulumix.Output[*OrgSecurityThreatDetectionSyslog]{
		OutputState: o.OutputState,
	}
}

func (o OrgSecurityThreatDetectionSyslogPtrOutput) Elem() OrgSecurityThreatDetectionSyslogOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetectionSyslog) OrgSecurityThreatDetectionSyslog {
		if v != nil {
			return *v
		}
		var ret OrgSecurityThreatDetectionSyslog
		return ret
	}).(OrgSecurityThreatDetectionSyslogOutput)
}

func (o OrgSecurityThreatDetectionSyslogPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetectionSyslog) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o OrgSecurityThreatDetectionSyslogPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetectionSyslog) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o OrgSecurityThreatDetectionSyslogPtrOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgSecurityThreatDetectionSyslog) *string {
		if v == nil {
			return nil
		}
		return v.Transport
	}).(pulumi.StringPtrOutput)
}

type OrgStatus struct {
	AccountLink *string `pulumi:"accountLink"`
	Active      *bool   `pulumi:"active"`
}

// OrgStatusInput is an input type that accepts OrgStatusArgs and OrgStatusOutput values.
// You can construct a concrete instance of `OrgStatusInput` via:
//
//	OrgStatusArgs{...}
type OrgStatusInput interface {
	pulumi.Input

	ToOrgStatusOutput() OrgStatusOutput
	ToOrgStatusOutputWithContext(context.Context) OrgStatusOutput
}

type OrgStatusArgs struct {
	AccountLink pulumi.StringPtrInput `pulumi:"accountLink"`
	Active      pulumi.BoolPtrInput   `pulumi:"active"`
}

func (OrgStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgStatus)(nil)).Elem()
}

func (i OrgStatusArgs) ToOrgStatusOutput() OrgStatusOutput {
	return i.ToOrgStatusOutputWithContext(context.Background())
}

func (i OrgStatusArgs) ToOrgStatusOutputWithContext(ctx context.Context) OrgStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgStatusOutput)
}

func (i OrgStatusArgs) ToOutput(ctx context.Context) pulumix.Output[OrgStatus] {
	return pulumix.Output[OrgStatus]{
		OutputState: i.ToOrgStatusOutputWithContext(ctx).OutputState,
	}
}

// OrgStatusArrayInput is an input type that accepts OrgStatusArray and OrgStatusArrayOutput values.
// You can construct a concrete instance of `OrgStatusArrayInput` via:
//
//	OrgStatusArray{ OrgStatusArgs{...} }
type OrgStatusArrayInput interface {
	pulumi.Input

	ToOrgStatusArrayOutput() OrgStatusArrayOutput
	ToOrgStatusArrayOutputWithContext(context.Context) OrgStatusArrayOutput
}

type OrgStatusArray []OrgStatusInput

func (OrgStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgStatus)(nil)).Elem()
}

func (i OrgStatusArray) ToOrgStatusArrayOutput() OrgStatusArrayOutput {
	return i.ToOrgStatusArrayOutputWithContext(context.Background())
}

func (i OrgStatusArray) ToOrgStatusArrayOutputWithContext(ctx context.Context) OrgStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgStatusArrayOutput)
}

func (i OrgStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgStatus] {
	return pulumix.Output[[]OrgStatus]{
		OutputState: i.ToOrgStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgStatusOutput struct{ *pulumi.OutputState }

func (OrgStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgStatus)(nil)).Elem()
}

func (o OrgStatusOutput) ToOrgStatusOutput() OrgStatusOutput {
	return o
}

func (o OrgStatusOutput) ToOrgStatusOutputWithContext(ctx context.Context) OrgStatusOutput {
	return o
}

func (o OrgStatusOutput) ToOutput(ctx context.Context) pulumix.Output[OrgStatus] {
	return pulumix.Output[OrgStatus]{
		OutputState: o.OutputState,
	}
}

func (o OrgStatusOutput) AccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgStatus) *string { return v.AccountLink }).(pulumi.StringPtrOutput)
}

func (o OrgStatusOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgStatus) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type OrgStatusArrayOutput struct{ *pulumi.OutputState }

func (OrgStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgStatus)(nil)).Elem()
}

func (o OrgStatusArrayOutput) ToOrgStatusArrayOutput() OrgStatusArrayOutput {
	return o
}

func (o OrgStatusArrayOutput) ToOrgStatusArrayOutputWithContext(ctx context.Context) OrgStatusArrayOutput {
	return o
}

func (o OrgStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgStatus] {
	return pulumix.Output[[]OrgStatus]{
		OutputState: o.OutputState,
	}
}

func (o OrgStatusArrayOutput) Index(i pulumi.IntInput) OrgStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgStatus {
		return vs[0].([]OrgStatus)[vs[1].(int)]
	}).(OrgStatusOutput)
}

type OrgTracingControlplaneTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Sampling   float64           `pulumi:"sampling"`
}

// OrgTracingControlplaneTracingInput is an input type that accepts OrgTracingControlplaneTracingArgs and OrgTracingControlplaneTracingOutput values.
// You can construct a concrete instance of `OrgTracingControlplaneTracingInput` via:
//
//	OrgTracingControlplaneTracingArgs{...}
type OrgTracingControlplaneTracingInput interface {
	pulumi.Input

	ToOrgTracingControlplaneTracingOutput() OrgTracingControlplaneTracingOutput
	ToOrgTracingControlplaneTracingOutputWithContext(context.Context) OrgTracingControlplaneTracingOutput
}

type OrgTracingControlplaneTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Sampling   pulumi.Float64Input   `pulumi:"sampling"`
}

func (OrgTracingControlplaneTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingControlplaneTracing)(nil)).Elem()
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingOutput() OrgTracingControlplaneTracingOutput {
	return i.ToOrgTracingControlplaneTracingOutputWithContext(context.Background())
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingControlplaneTracingOutput)
}

func (i OrgTracingControlplaneTracingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgTracingControlplaneTracing] {
	return pulumix.Output[OrgTracingControlplaneTracing]{
		OutputState: i.ToOrgTracingControlplaneTracingOutputWithContext(ctx).OutputState,
	}
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return i.ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingControlplaneTracingOutput).ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx)
}

// OrgTracingControlplaneTracingPtrInput is an input type that accepts OrgTracingControlplaneTracingArgs, OrgTracingControlplaneTracingPtr and OrgTracingControlplaneTracingPtrOutput values.
// You can construct a concrete instance of `OrgTracingControlplaneTracingPtrInput` via:
//
//	        OrgTracingControlplaneTracingArgs{...}
//
//	or:
//
//	        nil
type OrgTracingControlplaneTracingPtrInput interface {
	pulumi.Input

	ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput
	ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Context) OrgTracingControlplaneTracingPtrOutput
}

type orgTracingControlplaneTracingPtrType OrgTracingControlplaneTracingArgs

func OrgTracingControlplaneTracingPtr(v *OrgTracingControlplaneTracingArgs) OrgTracingControlplaneTracingPtrInput {
	return (*orgTracingControlplaneTracingPtrType)(v)
}

func (*orgTracingControlplaneTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingControlplaneTracing)(nil)).Elem()
}

func (i *orgTracingControlplaneTracingPtrType) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return i.ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i *orgTracingControlplaneTracingPtrType) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingControlplaneTracingPtrOutput)
}

func (i *orgTracingControlplaneTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingControlplaneTracing] {
	return pulumix.Output[*OrgTracingControlplaneTracing]{
		OutputState: i.ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgTracingControlplaneTracingOutput struct{ *pulumi.OutputState }

func (OrgTracingControlplaneTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingControlplaneTracing)(nil)).Elem()
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingOutput() OrgTracingControlplaneTracingOutput {
	return o
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingOutput {
	return o
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return o.ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Background())
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgTracingControlplaneTracing) *OrgTracingControlplaneTracing {
		return &v
	}).(OrgTracingControlplaneTracingPtrOutput)
}

func (o OrgTracingControlplaneTracingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgTracingControlplaneTracing] {
	return pulumix.Output[OrgTracingControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingControlplaneTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrgTracingControlplaneTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o OrgTracingControlplaneTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v OrgTracingControlplaneTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type OrgTracingControlplaneTracingPtrOutput struct{ *pulumi.OutputState }

func (OrgTracingControlplaneTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingControlplaneTracing)(nil)).Elem()
}

func (o OrgTracingControlplaneTracingPtrOutput) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return o
}

func (o OrgTracingControlplaneTracingPtrOutput) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return o
}

func (o OrgTracingControlplaneTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingControlplaneTracing] {
	return pulumix.Output[*OrgTracingControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingControlplaneTracingPtrOutput) Elem() OrgTracingControlplaneTracingOutput {
	return o.ApplyT(func(v *OrgTracingControlplaneTracing) OrgTracingControlplaneTracing {
		if v != nil {
			return *v
		}
		var ret OrgTracingControlplaneTracing
		return ret
	}).(OrgTracingControlplaneTracingOutput)
}

func (o OrgTracingControlplaneTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrgTracingControlplaneTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o OrgTracingControlplaneTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OrgTracingControlplaneTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type OrgTracingLightstepTracing struct {
	Credentials *string           `pulumi:"credentials"`
	CustomTags  map[string]string `pulumi:"customTags"`
	Endpoint    string            `pulumi:"endpoint"`
	Sampling    float64           `pulumi:"sampling"`
}

// OrgTracingLightstepTracingInput is an input type that accepts OrgTracingLightstepTracingArgs and OrgTracingLightstepTracingOutput values.
// You can construct a concrete instance of `OrgTracingLightstepTracingInput` via:
//
//	OrgTracingLightstepTracingArgs{...}
type OrgTracingLightstepTracingInput interface {
	pulumi.Input

	ToOrgTracingLightstepTracingOutput() OrgTracingLightstepTracingOutput
	ToOrgTracingLightstepTracingOutputWithContext(context.Context) OrgTracingLightstepTracingOutput
}

type OrgTracingLightstepTracingArgs struct {
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	CustomTags  pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint    pulumi.StringInput    `pulumi:"endpoint"`
	Sampling    pulumi.Float64Input   `pulumi:"sampling"`
}

func (OrgTracingLightstepTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingLightstepTracing)(nil)).Elem()
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingOutput() OrgTracingLightstepTracingOutput {
	return i.ToOrgTracingLightstepTracingOutputWithContext(context.Background())
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingOutputWithContext(ctx context.Context) OrgTracingLightstepTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingLightstepTracingOutput)
}

func (i OrgTracingLightstepTracingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgTracingLightstepTracing] {
	return pulumix.Output[OrgTracingLightstepTracing]{
		OutputState: i.ToOrgTracingLightstepTracingOutputWithContext(ctx).OutputState,
	}
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return i.ToOrgTracingLightstepTracingPtrOutputWithContext(context.Background())
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingLightstepTracingOutput).ToOrgTracingLightstepTracingPtrOutputWithContext(ctx)
}

// OrgTracingLightstepTracingPtrInput is an input type that accepts OrgTracingLightstepTracingArgs, OrgTracingLightstepTracingPtr and OrgTracingLightstepTracingPtrOutput values.
// You can construct a concrete instance of `OrgTracingLightstepTracingPtrInput` via:
//
//	        OrgTracingLightstepTracingArgs{...}
//
//	or:
//
//	        nil
type OrgTracingLightstepTracingPtrInput interface {
	pulumi.Input

	ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput
	ToOrgTracingLightstepTracingPtrOutputWithContext(context.Context) OrgTracingLightstepTracingPtrOutput
}

type orgTracingLightstepTracingPtrType OrgTracingLightstepTracingArgs

func OrgTracingLightstepTracingPtr(v *OrgTracingLightstepTracingArgs) OrgTracingLightstepTracingPtrInput {
	return (*orgTracingLightstepTracingPtrType)(v)
}

func (*orgTracingLightstepTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingLightstepTracing)(nil)).Elem()
}

func (i *orgTracingLightstepTracingPtrType) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return i.ToOrgTracingLightstepTracingPtrOutputWithContext(context.Background())
}

func (i *orgTracingLightstepTracingPtrType) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingLightstepTracingPtrOutput)
}

func (i *orgTracingLightstepTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingLightstepTracing] {
	return pulumix.Output[*OrgTracingLightstepTracing]{
		OutputState: i.ToOrgTracingLightstepTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgTracingLightstepTracingOutput struct{ *pulumi.OutputState }

func (OrgTracingLightstepTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingLightstepTracing)(nil)).Elem()
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingOutput() OrgTracingLightstepTracingOutput {
	return o
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingOutputWithContext(ctx context.Context) OrgTracingLightstepTracingOutput {
	return o
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return o.ToOrgTracingLightstepTracingPtrOutputWithContext(context.Background())
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgTracingLightstepTracing) *OrgTracingLightstepTracing {
		return &v
	}).(OrgTracingLightstepTracingPtrOutput)
}

func (o OrgTracingLightstepTracingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgTracingLightstepTracing] {
	return pulumix.Output[OrgTracingLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingLightstepTracingOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgTracingLightstepTracing) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

func (o OrgTracingLightstepTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrgTracingLightstepTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o OrgTracingLightstepTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OrgTracingLightstepTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o OrgTracingLightstepTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v OrgTracingLightstepTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type OrgTracingLightstepTracingPtrOutput struct{ *pulumi.OutputState }

func (OrgTracingLightstepTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingLightstepTracing)(nil)).Elem()
}

func (o OrgTracingLightstepTracingPtrOutput) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return o
}

func (o OrgTracingLightstepTracingPtrOutput) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return o
}

func (o OrgTracingLightstepTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingLightstepTracing] {
	return pulumix.Output[*OrgTracingLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingLightstepTracingPtrOutput) Elem() OrgTracingLightstepTracingOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) OrgTracingLightstepTracing {
		if v != nil {
			return *v
		}
		var ret OrgTracingLightstepTracing
		return ret
	}).(OrgTracingLightstepTracingOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type OrgTracingOtelTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Endpoint   string            `pulumi:"endpoint"`
	Sampling   float64           `pulumi:"sampling"`
}

// OrgTracingOtelTracingInput is an input type that accepts OrgTracingOtelTracingArgs and OrgTracingOtelTracingOutput values.
// You can construct a concrete instance of `OrgTracingOtelTracingInput` via:
//
//	OrgTracingOtelTracingArgs{...}
type OrgTracingOtelTracingInput interface {
	pulumi.Input

	ToOrgTracingOtelTracingOutput() OrgTracingOtelTracingOutput
	ToOrgTracingOtelTracingOutputWithContext(context.Context) OrgTracingOtelTracingOutput
}

type OrgTracingOtelTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint   pulumi.StringInput    `pulumi:"endpoint"`
	Sampling   pulumi.Float64Input   `pulumi:"sampling"`
}

func (OrgTracingOtelTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingOtelTracing)(nil)).Elem()
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingOutput() OrgTracingOtelTracingOutput {
	return i.ToOrgTracingOtelTracingOutputWithContext(context.Background())
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingOutputWithContext(ctx context.Context) OrgTracingOtelTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingOtelTracingOutput)
}

func (i OrgTracingOtelTracingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgTracingOtelTracing] {
	return pulumix.Output[OrgTracingOtelTracing]{
		OutputState: i.ToOrgTracingOtelTracingOutputWithContext(ctx).OutputState,
	}
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return i.ToOrgTracingOtelTracingPtrOutputWithContext(context.Background())
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingOtelTracingOutput).ToOrgTracingOtelTracingPtrOutputWithContext(ctx)
}

// OrgTracingOtelTracingPtrInput is an input type that accepts OrgTracingOtelTracingArgs, OrgTracingOtelTracingPtr and OrgTracingOtelTracingPtrOutput values.
// You can construct a concrete instance of `OrgTracingOtelTracingPtrInput` via:
//
//	        OrgTracingOtelTracingArgs{...}
//
//	or:
//
//	        nil
type OrgTracingOtelTracingPtrInput interface {
	pulumi.Input

	ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput
	ToOrgTracingOtelTracingPtrOutputWithContext(context.Context) OrgTracingOtelTracingPtrOutput
}

type orgTracingOtelTracingPtrType OrgTracingOtelTracingArgs

func OrgTracingOtelTracingPtr(v *OrgTracingOtelTracingArgs) OrgTracingOtelTracingPtrInput {
	return (*orgTracingOtelTracingPtrType)(v)
}

func (*orgTracingOtelTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingOtelTracing)(nil)).Elem()
}

func (i *orgTracingOtelTracingPtrType) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return i.ToOrgTracingOtelTracingPtrOutputWithContext(context.Background())
}

func (i *orgTracingOtelTracingPtrType) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingOtelTracingPtrOutput)
}

func (i *orgTracingOtelTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingOtelTracing] {
	return pulumix.Output[*OrgTracingOtelTracing]{
		OutputState: i.ToOrgTracingOtelTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgTracingOtelTracingOutput struct{ *pulumi.OutputState }

func (OrgTracingOtelTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingOtelTracing)(nil)).Elem()
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingOutput() OrgTracingOtelTracingOutput {
	return o
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingOutputWithContext(ctx context.Context) OrgTracingOtelTracingOutput {
	return o
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return o.ToOrgTracingOtelTracingPtrOutputWithContext(context.Background())
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgTracingOtelTracing) *OrgTracingOtelTracing {
		return &v
	}).(OrgTracingOtelTracingPtrOutput)
}

func (o OrgTracingOtelTracingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgTracingOtelTracing] {
	return pulumix.Output[OrgTracingOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingOtelTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrgTracingOtelTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o OrgTracingOtelTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OrgTracingOtelTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o OrgTracingOtelTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v OrgTracingOtelTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type OrgTracingOtelTracingPtrOutput struct{ *pulumi.OutputState }

func (OrgTracingOtelTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingOtelTracing)(nil)).Elem()
}

func (o OrgTracingOtelTracingPtrOutput) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return o
}

func (o OrgTracingOtelTracingPtrOutput) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return o
}

func (o OrgTracingOtelTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingOtelTracing] {
	return pulumix.Output[*OrgTracingOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingOtelTracingPtrOutput) Elem() OrgTracingOtelTracingOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) OrgTracingOtelTracing {
		if v != nil {
			return *v
		}
		var ret OrgTracingOtelTracing
		return ret
	}).(OrgTracingOtelTracingOutput)
}

func (o OrgTracingOtelTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o OrgTracingOtelTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o OrgTracingOtelTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type PolicyBinding struct {
	Permissions    []string `pulumi:"permissions"`
	PrincipalLinks []string `pulumi:"principalLinks"`
}

// PolicyBindingInput is an input type that accepts PolicyBindingArgs and PolicyBindingOutput values.
// You can construct a concrete instance of `PolicyBindingInput` via:
//
//	PolicyBindingArgs{...}
type PolicyBindingInput interface {
	pulumi.Input

	ToPolicyBindingOutput() PolicyBindingOutput
	ToPolicyBindingOutputWithContext(context.Context) PolicyBindingOutput
}

type PolicyBindingArgs struct {
	Permissions    pulumi.StringArrayInput `pulumi:"permissions"`
	PrincipalLinks pulumi.StringArrayInput `pulumi:"principalLinks"`
}

func (PolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBinding)(nil)).Elem()
}

func (i PolicyBindingArgs) ToPolicyBindingOutput() PolicyBindingOutput {
	return i.ToPolicyBindingOutputWithContext(context.Background())
}

func (i PolicyBindingArgs) ToPolicyBindingOutputWithContext(ctx context.Context) PolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingOutput)
}

func (i PolicyBindingArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyBinding] {
	return pulumix.Output[PolicyBinding]{
		OutputState: i.ToPolicyBindingOutputWithContext(ctx).OutputState,
	}
}

// PolicyBindingArrayInput is an input type that accepts PolicyBindingArray and PolicyBindingArrayOutput values.
// You can construct a concrete instance of `PolicyBindingArrayInput` via:
//
//	PolicyBindingArray{ PolicyBindingArgs{...} }
type PolicyBindingArrayInput interface {
	pulumi.Input

	ToPolicyBindingArrayOutput() PolicyBindingArrayOutput
	ToPolicyBindingArrayOutputWithContext(context.Context) PolicyBindingArrayOutput
}

type PolicyBindingArray []PolicyBindingInput

func (PolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBinding)(nil)).Elem()
}

func (i PolicyBindingArray) ToPolicyBindingArrayOutput() PolicyBindingArrayOutput {
	return i.ToPolicyBindingArrayOutputWithContext(context.Background())
}

func (i PolicyBindingArray) ToPolicyBindingArrayOutputWithContext(ctx context.Context) PolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingArrayOutput)
}

func (i PolicyBindingArray) ToOutput(ctx context.Context) pulumix.Output[[]PolicyBinding] {
	return pulumix.Output[[]PolicyBinding]{
		OutputState: i.ToPolicyBindingArrayOutputWithContext(ctx).OutputState,
	}
}

type PolicyBindingOutput struct{ *pulumi.OutputState }

func (PolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBinding)(nil)).Elem()
}

func (o PolicyBindingOutput) ToPolicyBindingOutput() PolicyBindingOutput {
	return o
}

func (o PolicyBindingOutput) ToPolicyBindingOutputWithContext(ctx context.Context) PolicyBindingOutput {
	return o
}

func (o PolicyBindingOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyBinding] {
	return pulumix.Output[PolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o PolicyBindingOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyBinding) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

func (o PolicyBindingOutput) PrincipalLinks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyBinding) []string { return v.PrincipalLinks }).(pulumi.StringArrayOutput)
}

type PolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (PolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBinding)(nil)).Elem()
}

func (o PolicyBindingArrayOutput) ToPolicyBindingArrayOutput() PolicyBindingArrayOutput {
	return o
}

func (o PolicyBindingArrayOutput) ToPolicyBindingArrayOutputWithContext(ctx context.Context) PolicyBindingArrayOutput {
	return o
}

func (o PolicyBindingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PolicyBinding] {
	return pulumix.Output[[]PolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o PolicyBindingArrayOutput) Index(i pulumi.IntInput) PolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBinding {
		return vs[0].([]PolicyBinding)[vs[1].(int)]
	}).(PolicyBindingOutput)
}

type PolicyTargetQuery struct {
	Fetch *string                `pulumi:"fetch"`
	Spec  *PolicyTargetQuerySpec `pulumi:"spec"`
}

// PolicyTargetQueryInput is an input type that accepts PolicyTargetQueryArgs and PolicyTargetQueryOutput values.
// You can construct a concrete instance of `PolicyTargetQueryInput` via:
//
//	PolicyTargetQueryArgs{...}
type PolicyTargetQueryInput interface {
	pulumi.Input

	ToPolicyTargetQueryOutput() PolicyTargetQueryOutput
	ToPolicyTargetQueryOutputWithContext(context.Context) PolicyTargetQueryOutput
}

type PolicyTargetQueryArgs struct {
	Fetch pulumi.StringPtrInput         `pulumi:"fetch"`
	Spec  PolicyTargetQuerySpecPtrInput `pulumi:"spec"`
}

func (PolicyTargetQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuery)(nil)).Elem()
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryOutput() PolicyTargetQueryOutput {
	return i.ToPolicyTargetQueryOutputWithContext(context.Background())
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryOutputWithContext(ctx context.Context) PolicyTargetQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQueryOutput)
}

func (i PolicyTargetQueryArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuery] {
	return pulumix.Output[PolicyTargetQuery]{
		OutputState: i.ToPolicyTargetQueryOutputWithContext(ctx).OutputState,
	}
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return i.ToPolicyTargetQueryPtrOutputWithContext(context.Background())
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQueryOutput).ToPolicyTargetQueryPtrOutputWithContext(ctx)
}

// PolicyTargetQueryPtrInput is an input type that accepts PolicyTargetQueryArgs, PolicyTargetQueryPtr and PolicyTargetQueryPtrOutput values.
// You can construct a concrete instance of `PolicyTargetQueryPtrInput` via:
//
//	        PolicyTargetQueryArgs{...}
//
//	or:
//
//	        nil
type PolicyTargetQueryPtrInput interface {
	pulumi.Input

	ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput
	ToPolicyTargetQueryPtrOutputWithContext(context.Context) PolicyTargetQueryPtrOutput
}

type policyTargetQueryPtrType PolicyTargetQueryArgs

func PolicyTargetQueryPtr(v *PolicyTargetQueryArgs) PolicyTargetQueryPtrInput {
	return (*policyTargetQueryPtrType)(v)
}

func (*policyTargetQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuery)(nil)).Elem()
}

func (i *policyTargetQueryPtrType) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return i.ToPolicyTargetQueryPtrOutputWithContext(context.Background())
}

func (i *policyTargetQueryPtrType) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQueryPtrOutput)
}

func (i *policyTargetQueryPtrType) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuery] {
	return pulumix.Output[*PolicyTargetQuery]{
		OutputState: i.ToPolicyTargetQueryPtrOutputWithContext(ctx).OutputState,
	}
}

type PolicyTargetQueryOutput struct{ *pulumi.OutputState }

func (PolicyTargetQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuery)(nil)).Elem()
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryOutput() PolicyTargetQueryOutput {
	return o
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryOutputWithContext(ctx context.Context) PolicyTargetQueryOutput {
	return o
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return o.ToPolicyTargetQueryPtrOutputWithContext(context.Background())
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyTargetQuery) *PolicyTargetQuery {
		return &v
	}).(PolicyTargetQueryPtrOutput)
}

func (o PolicyTargetQueryOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuery] {
	return pulumix.Output[PolicyTargetQuery]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQueryOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuery) *string { return v.Fetch }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQueryOutput) Spec() PolicyTargetQuerySpecPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuery) *PolicyTargetQuerySpec { return v.Spec }).(PolicyTargetQuerySpecPtrOutput)
}

type PolicyTargetQueryPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuery)(nil)).Elem()
}

func (o PolicyTargetQueryPtrOutput) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return o
}

func (o PolicyTargetQueryPtrOutput) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return o
}

func (o PolicyTargetQueryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuery] {
	return pulumix.Output[*PolicyTargetQuery]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQueryPtrOutput) Elem() PolicyTargetQueryOutput {
	return o.ApplyT(func(v *PolicyTargetQuery) PolicyTargetQuery {
		if v != nil {
			return *v
		}
		var ret PolicyTargetQuery
		return ret
	}).(PolicyTargetQueryOutput)
}

func (o PolicyTargetQueryPtrOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetQuery) *string {
		if v == nil {
			return nil
		}
		return v.Fetch
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQueryPtrOutput) Spec() PolicyTargetQuerySpecPtrOutput {
	return o.ApplyT(func(v *PolicyTargetQuery) *PolicyTargetQuerySpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(PolicyTargetQuerySpecPtrOutput)
}

type PolicyTargetQuerySpec struct {
	Match *string                     `pulumi:"match"`
	Terms []PolicyTargetQuerySpecTerm `pulumi:"terms"`
}

// PolicyTargetQuerySpecInput is an input type that accepts PolicyTargetQuerySpecArgs and PolicyTargetQuerySpecOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecInput` via:
//
//	PolicyTargetQuerySpecArgs{...}
type PolicyTargetQuerySpecInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecOutput() PolicyTargetQuerySpecOutput
	ToPolicyTargetQuerySpecOutputWithContext(context.Context) PolicyTargetQuerySpecOutput
}

type PolicyTargetQuerySpecArgs struct {
	Match pulumi.StringPtrInput               `pulumi:"match"`
	Terms PolicyTargetQuerySpecTermArrayInput `pulumi:"terms"`
}

func (PolicyTargetQuerySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpec)(nil)).Elem()
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecOutput() PolicyTargetQuerySpecOutput {
	return i.ToPolicyTargetQuerySpecOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecOutputWithContext(ctx context.Context) PolicyTargetQuerySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecOutput)
}

func (i PolicyTargetQuerySpecArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpec] {
	return pulumix.Output[PolicyTargetQuerySpec]{
		OutputState: i.ToPolicyTargetQuerySpecOutputWithContext(ctx).OutputState,
	}
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return i.ToPolicyTargetQuerySpecPtrOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecOutput).ToPolicyTargetQuerySpecPtrOutputWithContext(ctx)
}

// PolicyTargetQuerySpecPtrInput is an input type that accepts PolicyTargetQuerySpecArgs, PolicyTargetQuerySpecPtr and PolicyTargetQuerySpecPtrOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecPtrInput` via:
//
//	        PolicyTargetQuerySpecArgs{...}
//
//	or:
//
//	        nil
type PolicyTargetQuerySpecPtrInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput
	ToPolicyTargetQuerySpecPtrOutputWithContext(context.Context) PolicyTargetQuerySpecPtrOutput
}

type policyTargetQuerySpecPtrType PolicyTargetQuerySpecArgs

func PolicyTargetQuerySpecPtr(v *PolicyTargetQuerySpecArgs) PolicyTargetQuerySpecPtrInput {
	return (*policyTargetQuerySpecPtrType)(v)
}

func (*policyTargetQuerySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuerySpec)(nil)).Elem()
}

func (i *policyTargetQuerySpecPtrType) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return i.ToPolicyTargetQuerySpecPtrOutputWithContext(context.Background())
}

func (i *policyTargetQuerySpecPtrType) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecPtrOutput)
}

func (i *policyTargetQuerySpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuerySpec] {
	return pulumix.Output[*PolicyTargetQuerySpec]{
		OutputState: i.ToPolicyTargetQuerySpecPtrOutputWithContext(ctx).OutputState,
	}
}

type PolicyTargetQuerySpecOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpec)(nil)).Elem()
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecOutput() PolicyTargetQuerySpecOutput {
	return o
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecOutputWithContext(ctx context.Context) PolicyTargetQuerySpecOutput {
	return o
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return o.ToPolicyTargetQuerySpecPtrOutputWithContext(context.Background())
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyTargetQuerySpec) *PolicyTargetQuerySpec {
		return &v
	}).(PolicyTargetQuerySpecPtrOutput)
}

func (o PolicyTargetQuerySpecOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpec] {
	return pulumix.Output[PolicyTargetQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpec) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecOutput) Terms() PolicyTargetQuerySpecTermArrayOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpec) []PolicyTargetQuerySpecTerm { return v.Terms }).(PolicyTargetQuerySpecTermArrayOutput)
}

type PolicyTargetQuerySpecPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuerySpec)(nil)).Elem()
}

func (o PolicyTargetQuerySpecPtrOutput) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return o
}

func (o PolicyTargetQuerySpecPtrOutput) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return o
}

func (o PolicyTargetQuerySpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuerySpec] {
	return pulumix.Output[*PolicyTargetQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecPtrOutput) Elem() PolicyTargetQuerySpecOutput {
	return o.ApplyT(func(v *PolicyTargetQuerySpec) PolicyTargetQuerySpec {
		if v != nil {
			return *v
		}
		var ret PolicyTargetQuerySpec
		return ret
	}).(PolicyTargetQuerySpecOutput)
}

func (o PolicyTargetQuerySpecPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetQuerySpec) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecPtrOutput) Terms() PolicyTargetQuerySpecTermArrayOutput {
	return o.ApplyT(func(v *PolicyTargetQuerySpec) []PolicyTargetQuerySpecTerm {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(PolicyTargetQuerySpecTermArrayOutput)
}

type PolicyTargetQuerySpecTerm struct {
	Op       *string `pulumi:"op"`
	Property *string `pulumi:"property"`
	Rel      *string `pulumi:"rel"`
	Tag      *string `pulumi:"tag"`
	Value    *string `pulumi:"value"`
}

// PolicyTargetQuerySpecTermInput is an input type that accepts PolicyTargetQuerySpecTermArgs and PolicyTargetQuerySpecTermOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecTermInput` via:
//
//	PolicyTargetQuerySpecTermArgs{...}
type PolicyTargetQuerySpecTermInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecTermOutput() PolicyTargetQuerySpecTermOutput
	ToPolicyTargetQuerySpecTermOutputWithContext(context.Context) PolicyTargetQuerySpecTermOutput
}

type PolicyTargetQuerySpecTermArgs struct {
	Op       pulumi.StringPtrInput `pulumi:"op"`
	Property pulumi.StringPtrInput `pulumi:"property"`
	Rel      pulumi.StringPtrInput `pulumi:"rel"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (PolicyTargetQuerySpecTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (i PolicyTargetQuerySpecTermArgs) ToPolicyTargetQuerySpecTermOutput() PolicyTargetQuerySpecTermOutput {
	return i.ToPolicyTargetQuerySpecTermOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecTermArgs) ToPolicyTargetQuerySpecTermOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecTermOutput)
}

func (i PolicyTargetQuerySpecTermArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpecTerm] {
	return pulumix.Output[PolicyTargetQuerySpecTerm]{
		OutputState: i.ToPolicyTargetQuerySpecTermOutputWithContext(ctx).OutputState,
	}
}

// PolicyTargetQuerySpecTermArrayInput is an input type that accepts PolicyTargetQuerySpecTermArray and PolicyTargetQuerySpecTermArrayOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecTermArrayInput` via:
//
//	PolicyTargetQuerySpecTermArray{ PolicyTargetQuerySpecTermArgs{...} }
type PolicyTargetQuerySpecTermArrayInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecTermArrayOutput() PolicyTargetQuerySpecTermArrayOutput
	ToPolicyTargetQuerySpecTermArrayOutputWithContext(context.Context) PolicyTargetQuerySpecTermArrayOutput
}

type PolicyTargetQuerySpecTermArray []PolicyTargetQuerySpecTermInput

func (PolicyTargetQuerySpecTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (i PolicyTargetQuerySpecTermArray) ToPolicyTargetQuerySpecTermArrayOutput() PolicyTargetQuerySpecTermArrayOutput {
	return i.ToPolicyTargetQuerySpecTermArrayOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecTermArray) ToPolicyTargetQuerySpecTermArrayOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecTermArrayOutput)
}

func (i PolicyTargetQuerySpecTermArray) ToOutput(ctx context.Context) pulumix.Output[[]PolicyTargetQuerySpecTerm] {
	return pulumix.Output[[]PolicyTargetQuerySpecTerm]{
		OutputState: i.ToPolicyTargetQuerySpecTermArrayOutputWithContext(ctx).OutputState,
	}
}

type PolicyTargetQuerySpecTermOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (o PolicyTargetQuerySpecTermOutput) ToPolicyTargetQuerySpecTermOutput() PolicyTargetQuerySpecTermOutput {
	return o
}

func (o PolicyTargetQuerySpecTermOutput) ToPolicyTargetQuerySpecTermOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermOutput {
	return o
}

func (o PolicyTargetQuerySpecTermOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpecTerm] {
	return pulumix.Output[PolicyTargetQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecTermOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecTermOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecTermOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecTermOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PolicyTargetQuerySpecTermArrayOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (o PolicyTargetQuerySpecTermArrayOutput) ToPolicyTargetQuerySpecTermArrayOutput() PolicyTargetQuerySpecTermArrayOutput {
	return o
}

func (o PolicyTargetQuerySpecTermArrayOutput) ToPolicyTargetQuerySpecTermArrayOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermArrayOutput {
	return o
}

func (o PolicyTargetQuerySpecTermArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PolicyTargetQuerySpecTerm] {
	return pulumix.Output[[]PolicyTargetQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecTermArrayOutput) Index(i pulumi.IntInput) PolicyTargetQuerySpecTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTargetQuerySpecTerm {
		return vs[0].([]PolicyTargetQuerySpecTerm)[vs[1].(int)]
	}).(PolicyTargetQuerySpecTermOutput)
}

type SecretAws struct {
	AccessKey  string  `pulumi:"accessKey"`
	ExternalId *string `pulumi:"externalId"`
	RoleArn    *string `pulumi:"roleArn"`
	SecretKey  string  `pulumi:"secretKey"`
}

// SecretAwsInput is an input type that accepts SecretAwsArgs and SecretAwsOutput values.
// You can construct a concrete instance of `SecretAwsInput` via:
//
//	SecretAwsArgs{...}
type SecretAwsInput interface {
	pulumi.Input

	ToSecretAwsOutput() SecretAwsOutput
	ToSecretAwsOutputWithContext(context.Context) SecretAwsOutput
}

type SecretAwsArgs struct {
	AccessKey  pulumi.StringInput    `pulumi:"accessKey"`
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn    pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey  pulumi.StringInput    `pulumi:"secretKey"`
}

func (SecretAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAws)(nil)).Elem()
}

func (i SecretAwsArgs) ToSecretAwsOutput() SecretAwsOutput {
	return i.ToSecretAwsOutputWithContext(context.Background())
}

func (i SecretAwsArgs) ToSecretAwsOutputWithContext(ctx context.Context) SecretAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAwsOutput)
}

func (i SecretAwsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretAws] {
	return pulumix.Output[SecretAws]{
		OutputState: i.ToSecretAwsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretAwsArgs) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return i.ToSecretAwsPtrOutputWithContext(context.Background())
}

func (i SecretAwsArgs) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAwsOutput).ToSecretAwsPtrOutputWithContext(ctx)
}

// SecretAwsPtrInput is an input type that accepts SecretAwsArgs, SecretAwsPtr and SecretAwsPtrOutput values.
// You can construct a concrete instance of `SecretAwsPtrInput` via:
//
//	        SecretAwsArgs{...}
//
//	or:
//
//	        nil
type SecretAwsPtrInput interface {
	pulumi.Input

	ToSecretAwsPtrOutput() SecretAwsPtrOutput
	ToSecretAwsPtrOutputWithContext(context.Context) SecretAwsPtrOutput
}

type secretAwsPtrType SecretAwsArgs

func SecretAwsPtr(v *SecretAwsArgs) SecretAwsPtrInput {
	return (*secretAwsPtrType)(v)
}

func (*secretAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAws)(nil)).Elem()
}

func (i *secretAwsPtrType) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return i.ToSecretAwsPtrOutputWithContext(context.Background())
}

func (i *secretAwsPtrType) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAwsPtrOutput)
}

func (i *secretAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretAws] {
	return pulumix.Output[*SecretAws]{
		OutputState: i.ToSecretAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretAwsOutput struct{ *pulumi.OutputState }

func (SecretAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAws)(nil)).Elem()
}

func (o SecretAwsOutput) ToSecretAwsOutput() SecretAwsOutput {
	return o
}

func (o SecretAwsOutput) ToSecretAwsOutputWithContext(ctx context.Context) SecretAwsOutput {
	return o
}

func (o SecretAwsOutput) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return o.ToSecretAwsPtrOutputWithContext(context.Background())
}

func (o SecretAwsOutput) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretAws) *SecretAws {
		return &v
	}).(SecretAwsPtrOutput)
}

func (o SecretAwsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretAws] {
	return pulumix.Output[SecretAws]{
		OutputState: o.OutputState,
	}
}

func (o SecretAwsOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAws) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o SecretAwsOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretAws) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o SecretAwsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretAws) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o SecretAwsOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAws) string { return v.SecretKey }).(pulumi.StringOutput)
}

type SecretAwsPtrOutput struct{ *pulumi.OutputState }

func (SecretAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAws)(nil)).Elem()
}

func (o SecretAwsPtrOutput) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return o
}

func (o SecretAwsPtrOutput) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return o
}

func (o SecretAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretAws] {
	return pulumix.Output[*SecretAws]{
		OutputState: o.OutputState,
	}
}

func (o SecretAwsPtrOutput) Elem() SecretAwsOutput {
	return o.ApplyT(func(v *SecretAws) SecretAws {
		if v != nil {
			return *v
		}
		var ret SecretAws
		return ret
	}).(SecretAwsOutput)
}

func (o SecretAwsPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o SecretAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o SecretAwsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretAwsPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type SecretAzureConnector struct {
	Code string `pulumi:"code"`
	Url  string `pulumi:"url"`
}

// SecretAzureConnectorInput is an input type that accepts SecretAzureConnectorArgs and SecretAzureConnectorOutput values.
// You can construct a concrete instance of `SecretAzureConnectorInput` via:
//
//	SecretAzureConnectorArgs{...}
type SecretAzureConnectorInput interface {
	pulumi.Input

	ToSecretAzureConnectorOutput() SecretAzureConnectorOutput
	ToSecretAzureConnectorOutputWithContext(context.Context) SecretAzureConnectorOutput
}

type SecretAzureConnectorArgs struct {
	Code pulumi.StringInput `pulumi:"code"`
	Url  pulumi.StringInput `pulumi:"url"`
}

func (SecretAzureConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAzureConnector)(nil)).Elem()
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorOutput() SecretAzureConnectorOutput {
	return i.ToSecretAzureConnectorOutputWithContext(context.Background())
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorOutputWithContext(ctx context.Context) SecretAzureConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureConnectorOutput)
}

func (i SecretAzureConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[SecretAzureConnector] {
	return pulumix.Output[SecretAzureConnector]{
		OutputState: i.ToSecretAzureConnectorOutputWithContext(ctx).OutputState,
	}
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return i.ToSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureConnectorOutput).ToSecretAzureConnectorPtrOutputWithContext(ctx)
}

// SecretAzureConnectorPtrInput is an input type that accepts SecretAzureConnectorArgs, SecretAzureConnectorPtr and SecretAzureConnectorPtrOutput values.
// You can construct a concrete instance of `SecretAzureConnectorPtrInput` via:
//
//	        SecretAzureConnectorArgs{...}
//
//	or:
//
//	        nil
type SecretAzureConnectorPtrInput interface {
	pulumi.Input

	ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput
	ToSecretAzureConnectorPtrOutputWithContext(context.Context) SecretAzureConnectorPtrOutput
}

type secretAzureConnectorPtrType SecretAzureConnectorArgs

func SecretAzureConnectorPtr(v *SecretAzureConnectorArgs) SecretAzureConnectorPtrInput {
	return (*secretAzureConnectorPtrType)(v)
}

func (*secretAzureConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAzureConnector)(nil)).Elem()
}

func (i *secretAzureConnectorPtrType) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return i.ToSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (i *secretAzureConnectorPtrType) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureConnectorPtrOutput)
}

func (i *secretAzureConnectorPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretAzureConnector] {
	return pulumix.Output[*SecretAzureConnector]{
		OutputState: i.ToSecretAzureConnectorPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretAzureConnectorOutput struct{ *pulumi.OutputState }

func (SecretAzureConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAzureConnector)(nil)).Elem()
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorOutput() SecretAzureConnectorOutput {
	return o
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorOutputWithContext(ctx context.Context) SecretAzureConnectorOutput {
	return o
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return o.ToSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretAzureConnector) *SecretAzureConnector {
		return &v
	}).(SecretAzureConnectorPtrOutput)
}

func (o SecretAzureConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[SecretAzureConnector] {
	return pulumix.Output[SecretAzureConnector]{
		OutputState: o.OutputState,
	}
}

func (o SecretAzureConnectorOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAzureConnector) string { return v.Code }).(pulumi.StringOutput)
}

func (o SecretAzureConnectorOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAzureConnector) string { return v.Url }).(pulumi.StringOutput)
}

type SecretAzureConnectorPtrOutput struct{ *pulumi.OutputState }

func (SecretAzureConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAzureConnector)(nil)).Elem()
}

func (o SecretAzureConnectorPtrOutput) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return o
}

func (o SecretAzureConnectorPtrOutput) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return o
}

func (o SecretAzureConnectorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretAzureConnector] {
	return pulumix.Output[*SecretAzureConnector]{
		OutputState: o.OutputState,
	}
}

func (o SecretAzureConnectorPtrOutput) Elem() SecretAzureConnectorOutput {
	return o.ApplyT(func(v *SecretAzureConnector) SecretAzureConnector {
		if v != nil {
			return *v
		}
		var ret SecretAzureConnector
		return ret
	}).(SecretAzureConnectorOutput)
}

func (o SecretAzureConnectorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAzureConnector) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

func (o SecretAzureConnectorPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAzureConnector) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type SecretEcr struct {
	AccessKey  string   `pulumi:"accessKey"`
	ExternalId *string  `pulumi:"externalId"`
	Repos      []string `pulumi:"repos"`
	RoleArn    *string  `pulumi:"roleArn"`
	SecretKey  string   `pulumi:"secretKey"`
}

// SecretEcrInput is an input type that accepts SecretEcrArgs and SecretEcrOutput values.
// You can construct a concrete instance of `SecretEcrInput` via:
//
//	SecretEcrArgs{...}
type SecretEcrInput interface {
	pulumi.Input

	ToSecretEcrOutput() SecretEcrOutput
	ToSecretEcrOutputWithContext(context.Context) SecretEcrOutput
}

type SecretEcrArgs struct {
	AccessKey  pulumi.StringInput      `pulumi:"accessKey"`
	ExternalId pulumi.StringPtrInput   `pulumi:"externalId"`
	Repos      pulumi.StringArrayInput `pulumi:"repos"`
	RoleArn    pulumi.StringPtrInput   `pulumi:"roleArn"`
	SecretKey  pulumi.StringInput      `pulumi:"secretKey"`
}

func (SecretEcrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretEcr)(nil)).Elem()
}

func (i SecretEcrArgs) ToSecretEcrOutput() SecretEcrOutput {
	return i.ToSecretEcrOutputWithContext(context.Background())
}

func (i SecretEcrArgs) ToSecretEcrOutputWithContext(ctx context.Context) SecretEcrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEcrOutput)
}

func (i SecretEcrArgs) ToOutput(ctx context.Context) pulumix.Output[SecretEcr] {
	return pulumix.Output[SecretEcr]{
		OutputState: i.ToSecretEcrOutputWithContext(ctx).OutputState,
	}
}

func (i SecretEcrArgs) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return i.ToSecretEcrPtrOutputWithContext(context.Background())
}

func (i SecretEcrArgs) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEcrOutput).ToSecretEcrPtrOutputWithContext(ctx)
}

// SecretEcrPtrInput is an input type that accepts SecretEcrArgs, SecretEcrPtr and SecretEcrPtrOutput values.
// You can construct a concrete instance of `SecretEcrPtrInput` via:
//
//	        SecretEcrArgs{...}
//
//	or:
//
//	        nil
type SecretEcrPtrInput interface {
	pulumi.Input

	ToSecretEcrPtrOutput() SecretEcrPtrOutput
	ToSecretEcrPtrOutputWithContext(context.Context) SecretEcrPtrOutput
}

type secretEcrPtrType SecretEcrArgs

func SecretEcrPtr(v *SecretEcrArgs) SecretEcrPtrInput {
	return (*secretEcrPtrType)(v)
}

func (*secretEcrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretEcr)(nil)).Elem()
}

func (i *secretEcrPtrType) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return i.ToSecretEcrPtrOutputWithContext(context.Background())
}

func (i *secretEcrPtrType) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEcrPtrOutput)
}

func (i *secretEcrPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretEcr] {
	return pulumix.Output[*SecretEcr]{
		OutputState: i.ToSecretEcrPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretEcrOutput struct{ *pulumi.OutputState }

func (SecretEcrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretEcr)(nil)).Elem()
}

func (o SecretEcrOutput) ToSecretEcrOutput() SecretEcrOutput {
	return o
}

func (o SecretEcrOutput) ToSecretEcrOutputWithContext(ctx context.Context) SecretEcrOutput {
	return o
}

func (o SecretEcrOutput) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return o.ToSecretEcrPtrOutputWithContext(context.Background())
}

func (o SecretEcrOutput) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretEcr) *SecretEcr {
		return &v
	}).(SecretEcrPtrOutput)
}

func (o SecretEcrOutput) ToOutput(ctx context.Context) pulumix.Output[SecretEcr] {
	return pulumix.Output[SecretEcr]{
		OutputState: o.OutputState,
	}
}

func (o SecretEcrOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretEcr) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o SecretEcrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretEcr) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o SecretEcrOutput) Repos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretEcr) []string { return v.Repos }).(pulumi.StringArrayOutput)
}

func (o SecretEcrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretEcr) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o SecretEcrOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretEcr) string { return v.SecretKey }).(pulumi.StringOutput)
}

type SecretEcrPtrOutput struct{ *pulumi.OutputState }

func (SecretEcrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretEcr)(nil)).Elem()
}

func (o SecretEcrPtrOutput) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return o
}

func (o SecretEcrPtrOutput) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return o
}

func (o SecretEcrPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretEcr] {
	return pulumix.Output[*SecretEcr]{
		OutputState: o.OutputState,
	}
}

func (o SecretEcrPtrOutput) Elem() SecretEcrOutput {
	return o.ApplyT(func(v *SecretEcr) SecretEcr {
		if v != nil {
			return *v
		}
		var ret SecretEcr
		return ret
	}).(SecretEcrOutput)
}

func (o SecretEcrPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o SecretEcrPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o SecretEcrPtrOutput) Repos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretEcr) []string {
		if v == nil {
			return nil
		}
		return v.Repos
	}).(pulumi.StringArrayOutput)
}

func (o SecretEcrPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretEcrPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type SecretKeypair struct {
	Passphrase *string `pulumi:"passphrase"`
	PublicKey  *string `pulumi:"publicKey"`
	SecretKey  string  `pulumi:"secretKey"`
}

// SecretKeypairInput is an input type that accepts SecretKeypairArgs and SecretKeypairOutput values.
// You can construct a concrete instance of `SecretKeypairInput` via:
//
//	SecretKeypairArgs{...}
type SecretKeypairInput interface {
	pulumi.Input

	ToSecretKeypairOutput() SecretKeypairOutput
	ToSecretKeypairOutputWithContext(context.Context) SecretKeypairOutput
}

type SecretKeypairArgs struct {
	Passphrase pulumi.StringPtrInput `pulumi:"passphrase"`
	PublicKey  pulumi.StringPtrInput `pulumi:"publicKey"`
	SecretKey  pulumi.StringInput    `pulumi:"secretKey"`
}

func (SecretKeypairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretKeypair)(nil)).Elem()
}

func (i SecretKeypairArgs) ToSecretKeypairOutput() SecretKeypairOutput {
	return i.ToSecretKeypairOutputWithContext(context.Background())
}

func (i SecretKeypairArgs) ToSecretKeypairOutputWithContext(ctx context.Context) SecretKeypairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretKeypairOutput)
}

func (i SecretKeypairArgs) ToOutput(ctx context.Context) pulumix.Output[SecretKeypair] {
	return pulumix.Output[SecretKeypair]{
		OutputState: i.ToSecretKeypairOutputWithContext(ctx).OutputState,
	}
}

func (i SecretKeypairArgs) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return i.ToSecretKeypairPtrOutputWithContext(context.Background())
}

func (i SecretKeypairArgs) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretKeypairOutput).ToSecretKeypairPtrOutputWithContext(ctx)
}

// SecretKeypairPtrInput is an input type that accepts SecretKeypairArgs, SecretKeypairPtr and SecretKeypairPtrOutput values.
// You can construct a concrete instance of `SecretKeypairPtrInput` via:
//
//	        SecretKeypairArgs{...}
//
//	or:
//
//	        nil
type SecretKeypairPtrInput interface {
	pulumi.Input

	ToSecretKeypairPtrOutput() SecretKeypairPtrOutput
	ToSecretKeypairPtrOutputWithContext(context.Context) SecretKeypairPtrOutput
}

type secretKeypairPtrType SecretKeypairArgs

func SecretKeypairPtr(v *SecretKeypairArgs) SecretKeypairPtrInput {
	return (*secretKeypairPtrType)(v)
}

func (*secretKeypairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretKeypair)(nil)).Elem()
}

func (i *secretKeypairPtrType) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return i.ToSecretKeypairPtrOutputWithContext(context.Background())
}

func (i *secretKeypairPtrType) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretKeypairPtrOutput)
}

func (i *secretKeypairPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretKeypair] {
	return pulumix.Output[*SecretKeypair]{
		OutputState: i.ToSecretKeypairPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretKeypairOutput struct{ *pulumi.OutputState }

func (SecretKeypairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretKeypair)(nil)).Elem()
}

func (o SecretKeypairOutput) ToSecretKeypairOutput() SecretKeypairOutput {
	return o
}

func (o SecretKeypairOutput) ToSecretKeypairOutputWithContext(ctx context.Context) SecretKeypairOutput {
	return o
}

func (o SecretKeypairOutput) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return o.ToSecretKeypairPtrOutputWithContext(context.Background())
}

func (o SecretKeypairOutput) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretKeypair) *SecretKeypair {
		return &v
	}).(SecretKeypairPtrOutput)
}

func (o SecretKeypairOutput) ToOutput(ctx context.Context) pulumix.Output[SecretKeypair] {
	return pulumix.Output[SecretKeypair]{
		OutputState: o.OutputState,
	}
}

func (o SecretKeypairOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretKeypair) *string { return v.Passphrase }).(pulumi.StringPtrOutput)
}

func (o SecretKeypairOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretKeypair) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o SecretKeypairOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretKeypair) string { return v.SecretKey }).(pulumi.StringOutput)
}

type SecretKeypairPtrOutput struct{ *pulumi.OutputState }

func (SecretKeypairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretKeypair)(nil)).Elem()
}

func (o SecretKeypairPtrOutput) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return o
}

func (o SecretKeypairPtrOutput) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return o
}

func (o SecretKeypairPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretKeypair] {
	return pulumix.Output[*SecretKeypair]{
		OutputState: o.OutputState,
	}
}

func (o SecretKeypairPtrOutput) Elem() SecretKeypairOutput {
	return o.ApplyT(func(v *SecretKeypair) SecretKeypair {
		if v != nil {
			return *v
		}
		var ret SecretKeypair
		return ret
	}).(SecretKeypairOutput)
}

func (o SecretKeypairPtrOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretKeypair) *string {
		if v == nil {
			return nil
		}
		return v.Passphrase
	}).(pulumi.StringPtrOutput)
}

func (o SecretKeypairPtrOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretKeypair) *string {
		if v == nil {
			return nil
		}
		return v.PublicKey
	}).(pulumi.StringPtrOutput)
}

func (o SecretKeypairPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretKeypair) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type SecretNatsAccount struct {
	AccountId  string `pulumi:"accountId"`
	PrivateKey string `pulumi:"privateKey"`
}

// SecretNatsAccountInput is an input type that accepts SecretNatsAccountArgs and SecretNatsAccountOutput values.
// You can construct a concrete instance of `SecretNatsAccountInput` via:
//
//	SecretNatsAccountArgs{...}
type SecretNatsAccountInput interface {
	pulumi.Input

	ToSecretNatsAccountOutput() SecretNatsAccountOutput
	ToSecretNatsAccountOutputWithContext(context.Context) SecretNatsAccountOutput
}

type SecretNatsAccountArgs struct {
	AccountId  pulumi.StringInput `pulumi:"accountId"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (SecretNatsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretNatsAccount)(nil)).Elem()
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountOutput() SecretNatsAccountOutput {
	return i.ToSecretNatsAccountOutputWithContext(context.Background())
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountOutputWithContext(ctx context.Context) SecretNatsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretNatsAccountOutput)
}

func (i SecretNatsAccountArgs) ToOutput(ctx context.Context) pulumix.Output[SecretNatsAccount] {
	return pulumix.Output[SecretNatsAccount]{
		OutputState: i.ToSecretNatsAccountOutputWithContext(ctx).OutputState,
	}
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return i.ToSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretNatsAccountOutput).ToSecretNatsAccountPtrOutputWithContext(ctx)
}

// SecretNatsAccountPtrInput is an input type that accepts SecretNatsAccountArgs, SecretNatsAccountPtr and SecretNatsAccountPtrOutput values.
// You can construct a concrete instance of `SecretNatsAccountPtrInput` via:
//
//	        SecretNatsAccountArgs{...}
//
//	or:
//
//	        nil
type SecretNatsAccountPtrInput interface {
	pulumi.Input

	ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput
	ToSecretNatsAccountPtrOutputWithContext(context.Context) SecretNatsAccountPtrOutput
}

type secretNatsAccountPtrType SecretNatsAccountArgs

func SecretNatsAccountPtr(v *SecretNatsAccountArgs) SecretNatsAccountPtrInput {
	return (*secretNatsAccountPtrType)(v)
}

func (*secretNatsAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretNatsAccount)(nil)).Elem()
}

func (i *secretNatsAccountPtrType) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return i.ToSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (i *secretNatsAccountPtrType) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretNatsAccountPtrOutput)
}

func (i *secretNatsAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretNatsAccount] {
	return pulumix.Output[*SecretNatsAccount]{
		OutputState: i.ToSecretNatsAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretNatsAccountOutput struct{ *pulumi.OutputState }

func (SecretNatsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretNatsAccount)(nil)).Elem()
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountOutput() SecretNatsAccountOutput {
	return o
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountOutputWithContext(ctx context.Context) SecretNatsAccountOutput {
	return o
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return o.ToSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretNatsAccount) *SecretNatsAccount {
		return &v
	}).(SecretNatsAccountPtrOutput)
}

func (o SecretNatsAccountOutput) ToOutput(ctx context.Context) pulumix.Output[SecretNatsAccount] {
	return pulumix.Output[SecretNatsAccount]{
		OutputState: o.OutputState,
	}
}

func (o SecretNatsAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretNatsAccount) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o SecretNatsAccountOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretNatsAccount) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type SecretNatsAccountPtrOutput struct{ *pulumi.OutputState }

func (SecretNatsAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretNatsAccount)(nil)).Elem()
}

func (o SecretNatsAccountPtrOutput) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return o
}

func (o SecretNatsAccountPtrOutput) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return o
}

func (o SecretNatsAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretNatsAccount] {
	return pulumix.Output[*SecretNatsAccount]{
		OutputState: o.OutputState,
	}
}

func (o SecretNatsAccountPtrOutput) Elem() SecretNatsAccountOutput {
	return o.ApplyT(func(v *SecretNatsAccount) SecretNatsAccount {
		if v != nil {
			return *v
		}
		var ret SecretNatsAccount
		return ret
	}).(SecretNatsAccountOutput)
}

func (o SecretNatsAccountPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretNatsAccount) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

func (o SecretNatsAccountPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretNatsAccount) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type SecretOpaque struct {
	Encoding *string `pulumi:"encoding"`
	Payload  string  `pulumi:"payload"`
}

// SecretOpaqueInput is an input type that accepts SecretOpaqueArgs and SecretOpaqueOutput values.
// You can construct a concrete instance of `SecretOpaqueInput` via:
//
//	SecretOpaqueArgs{...}
type SecretOpaqueInput interface {
	pulumi.Input

	ToSecretOpaqueOutput() SecretOpaqueOutput
	ToSecretOpaqueOutputWithContext(context.Context) SecretOpaqueOutput
}

type SecretOpaqueArgs struct {
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	Payload  pulumi.StringInput    `pulumi:"payload"`
}

func (SecretOpaqueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretOpaque)(nil)).Elem()
}

func (i SecretOpaqueArgs) ToSecretOpaqueOutput() SecretOpaqueOutput {
	return i.ToSecretOpaqueOutputWithContext(context.Background())
}

func (i SecretOpaqueArgs) ToSecretOpaqueOutputWithContext(ctx context.Context) SecretOpaqueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOpaqueOutput)
}

func (i SecretOpaqueArgs) ToOutput(ctx context.Context) pulumix.Output[SecretOpaque] {
	return pulumix.Output[SecretOpaque]{
		OutputState: i.ToSecretOpaqueOutputWithContext(ctx).OutputState,
	}
}

func (i SecretOpaqueArgs) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return i.ToSecretOpaquePtrOutputWithContext(context.Background())
}

func (i SecretOpaqueArgs) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOpaqueOutput).ToSecretOpaquePtrOutputWithContext(ctx)
}

// SecretOpaquePtrInput is an input type that accepts SecretOpaqueArgs, SecretOpaquePtr and SecretOpaquePtrOutput values.
// You can construct a concrete instance of `SecretOpaquePtrInput` via:
//
//	        SecretOpaqueArgs{...}
//
//	or:
//
//	        nil
type SecretOpaquePtrInput interface {
	pulumi.Input

	ToSecretOpaquePtrOutput() SecretOpaquePtrOutput
	ToSecretOpaquePtrOutputWithContext(context.Context) SecretOpaquePtrOutput
}

type secretOpaquePtrType SecretOpaqueArgs

func SecretOpaquePtr(v *SecretOpaqueArgs) SecretOpaquePtrInput {
	return (*secretOpaquePtrType)(v)
}

func (*secretOpaquePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretOpaque)(nil)).Elem()
}

func (i *secretOpaquePtrType) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return i.ToSecretOpaquePtrOutputWithContext(context.Background())
}

func (i *secretOpaquePtrType) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOpaquePtrOutput)
}

func (i *secretOpaquePtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretOpaque] {
	return pulumix.Output[*SecretOpaque]{
		OutputState: i.ToSecretOpaquePtrOutputWithContext(ctx).OutputState,
	}
}

type SecretOpaqueOutput struct{ *pulumi.OutputState }

func (SecretOpaqueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretOpaque)(nil)).Elem()
}

func (o SecretOpaqueOutput) ToSecretOpaqueOutput() SecretOpaqueOutput {
	return o
}

func (o SecretOpaqueOutput) ToSecretOpaqueOutputWithContext(ctx context.Context) SecretOpaqueOutput {
	return o
}

func (o SecretOpaqueOutput) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return o.ToSecretOpaquePtrOutputWithContext(context.Background())
}

func (o SecretOpaqueOutput) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretOpaque) *SecretOpaque {
		return &v
	}).(SecretOpaquePtrOutput)
}

func (o SecretOpaqueOutput) ToOutput(ctx context.Context) pulumix.Output[SecretOpaque] {
	return pulumix.Output[SecretOpaque]{
		OutputState: o.OutputState,
	}
}

func (o SecretOpaqueOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretOpaque) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o SecretOpaqueOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v SecretOpaque) string { return v.Payload }).(pulumi.StringOutput)
}

type SecretOpaquePtrOutput struct{ *pulumi.OutputState }

func (SecretOpaquePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretOpaque)(nil)).Elem()
}

func (o SecretOpaquePtrOutput) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return o
}

func (o SecretOpaquePtrOutput) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return o
}

func (o SecretOpaquePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretOpaque] {
	return pulumix.Output[*SecretOpaque]{
		OutputState: o.OutputState,
	}
}

func (o SecretOpaquePtrOutput) Elem() SecretOpaqueOutput {
	return o.ApplyT(func(v *SecretOpaque) SecretOpaque {
		if v != nil {
			return *v
		}
		var ret SecretOpaque
		return ret
	}).(SecretOpaqueOutput)
}

func (o SecretOpaquePtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretOpaque) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

func (o SecretOpaquePtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretOpaque) *string {
		if v == nil {
			return nil
		}
		return &v.Payload
	}).(pulumi.StringPtrOutput)
}

type SecretTls struct {
	Cert  string  `pulumi:"cert"`
	Chain *string `pulumi:"chain"`
	Key   string  `pulumi:"key"`
}

// SecretTlsInput is an input type that accepts SecretTlsArgs and SecretTlsOutput values.
// You can construct a concrete instance of `SecretTlsInput` via:
//
//	SecretTlsArgs{...}
type SecretTlsInput interface {
	pulumi.Input

	ToSecretTlsOutput() SecretTlsOutput
	ToSecretTlsOutputWithContext(context.Context) SecretTlsOutput
}

type SecretTlsArgs struct {
	Cert  pulumi.StringInput    `pulumi:"cert"`
	Chain pulumi.StringPtrInput `pulumi:"chain"`
	Key   pulumi.StringInput    `pulumi:"key"`
}

func (SecretTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTls)(nil)).Elem()
}

func (i SecretTlsArgs) ToSecretTlsOutput() SecretTlsOutput {
	return i.ToSecretTlsOutputWithContext(context.Background())
}

func (i SecretTlsArgs) ToSecretTlsOutputWithContext(ctx context.Context) SecretTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTlsOutput)
}

func (i SecretTlsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretTls] {
	return pulumix.Output[SecretTls]{
		OutputState: i.ToSecretTlsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretTlsArgs) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return i.ToSecretTlsPtrOutputWithContext(context.Background())
}

func (i SecretTlsArgs) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTlsOutput).ToSecretTlsPtrOutputWithContext(ctx)
}

// SecretTlsPtrInput is an input type that accepts SecretTlsArgs, SecretTlsPtr and SecretTlsPtrOutput values.
// You can construct a concrete instance of `SecretTlsPtrInput` via:
//
//	        SecretTlsArgs{...}
//
//	or:
//
//	        nil
type SecretTlsPtrInput interface {
	pulumi.Input

	ToSecretTlsPtrOutput() SecretTlsPtrOutput
	ToSecretTlsPtrOutputWithContext(context.Context) SecretTlsPtrOutput
}

type secretTlsPtrType SecretTlsArgs

func SecretTlsPtr(v *SecretTlsArgs) SecretTlsPtrInput {
	return (*secretTlsPtrType)(v)
}

func (*secretTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretTls)(nil)).Elem()
}

func (i *secretTlsPtrType) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return i.ToSecretTlsPtrOutputWithContext(context.Background())
}

func (i *secretTlsPtrType) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTlsPtrOutput)
}

func (i *secretTlsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretTls] {
	return pulumix.Output[*SecretTls]{
		OutputState: i.ToSecretTlsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretTlsOutput struct{ *pulumi.OutputState }

func (SecretTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTls)(nil)).Elem()
}

func (o SecretTlsOutput) ToSecretTlsOutput() SecretTlsOutput {
	return o
}

func (o SecretTlsOutput) ToSecretTlsOutputWithContext(ctx context.Context) SecretTlsOutput {
	return o
}

func (o SecretTlsOutput) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return o.ToSecretTlsPtrOutputWithContext(context.Background())
}

func (o SecretTlsOutput) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretTls) *SecretTls {
		return &v
	}).(SecretTlsPtrOutput)
}

func (o SecretTlsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretTls] {
	return pulumix.Output[SecretTls]{
		OutputState: o.OutputState,
	}
}

func (o SecretTlsOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v SecretTls) string { return v.Cert }).(pulumi.StringOutput)
}

func (o SecretTlsOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretTls) *string { return v.Chain }).(pulumi.StringPtrOutput)
}

func (o SecretTlsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretTls) string { return v.Key }).(pulumi.StringOutput)
}

type SecretTlsPtrOutput struct{ *pulumi.OutputState }

func (SecretTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretTls)(nil)).Elem()
}

func (o SecretTlsPtrOutput) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return o
}

func (o SecretTlsPtrOutput) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return o
}

func (o SecretTlsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretTls] {
	return pulumix.Output[*SecretTls]{
		OutputState: o.OutputState,
	}
}

func (o SecretTlsPtrOutput) Elem() SecretTlsOutput {
	return o.ApplyT(func(v *SecretTls) SecretTls {
		if v != nil {
			return *v
		}
		var ret SecretTls
		return ret
	}).(SecretTlsOutput)
}

func (o SecretTlsPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretTls) *string {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o SecretTlsPtrOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretTls) *string {
		if v == nil {
			return nil
		}
		return v.Chain
	}).(pulumi.StringPtrOutput)
}

func (o SecretTlsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretTls) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretUserpass struct {
	Encoding *string `pulumi:"encoding"`
	Password string  `pulumi:"password"`
	Username string  `pulumi:"username"`
}

// SecretUserpassInput is an input type that accepts SecretUserpassArgs and SecretUserpassOutput values.
// You can construct a concrete instance of `SecretUserpassInput` via:
//
//	SecretUserpassArgs{...}
type SecretUserpassInput interface {
	pulumi.Input

	ToSecretUserpassOutput() SecretUserpassOutput
	ToSecretUserpassOutputWithContext(context.Context) SecretUserpassOutput
}

type SecretUserpassArgs struct {
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	Password pulumi.StringInput    `pulumi:"password"`
	Username pulumi.StringInput    `pulumi:"username"`
}

func (SecretUserpassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretUserpass)(nil)).Elem()
}

func (i SecretUserpassArgs) ToSecretUserpassOutput() SecretUserpassOutput {
	return i.ToSecretUserpassOutputWithContext(context.Background())
}

func (i SecretUserpassArgs) ToSecretUserpassOutputWithContext(ctx context.Context) SecretUserpassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretUserpassOutput)
}

func (i SecretUserpassArgs) ToOutput(ctx context.Context) pulumix.Output[SecretUserpass] {
	return pulumix.Output[SecretUserpass]{
		OutputState: i.ToSecretUserpassOutputWithContext(ctx).OutputState,
	}
}

func (i SecretUserpassArgs) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return i.ToSecretUserpassPtrOutputWithContext(context.Background())
}

func (i SecretUserpassArgs) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretUserpassOutput).ToSecretUserpassPtrOutputWithContext(ctx)
}

// SecretUserpassPtrInput is an input type that accepts SecretUserpassArgs, SecretUserpassPtr and SecretUserpassPtrOutput values.
// You can construct a concrete instance of `SecretUserpassPtrInput` via:
//
//	        SecretUserpassArgs{...}
//
//	or:
//
//	        nil
type SecretUserpassPtrInput interface {
	pulumi.Input

	ToSecretUserpassPtrOutput() SecretUserpassPtrOutput
	ToSecretUserpassPtrOutputWithContext(context.Context) SecretUserpassPtrOutput
}

type secretUserpassPtrType SecretUserpassArgs

func SecretUserpassPtr(v *SecretUserpassArgs) SecretUserpassPtrInput {
	return (*secretUserpassPtrType)(v)
}

func (*secretUserpassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretUserpass)(nil)).Elem()
}

func (i *secretUserpassPtrType) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return i.ToSecretUserpassPtrOutputWithContext(context.Background())
}

func (i *secretUserpassPtrType) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretUserpassPtrOutput)
}

func (i *secretUserpassPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretUserpass] {
	return pulumix.Output[*SecretUserpass]{
		OutputState: i.ToSecretUserpassPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretUserpassOutput struct{ *pulumi.OutputState }

func (SecretUserpassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretUserpass)(nil)).Elem()
}

func (o SecretUserpassOutput) ToSecretUserpassOutput() SecretUserpassOutput {
	return o
}

func (o SecretUserpassOutput) ToSecretUserpassOutputWithContext(ctx context.Context) SecretUserpassOutput {
	return o
}

func (o SecretUserpassOutput) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return o.ToSecretUserpassPtrOutputWithContext(context.Background())
}

func (o SecretUserpassOutput) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretUserpass) *SecretUserpass {
		return &v
	}).(SecretUserpassPtrOutput)
}

func (o SecretUserpassOutput) ToOutput(ctx context.Context) pulumix.Output[SecretUserpass] {
	return pulumix.Output[SecretUserpass]{
		OutputState: o.OutputState,
	}
}

func (o SecretUserpassOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretUserpass) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o SecretUserpassOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretUserpass) string { return v.Password }).(pulumi.StringOutput)
}

func (o SecretUserpassOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretUserpass) string { return v.Username }).(pulumi.StringOutput)
}

type SecretUserpassPtrOutput struct{ *pulumi.OutputState }

func (SecretUserpassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretUserpass)(nil)).Elem()
}

func (o SecretUserpassPtrOutput) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return o
}

func (o SecretUserpassPtrOutput) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return o
}

func (o SecretUserpassPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretUserpass] {
	return pulumix.Output[*SecretUserpass]{
		OutputState: o.OutputState,
	}
}

func (o SecretUserpassPtrOutput) Elem() SecretUserpassOutput {
	return o.ApplyT(func(v *SecretUserpass) SecretUserpass {
		if v != nil {
			return *v
		}
		var ret SecretUserpass
		return ret
	}).(SecretUserpassOutput)
}

func (o SecretUserpassPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretUserpass) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

func (o SecretUserpassPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretUserpass) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o SecretUserpassPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretUserpass) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type VolumeSetAutoscaling struct {
	MaxCapacity       int     `pulumi:"maxCapacity"`
	MinFreePercentage int     `pulumi:"minFreePercentage"`
	ScalingFactor     float64 `pulumi:"scalingFactor"`
}

// VolumeSetAutoscalingInput is an input type that accepts VolumeSetAutoscalingArgs and VolumeSetAutoscalingOutput values.
// You can construct a concrete instance of `VolumeSetAutoscalingInput` via:
//
//	VolumeSetAutoscalingArgs{...}
type VolumeSetAutoscalingInput interface {
	pulumi.Input

	ToVolumeSetAutoscalingOutput() VolumeSetAutoscalingOutput
	ToVolumeSetAutoscalingOutputWithContext(context.Context) VolumeSetAutoscalingOutput
}

type VolumeSetAutoscalingArgs struct {
	MaxCapacity       pulumi.IntInput     `pulumi:"maxCapacity"`
	MinFreePercentage pulumi.IntInput     `pulumi:"minFreePercentage"`
	ScalingFactor     pulumi.Float64Input `pulumi:"scalingFactor"`
}

func (VolumeSetAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetAutoscaling)(nil)).Elem()
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingOutput() VolumeSetAutoscalingOutput {
	return i.ToVolumeSetAutoscalingOutputWithContext(context.Background())
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingOutputWithContext(ctx context.Context) VolumeSetAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetAutoscalingOutput)
}

func (i VolumeSetAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[VolumeSetAutoscaling] {
	return pulumix.Output[VolumeSetAutoscaling]{
		OutputState: i.ToVolumeSetAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return i.ToVolumeSetAutoscalingPtrOutputWithContext(context.Background())
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetAutoscalingOutput).ToVolumeSetAutoscalingPtrOutputWithContext(ctx)
}

// VolumeSetAutoscalingPtrInput is an input type that accepts VolumeSetAutoscalingArgs, VolumeSetAutoscalingPtr and VolumeSetAutoscalingPtrOutput values.
// You can construct a concrete instance of `VolumeSetAutoscalingPtrInput` via:
//
//	        VolumeSetAutoscalingArgs{...}
//
//	or:
//
//	        nil
type VolumeSetAutoscalingPtrInput interface {
	pulumi.Input

	ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput
	ToVolumeSetAutoscalingPtrOutputWithContext(context.Context) VolumeSetAutoscalingPtrOutput
}

type volumeSetAutoscalingPtrType VolumeSetAutoscalingArgs

func VolumeSetAutoscalingPtr(v *VolumeSetAutoscalingArgs) VolumeSetAutoscalingPtrInput {
	return (*volumeSetAutoscalingPtrType)(v)
}

func (*volumeSetAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetAutoscaling)(nil)).Elem()
}

func (i *volumeSetAutoscalingPtrType) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return i.ToVolumeSetAutoscalingPtrOutputWithContext(context.Background())
}

func (i *volumeSetAutoscalingPtrType) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetAutoscalingPtrOutput)
}

func (i *volumeSetAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetAutoscaling] {
	return pulumix.Output[*VolumeSetAutoscaling]{
		OutputState: i.ToVolumeSetAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type VolumeSetAutoscalingOutput struct{ *pulumi.OutputState }

func (VolumeSetAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetAutoscaling)(nil)).Elem()
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingOutput() VolumeSetAutoscalingOutput {
	return o
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingOutputWithContext(ctx context.Context) VolumeSetAutoscalingOutput {
	return o
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return o.ToVolumeSetAutoscalingPtrOutputWithContext(context.Background())
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeSetAutoscaling) *VolumeSetAutoscaling {
		return &v
	}).(VolumeSetAutoscalingPtrOutput)
}

func (o VolumeSetAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[VolumeSetAutoscaling] {
	return pulumix.Output[VolumeSetAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetAutoscalingOutput) MaxCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeSetAutoscaling) int { return v.MaxCapacity }).(pulumi.IntOutput)
}

func (o VolumeSetAutoscalingOutput) MinFreePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeSetAutoscaling) int { return v.MinFreePercentage }).(pulumi.IntOutput)
}

func (o VolumeSetAutoscalingOutput) ScalingFactor() pulumi.Float64Output {
	return o.ApplyT(func(v VolumeSetAutoscaling) float64 { return v.ScalingFactor }).(pulumi.Float64Output)
}

type VolumeSetAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (VolumeSetAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetAutoscaling)(nil)).Elem()
}

func (o VolumeSetAutoscalingPtrOutput) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return o
}

func (o VolumeSetAutoscalingPtrOutput) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return o
}

func (o VolumeSetAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetAutoscaling] {
	return pulumix.Output[*VolumeSetAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetAutoscalingPtrOutput) Elem() VolumeSetAutoscalingOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) VolumeSetAutoscaling {
		if v != nil {
			return *v
		}
		var ret VolumeSetAutoscaling
		return ret
	}).(VolumeSetAutoscalingOutput)
}

func (o VolumeSetAutoscalingPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

func (o VolumeSetAutoscalingPtrOutput) MinFreePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinFreePercentage
	}).(pulumi.IntPtrOutput)
}

func (o VolumeSetAutoscalingPtrOutput) ScalingFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScalingFactor
	}).(pulumi.Float64PtrOutput)
}

type VolumeSetSnapshots struct {
	CreateFinalSnapshot *bool   `pulumi:"createFinalSnapshot"`
	RetentionDuration   *string `pulumi:"retentionDuration"`
	Schedule            *string `pulumi:"schedule"`
}

// VolumeSetSnapshotsInput is an input type that accepts VolumeSetSnapshotsArgs and VolumeSetSnapshotsOutput values.
// You can construct a concrete instance of `VolumeSetSnapshotsInput` via:
//
//	VolumeSetSnapshotsArgs{...}
type VolumeSetSnapshotsInput interface {
	pulumi.Input

	ToVolumeSetSnapshotsOutput() VolumeSetSnapshotsOutput
	ToVolumeSetSnapshotsOutputWithContext(context.Context) VolumeSetSnapshotsOutput
}

type VolumeSetSnapshotsArgs struct {
	CreateFinalSnapshot pulumi.BoolPtrInput   `pulumi:"createFinalSnapshot"`
	RetentionDuration   pulumi.StringPtrInput `pulumi:"retentionDuration"`
	Schedule            pulumi.StringPtrInput `pulumi:"schedule"`
}

func (VolumeSetSnapshotsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetSnapshots)(nil)).Elem()
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsOutput() VolumeSetSnapshotsOutput {
	return i.ToVolumeSetSnapshotsOutputWithContext(context.Background())
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsOutputWithContext(ctx context.Context) VolumeSetSnapshotsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetSnapshotsOutput)
}

func (i VolumeSetSnapshotsArgs) ToOutput(ctx context.Context) pulumix.Output[VolumeSetSnapshots] {
	return pulumix.Output[VolumeSetSnapshots]{
		OutputState: i.ToVolumeSetSnapshotsOutputWithContext(ctx).OutputState,
	}
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return i.ToVolumeSetSnapshotsPtrOutputWithContext(context.Background())
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetSnapshotsOutput).ToVolumeSetSnapshotsPtrOutputWithContext(ctx)
}

// VolumeSetSnapshotsPtrInput is an input type that accepts VolumeSetSnapshotsArgs, VolumeSetSnapshotsPtr and VolumeSetSnapshotsPtrOutput values.
// You can construct a concrete instance of `VolumeSetSnapshotsPtrInput` via:
//
//	        VolumeSetSnapshotsArgs{...}
//
//	or:
//
//	        nil
type VolumeSetSnapshotsPtrInput interface {
	pulumi.Input

	ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput
	ToVolumeSetSnapshotsPtrOutputWithContext(context.Context) VolumeSetSnapshotsPtrOutput
}

type volumeSetSnapshotsPtrType VolumeSetSnapshotsArgs

func VolumeSetSnapshotsPtr(v *VolumeSetSnapshotsArgs) VolumeSetSnapshotsPtrInput {
	return (*volumeSetSnapshotsPtrType)(v)
}

func (*volumeSetSnapshotsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetSnapshots)(nil)).Elem()
}

func (i *volumeSetSnapshotsPtrType) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return i.ToVolumeSetSnapshotsPtrOutputWithContext(context.Background())
}

func (i *volumeSetSnapshotsPtrType) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetSnapshotsPtrOutput)
}

func (i *volumeSetSnapshotsPtrType) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetSnapshots] {
	return pulumix.Output[*VolumeSetSnapshots]{
		OutputState: i.ToVolumeSetSnapshotsPtrOutputWithContext(ctx).OutputState,
	}
}

type VolumeSetSnapshotsOutput struct{ *pulumi.OutputState }

func (VolumeSetSnapshotsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetSnapshots)(nil)).Elem()
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsOutput() VolumeSetSnapshotsOutput {
	return o
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsOutputWithContext(ctx context.Context) VolumeSetSnapshotsOutput {
	return o
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return o.ToVolumeSetSnapshotsPtrOutputWithContext(context.Background())
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeSetSnapshots) *VolumeSetSnapshots {
		return &v
	}).(VolumeSetSnapshotsPtrOutput)
}

func (o VolumeSetSnapshotsOutput) ToOutput(ctx context.Context) pulumix.Output[VolumeSetSnapshots] {
	return pulumix.Output[VolumeSetSnapshots]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetSnapshotsOutput) CreateFinalSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeSetSnapshots) *bool { return v.CreateFinalSnapshot }).(pulumi.BoolPtrOutput)
}

func (o VolumeSetSnapshotsOutput) RetentionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetSnapshots) *string { return v.RetentionDuration }).(pulumi.StringPtrOutput)
}

func (o VolumeSetSnapshotsOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetSnapshots) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

type VolumeSetSnapshotsPtrOutput struct{ *pulumi.OutputState }

func (VolumeSetSnapshotsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetSnapshots)(nil)).Elem()
}

func (o VolumeSetSnapshotsPtrOutput) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return o
}

func (o VolumeSetSnapshotsPtrOutput) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return o
}

func (o VolumeSetSnapshotsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetSnapshots] {
	return pulumix.Output[*VolumeSetSnapshots]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetSnapshotsPtrOutput) Elem() VolumeSetSnapshotsOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) VolumeSetSnapshots {
		if v != nil {
			return *v
		}
		var ret VolumeSetSnapshots
		return ret
	}).(VolumeSetSnapshotsOutput)
}

func (o VolumeSetSnapshotsPtrOutput) CreateFinalSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) *bool {
		if v == nil {
			return nil
		}
		return v.CreateFinalSnapshot
	}).(pulumi.BoolPtrOutput)
}

func (o VolumeSetSnapshotsPtrOutput) RetentionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) *string {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(pulumi.StringPtrOutput)
}

func (o VolumeSetSnapshotsPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

type VolumeSetStatus struct {
	BindingId      *string  `pulumi:"bindingId"`
	Locations      []string `pulumi:"locations"`
	ParentId       *string  `pulumi:"parentId"`
	UsedByWorkload *string  `pulumi:"usedByWorkload"`
}

// VolumeSetStatusInput is an input type that accepts VolumeSetStatusArgs and VolumeSetStatusOutput values.
// You can construct a concrete instance of `VolumeSetStatusInput` via:
//
//	VolumeSetStatusArgs{...}
type VolumeSetStatusInput interface {
	pulumi.Input

	ToVolumeSetStatusOutput() VolumeSetStatusOutput
	ToVolumeSetStatusOutputWithContext(context.Context) VolumeSetStatusOutput
}

type VolumeSetStatusArgs struct {
	BindingId      pulumi.StringPtrInput   `pulumi:"bindingId"`
	Locations      pulumi.StringArrayInput `pulumi:"locations"`
	ParentId       pulumi.StringPtrInput   `pulumi:"parentId"`
	UsedByWorkload pulumi.StringPtrInput   `pulumi:"usedByWorkload"`
}

func (VolumeSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetStatus)(nil)).Elem()
}

func (i VolumeSetStatusArgs) ToVolumeSetStatusOutput() VolumeSetStatusOutput {
	return i.ToVolumeSetStatusOutputWithContext(context.Background())
}

func (i VolumeSetStatusArgs) ToVolumeSetStatusOutputWithContext(ctx context.Context) VolumeSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetStatusOutput)
}

func (i VolumeSetStatusArgs) ToOutput(ctx context.Context) pulumix.Output[VolumeSetStatus] {
	return pulumix.Output[VolumeSetStatus]{
		OutputState: i.ToVolumeSetStatusOutputWithContext(ctx).OutputState,
	}
}

// VolumeSetStatusArrayInput is an input type that accepts VolumeSetStatusArray and VolumeSetStatusArrayOutput values.
// You can construct a concrete instance of `VolumeSetStatusArrayInput` via:
//
//	VolumeSetStatusArray{ VolumeSetStatusArgs{...} }
type VolumeSetStatusArrayInput interface {
	pulumi.Input

	ToVolumeSetStatusArrayOutput() VolumeSetStatusArrayOutput
	ToVolumeSetStatusArrayOutputWithContext(context.Context) VolumeSetStatusArrayOutput
}

type VolumeSetStatusArray []VolumeSetStatusInput

func (VolumeSetStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeSetStatus)(nil)).Elem()
}

func (i VolumeSetStatusArray) ToVolumeSetStatusArrayOutput() VolumeSetStatusArrayOutput {
	return i.ToVolumeSetStatusArrayOutputWithContext(context.Background())
}

func (i VolumeSetStatusArray) ToVolumeSetStatusArrayOutputWithContext(ctx context.Context) VolumeSetStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetStatusArrayOutput)
}

func (i VolumeSetStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]VolumeSetStatus] {
	return pulumix.Output[[]VolumeSetStatus]{
		OutputState: i.ToVolumeSetStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type VolumeSetStatusOutput struct{ *pulumi.OutputState }

func (VolumeSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetStatus)(nil)).Elem()
}

func (o VolumeSetStatusOutput) ToVolumeSetStatusOutput() VolumeSetStatusOutput {
	return o
}

func (o VolumeSetStatusOutput) ToVolumeSetStatusOutputWithContext(ctx context.Context) VolumeSetStatusOutput {
	return o
}

func (o VolumeSetStatusOutput) ToOutput(ctx context.Context) pulumix.Output[VolumeSetStatus] {
	return pulumix.Output[VolumeSetStatus]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetStatusOutput) BindingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetStatus) *string { return v.BindingId }).(pulumi.StringPtrOutput)
}

func (o VolumeSetStatusOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeSetStatus) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

func (o VolumeSetStatusOutput) ParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetStatus) *string { return v.ParentId }).(pulumi.StringPtrOutput)
}

func (o VolumeSetStatusOutput) UsedByWorkload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetStatus) *string { return v.UsedByWorkload }).(pulumi.StringPtrOutput)
}

type VolumeSetStatusArrayOutput struct{ *pulumi.OutputState }

func (VolumeSetStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeSetStatus)(nil)).Elem()
}

func (o VolumeSetStatusArrayOutput) ToVolumeSetStatusArrayOutput() VolumeSetStatusArrayOutput {
	return o
}

func (o VolumeSetStatusArrayOutput) ToVolumeSetStatusArrayOutputWithContext(ctx context.Context) VolumeSetStatusArrayOutput {
	return o
}

func (o VolumeSetStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VolumeSetStatus] {
	return pulumix.Output[[]VolumeSetStatus]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetStatusArrayOutput) Index(i pulumi.IntInput) VolumeSetStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeSetStatus {
		return vs[0].([]VolumeSetStatus)[vs[1].(int)]
	}).(VolumeSetStatusOutput)
}

type WorkloadContainer struct {
	Args          []string                        `pulumi:"args"`
	Command       *string                         `pulumi:"command"`
	Cpu           *string                         `pulumi:"cpu"`
	Env           map[string]string               `pulumi:"env"`
	GpuNvidia     *WorkloadContainerGpuNvidia     `pulumi:"gpuNvidia"`
	Image         string                          `pulumi:"image"`
	InheritEnv    *bool                           `pulumi:"inheritEnv"`
	Lifecycle     *WorkloadContainerLifecycle     `pulumi:"lifecycle"`
	LivenessProbe *WorkloadContainerLivenessProbe `pulumi:"livenessProbe"`
	Memory        *string                         `pulumi:"memory"`
	Metrics       *WorkloadContainerMetrics       `pulumi:"metrics"`
	MinCpu        *string                         `pulumi:"minCpu"`
	MinMemory     *string                         `pulumi:"minMemory"`
	Name          string                          `pulumi:"name"`
	// Deprecated: The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead.
	Port             *int                             `pulumi:"port"`
	Ports            []WorkloadContainerPort          `pulumi:"ports"`
	ReadinessProbe   *WorkloadContainerReadinessProbe `pulumi:"readinessProbe"`
	Volumes          []WorkloadContainerVolume        `pulumi:"volumes"`
	WorkingDirectory *string                          `pulumi:"workingDirectory"`
}

// WorkloadContainerInput is an input type that accepts WorkloadContainerArgs and WorkloadContainerOutput values.
// You can construct a concrete instance of `WorkloadContainerInput` via:
//
//	WorkloadContainerArgs{...}
type WorkloadContainerInput interface {
	pulumi.Input

	ToWorkloadContainerOutput() WorkloadContainerOutput
	ToWorkloadContainerOutputWithContext(context.Context) WorkloadContainerOutput
}

type WorkloadContainerArgs struct {
	Args          pulumi.StringArrayInput                `pulumi:"args"`
	Command       pulumi.StringPtrInput                  `pulumi:"command"`
	Cpu           pulumi.StringPtrInput                  `pulumi:"cpu"`
	Env           pulumi.StringMapInput                  `pulumi:"env"`
	GpuNvidia     WorkloadContainerGpuNvidiaPtrInput     `pulumi:"gpuNvidia"`
	Image         pulumi.StringInput                     `pulumi:"image"`
	InheritEnv    pulumi.BoolPtrInput                    `pulumi:"inheritEnv"`
	Lifecycle     WorkloadContainerLifecyclePtrInput     `pulumi:"lifecycle"`
	LivenessProbe WorkloadContainerLivenessProbePtrInput `pulumi:"livenessProbe"`
	Memory        pulumi.StringPtrInput                  `pulumi:"memory"`
	Metrics       WorkloadContainerMetricsPtrInput       `pulumi:"metrics"`
	MinCpu        pulumi.StringPtrInput                  `pulumi:"minCpu"`
	MinMemory     pulumi.StringPtrInput                  `pulumi:"minMemory"`
	Name          pulumi.StringInput                     `pulumi:"name"`
	// Deprecated: The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead.
	Port             pulumi.IntPtrInput                      `pulumi:"port"`
	Ports            WorkloadContainerPortArrayInput         `pulumi:"ports"`
	ReadinessProbe   WorkloadContainerReadinessProbePtrInput `pulumi:"readinessProbe"`
	Volumes          WorkloadContainerVolumeArrayInput       `pulumi:"volumes"`
	WorkingDirectory pulumi.StringPtrInput                   `pulumi:"workingDirectory"`
}

func (WorkloadContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainer)(nil)).Elem()
}

func (i WorkloadContainerArgs) ToWorkloadContainerOutput() WorkloadContainerOutput {
	return i.ToWorkloadContainerOutputWithContext(context.Background())
}

func (i WorkloadContainerArgs) ToWorkloadContainerOutputWithContext(ctx context.Context) WorkloadContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerOutput)
}

func (i WorkloadContainerArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainer] {
	return pulumix.Output[WorkloadContainer]{
		OutputState: i.ToWorkloadContainerOutputWithContext(ctx).OutputState,
	}
}

// WorkloadContainerArrayInput is an input type that accepts WorkloadContainerArray and WorkloadContainerArrayOutput values.
// You can construct a concrete instance of `WorkloadContainerArrayInput` via:
//
//	WorkloadContainerArray{ WorkloadContainerArgs{...} }
type WorkloadContainerArrayInput interface {
	pulumi.Input

	ToWorkloadContainerArrayOutput() WorkloadContainerArrayOutput
	ToWorkloadContainerArrayOutputWithContext(context.Context) WorkloadContainerArrayOutput
}

type WorkloadContainerArray []WorkloadContainerInput

func (WorkloadContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainer)(nil)).Elem()
}

func (i WorkloadContainerArray) ToWorkloadContainerArrayOutput() WorkloadContainerArrayOutput {
	return i.ToWorkloadContainerArrayOutputWithContext(context.Background())
}

func (i WorkloadContainerArray) ToWorkloadContainerArrayOutputWithContext(ctx context.Context) WorkloadContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerArrayOutput)
}

func (i WorkloadContainerArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainer] {
	return pulumix.Output[[]WorkloadContainer]{
		OutputState: i.ToWorkloadContainerArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerOutput struct{ *pulumi.OutputState }

func (WorkloadContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainer)(nil)).Elem()
}

func (o WorkloadContainerOutput) ToWorkloadContainerOutput() WorkloadContainerOutput {
	return o
}

func (o WorkloadContainerOutput) ToWorkloadContainerOutputWithContext(ctx context.Context) WorkloadContainerOutput {
	return o
}

func (o WorkloadContainerOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainer] {
	return pulumix.Output[WorkloadContainer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainer) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o WorkloadContainerOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.Command }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadContainer) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

func (o WorkloadContainerOutput) GpuNvidia() WorkloadContainerGpuNvidiaPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerGpuNvidia { return v.GpuNvidia }).(WorkloadContainerGpuNvidiaPtrOutput)
}

func (o WorkloadContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainer) string { return v.Image }).(pulumi.StringOutput)
}

func (o WorkloadContainerOutput) InheritEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *bool { return v.InheritEnv }).(pulumi.BoolPtrOutput)
}

func (o WorkloadContainerOutput) Lifecycle() WorkloadContainerLifecyclePtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerLifecycle { return v.Lifecycle }).(WorkloadContainerLifecyclePtrOutput)
}

func (o WorkloadContainerOutput) LivenessProbe() WorkloadContainerLivenessProbePtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerLivenessProbe { return v.LivenessProbe }).(WorkloadContainerLivenessProbePtrOutput)
}

func (o WorkloadContainerOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Metrics() WorkloadContainerMetricsPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerMetrics { return v.Metrics }).(WorkloadContainerMetricsPtrOutput)
}

func (o WorkloadContainerOutput) MinCpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.MinCpu }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) MinMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.MinMemory }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainer) string { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead.
func (o WorkloadContainerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerOutput) Ports() WorkloadContainerPortArrayOutput {
	return o.ApplyT(func(v WorkloadContainer) []WorkloadContainerPort { return v.Ports }).(WorkloadContainerPortArrayOutput)
}

func (o WorkloadContainerOutput) ReadinessProbe() WorkloadContainerReadinessProbePtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerReadinessProbe { return v.ReadinessProbe }).(WorkloadContainerReadinessProbePtrOutput)
}

func (o WorkloadContainerOutput) Volumes() WorkloadContainerVolumeArrayOutput {
	return o.ApplyT(func(v WorkloadContainer) []WorkloadContainerVolume { return v.Volumes }).(WorkloadContainerVolumeArrayOutput)
}

func (o WorkloadContainerOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type WorkloadContainerArrayOutput struct{ *pulumi.OutputState }

func (WorkloadContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainer)(nil)).Elem()
}

func (o WorkloadContainerArrayOutput) ToWorkloadContainerArrayOutput() WorkloadContainerArrayOutput {
	return o
}

func (o WorkloadContainerArrayOutput) ToWorkloadContainerArrayOutputWithContext(ctx context.Context) WorkloadContainerArrayOutput {
	return o
}

func (o WorkloadContainerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainer] {
	return pulumix.Output[[]WorkloadContainer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerArrayOutput) Index(i pulumi.IntInput) WorkloadContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadContainer {
		return vs[0].([]WorkloadContainer)[vs[1].(int)]
	}).(WorkloadContainerOutput)
}

type WorkloadContainerGpuNvidia struct {
	Model    string `pulumi:"model"`
	Quantity int    `pulumi:"quantity"`
}

// WorkloadContainerGpuNvidiaInput is an input type that accepts WorkloadContainerGpuNvidiaArgs and WorkloadContainerGpuNvidiaOutput values.
// You can construct a concrete instance of `WorkloadContainerGpuNvidiaInput` via:
//
//	WorkloadContainerGpuNvidiaArgs{...}
type WorkloadContainerGpuNvidiaInput interface {
	pulumi.Input

	ToWorkloadContainerGpuNvidiaOutput() WorkloadContainerGpuNvidiaOutput
	ToWorkloadContainerGpuNvidiaOutputWithContext(context.Context) WorkloadContainerGpuNvidiaOutput
}

type WorkloadContainerGpuNvidiaArgs struct {
	Model    pulumi.StringInput `pulumi:"model"`
	Quantity pulumi.IntInput    `pulumi:"quantity"`
}

func (WorkloadContainerGpuNvidiaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaOutput() WorkloadContainerGpuNvidiaOutput {
	return i.ToWorkloadContainerGpuNvidiaOutputWithContext(context.Background())
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerGpuNvidiaOutput)
}

func (i WorkloadContainerGpuNvidiaArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerGpuNvidia] {
	return pulumix.Output[WorkloadContainerGpuNvidia]{
		OutputState: i.ToWorkloadContainerGpuNvidiaOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return i.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerGpuNvidiaOutput).ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx)
}

// WorkloadContainerGpuNvidiaPtrInput is an input type that accepts WorkloadContainerGpuNvidiaArgs, WorkloadContainerGpuNvidiaPtr and WorkloadContainerGpuNvidiaPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerGpuNvidiaPtrInput` via:
//
//	        WorkloadContainerGpuNvidiaArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerGpuNvidiaPtrInput interface {
	pulumi.Input

	ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput
	ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Context) WorkloadContainerGpuNvidiaPtrOutput
}

type workloadContainerGpuNvidiaPtrType WorkloadContainerGpuNvidiaArgs

func WorkloadContainerGpuNvidiaPtr(v *WorkloadContainerGpuNvidiaArgs) WorkloadContainerGpuNvidiaPtrInput {
	return (*workloadContainerGpuNvidiaPtrType)(v)
}

func (*workloadContainerGpuNvidiaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (i *workloadContainerGpuNvidiaPtrType) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return i.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Background())
}

func (i *workloadContainerGpuNvidiaPtrType) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerGpuNvidiaPtrOutput)
}

func (i *workloadContainerGpuNvidiaPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerGpuNvidia] {
	return pulumix.Output[*WorkloadContainerGpuNvidia]{
		OutputState: i.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerGpuNvidiaOutput struct{ *pulumi.OutputState }

func (WorkloadContainerGpuNvidiaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaOutput() WorkloadContainerGpuNvidiaOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return o.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerGpuNvidia) *WorkloadContainerGpuNvidia {
		return &v
	}).(WorkloadContainerGpuNvidiaPtrOutput)
}

func (o WorkloadContainerGpuNvidiaOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerGpuNvidia] {
	return pulumix.Output[WorkloadContainerGpuNvidia]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerGpuNvidiaOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerGpuNvidia) string { return v.Model }).(pulumi.StringOutput)
}

func (o WorkloadContainerGpuNvidiaOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadContainerGpuNvidia) int { return v.Quantity }).(pulumi.IntOutput)
}

type WorkloadContainerGpuNvidiaPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerGpuNvidiaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (o WorkloadContainerGpuNvidiaPtrOutput) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaPtrOutput) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerGpuNvidia] {
	return pulumix.Output[*WorkloadContainerGpuNvidia]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerGpuNvidiaPtrOutput) Elem() WorkloadContainerGpuNvidiaOutput {
	return o.ApplyT(func(v *WorkloadContainerGpuNvidia) WorkloadContainerGpuNvidia {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerGpuNvidia
		return ret
	}).(WorkloadContainerGpuNvidiaOutput)
}

func (o WorkloadContainerGpuNvidiaPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerGpuNvidia) *string {
		if v == nil {
			return nil
		}
		return &v.Model
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerGpuNvidiaPtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerGpuNvidia) *int {
		if v == nil {
			return nil
		}
		return &v.Quantity
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerLifecycle struct {
	PostStart *WorkloadContainerLifecyclePostStart `pulumi:"postStart"`
	PreStop   *WorkloadContainerLifecyclePreStop   `pulumi:"preStop"`
}

// WorkloadContainerLifecycleInput is an input type that accepts WorkloadContainerLifecycleArgs and WorkloadContainerLifecycleOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecycleInput` via:
//
//	WorkloadContainerLifecycleArgs{...}
type WorkloadContainerLifecycleInput interface {
	pulumi.Input

	ToWorkloadContainerLifecycleOutput() WorkloadContainerLifecycleOutput
	ToWorkloadContainerLifecycleOutputWithContext(context.Context) WorkloadContainerLifecycleOutput
}

type WorkloadContainerLifecycleArgs struct {
	PostStart WorkloadContainerLifecyclePostStartPtrInput `pulumi:"postStart"`
	PreStop   WorkloadContainerLifecyclePreStopPtrInput   `pulumi:"preStop"`
}

func (WorkloadContainerLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecycle)(nil)).Elem()
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecycleOutput() WorkloadContainerLifecycleOutput {
	return i.ToWorkloadContainerLifecycleOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecycleOutputWithContext(ctx context.Context) WorkloadContainerLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecycleOutput)
}

func (i WorkloadContainerLifecycleArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecycle] {
	return pulumix.Output[WorkloadContainerLifecycle]{
		OutputState: i.ToWorkloadContainerLifecycleOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return i.ToWorkloadContainerLifecyclePtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecycleOutput).ToWorkloadContainerLifecyclePtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePtrInput is an input type that accepts WorkloadContainerLifecycleArgs, WorkloadContainerLifecyclePtr and WorkloadContainerLifecyclePtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePtrInput` via:
//
//	        WorkloadContainerLifecycleArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput
	ToWorkloadContainerLifecyclePtrOutputWithContext(context.Context) WorkloadContainerLifecyclePtrOutput
}

type workloadContainerLifecyclePtrType WorkloadContainerLifecycleArgs

func WorkloadContainerLifecyclePtr(v *WorkloadContainerLifecycleArgs) WorkloadContainerLifecyclePtrInput {
	return (*workloadContainerLifecyclePtrType)(v)
}

func (*workloadContainerLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecycle)(nil)).Elem()
}

func (i *workloadContainerLifecyclePtrType) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return i.ToWorkloadContainerLifecyclePtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePtrType) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePtrOutput)
}

func (i *workloadContainerLifecyclePtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecycle] {
	return pulumix.Output[*WorkloadContainerLifecycle]{
		OutputState: i.ToWorkloadContainerLifecyclePtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecycleOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecycle)(nil)).Elem()
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecycleOutput() WorkloadContainerLifecycleOutput {
	return o
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecycleOutputWithContext(ctx context.Context) WorkloadContainerLifecycleOutput {
	return o
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return o.ToWorkloadContainerLifecyclePtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecycle) *WorkloadContainerLifecycle {
		return &v
	}).(WorkloadContainerLifecyclePtrOutput)
}

func (o WorkloadContainerLifecycleOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecycle] {
	return pulumix.Output[WorkloadContainerLifecycle]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecycleOutput) PostStart() WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLifecycle) *WorkloadContainerLifecyclePostStart { return v.PostStart }).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (o WorkloadContainerLifecycleOutput) PreStop() WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLifecycle) *WorkloadContainerLifecyclePreStop { return v.PreStop }).(WorkloadContainerLifecyclePreStopPtrOutput)
}

type WorkloadContainerLifecyclePtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecycle)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePtrOutput) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePtrOutput) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecycle] {
	return pulumix.Output[*WorkloadContainerLifecycle]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePtrOutput) Elem() WorkloadContainerLifecycleOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecycle) WorkloadContainerLifecycle {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecycle
		return ret
	}).(WorkloadContainerLifecycleOutput)
}

func (o WorkloadContainerLifecyclePtrOutput) PostStart() WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecycle) *WorkloadContainerLifecyclePostStart {
		if v == nil {
			return nil
		}
		return v.PostStart
	}).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (o WorkloadContainerLifecyclePtrOutput) PreStop() WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecycle) *WorkloadContainerLifecyclePreStop {
		if v == nil {
			return nil
		}
		return v.PreStop
	}).(WorkloadContainerLifecyclePreStopPtrOutput)
}

type WorkloadContainerLifecyclePostStart struct {
	Exec WorkloadContainerLifecyclePostStartExec `pulumi:"exec"`
}

// WorkloadContainerLifecyclePostStartInput is an input type that accepts WorkloadContainerLifecyclePostStartArgs and WorkloadContainerLifecyclePostStartOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartInput` via:
//
//	WorkloadContainerLifecyclePostStartArgs{...}
type WorkloadContainerLifecyclePostStartInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartOutput() WorkloadContainerLifecyclePostStartOutput
	ToWorkloadContainerLifecyclePostStartOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartOutput
}

type WorkloadContainerLifecyclePostStartArgs struct {
	Exec WorkloadContainerLifecyclePostStartExecInput `pulumi:"exec"`
}

func (WorkloadContainerLifecyclePostStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartOutput() WorkloadContainerLifecyclePostStartOutput {
	return i.ToWorkloadContainerLifecyclePostStartOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartOutput)
}

func (i WorkloadContainerLifecyclePostStartArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[WorkloadContainerLifecyclePostStart]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartOutput).ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePostStartPtrInput is an input type that accepts WorkloadContainerLifecyclePostStartArgs, WorkloadContainerLifecyclePostStartPtr and WorkloadContainerLifecyclePostStartPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartPtrInput` via:
//
//	        WorkloadContainerLifecyclePostStartArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePostStartPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput
	ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartPtrOutput
}

type workloadContainerLifecyclePostStartPtrType WorkloadContainerLifecyclePostStartArgs

func WorkloadContainerLifecyclePostStartPtr(v *WorkloadContainerLifecyclePostStartArgs) WorkloadContainerLifecyclePostStartPtrInput {
	return (*workloadContainerLifecyclePostStartPtrType)(v)
}

func (*workloadContainerLifecyclePostStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (i *workloadContainerLifecyclePostStartPtrType) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePostStartPtrType) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (i *workloadContainerLifecyclePostStartPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStart]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePostStartOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartOutput() WorkloadContainerLifecyclePostStartOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePostStart) *WorkloadContainerLifecyclePostStart {
		return &v
	}).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (o WorkloadContainerLifecyclePostStartOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[WorkloadContainerLifecyclePostStart]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartOutput) Exec() WorkloadContainerLifecyclePostStartExecOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePostStart) WorkloadContainerLifecyclePostStartExec { return v.Exec }).(WorkloadContainerLifecyclePostStartExecOutput)
}

type WorkloadContainerLifecyclePostStartPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStart]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) Elem() WorkloadContainerLifecyclePostStartOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStart) WorkloadContainerLifecyclePostStart {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePostStart
		return ret
	}).(WorkloadContainerLifecyclePostStartOutput)
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) Exec() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStart) *WorkloadContainerLifecyclePostStartExec {
		if v == nil {
			return nil
		}
		return &v.Exec
	}).(WorkloadContainerLifecyclePostStartExecPtrOutput)
}

type WorkloadContainerLifecyclePostStartExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerLifecyclePostStartExecInput is an input type that accepts WorkloadContainerLifecyclePostStartExecArgs and WorkloadContainerLifecyclePostStartExecOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartExecInput` via:
//
//	WorkloadContainerLifecyclePostStartExecArgs{...}
type WorkloadContainerLifecyclePostStartExecInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartExecOutput() WorkloadContainerLifecyclePostStartExecOutput
	ToWorkloadContainerLifecyclePostStartExecOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartExecOutput
}

type WorkloadContainerLifecyclePostStartExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerLifecyclePostStartExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecOutput() WorkloadContainerLifecyclePostStartExecOutput {
	return i.ToWorkloadContainerLifecyclePostStartExecOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartExecOutput)
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[WorkloadContainerLifecyclePostStartExec]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartExecOutput).ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePostStartExecPtrInput is an input type that accepts WorkloadContainerLifecyclePostStartExecArgs, WorkloadContainerLifecyclePostStartExecPtr and WorkloadContainerLifecyclePostStartExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartExecPtrInput` via:
//
//	        WorkloadContainerLifecyclePostStartExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePostStartExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput
	ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput
}

type workloadContainerLifecyclePostStartExecPtrType WorkloadContainerLifecyclePostStartExecArgs

func WorkloadContainerLifecyclePostStartExecPtr(v *WorkloadContainerLifecyclePostStartExecArgs) WorkloadContainerLifecyclePostStartExecPtrInput {
	return (*workloadContainerLifecyclePostStartExecPtrType)(v)
}

func (*workloadContainerLifecyclePostStartExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (i *workloadContainerLifecyclePostStartExecPtrType) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePostStartExecPtrType) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartExecPtrOutput)
}

func (i *workloadContainerLifecyclePostStartExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStartExec]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePostStartExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecOutput() WorkloadContainerLifecyclePostStartExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePostStartExec) *WorkloadContainerLifecyclePostStartExec {
		return &v
	}).(WorkloadContainerLifecyclePostStartExecPtrOutput)
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[WorkloadContainerLifecyclePostStartExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePostStartExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerLifecyclePostStartExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStartExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) Elem() WorkloadContainerLifecyclePostStartExecOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStartExec) WorkloadContainerLifecyclePostStartExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePostStartExec
		return ret
	}).(WorkloadContainerLifecyclePostStartExecOutput)
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStartExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerLifecyclePreStop struct {
	Exec WorkloadContainerLifecyclePreStopExec `pulumi:"exec"`
}

// WorkloadContainerLifecyclePreStopInput is an input type that accepts WorkloadContainerLifecyclePreStopArgs and WorkloadContainerLifecyclePreStopOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopInput` via:
//
//	WorkloadContainerLifecyclePreStopArgs{...}
type WorkloadContainerLifecyclePreStopInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopOutput() WorkloadContainerLifecyclePreStopOutput
	ToWorkloadContainerLifecyclePreStopOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopOutput
}

type WorkloadContainerLifecyclePreStopArgs struct {
	Exec WorkloadContainerLifecyclePreStopExecInput `pulumi:"exec"`
}

func (WorkloadContainerLifecyclePreStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopOutput() WorkloadContainerLifecyclePreStopOutput {
	return i.ToWorkloadContainerLifecyclePreStopOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopOutput)
}

func (i WorkloadContainerLifecyclePreStopArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[WorkloadContainerLifecyclePreStop]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopOutput).ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePreStopPtrInput is an input type that accepts WorkloadContainerLifecyclePreStopArgs, WorkloadContainerLifecyclePreStopPtr and WorkloadContainerLifecyclePreStopPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopPtrInput` via:
//
//	        WorkloadContainerLifecyclePreStopArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePreStopPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput
	ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopPtrOutput
}

type workloadContainerLifecyclePreStopPtrType WorkloadContainerLifecyclePreStopArgs

func WorkloadContainerLifecyclePreStopPtr(v *WorkloadContainerLifecyclePreStopArgs) WorkloadContainerLifecyclePreStopPtrInput {
	return (*workloadContainerLifecyclePreStopPtrType)(v)
}

func (*workloadContainerLifecyclePreStopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (i *workloadContainerLifecyclePreStopPtrType) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePreStopPtrType) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopPtrOutput)
}

func (i *workloadContainerLifecyclePreStopPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStop]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePreStopOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopOutput() WorkloadContainerLifecyclePreStopOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePreStop) *WorkloadContainerLifecyclePreStop {
		return &v
	}).(WorkloadContainerLifecyclePreStopPtrOutput)
}

func (o WorkloadContainerLifecyclePreStopOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[WorkloadContainerLifecyclePreStop]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopOutput) Exec() WorkloadContainerLifecyclePreStopExecOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePreStop) WorkloadContainerLifecyclePreStopExec { return v.Exec }).(WorkloadContainerLifecyclePreStopExecOutput)
}

type WorkloadContainerLifecyclePreStopPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStop]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) Elem() WorkloadContainerLifecyclePreStopOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStop) WorkloadContainerLifecyclePreStop {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePreStop
		return ret
	}).(WorkloadContainerLifecyclePreStopOutput)
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) Exec() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStop) *WorkloadContainerLifecyclePreStopExec {
		if v == nil {
			return nil
		}
		return &v.Exec
	}).(WorkloadContainerLifecyclePreStopExecPtrOutput)
}

type WorkloadContainerLifecyclePreStopExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerLifecyclePreStopExecInput is an input type that accepts WorkloadContainerLifecyclePreStopExecArgs and WorkloadContainerLifecyclePreStopExecOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopExecInput` via:
//
//	WorkloadContainerLifecyclePreStopExecArgs{...}
type WorkloadContainerLifecyclePreStopExecInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopExecOutput() WorkloadContainerLifecyclePreStopExecOutput
	ToWorkloadContainerLifecyclePreStopExecOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopExecOutput
}

type WorkloadContainerLifecyclePreStopExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerLifecyclePreStopExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecOutput() WorkloadContainerLifecyclePreStopExecOutput {
	return i.ToWorkloadContainerLifecyclePreStopExecOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopExecOutput)
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[WorkloadContainerLifecyclePreStopExec]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopExecOutput).ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePreStopExecPtrInput is an input type that accepts WorkloadContainerLifecyclePreStopExecArgs, WorkloadContainerLifecyclePreStopExecPtr and WorkloadContainerLifecyclePreStopExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopExecPtrInput` via:
//
//	        WorkloadContainerLifecyclePreStopExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePreStopExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput
	ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput
}

type workloadContainerLifecyclePreStopExecPtrType WorkloadContainerLifecyclePreStopExecArgs

func WorkloadContainerLifecyclePreStopExecPtr(v *WorkloadContainerLifecyclePreStopExecArgs) WorkloadContainerLifecyclePreStopExecPtrInput {
	return (*workloadContainerLifecyclePreStopExecPtrType)(v)
}

func (*workloadContainerLifecyclePreStopExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (i *workloadContainerLifecyclePreStopExecPtrType) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePreStopExecPtrType) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopExecPtrOutput)
}

func (i *workloadContainerLifecyclePreStopExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStopExec]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePreStopExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecOutput() WorkloadContainerLifecyclePreStopExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePreStopExec) *WorkloadContainerLifecyclePreStopExec {
		return &v
	}).(WorkloadContainerLifecyclePreStopExecPtrOutput)
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[WorkloadContainerLifecyclePreStopExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePreStopExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerLifecyclePreStopExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStopExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) Elem() WorkloadContainerLifecyclePreStopExecOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStopExec) WorkloadContainerLifecyclePreStopExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePreStopExec
		return ret
	}).(WorkloadContainerLifecyclePreStopExecOutput)
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStopExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerLivenessProbe struct {
	Exec                *WorkloadContainerLivenessProbeExec      `pulumi:"exec"`
	FailureThreshold    *int                                     `pulumi:"failureThreshold"`
	Grpc                *WorkloadContainerLivenessProbeGrpc      `pulumi:"grpc"`
	HttpGet             *WorkloadContainerLivenessProbeHttpGet   `pulumi:"httpGet"`
	InitialDelaySeconds *int                                     `pulumi:"initialDelaySeconds"`
	PeriodSeconds       *int                                     `pulumi:"periodSeconds"`
	SuccessThreshold    *int                                     `pulumi:"successThreshold"`
	TcpSocket           *WorkloadContainerLivenessProbeTcpSocket `pulumi:"tcpSocket"`
	TimeoutSeconds      *int                                     `pulumi:"timeoutSeconds"`
}

// WorkloadContainerLivenessProbeInput is an input type that accepts WorkloadContainerLivenessProbeArgs and WorkloadContainerLivenessProbeOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeInput` via:
//
//	WorkloadContainerLivenessProbeArgs{...}
type WorkloadContainerLivenessProbeInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeOutput() WorkloadContainerLivenessProbeOutput
	ToWorkloadContainerLivenessProbeOutputWithContext(context.Context) WorkloadContainerLivenessProbeOutput
}

type WorkloadContainerLivenessProbeArgs struct {
	Exec                WorkloadContainerLivenessProbeExecPtrInput      `pulumi:"exec"`
	FailureThreshold    pulumi.IntPtrInput                              `pulumi:"failureThreshold"`
	Grpc                WorkloadContainerLivenessProbeGrpcPtrInput      `pulumi:"grpc"`
	HttpGet             WorkloadContainerLivenessProbeHttpGetPtrInput   `pulumi:"httpGet"`
	InitialDelaySeconds pulumi.IntPtrInput                              `pulumi:"initialDelaySeconds"`
	PeriodSeconds       pulumi.IntPtrInput                              `pulumi:"periodSeconds"`
	SuccessThreshold    pulumi.IntPtrInput                              `pulumi:"successThreshold"`
	TcpSocket           WorkloadContainerLivenessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	TimeoutSeconds      pulumi.IntPtrInput                              `pulumi:"timeoutSeconds"`
}

func (WorkloadContainerLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbeOutput() WorkloadContainerLivenessProbeOutput {
	return i.ToWorkloadContainerLivenessProbeOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbeOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeOutput)
}

func (i WorkloadContainerLivenessProbeArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbe] {
	return pulumix.Output[WorkloadContainerLivenessProbe]{
		OutputState: i.ToWorkloadContainerLivenessProbeOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return i.ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeOutput).ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbePtrInput is an input type that accepts WorkloadContainerLivenessProbeArgs, WorkloadContainerLivenessProbePtr and WorkloadContainerLivenessProbePtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbePtrInput` via:
//
//	        WorkloadContainerLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbePtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput
	ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Context) WorkloadContainerLivenessProbePtrOutput
}

type workloadContainerLivenessProbePtrType WorkloadContainerLivenessProbeArgs

func WorkloadContainerLivenessProbePtr(v *WorkloadContainerLivenessProbeArgs) WorkloadContainerLivenessProbePtrInput {
	return (*workloadContainerLivenessProbePtrType)(v)
}

func (*workloadContainerLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (i *workloadContainerLivenessProbePtrType) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return i.ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbePtrType) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbePtrOutput)
}

func (i *workloadContainerLivenessProbePtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbe] {
	return pulumix.Output[*WorkloadContainerLivenessProbe]{
		OutputState: i.ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbeOutput() WorkloadContainerLivenessProbeOutput {
	return o
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbeOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeOutput {
	return o
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return o.ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbe {
		return &v
	}).(WorkloadContainerLivenessProbePtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbe] {
	return pulumix.Output[WorkloadContainerLivenessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeOutput) Exec() WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeExec { return v.Exec }).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) Grpc() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeGrpc { return v.Grpc }).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) HttpGet() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeHttpGet { return v.HttpGet }).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) TcpSocket() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeTcpSocket { return v.TcpSocket }).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbePtrOutput) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbePtrOutput) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbe] {
	return pulumix.Output[*WorkloadContainerLivenessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbePtrOutput) Elem() WorkloadContainerLivenessProbeOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) WorkloadContainerLivenessProbe {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbe
		return ret
	}).(WorkloadContainerLivenessProbeOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) Exec() WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) Grpc() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) HttpGet() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) TcpSocket() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerLivenessProbeExecInput is an input type that accepts WorkloadContainerLivenessProbeExecArgs and WorkloadContainerLivenessProbeExecOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeExecInput` via:
//
//	WorkloadContainerLivenessProbeExecArgs{...}
type WorkloadContainerLivenessProbeExecInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeExecOutput() WorkloadContainerLivenessProbeExecOutput
	ToWorkloadContainerLivenessProbeExecOutputWithContext(context.Context) WorkloadContainerLivenessProbeExecOutput
}

type WorkloadContainerLivenessProbeExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerLivenessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecOutput() WorkloadContainerLivenessProbeExecOutput {
	return i.ToWorkloadContainerLivenessProbeExecOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeExecOutput)
}

func (i WorkloadContainerLivenessProbeExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[WorkloadContainerLivenessProbeExec]{
		OutputState: i.ToWorkloadContainerLivenessProbeExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return i.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeExecOutput).ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeExecPtrInput is an input type that accepts WorkloadContainerLivenessProbeExecArgs, WorkloadContainerLivenessProbeExecPtr and WorkloadContainerLivenessProbeExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeExecPtrInput` via:
//
//	        WorkloadContainerLivenessProbeExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput
	ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeExecPtrOutput
}

type workloadContainerLivenessProbeExecPtrType WorkloadContainerLivenessProbeExecArgs

func WorkloadContainerLivenessProbeExecPtr(v *WorkloadContainerLivenessProbeExecArgs) WorkloadContainerLivenessProbeExecPtrInput {
	return (*workloadContainerLivenessProbeExecPtrType)(v)
}

func (*workloadContainerLivenessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeExecPtrType) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return i.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeExecPtrType) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (i *workloadContainerLivenessProbeExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[*WorkloadContainerLivenessProbeExec]{
		OutputState: i.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecOutput() WorkloadContainerLivenessProbeExecOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeExec) *WorkloadContainerLivenessProbeExec {
		return &v
	}).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (o WorkloadContainerLivenessProbeExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[WorkloadContainerLivenessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerLivenessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[*WorkloadContainerLivenessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) Elem() WorkloadContainerLivenessProbeExecOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeExec) WorkloadContainerLivenessProbeExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeExec
		return ret
	}).(WorkloadContainerLivenessProbeExecOutput)
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerLivenessProbeGrpc struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerLivenessProbeGrpcInput is an input type that accepts WorkloadContainerLivenessProbeGrpcArgs and WorkloadContainerLivenessProbeGrpcOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeGrpcInput` via:
//
//	WorkloadContainerLivenessProbeGrpcArgs{...}
type WorkloadContainerLivenessProbeGrpcInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeGrpcOutput() WorkloadContainerLivenessProbeGrpcOutput
	ToWorkloadContainerLivenessProbeGrpcOutputWithContext(context.Context) WorkloadContainerLivenessProbeGrpcOutput
}

type WorkloadContainerLivenessProbeGrpcArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerLivenessProbeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcOutput() WorkloadContainerLivenessProbeGrpcOutput {
	return i.ToWorkloadContainerLivenessProbeGrpcOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeGrpcOutput)
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[WorkloadContainerLivenessProbeGrpc]{
		OutputState: i.ToWorkloadContainerLivenessProbeGrpcOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeGrpcOutput).ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeGrpcPtrInput is an input type that accepts WorkloadContainerLivenessProbeGrpcArgs, WorkloadContainerLivenessProbeGrpcPtr and WorkloadContainerLivenessProbeGrpcPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeGrpcPtrInput` via:
//
//	        WorkloadContainerLivenessProbeGrpcArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeGrpcPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput
	ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput
}

type workloadContainerLivenessProbeGrpcPtrType WorkloadContainerLivenessProbeGrpcArgs

func WorkloadContainerLivenessProbeGrpcPtr(v *WorkloadContainerLivenessProbeGrpcArgs) WorkloadContainerLivenessProbeGrpcPtrInput {
	return (*workloadContainerLivenessProbeGrpcPtrType)(v)
}

func (*workloadContainerLivenessProbeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeGrpcPtrType) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeGrpcPtrType) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (i *workloadContainerLivenessProbeGrpcPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerLivenessProbeGrpc]{
		OutputState: i.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeGrpcOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcOutput() WorkloadContainerLivenessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeGrpc) *WorkloadContainerLivenessProbeGrpc {
		return &v
	}).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[WorkloadContainerLivenessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeGrpcOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeGrpc) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeGrpcPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerLivenessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) Elem() WorkloadContainerLivenessProbeGrpcOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeGrpc) WorkloadContainerLivenessProbeGrpc {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeGrpc
		return ret
	}).(WorkloadContainerLivenessProbeGrpcOutput)
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeGrpc) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeHttpGet struct {
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	Path        *string           `pulumi:"path"`
	Port        *int              `pulumi:"port"`
	Scheme      *string           `pulumi:"scheme"`
}

// WorkloadContainerLivenessProbeHttpGetInput is an input type that accepts WorkloadContainerLivenessProbeHttpGetArgs and WorkloadContainerLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeHttpGetInput` via:
//
//	WorkloadContainerLivenessProbeHttpGetArgs{...}
type WorkloadContainerLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeHttpGetOutput() WorkloadContainerLivenessProbeHttpGetOutput
	ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(context.Context) WorkloadContainerLivenessProbeHttpGetOutput
}

type WorkloadContainerLivenessProbeHttpGetArgs struct {
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	Path        pulumi.StringPtrInput `pulumi:"path"`
	Port        pulumi.IntPtrInput    `pulumi:"port"`
	Scheme      pulumi.StringPtrInput `pulumi:"scheme"`
}

func (WorkloadContainerLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetOutput() WorkloadContainerLivenessProbeHttpGetOutput {
	return i.ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeHttpGetOutput)
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerLivenessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeHttpGetOutput).ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeHttpGetPtrInput is an input type that accepts WorkloadContainerLivenessProbeHttpGetArgs, WorkloadContainerLivenessProbeHttpGetPtr and WorkloadContainerLivenessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeHttpGetPtrInput` via:
//
//	        WorkloadContainerLivenessProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput
	ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput
}

type workloadContainerLivenessProbeHttpGetPtrType WorkloadContainerLivenessProbeHttpGetArgs

func WorkloadContainerLivenessProbeHttpGetPtr(v *WorkloadContainerLivenessProbeHttpGetArgs) WorkloadContainerLivenessProbeHttpGetPtrInput {
	return (*workloadContainerLivenessProbeHttpGetPtrType)(v)
}

func (*workloadContainerLivenessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeHttpGetPtrType) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeHttpGetPtrType) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (i *workloadContainerLivenessProbeHttpGetPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerLivenessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetOutput() WorkloadContainerLivenessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeHttpGet) *WorkloadContainerLivenessProbeHttpGet {
		return &v
	}).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerLivenessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type WorkloadContainerLivenessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerLivenessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Elem() WorkloadContainerLivenessProbeHttpGetOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) WorkloadContainerLivenessProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeHttpGet
		return ret
	}).(WorkloadContainerLivenessProbeHttpGetOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(pulumi.StringMapOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type WorkloadContainerLivenessProbeTcpSocket struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerLivenessProbeTcpSocketInput is an input type that accepts WorkloadContainerLivenessProbeTcpSocketArgs and WorkloadContainerLivenessProbeTcpSocketOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeTcpSocketInput` via:
//
//	WorkloadContainerLivenessProbeTcpSocketArgs{...}
type WorkloadContainerLivenessProbeTcpSocketInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeTcpSocketOutput() WorkloadContainerLivenessProbeTcpSocketOutput
	ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(context.Context) WorkloadContainerLivenessProbeTcpSocketOutput
}

type WorkloadContainerLivenessProbeTcpSocketArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerLivenessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketOutput() WorkloadContainerLivenessProbeTcpSocketOutput {
	return i.ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeTcpSocketOutput)
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeTcpSocketOutput).ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeTcpSocketPtrInput is an input type that accepts WorkloadContainerLivenessProbeTcpSocketArgs, WorkloadContainerLivenessProbeTcpSocketPtr and WorkloadContainerLivenessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeTcpSocketPtrInput` via:
//
//	        WorkloadContainerLivenessProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput
	ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput
}

type workloadContainerLivenessProbeTcpSocketPtrType WorkloadContainerLivenessProbeTcpSocketArgs

func WorkloadContainerLivenessProbeTcpSocketPtr(v *WorkloadContainerLivenessProbeTcpSocketArgs) WorkloadContainerLivenessProbeTcpSocketPtrInput {
	return (*workloadContainerLivenessProbeTcpSocketPtrType)(v)
}

func (*workloadContainerLivenessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeTcpSocketPtrType) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeTcpSocketPtrType) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (i *workloadContainerLivenessProbeTcpSocketPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketOutput() WorkloadContainerLivenessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeTcpSocket) *WorkloadContainerLivenessProbeTcpSocket {
		return &v
	}).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeTcpSocket) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) Elem() WorkloadContainerLivenessProbeTcpSocketOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeTcpSocket) WorkloadContainerLivenessProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeTcpSocket
		return ret
	}).(WorkloadContainerLivenessProbeTcpSocketOutput)
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeTcpSocket) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerMetrics struct {
	Path string `pulumi:"path"`
	Port int    `pulumi:"port"`
}

// WorkloadContainerMetricsInput is an input type that accepts WorkloadContainerMetricsArgs and WorkloadContainerMetricsOutput values.
// You can construct a concrete instance of `WorkloadContainerMetricsInput` via:
//
//	WorkloadContainerMetricsArgs{...}
type WorkloadContainerMetricsInput interface {
	pulumi.Input

	ToWorkloadContainerMetricsOutput() WorkloadContainerMetricsOutput
	ToWorkloadContainerMetricsOutputWithContext(context.Context) WorkloadContainerMetricsOutput
}

type WorkloadContainerMetricsArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
	Port pulumi.IntInput    `pulumi:"port"`
}

func (WorkloadContainerMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerMetrics)(nil)).Elem()
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsOutput() WorkloadContainerMetricsOutput {
	return i.ToWorkloadContainerMetricsOutputWithContext(context.Background())
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsOutputWithContext(ctx context.Context) WorkloadContainerMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerMetricsOutput)
}

func (i WorkloadContainerMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerMetrics] {
	return pulumix.Output[WorkloadContainerMetrics]{
		OutputState: i.ToWorkloadContainerMetricsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return i.ToWorkloadContainerMetricsPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerMetricsOutput).ToWorkloadContainerMetricsPtrOutputWithContext(ctx)
}

// WorkloadContainerMetricsPtrInput is an input type that accepts WorkloadContainerMetricsArgs, WorkloadContainerMetricsPtr and WorkloadContainerMetricsPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerMetricsPtrInput` via:
//
//	        WorkloadContainerMetricsArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerMetricsPtrInput interface {
	pulumi.Input

	ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput
	ToWorkloadContainerMetricsPtrOutputWithContext(context.Context) WorkloadContainerMetricsPtrOutput
}

type workloadContainerMetricsPtrType WorkloadContainerMetricsArgs

func WorkloadContainerMetricsPtr(v *WorkloadContainerMetricsArgs) WorkloadContainerMetricsPtrInput {
	return (*workloadContainerMetricsPtrType)(v)
}

func (*workloadContainerMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerMetrics)(nil)).Elem()
}

func (i *workloadContainerMetricsPtrType) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return i.ToWorkloadContainerMetricsPtrOutputWithContext(context.Background())
}

func (i *workloadContainerMetricsPtrType) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerMetricsPtrOutput)
}

func (i *workloadContainerMetricsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerMetrics] {
	return pulumix.Output[*WorkloadContainerMetrics]{
		OutputState: i.ToWorkloadContainerMetricsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerMetricsOutput struct{ *pulumi.OutputState }

func (WorkloadContainerMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerMetrics)(nil)).Elem()
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsOutput() WorkloadContainerMetricsOutput {
	return o
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsOutputWithContext(ctx context.Context) WorkloadContainerMetricsOutput {
	return o
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return o.ToWorkloadContainerMetricsPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerMetrics) *WorkloadContainerMetrics {
		return &v
	}).(WorkloadContainerMetricsPtrOutput)
}

func (o WorkloadContainerMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerMetrics] {
	return pulumix.Output[WorkloadContainerMetrics]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerMetricsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerMetrics) string { return v.Path }).(pulumi.StringOutput)
}

func (o WorkloadContainerMetricsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadContainerMetrics) int { return v.Port }).(pulumi.IntOutput)
}

type WorkloadContainerMetricsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerMetrics)(nil)).Elem()
}

func (o WorkloadContainerMetricsPtrOutput) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return o
}

func (o WorkloadContainerMetricsPtrOutput) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return o
}

func (o WorkloadContainerMetricsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerMetrics] {
	return pulumix.Output[*WorkloadContainerMetrics]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerMetricsPtrOutput) Elem() WorkloadContainerMetricsOutput {
	return o.ApplyT(func(v *WorkloadContainerMetrics) WorkloadContainerMetrics {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerMetrics
		return ret
	}).(WorkloadContainerMetricsOutput)
}

func (o WorkloadContainerMetricsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerMetrics) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerMetricsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerMetrics) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerPort struct {
	Number   int     `pulumi:"number"`
	Protocol *string `pulumi:"protocol"`
}

// WorkloadContainerPortInput is an input type that accepts WorkloadContainerPortArgs and WorkloadContainerPortOutput values.
// You can construct a concrete instance of `WorkloadContainerPortInput` via:
//
//	WorkloadContainerPortArgs{...}
type WorkloadContainerPortInput interface {
	pulumi.Input

	ToWorkloadContainerPortOutput() WorkloadContainerPortOutput
	ToWorkloadContainerPortOutputWithContext(context.Context) WorkloadContainerPortOutput
}

type WorkloadContainerPortArgs struct {
	Number   pulumi.IntInput       `pulumi:"number"`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WorkloadContainerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerPort)(nil)).Elem()
}

func (i WorkloadContainerPortArgs) ToWorkloadContainerPortOutput() WorkloadContainerPortOutput {
	return i.ToWorkloadContainerPortOutputWithContext(context.Background())
}

func (i WorkloadContainerPortArgs) ToWorkloadContainerPortOutputWithContext(ctx context.Context) WorkloadContainerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerPortOutput)
}

func (i WorkloadContainerPortArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerPort] {
	return pulumix.Output[WorkloadContainerPort]{
		OutputState: i.ToWorkloadContainerPortOutputWithContext(ctx).OutputState,
	}
}

// WorkloadContainerPortArrayInput is an input type that accepts WorkloadContainerPortArray and WorkloadContainerPortArrayOutput values.
// You can construct a concrete instance of `WorkloadContainerPortArrayInput` via:
//
//	WorkloadContainerPortArray{ WorkloadContainerPortArgs{...} }
type WorkloadContainerPortArrayInput interface {
	pulumi.Input

	ToWorkloadContainerPortArrayOutput() WorkloadContainerPortArrayOutput
	ToWorkloadContainerPortArrayOutputWithContext(context.Context) WorkloadContainerPortArrayOutput
}

type WorkloadContainerPortArray []WorkloadContainerPortInput

func (WorkloadContainerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerPort)(nil)).Elem()
}

func (i WorkloadContainerPortArray) ToWorkloadContainerPortArrayOutput() WorkloadContainerPortArrayOutput {
	return i.ToWorkloadContainerPortArrayOutputWithContext(context.Background())
}

func (i WorkloadContainerPortArray) ToWorkloadContainerPortArrayOutputWithContext(ctx context.Context) WorkloadContainerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerPortArrayOutput)
}

func (i WorkloadContainerPortArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerPort] {
	return pulumix.Output[[]WorkloadContainerPort]{
		OutputState: i.ToWorkloadContainerPortArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerPortOutput struct{ *pulumi.OutputState }

func (WorkloadContainerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerPort)(nil)).Elem()
}

func (o WorkloadContainerPortOutput) ToWorkloadContainerPortOutput() WorkloadContainerPortOutput {
	return o
}

func (o WorkloadContainerPortOutput) ToWorkloadContainerPortOutputWithContext(ctx context.Context) WorkloadContainerPortOutput {
	return o
}

func (o WorkloadContainerPortOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerPort] {
	return pulumix.Output[WorkloadContainerPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerPortOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadContainerPort) int { return v.Number }).(pulumi.IntOutput)
}

func (o WorkloadContainerPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WorkloadContainerPortArrayOutput struct{ *pulumi.OutputState }

func (WorkloadContainerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerPort)(nil)).Elem()
}

func (o WorkloadContainerPortArrayOutput) ToWorkloadContainerPortArrayOutput() WorkloadContainerPortArrayOutput {
	return o
}

func (o WorkloadContainerPortArrayOutput) ToWorkloadContainerPortArrayOutputWithContext(ctx context.Context) WorkloadContainerPortArrayOutput {
	return o
}

func (o WorkloadContainerPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerPort] {
	return pulumix.Output[[]WorkloadContainerPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerPortArrayOutput) Index(i pulumi.IntInput) WorkloadContainerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadContainerPort {
		return vs[0].([]WorkloadContainerPort)[vs[1].(int)]
	}).(WorkloadContainerPortOutput)
}

type WorkloadContainerReadinessProbe struct {
	Exec                *WorkloadContainerReadinessProbeExec      `pulumi:"exec"`
	FailureThreshold    *int                                      `pulumi:"failureThreshold"`
	Grpc                *WorkloadContainerReadinessProbeGrpc      `pulumi:"grpc"`
	HttpGet             *WorkloadContainerReadinessProbeHttpGet   `pulumi:"httpGet"`
	InitialDelaySeconds *int                                      `pulumi:"initialDelaySeconds"`
	PeriodSeconds       *int                                      `pulumi:"periodSeconds"`
	SuccessThreshold    *int                                      `pulumi:"successThreshold"`
	TcpSocket           *WorkloadContainerReadinessProbeTcpSocket `pulumi:"tcpSocket"`
	TimeoutSeconds      *int                                      `pulumi:"timeoutSeconds"`
}

// WorkloadContainerReadinessProbeInput is an input type that accepts WorkloadContainerReadinessProbeArgs and WorkloadContainerReadinessProbeOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeInput` via:
//
//	WorkloadContainerReadinessProbeArgs{...}
type WorkloadContainerReadinessProbeInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeOutput() WorkloadContainerReadinessProbeOutput
	ToWorkloadContainerReadinessProbeOutputWithContext(context.Context) WorkloadContainerReadinessProbeOutput
}

type WorkloadContainerReadinessProbeArgs struct {
	Exec                WorkloadContainerReadinessProbeExecPtrInput      `pulumi:"exec"`
	FailureThreshold    pulumi.IntPtrInput                               `pulumi:"failureThreshold"`
	Grpc                WorkloadContainerReadinessProbeGrpcPtrInput      `pulumi:"grpc"`
	HttpGet             WorkloadContainerReadinessProbeHttpGetPtrInput   `pulumi:"httpGet"`
	InitialDelaySeconds pulumi.IntPtrInput                               `pulumi:"initialDelaySeconds"`
	PeriodSeconds       pulumi.IntPtrInput                               `pulumi:"periodSeconds"`
	SuccessThreshold    pulumi.IntPtrInput                               `pulumi:"successThreshold"`
	TcpSocket           WorkloadContainerReadinessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	TimeoutSeconds      pulumi.IntPtrInput                               `pulumi:"timeoutSeconds"`
}

func (WorkloadContainerReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbeOutput() WorkloadContainerReadinessProbeOutput {
	return i.ToWorkloadContainerReadinessProbeOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbeOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeOutput)
}

func (i WorkloadContainerReadinessProbeArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbe] {
	return pulumix.Output[WorkloadContainerReadinessProbe]{
		OutputState: i.ToWorkloadContainerReadinessProbeOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return i.ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeOutput).ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbePtrInput is an input type that accepts WorkloadContainerReadinessProbeArgs, WorkloadContainerReadinessProbePtr and WorkloadContainerReadinessProbePtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbePtrInput` via:
//
//	        WorkloadContainerReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbePtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput
	ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Context) WorkloadContainerReadinessProbePtrOutput
}

type workloadContainerReadinessProbePtrType WorkloadContainerReadinessProbeArgs

func WorkloadContainerReadinessProbePtr(v *WorkloadContainerReadinessProbeArgs) WorkloadContainerReadinessProbePtrInput {
	return (*workloadContainerReadinessProbePtrType)(v)
}

func (*workloadContainerReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (i *workloadContainerReadinessProbePtrType) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return i.ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbePtrType) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbePtrOutput)
}

func (i *workloadContainerReadinessProbePtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbe] {
	return pulumix.Output[*WorkloadContainerReadinessProbe]{
		OutputState: i.ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbeOutput() WorkloadContainerReadinessProbeOutput {
	return o
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbeOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeOutput {
	return o
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return o.ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbe {
		return &v
	}).(WorkloadContainerReadinessProbePtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbe] {
	return pulumix.Output[WorkloadContainerReadinessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeOutput) Exec() WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeExec { return v.Exec }).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) Grpc() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeGrpc { return v.Grpc }).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) HttpGet() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeHttpGet { return v.HttpGet }).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) TcpSocket() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeTcpSocket { return v.TcpSocket }).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbePtrOutput) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbePtrOutput) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbe] {
	return pulumix.Output[*WorkloadContainerReadinessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbePtrOutput) Elem() WorkloadContainerReadinessProbeOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) WorkloadContainerReadinessProbe {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbe
		return ret
	}).(WorkloadContainerReadinessProbeOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) Exec() WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) Grpc() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) HttpGet() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) TcpSocket() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerReadinessProbeExecInput is an input type that accepts WorkloadContainerReadinessProbeExecArgs and WorkloadContainerReadinessProbeExecOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeExecInput` via:
//
//	WorkloadContainerReadinessProbeExecArgs{...}
type WorkloadContainerReadinessProbeExecInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeExecOutput() WorkloadContainerReadinessProbeExecOutput
	ToWorkloadContainerReadinessProbeExecOutputWithContext(context.Context) WorkloadContainerReadinessProbeExecOutput
}

type WorkloadContainerReadinessProbeExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerReadinessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecOutput() WorkloadContainerReadinessProbeExecOutput {
	return i.ToWorkloadContainerReadinessProbeExecOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeExecOutput)
}

func (i WorkloadContainerReadinessProbeExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[WorkloadContainerReadinessProbeExec]{
		OutputState: i.ToWorkloadContainerReadinessProbeExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return i.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeExecOutput).ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeExecPtrInput is an input type that accepts WorkloadContainerReadinessProbeExecArgs, WorkloadContainerReadinessProbeExecPtr and WorkloadContainerReadinessProbeExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeExecPtrInput` via:
//
//	        WorkloadContainerReadinessProbeExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput
	ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeExecPtrOutput
}

type workloadContainerReadinessProbeExecPtrType WorkloadContainerReadinessProbeExecArgs

func WorkloadContainerReadinessProbeExecPtr(v *WorkloadContainerReadinessProbeExecArgs) WorkloadContainerReadinessProbeExecPtrInput {
	return (*workloadContainerReadinessProbeExecPtrType)(v)
}

func (*workloadContainerReadinessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeExecPtrType) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return i.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeExecPtrType) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (i *workloadContainerReadinessProbeExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[*WorkloadContainerReadinessProbeExec]{
		OutputState: i.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecOutput() WorkloadContainerReadinessProbeExecOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeExec) *WorkloadContainerReadinessProbeExec {
		return &v
	}).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (o WorkloadContainerReadinessProbeExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[WorkloadContainerReadinessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerReadinessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[*WorkloadContainerReadinessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) Elem() WorkloadContainerReadinessProbeExecOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeExec) WorkloadContainerReadinessProbeExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeExec
		return ret
	}).(WorkloadContainerReadinessProbeExecOutput)
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerReadinessProbeGrpc struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerReadinessProbeGrpcInput is an input type that accepts WorkloadContainerReadinessProbeGrpcArgs and WorkloadContainerReadinessProbeGrpcOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeGrpcInput` via:
//
//	WorkloadContainerReadinessProbeGrpcArgs{...}
type WorkloadContainerReadinessProbeGrpcInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeGrpcOutput() WorkloadContainerReadinessProbeGrpcOutput
	ToWorkloadContainerReadinessProbeGrpcOutputWithContext(context.Context) WorkloadContainerReadinessProbeGrpcOutput
}

type WorkloadContainerReadinessProbeGrpcArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerReadinessProbeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcOutput() WorkloadContainerReadinessProbeGrpcOutput {
	return i.ToWorkloadContainerReadinessProbeGrpcOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeGrpcOutput)
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[WorkloadContainerReadinessProbeGrpc]{
		OutputState: i.ToWorkloadContainerReadinessProbeGrpcOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeGrpcOutput).ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeGrpcPtrInput is an input type that accepts WorkloadContainerReadinessProbeGrpcArgs, WorkloadContainerReadinessProbeGrpcPtr and WorkloadContainerReadinessProbeGrpcPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeGrpcPtrInput` via:
//
//	        WorkloadContainerReadinessProbeGrpcArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeGrpcPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput
	ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput
}

type workloadContainerReadinessProbeGrpcPtrType WorkloadContainerReadinessProbeGrpcArgs

func WorkloadContainerReadinessProbeGrpcPtr(v *WorkloadContainerReadinessProbeGrpcArgs) WorkloadContainerReadinessProbeGrpcPtrInput {
	return (*workloadContainerReadinessProbeGrpcPtrType)(v)
}

func (*workloadContainerReadinessProbeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeGrpcPtrType) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeGrpcPtrType) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (i *workloadContainerReadinessProbeGrpcPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerReadinessProbeGrpc]{
		OutputState: i.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeGrpcOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcOutput() WorkloadContainerReadinessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeGrpc) *WorkloadContainerReadinessProbeGrpc {
		return &v
	}).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[WorkloadContainerReadinessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeGrpcOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeGrpc) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeGrpcPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerReadinessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) Elem() WorkloadContainerReadinessProbeGrpcOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeGrpc) WorkloadContainerReadinessProbeGrpc {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeGrpc
		return ret
	}).(WorkloadContainerReadinessProbeGrpcOutput)
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeGrpc) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeHttpGet struct {
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	Path        *string           `pulumi:"path"`
	Port        *int              `pulumi:"port"`
	Scheme      *string           `pulumi:"scheme"`
}

// WorkloadContainerReadinessProbeHttpGetInput is an input type that accepts WorkloadContainerReadinessProbeHttpGetArgs and WorkloadContainerReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeHttpGetInput` via:
//
//	WorkloadContainerReadinessProbeHttpGetArgs{...}
type WorkloadContainerReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeHttpGetOutput() WorkloadContainerReadinessProbeHttpGetOutput
	ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(context.Context) WorkloadContainerReadinessProbeHttpGetOutput
}

type WorkloadContainerReadinessProbeHttpGetArgs struct {
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	Path        pulumi.StringPtrInput `pulumi:"path"`
	Port        pulumi.IntPtrInput    `pulumi:"port"`
	Scheme      pulumi.StringPtrInput `pulumi:"scheme"`
}

func (WorkloadContainerReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetOutput() WorkloadContainerReadinessProbeHttpGetOutput {
	return i.ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeHttpGetOutput)
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerReadinessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeHttpGetOutput).ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeHttpGetPtrInput is an input type that accepts WorkloadContainerReadinessProbeHttpGetArgs, WorkloadContainerReadinessProbeHttpGetPtr and WorkloadContainerReadinessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeHttpGetPtrInput` via:
//
//	        WorkloadContainerReadinessProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput
	ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput
}

type workloadContainerReadinessProbeHttpGetPtrType WorkloadContainerReadinessProbeHttpGetArgs

func WorkloadContainerReadinessProbeHttpGetPtr(v *WorkloadContainerReadinessProbeHttpGetArgs) WorkloadContainerReadinessProbeHttpGetPtrInput {
	return (*workloadContainerReadinessProbeHttpGetPtrType)(v)
}

func (*workloadContainerReadinessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeHttpGetPtrType) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeHttpGetPtrType) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (i *workloadContainerReadinessProbeHttpGetPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerReadinessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetOutput() WorkloadContainerReadinessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeHttpGet) *WorkloadContainerReadinessProbeHttpGet {
		return &v
	}).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerReadinessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type WorkloadContainerReadinessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerReadinessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Elem() WorkloadContainerReadinessProbeHttpGetOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) WorkloadContainerReadinessProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeHttpGet
		return ret
	}).(WorkloadContainerReadinessProbeHttpGetOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(pulumi.StringMapOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type WorkloadContainerReadinessProbeTcpSocket struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerReadinessProbeTcpSocketInput is an input type that accepts WorkloadContainerReadinessProbeTcpSocketArgs and WorkloadContainerReadinessProbeTcpSocketOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeTcpSocketInput` via:
//
//	WorkloadContainerReadinessProbeTcpSocketArgs{...}
type WorkloadContainerReadinessProbeTcpSocketInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeTcpSocketOutput() WorkloadContainerReadinessProbeTcpSocketOutput
	ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(context.Context) WorkloadContainerReadinessProbeTcpSocketOutput
}

type WorkloadContainerReadinessProbeTcpSocketArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerReadinessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketOutput() WorkloadContainerReadinessProbeTcpSocketOutput {
	return i.ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeTcpSocketOutput)
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeTcpSocketOutput).ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeTcpSocketPtrInput is an input type that accepts WorkloadContainerReadinessProbeTcpSocketArgs, WorkloadContainerReadinessProbeTcpSocketPtr and WorkloadContainerReadinessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeTcpSocketPtrInput` via:
//
//	        WorkloadContainerReadinessProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput
	ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput
}

type workloadContainerReadinessProbeTcpSocketPtrType WorkloadContainerReadinessProbeTcpSocketArgs

func WorkloadContainerReadinessProbeTcpSocketPtr(v *WorkloadContainerReadinessProbeTcpSocketArgs) WorkloadContainerReadinessProbeTcpSocketPtrInput {
	return (*workloadContainerReadinessProbeTcpSocketPtrType)(v)
}

func (*workloadContainerReadinessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeTcpSocketPtrType) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeTcpSocketPtrType) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (i *workloadContainerReadinessProbeTcpSocketPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketOutput() WorkloadContainerReadinessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeTcpSocket) *WorkloadContainerReadinessProbeTcpSocket {
		return &v
	}).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeTcpSocket) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) Elem() WorkloadContainerReadinessProbeTcpSocketOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeTcpSocket) WorkloadContainerReadinessProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeTcpSocket
		return ret
	}).(WorkloadContainerReadinessProbeTcpSocketOutput)
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeTcpSocket) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerVolume struct {
	Path           string  `pulumi:"path"`
	RecoveryPolicy *string `pulumi:"recoveryPolicy"`
	Uri            string  `pulumi:"uri"`
}

// WorkloadContainerVolumeInput is an input type that accepts WorkloadContainerVolumeArgs and WorkloadContainerVolumeOutput values.
// You can construct a concrete instance of `WorkloadContainerVolumeInput` via:
//
//	WorkloadContainerVolumeArgs{...}
type WorkloadContainerVolumeInput interface {
	pulumi.Input

	ToWorkloadContainerVolumeOutput() WorkloadContainerVolumeOutput
	ToWorkloadContainerVolumeOutputWithContext(context.Context) WorkloadContainerVolumeOutput
}

type WorkloadContainerVolumeArgs struct {
	Path           pulumi.StringInput    `pulumi:"path"`
	RecoveryPolicy pulumi.StringPtrInput `pulumi:"recoveryPolicy"`
	Uri            pulumi.StringInput    `pulumi:"uri"`
}

func (WorkloadContainerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerVolume)(nil)).Elem()
}

func (i WorkloadContainerVolumeArgs) ToWorkloadContainerVolumeOutput() WorkloadContainerVolumeOutput {
	return i.ToWorkloadContainerVolumeOutputWithContext(context.Background())
}

func (i WorkloadContainerVolumeArgs) ToWorkloadContainerVolumeOutputWithContext(ctx context.Context) WorkloadContainerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerVolumeOutput)
}

func (i WorkloadContainerVolumeArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerVolume] {
	return pulumix.Output[WorkloadContainerVolume]{
		OutputState: i.ToWorkloadContainerVolumeOutputWithContext(ctx).OutputState,
	}
}

// WorkloadContainerVolumeArrayInput is an input type that accepts WorkloadContainerVolumeArray and WorkloadContainerVolumeArrayOutput values.
// You can construct a concrete instance of `WorkloadContainerVolumeArrayInput` via:
//
//	WorkloadContainerVolumeArray{ WorkloadContainerVolumeArgs{...} }
type WorkloadContainerVolumeArrayInput interface {
	pulumi.Input

	ToWorkloadContainerVolumeArrayOutput() WorkloadContainerVolumeArrayOutput
	ToWorkloadContainerVolumeArrayOutputWithContext(context.Context) WorkloadContainerVolumeArrayOutput
}

type WorkloadContainerVolumeArray []WorkloadContainerVolumeInput

func (WorkloadContainerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerVolume)(nil)).Elem()
}

func (i WorkloadContainerVolumeArray) ToWorkloadContainerVolumeArrayOutput() WorkloadContainerVolumeArrayOutput {
	return i.ToWorkloadContainerVolumeArrayOutputWithContext(context.Background())
}

func (i WorkloadContainerVolumeArray) ToWorkloadContainerVolumeArrayOutputWithContext(ctx context.Context) WorkloadContainerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerVolumeArrayOutput)
}

func (i WorkloadContainerVolumeArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerVolume] {
	return pulumix.Output[[]WorkloadContainerVolume]{
		OutputState: i.ToWorkloadContainerVolumeArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerVolumeOutput struct{ *pulumi.OutputState }

func (WorkloadContainerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerVolume)(nil)).Elem()
}

func (o WorkloadContainerVolumeOutput) ToWorkloadContainerVolumeOutput() WorkloadContainerVolumeOutput {
	return o
}

func (o WorkloadContainerVolumeOutput) ToWorkloadContainerVolumeOutputWithContext(ctx context.Context) WorkloadContainerVolumeOutput {
	return o
}

func (o WorkloadContainerVolumeOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerVolume] {
	return pulumix.Output[WorkloadContainerVolume]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerVolume) string { return v.Path }).(pulumi.StringOutput)
}

func (o WorkloadContainerVolumeOutput) RecoveryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerVolume) *string { return v.RecoveryPolicy }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerVolumeOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerVolume) string { return v.Uri }).(pulumi.StringOutput)
}

type WorkloadContainerVolumeArrayOutput struct{ *pulumi.OutputState }

func (WorkloadContainerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerVolume)(nil)).Elem()
}

func (o WorkloadContainerVolumeArrayOutput) ToWorkloadContainerVolumeArrayOutput() WorkloadContainerVolumeArrayOutput {
	return o
}

func (o WorkloadContainerVolumeArrayOutput) ToWorkloadContainerVolumeArrayOutputWithContext(ctx context.Context) WorkloadContainerVolumeArrayOutput {
	return o
}

func (o WorkloadContainerVolumeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerVolume] {
	return pulumix.Output[[]WorkloadContainerVolume]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerVolumeArrayOutput) Index(i pulumi.IntInput) WorkloadContainerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadContainerVolume {
		return vs[0].([]WorkloadContainerVolume)[vs[1].(int)]
	}).(WorkloadContainerVolumeOutput)
}

type WorkloadFirewallSpec struct {
	External *WorkloadFirewallSpecExternal `pulumi:"external"`
	Internal *WorkloadFirewallSpecInternal `pulumi:"internal"`
}

// WorkloadFirewallSpecInput is an input type that accepts WorkloadFirewallSpecArgs and WorkloadFirewallSpecOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecInput` via:
//
//	WorkloadFirewallSpecArgs{...}
type WorkloadFirewallSpecInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecOutput() WorkloadFirewallSpecOutput
	ToWorkloadFirewallSpecOutputWithContext(context.Context) WorkloadFirewallSpecOutput
}

type WorkloadFirewallSpecArgs struct {
	External WorkloadFirewallSpecExternalPtrInput `pulumi:"external"`
	Internal WorkloadFirewallSpecInternalPtrInput `pulumi:"internal"`
}

func (WorkloadFirewallSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpec)(nil)).Elem()
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecOutput() WorkloadFirewallSpecOutput {
	return i.ToWorkloadFirewallSpecOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecOutputWithContext(ctx context.Context) WorkloadFirewallSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecOutput)
}

func (i WorkloadFirewallSpecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpec] {
	return pulumix.Output[WorkloadFirewallSpec]{
		OutputState: i.ToWorkloadFirewallSpecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return i.ToWorkloadFirewallSpecPtrOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecOutput).ToWorkloadFirewallSpecPtrOutputWithContext(ctx)
}

// WorkloadFirewallSpecPtrInput is an input type that accepts WorkloadFirewallSpecArgs, WorkloadFirewallSpecPtr and WorkloadFirewallSpecPtrOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecPtrInput` via:
//
//	        WorkloadFirewallSpecArgs{...}
//
//	or:
//
//	        nil
type WorkloadFirewallSpecPtrInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput
	ToWorkloadFirewallSpecPtrOutputWithContext(context.Context) WorkloadFirewallSpecPtrOutput
}

type workloadFirewallSpecPtrType WorkloadFirewallSpecArgs

func WorkloadFirewallSpecPtr(v *WorkloadFirewallSpecArgs) WorkloadFirewallSpecPtrInput {
	return (*workloadFirewallSpecPtrType)(v)
}

func (*workloadFirewallSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpec)(nil)).Elem()
}

func (i *workloadFirewallSpecPtrType) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return i.ToWorkloadFirewallSpecPtrOutputWithContext(context.Background())
}

func (i *workloadFirewallSpecPtrType) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecPtrOutput)
}

func (i *workloadFirewallSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpec] {
	return pulumix.Output[*WorkloadFirewallSpec]{
		OutputState: i.ToWorkloadFirewallSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpec)(nil)).Elem()
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecOutput() WorkloadFirewallSpecOutput {
	return o
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecOutputWithContext(ctx context.Context) WorkloadFirewallSpecOutput {
	return o
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return o.ToWorkloadFirewallSpecPtrOutputWithContext(context.Background())
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadFirewallSpec) *WorkloadFirewallSpec {
		return &v
	}).(WorkloadFirewallSpecPtrOutput)
}

func (o WorkloadFirewallSpecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpec] {
	return pulumix.Output[WorkloadFirewallSpec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecOutput) External() WorkloadFirewallSpecExternalPtrOutput {
	return o.ApplyT(func(v WorkloadFirewallSpec) *WorkloadFirewallSpecExternal { return v.External }).(WorkloadFirewallSpecExternalPtrOutput)
}

func (o WorkloadFirewallSpecOutput) Internal() WorkloadFirewallSpecInternalPtrOutput {
	return o.ApplyT(func(v WorkloadFirewallSpec) *WorkloadFirewallSpecInternal { return v.Internal }).(WorkloadFirewallSpecInternalPtrOutput)
}

type WorkloadFirewallSpecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpec)(nil)).Elem()
}

func (o WorkloadFirewallSpecPtrOutput) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return o
}

func (o WorkloadFirewallSpecPtrOutput) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return o
}

func (o WorkloadFirewallSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpec] {
	return pulumix.Output[*WorkloadFirewallSpec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecPtrOutput) Elem() WorkloadFirewallSpecOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpec) WorkloadFirewallSpec {
		if v != nil {
			return *v
		}
		var ret WorkloadFirewallSpec
		return ret
	}).(WorkloadFirewallSpecOutput)
}

func (o WorkloadFirewallSpecPtrOutput) External() WorkloadFirewallSpecExternalPtrOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpec) *WorkloadFirewallSpecExternal {
		if v == nil {
			return nil
		}
		return v.External
	}).(WorkloadFirewallSpecExternalPtrOutput)
}

func (o WorkloadFirewallSpecPtrOutput) Internal() WorkloadFirewallSpecInternalPtrOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpec) *WorkloadFirewallSpecInternal {
		if v == nil {
			return nil
		}
		return v.Internal
	}).(WorkloadFirewallSpecInternalPtrOutput)
}

type WorkloadFirewallSpecExternal struct {
	InboundAllowCidrs      []string                                        `pulumi:"inboundAllowCidrs"`
	OutboundAllowCidrs     []string                                        `pulumi:"outboundAllowCidrs"`
	OutboundAllowHostnames []string                                        `pulumi:"outboundAllowHostnames"`
	OutboundAllowPorts     []WorkloadFirewallSpecExternalOutboundAllowPort `pulumi:"outboundAllowPorts"`
}

// WorkloadFirewallSpecExternalInput is an input type that accepts WorkloadFirewallSpecExternalArgs and WorkloadFirewallSpecExternalOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalInput` via:
//
//	WorkloadFirewallSpecExternalArgs{...}
type WorkloadFirewallSpecExternalInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalOutput() WorkloadFirewallSpecExternalOutput
	ToWorkloadFirewallSpecExternalOutputWithContext(context.Context) WorkloadFirewallSpecExternalOutput
}

type WorkloadFirewallSpecExternalArgs struct {
	InboundAllowCidrs      pulumi.StringArrayInput                                 `pulumi:"inboundAllowCidrs"`
	OutboundAllowCidrs     pulumi.StringArrayInput                                 `pulumi:"outboundAllowCidrs"`
	OutboundAllowHostnames pulumi.StringArrayInput                                 `pulumi:"outboundAllowHostnames"`
	OutboundAllowPorts     WorkloadFirewallSpecExternalOutboundAllowPortArrayInput `pulumi:"outboundAllowPorts"`
}

func (WorkloadFirewallSpecExternalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalOutput() WorkloadFirewallSpecExternalOutput {
	return i.ToWorkloadFirewallSpecExternalOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutput)
}

func (i WorkloadFirewallSpecExternalArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternal] {
	return pulumix.Output[WorkloadFirewallSpecExternal]{
		OutputState: i.ToWorkloadFirewallSpecExternalOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return i.ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutput).ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx)
}

// WorkloadFirewallSpecExternalPtrInput is an input type that accepts WorkloadFirewallSpecExternalArgs, WorkloadFirewallSpecExternalPtr and WorkloadFirewallSpecExternalPtrOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalPtrInput` via:
//
//	        WorkloadFirewallSpecExternalArgs{...}
//
//	or:
//
//	        nil
type WorkloadFirewallSpecExternalPtrInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput
	ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Context) WorkloadFirewallSpecExternalPtrOutput
}

type workloadFirewallSpecExternalPtrType WorkloadFirewallSpecExternalArgs

func WorkloadFirewallSpecExternalPtr(v *WorkloadFirewallSpecExternalArgs) WorkloadFirewallSpecExternalPtrInput {
	return (*workloadFirewallSpecExternalPtrType)(v)
}

func (*workloadFirewallSpecExternalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (i *workloadFirewallSpecExternalPtrType) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return i.ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Background())
}

func (i *workloadFirewallSpecExternalPtrType) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalPtrOutput)
}

func (i *workloadFirewallSpecExternalPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecExternal] {
	return pulumix.Output[*WorkloadFirewallSpecExternal]{
		OutputState: i.ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecExternalOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalOutput() WorkloadFirewallSpecExternalOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return o.ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Background())
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadFirewallSpecExternal) *WorkloadFirewallSpecExternal {
		return &v
	}).(WorkloadFirewallSpecExternalPtrOutput)
}

func (o WorkloadFirewallSpecExternalOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternal] {
	return pulumix.Output[WorkloadFirewallSpecExternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalOutput) InboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []string { return v.InboundAllowCidrs }).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalOutput) OutboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []string { return v.OutboundAllowCidrs }).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalOutput) OutboundAllowHostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []string { return v.OutboundAllowHostnames }).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalOutput) OutboundAllowPorts() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []WorkloadFirewallSpecExternalOutboundAllowPort {
		return v.OutboundAllowPorts
	}).(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput)
}

type WorkloadFirewallSpecExternalPtrOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalPtrOutput) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecExternalPtrOutput) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecExternalPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecExternal] {
	return pulumix.Output[*WorkloadFirewallSpecExternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalPtrOutput) Elem() WorkloadFirewallSpecExternalOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) WorkloadFirewallSpecExternal {
		if v != nil {
			return *v
		}
		var ret WorkloadFirewallSpecExternal
		return ret
	}).(WorkloadFirewallSpecExternalOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) InboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []string {
		if v == nil {
			return nil
		}
		return v.InboundAllowCidrs
	}).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) OutboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []string {
		if v == nil {
			return nil
		}
		return v.OutboundAllowCidrs
	}).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) OutboundAllowHostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []string {
		if v == nil {
			return nil
		}
		return v.OutboundAllowHostnames
	}).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) OutboundAllowPorts() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []WorkloadFirewallSpecExternalOutboundAllowPort {
		if v == nil {
			return nil
		}
		return v.OutboundAllowPorts
	}).(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput)
}

type WorkloadFirewallSpecExternalOutboundAllowPort struct {
	Number   int    `pulumi:"number"`
	Protocol string `pulumi:"protocol"`
}

// WorkloadFirewallSpecExternalOutboundAllowPortInput is an input type that accepts WorkloadFirewallSpecExternalOutboundAllowPortArgs and WorkloadFirewallSpecExternalOutboundAllowPortOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalOutboundAllowPortInput` via:
//
//	WorkloadFirewallSpecExternalOutboundAllowPortArgs{...}
type WorkloadFirewallSpecExternalOutboundAllowPortInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalOutboundAllowPortOutput() WorkloadFirewallSpecExternalOutboundAllowPortOutput
	ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(context.Context) WorkloadFirewallSpecExternalOutboundAllowPortOutput
}

type WorkloadFirewallSpecExternalOutboundAllowPortArgs struct {
	Number   pulumi.IntInput    `pulumi:"number"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (WorkloadFirewallSpecExternalOutboundAllowPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArgs) ToWorkloadFirewallSpecExternalOutboundAllowPortOutput() WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return i.ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArgs) ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutboundAllowPortOutput)
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: i.ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(ctx).OutputState,
	}
}

// WorkloadFirewallSpecExternalOutboundAllowPortArrayInput is an input type that accepts WorkloadFirewallSpecExternalOutboundAllowPortArray and WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalOutboundAllowPortArrayInput` via:
//
//	WorkloadFirewallSpecExternalOutboundAllowPortArray{ WorkloadFirewallSpecExternalOutboundAllowPortArgs{...} }
type WorkloadFirewallSpecExternalOutboundAllowPortArrayInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutput() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput
	ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(context.Context) WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput
}

type WorkloadFirewallSpecExternalOutboundAllowPortArray []WorkloadFirewallSpecExternalOutboundAllowPortInput

func (WorkloadFirewallSpecExternalOutboundAllowPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArray) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutput() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return i.ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArray) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput)
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: i.ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecExternalOutboundAllowPortOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalOutboundAllowPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortOutput() WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternalOutboundAllowPort) int { return v.Number }).(pulumi.IntOutput)
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternalOutboundAllowPort) string { return v.Protocol }).(pulumi.StringOutput)
}

type WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutput() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) Index(i pulumi.IntInput) WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadFirewallSpecExternalOutboundAllowPort {
		return vs[0].([]WorkloadFirewallSpecExternalOutboundAllowPort)[vs[1].(int)]
	}).(WorkloadFirewallSpecExternalOutboundAllowPortOutput)
}

type WorkloadFirewallSpecInternal struct {
	InboundAllowType      *string  `pulumi:"inboundAllowType"`
	InboundAllowWorkloads []string `pulumi:"inboundAllowWorkloads"`
}

// WorkloadFirewallSpecInternalInput is an input type that accepts WorkloadFirewallSpecInternalArgs and WorkloadFirewallSpecInternalOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecInternalInput` via:
//
//	WorkloadFirewallSpecInternalArgs{...}
type WorkloadFirewallSpecInternalInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecInternalOutput() WorkloadFirewallSpecInternalOutput
	ToWorkloadFirewallSpecInternalOutputWithContext(context.Context) WorkloadFirewallSpecInternalOutput
}

type WorkloadFirewallSpecInternalArgs struct {
	InboundAllowType      pulumi.StringPtrInput   `pulumi:"inboundAllowType"`
	InboundAllowWorkloads pulumi.StringArrayInput `pulumi:"inboundAllowWorkloads"`
}

func (WorkloadFirewallSpecInternalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalOutput() WorkloadFirewallSpecInternalOutput {
	return i.ToWorkloadFirewallSpecInternalOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecInternalOutput)
}

func (i WorkloadFirewallSpecInternalArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecInternal] {
	return pulumix.Output[WorkloadFirewallSpecInternal]{
		OutputState: i.ToWorkloadFirewallSpecInternalOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return i.ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecInternalOutput).ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx)
}

// WorkloadFirewallSpecInternalPtrInput is an input type that accepts WorkloadFirewallSpecInternalArgs, WorkloadFirewallSpecInternalPtr and WorkloadFirewallSpecInternalPtrOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecInternalPtrInput` via:
//
//	        WorkloadFirewallSpecInternalArgs{...}
//
//	or:
//
//	        nil
type WorkloadFirewallSpecInternalPtrInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput
	ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Context) WorkloadFirewallSpecInternalPtrOutput
}

type workloadFirewallSpecInternalPtrType WorkloadFirewallSpecInternalArgs

func WorkloadFirewallSpecInternalPtr(v *WorkloadFirewallSpecInternalArgs) WorkloadFirewallSpecInternalPtrInput {
	return (*workloadFirewallSpecInternalPtrType)(v)
}

func (*workloadFirewallSpecInternalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (i *workloadFirewallSpecInternalPtrType) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return i.ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Background())
}

func (i *workloadFirewallSpecInternalPtrType) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecInternalPtrOutput)
}

func (i *workloadFirewallSpecInternalPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecInternal] {
	return pulumix.Output[*WorkloadFirewallSpecInternal]{
		OutputState: i.ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecInternalOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecInternalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalOutput() WorkloadFirewallSpecInternalOutput {
	return o
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalOutput {
	return o
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return o.ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Background())
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadFirewallSpecInternal) *WorkloadFirewallSpecInternal {
		return &v
	}).(WorkloadFirewallSpecInternalPtrOutput)
}

func (o WorkloadFirewallSpecInternalOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecInternal] {
	return pulumix.Output[WorkloadFirewallSpecInternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecInternalOutput) InboundAllowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecInternal) *string { return v.InboundAllowType }).(pulumi.StringPtrOutput)
}

func (o WorkloadFirewallSpecInternalOutput) InboundAllowWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecInternal) []string { return v.InboundAllowWorkloads }).(pulumi.StringArrayOutput)
}

type WorkloadFirewallSpecInternalPtrOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecInternalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecInternalPtrOutput) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecInternalPtrOutput) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecInternalPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecInternal] {
	return pulumix.Output[*WorkloadFirewallSpecInternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecInternalPtrOutput) Elem() WorkloadFirewallSpecInternalOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecInternal) WorkloadFirewallSpecInternal {
		if v != nil {
			return *v
		}
		var ret WorkloadFirewallSpecInternal
		return ret
	}).(WorkloadFirewallSpecInternalOutput)
}

func (o WorkloadFirewallSpecInternalPtrOutput) InboundAllowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecInternal) *string {
		if v == nil {
			return nil
		}
		return v.InboundAllowType
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadFirewallSpecInternalPtrOutput) InboundAllowWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecInternal) []string {
		if v == nil {
			return nil
		}
		return v.InboundAllowWorkloads
	}).(pulumi.StringArrayOutput)
}

type WorkloadJob struct {
	ActiveDeadlineSeconds *int    `pulumi:"activeDeadlineSeconds"`
	ConcurrencyPolicy     *string `pulumi:"concurrencyPolicy"`
	HistoryLimit          *int    `pulumi:"historyLimit"`
	RestartPolicy         *string `pulumi:"restartPolicy"`
	Schedule              string  `pulumi:"schedule"`
}

// WorkloadJobInput is an input type that accepts WorkloadJobArgs and WorkloadJobOutput values.
// You can construct a concrete instance of `WorkloadJobInput` via:
//
//	WorkloadJobArgs{...}
type WorkloadJobInput interface {
	pulumi.Input

	ToWorkloadJobOutput() WorkloadJobOutput
	ToWorkloadJobOutputWithContext(context.Context) WorkloadJobOutput
}

type WorkloadJobArgs struct {
	ActiveDeadlineSeconds pulumi.IntPtrInput    `pulumi:"activeDeadlineSeconds"`
	ConcurrencyPolicy     pulumi.StringPtrInput `pulumi:"concurrencyPolicy"`
	HistoryLimit          pulumi.IntPtrInput    `pulumi:"historyLimit"`
	RestartPolicy         pulumi.StringPtrInput `pulumi:"restartPolicy"`
	Schedule              pulumi.StringInput    `pulumi:"schedule"`
}

func (WorkloadJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadJob)(nil)).Elem()
}

func (i WorkloadJobArgs) ToWorkloadJobOutput() WorkloadJobOutput {
	return i.ToWorkloadJobOutputWithContext(context.Background())
}

func (i WorkloadJobArgs) ToWorkloadJobOutputWithContext(ctx context.Context) WorkloadJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadJobOutput)
}

func (i WorkloadJobArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadJob] {
	return pulumix.Output[WorkloadJob]{
		OutputState: i.ToWorkloadJobOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadJobArgs) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return i.ToWorkloadJobPtrOutputWithContext(context.Background())
}

func (i WorkloadJobArgs) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadJobOutput).ToWorkloadJobPtrOutputWithContext(ctx)
}

// WorkloadJobPtrInput is an input type that accepts WorkloadJobArgs, WorkloadJobPtr and WorkloadJobPtrOutput values.
// You can construct a concrete instance of `WorkloadJobPtrInput` via:
//
//	        WorkloadJobArgs{...}
//
//	or:
//
//	        nil
type WorkloadJobPtrInput interface {
	pulumi.Input

	ToWorkloadJobPtrOutput() WorkloadJobPtrOutput
	ToWorkloadJobPtrOutputWithContext(context.Context) WorkloadJobPtrOutput
}

type workloadJobPtrType WorkloadJobArgs

func WorkloadJobPtr(v *WorkloadJobArgs) WorkloadJobPtrInput {
	return (*workloadJobPtrType)(v)
}

func (*workloadJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadJob)(nil)).Elem()
}

func (i *workloadJobPtrType) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return i.ToWorkloadJobPtrOutputWithContext(context.Background())
}

func (i *workloadJobPtrType) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadJobPtrOutput)
}

func (i *workloadJobPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadJob] {
	return pulumix.Output[*WorkloadJob]{
		OutputState: i.ToWorkloadJobPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadJobOutput struct{ *pulumi.OutputState }

func (WorkloadJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadJob)(nil)).Elem()
}

func (o WorkloadJobOutput) ToWorkloadJobOutput() WorkloadJobOutput {
	return o
}

func (o WorkloadJobOutput) ToWorkloadJobOutputWithContext(ctx context.Context) WorkloadJobOutput {
	return o
}

func (o WorkloadJobOutput) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return o.ToWorkloadJobPtrOutputWithContext(context.Background())
}

func (o WorkloadJobOutput) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadJob) *WorkloadJob {
		return &v
	}).(WorkloadJobPtrOutput)
}

func (o WorkloadJobOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadJob] {
	return pulumix.Output[WorkloadJob]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadJobOutput) ActiveDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *int { return v.ActiveDeadlineSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadJobOutput) ConcurrencyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *string { return v.ConcurrencyPolicy }).(pulumi.StringPtrOutput)
}

func (o WorkloadJobOutput) HistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *int { return v.HistoryLimit }).(pulumi.IntPtrOutput)
}

func (o WorkloadJobOutput) RestartPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *string { return v.RestartPolicy }).(pulumi.StringPtrOutput)
}

func (o WorkloadJobOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadJob) string { return v.Schedule }).(pulumi.StringOutput)
}

type WorkloadJobPtrOutput struct{ *pulumi.OutputState }

func (WorkloadJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadJob)(nil)).Elem()
}

func (o WorkloadJobPtrOutput) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return o
}

func (o WorkloadJobPtrOutput) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return o
}

func (o WorkloadJobPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadJob] {
	return pulumix.Output[*WorkloadJob]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadJobPtrOutput) Elem() WorkloadJobOutput {
	return o.ApplyT(func(v *WorkloadJob) WorkloadJob {
		if v != nil {
			return *v
		}
		var ret WorkloadJob
		return ret
	}).(WorkloadJobOutput)
}

func (o WorkloadJobPtrOutput) ActiveDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *int {
		if v == nil {
			return nil
		}
		return v.ActiveDeadlineSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadJobPtrOutput) ConcurrencyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *string {
		if v == nil {
			return nil
		}
		return v.ConcurrencyPolicy
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadJobPtrOutput) HistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *int {
		if v == nil {
			return nil
		}
		return v.HistoryLimit
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadJobPtrOutput) RestartPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *string {
		if v == nil {
			return nil
		}
		return v.RestartPolicy
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadJobPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

type WorkloadLoadBalancer struct {
	Direct      *WorkloadLoadBalancerDirect      `pulumi:"direct"`
	GeoLocation *WorkloadLoadBalancerGeoLocation `pulumi:"geoLocation"`
}

// WorkloadLoadBalancerInput is an input type that accepts WorkloadLoadBalancerArgs and WorkloadLoadBalancerOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerInput` via:
//
//	WorkloadLoadBalancerArgs{...}
type WorkloadLoadBalancerInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerOutput() WorkloadLoadBalancerOutput
	ToWorkloadLoadBalancerOutputWithContext(context.Context) WorkloadLoadBalancerOutput
}

type WorkloadLoadBalancerArgs struct {
	Direct      WorkloadLoadBalancerDirectPtrInput      `pulumi:"direct"`
	GeoLocation WorkloadLoadBalancerGeoLocationPtrInput `pulumi:"geoLocation"`
}

func (WorkloadLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancer)(nil)).Elem()
}

func (i WorkloadLoadBalancerArgs) ToWorkloadLoadBalancerOutput() WorkloadLoadBalancerOutput {
	return i.ToWorkloadLoadBalancerOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerArgs) ToWorkloadLoadBalancerOutputWithContext(ctx context.Context) WorkloadLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerOutput)
}

func (i WorkloadLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancer] {
	return pulumix.Output[WorkloadLoadBalancer]{
		OutputState: i.ToWorkloadLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadLoadBalancerArgs) ToWorkloadLoadBalancerPtrOutput() WorkloadLoadBalancerPtrOutput {
	return i.ToWorkloadLoadBalancerPtrOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerArgs) ToWorkloadLoadBalancerPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerOutput).ToWorkloadLoadBalancerPtrOutputWithContext(ctx)
}

// WorkloadLoadBalancerPtrInput is an input type that accepts WorkloadLoadBalancerArgs, WorkloadLoadBalancerPtr and WorkloadLoadBalancerPtrOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerPtrInput` via:
//
//	        WorkloadLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type WorkloadLoadBalancerPtrInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerPtrOutput() WorkloadLoadBalancerPtrOutput
	ToWorkloadLoadBalancerPtrOutputWithContext(context.Context) WorkloadLoadBalancerPtrOutput
}

type workloadLoadBalancerPtrType WorkloadLoadBalancerArgs

func WorkloadLoadBalancerPtr(v *WorkloadLoadBalancerArgs) WorkloadLoadBalancerPtrInput {
	return (*workloadLoadBalancerPtrType)(v)
}

func (*workloadLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancer)(nil)).Elem()
}

func (i *workloadLoadBalancerPtrType) ToWorkloadLoadBalancerPtrOutput() WorkloadLoadBalancerPtrOutput {
	return i.ToWorkloadLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *workloadLoadBalancerPtrType) ToWorkloadLoadBalancerPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerPtrOutput)
}

func (i *workloadLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancer] {
	return pulumix.Output[*WorkloadLoadBalancer]{
		OutputState: i.ToWorkloadLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLoadBalancerOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancer)(nil)).Elem()
}

func (o WorkloadLoadBalancerOutput) ToWorkloadLoadBalancerOutput() WorkloadLoadBalancerOutput {
	return o
}

func (o WorkloadLoadBalancerOutput) ToWorkloadLoadBalancerOutputWithContext(ctx context.Context) WorkloadLoadBalancerOutput {
	return o
}

func (o WorkloadLoadBalancerOutput) ToWorkloadLoadBalancerPtrOutput() WorkloadLoadBalancerPtrOutput {
	return o.ToWorkloadLoadBalancerPtrOutputWithContext(context.Background())
}

func (o WorkloadLoadBalancerOutput) ToWorkloadLoadBalancerPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadLoadBalancer) *WorkloadLoadBalancer {
		return &v
	}).(WorkloadLoadBalancerPtrOutput)
}

func (o WorkloadLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancer] {
	return pulumix.Output[WorkloadLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerOutput) Direct() WorkloadLoadBalancerDirectPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancer) *WorkloadLoadBalancerDirect { return v.Direct }).(WorkloadLoadBalancerDirectPtrOutput)
}

func (o WorkloadLoadBalancerOutput) GeoLocation() WorkloadLoadBalancerGeoLocationPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancer) *WorkloadLoadBalancerGeoLocation { return v.GeoLocation }).(WorkloadLoadBalancerGeoLocationPtrOutput)
}

type WorkloadLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancer)(nil)).Elem()
}

func (o WorkloadLoadBalancerPtrOutput) ToWorkloadLoadBalancerPtrOutput() WorkloadLoadBalancerPtrOutput {
	return o
}

func (o WorkloadLoadBalancerPtrOutput) ToWorkloadLoadBalancerPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerPtrOutput {
	return o
}

func (o WorkloadLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancer] {
	return pulumix.Output[*WorkloadLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerPtrOutput) Elem() WorkloadLoadBalancerOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancer) WorkloadLoadBalancer {
		if v != nil {
			return *v
		}
		var ret WorkloadLoadBalancer
		return ret
	}).(WorkloadLoadBalancerOutput)
}

func (o WorkloadLoadBalancerPtrOutput) Direct() WorkloadLoadBalancerDirectPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancer) *WorkloadLoadBalancerDirect {
		if v == nil {
			return nil
		}
		return v.Direct
	}).(WorkloadLoadBalancerDirectPtrOutput)
}

func (o WorkloadLoadBalancerPtrOutput) GeoLocation() WorkloadLoadBalancerGeoLocationPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancer) *WorkloadLoadBalancerGeoLocation {
		if v == nil {
			return nil
		}
		return v.GeoLocation
	}).(WorkloadLoadBalancerGeoLocationPtrOutput)
}

type WorkloadLoadBalancerDirect struct {
	Enabled bool                             `pulumi:"enabled"`
	Ports   []WorkloadLoadBalancerDirectPort `pulumi:"ports"`
}

// WorkloadLoadBalancerDirectInput is an input type that accepts WorkloadLoadBalancerDirectArgs and WorkloadLoadBalancerDirectOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerDirectInput` via:
//
//	WorkloadLoadBalancerDirectArgs{...}
type WorkloadLoadBalancerDirectInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerDirectOutput() WorkloadLoadBalancerDirectOutput
	ToWorkloadLoadBalancerDirectOutputWithContext(context.Context) WorkloadLoadBalancerDirectOutput
}

type WorkloadLoadBalancerDirectArgs struct {
	Enabled pulumi.BoolInput                         `pulumi:"enabled"`
	Ports   WorkloadLoadBalancerDirectPortArrayInput `pulumi:"ports"`
}

func (WorkloadLoadBalancerDirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerDirect)(nil)).Elem()
}

func (i WorkloadLoadBalancerDirectArgs) ToWorkloadLoadBalancerDirectOutput() WorkloadLoadBalancerDirectOutput {
	return i.ToWorkloadLoadBalancerDirectOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerDirectArgs) ToWorkloadLoadBalancerDirectOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerDirectOutput)
}

func (i WorkloadLoadBalancerDirectArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerDirect] {
	return pulumix.Output[WorkloadLoadBalancerDirect]{
		OutputState: i.ToWorkloadLoadBalancerDirectOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadLoadBalancerDirectArgs) ToWorkloadLoadBalancerDirectPtrOutput() WorkloadLoadBalancerDirectPtrOutput {
	return i.ToWorkloadLoadBalancerDirectPtrOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerDirectArgs) ToWorkloadLoadBalancerDirectPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerDirectOutput).ToWorkloadLoadBalancerDirectPtrOutputWithContext(ctx)
}

// WorkloadLoadBalancerDirectPtrInput is an input type that accepts WorkloadLoadBalancerDirectArgs, WorkloadLoadBalancerDirectPtr and WorkloadLoadBalancerDirectPtrOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerDirectPtrInput` via:
//
//	        WorkloadLoadBalancerDirectArgs{...}
//
//	or:
//
//	        nil
type WorkloadLoadBalancerDirectPtrInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerDirectPtrOutput() WorkloadLoadBalancerDirectPtrOutput
	ToWorkloadLoadBalancerDirectPtrOutputWithContext(context.Context) WorkloadLoadBalancerDirectPtrOutput
}

type workloadLoadBalancerDirectPtrType WorkloadLoadBalancerDirectArgs

func WorkloadLoadBalancerDirectPtr(v *WorkloadLoadBalancerDirectArgs) WorkloadLoadBalancerDirectPtrInput {
	return (*workloadLoadBalancerDirectPtrType)(v)
}

func (*workloadLoadBalancerDirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancerDirect)(nil)).Elem()
}

func (i *workloadLoadBalancerDirectPtrType) ToWorkloadLoadBalancerDirectPtrOutput() WorkloadLoadBalancerDirectPtrOutput {
	return i.ToWorkloadLoadBalancerDirectPtrOutputWithContext(context.Background())
}

func (i *workloadLoadBalancerDirectPtrType) ToWorkloadLoadBalancerDirectPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerDirectPtrOutput)
}

func (i *workloadLoadBalancerDirectPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancerDirect] {
	return pulumix.Output[*WorkloadLoadBalancerDirect]{
		OutputState: i.ToWorkloadLoadBalancerDirectPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLoadBalancerDirectOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerDirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerDirect)(nil)).Elem()
}

func (o WorkloadLoadBalancerDirectOutput) ToWorkloadLoadBalancerDirectOutput() WorkloadLoadBalancerDirectOutput {
	return o
}

func (o WorkloadLoadBalancerDirectOutput) ToWorkloadLoadBalancerDirectOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectOutput {
	return o
}

func (o WorkloadLoadBalancerDirectOutput) ToWorkloadLoadBalancerDirectPtrOutput() WorkloadLoadBalancerDirectPtrOutput {
	return o.ToWorkloadLoadBalancerDirectPtrOutputWithContext(context.Background())
}

func (o WorkloadLoadBalancerDirectOutput) ToWorkloadLoadBalancerDirectPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadLoadBalancerDirect) *WorkloadLoadBalancerDirect {
		return &v
	}).(WorkloadLoadBalancerDirectPtrOutput)
}

func (o WorkloadLoadBalancerDirectOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerDirect] {
	return pulumix.Output[WorkloadLoadBalancerDirect]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerDirectOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerDirect) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o WorkloadLoadBalancerDirectOutput) Ports() WorkloadLoadBalancerDirectPortArrayOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerDirect) []WorkloadLoadBalancerDirectPort { return v.Ports }).(WorkloadLoadBalancerDirectPortArrayOutput)
}

type WorkloadLoadBalancerDirectPtrOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerDirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancerDirect)(nil)).Elem()
}

func (o WorkloadLoadBalancerDirectPtrOutput) ToWorkloadLoadBalancerDirectPtrOutput() WorkloadLoadBalancerDirectPtrOutput {
	return o
}

func (o WorkloadLoadBalancerDirectPtrOutput) ToWorkloadLoadBalancerDirectPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPtrOutput {
	return o
}

func (o WorkloadLoadBalancerDirectPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancerDirect] {
	return pulumix.Output[*WorkloadLoadBalancerDirect]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerDirectPtrOutput) Elem() WorkloadLoadBalancerDirectOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerDirect) WorkloadLoadBalancerDirect {
		if v != nil {
			return *v
		}
		var ret WorkloadLoadBalancerDirect
		return ret
	}).(WorkloadLoadBalancerDirectOutput)
}

func (o WorkloadLoadBalancerDirectPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerDirect) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadLoadBalancerDirectPtrOutput) Ports() WorkloadLoadBalancerDirectPortArrayOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerDirect) []WorkloadLoadBalancerDirectPort {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(WorkloadLoadBalancerDirectPortArrayOutput)
}

type WorkloadLoadBalancerDirectPort struct {
	ContainerPort *int    `pulumi:"containerPort"`
	ExternalPort  int     `pulumi:"externalPort"`
	Protocol      string  `pulumi:"protocol"`
	Scheme        *string `pulumi:"scheme"`
}

// WorkloadLoadBalancerDirectPortInput is an input type that accepts WorkloadLoadBalancerDirectPortArgs and WorkloadLoadBalancerDirectPortOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerDirectPortInput` via:
//
//	WorkloadLoadBalancerDirectPortArgs{...}
type WorkloadLoadBalancerDirectPortInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerDirectPortOutput() WorkloadLoadBalancerDirectPortOutput
	ToWorkloadLoadBalancerDirectPortOutputWithContext(context.Context) WorkloadLoadBalancerDirectPortOutput
}

type WorkloadLoadBalancerDirectPortArgs struct {
	ContainerPort pulumi.IntPtrInput    `pulumi:"containerPort"`
	ExternalPort  pulumi.IntInput       `pulumi:"externalPort"`
	Protocol      pulumi.StringInput    `pulumi:"protocol"`
	Scheme        pulumi.StringPtrInput `pulumi:"scheme"`
}

func (WorkloadLoadBalancerDirectPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerDirectPort)(nil)).Elem()
}

func (i WorkloadLoadBalancerDirectPortArgs) ToWorkloadLoadBalancerDirectPortOutput() WorkloadLoadBalancerDirectPortOutput {
	return i.ToWorkloadLoadBalancerDirectPortOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerDirectPortArgs) ToWorkloadLoadBalancerDirectPortOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerDirectPortOutput)
}

func (i WorkloadLoadBalancerDirectPortArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerDirectPort] {
	return pulumix.Output[WorkloadLoadBalancerDirectPort]{
		OutputState: i.ToWorkloadLoadBalancerDirectPortOutputWithContext(ctx).OutputState,
	}
}

// WorkloadLoadBalancerDirectPortArrayInput is an input type that accepts WorkloadLoadBalancerDirectPortArray and WorkloadLoadBalancerDirectPortArrayOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerDirectPortArrayInput` via:
//
//	WorkloadLoadBalancerDirectPortArray{ WorkloadLoadBalancerDirectPortArgs{...} }
type WorkloadLoadBalancerDirectPortArrayInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerDirectPortArrayOutput() WorkloadLoadBalancerDirectPortArrayOutput
	ToWorkloadLoadBalancerDirectPortArrayOutputWithContext(context.Context) WorkloadLoadBalancerDirectPortArrayOutput
}

type WorkloadLoadBalancerDirectPortArray []WorkloadLoadBalancerDirectPortInput

func (WorkloadLoadBalancerDirectPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadLoadBalancerDirectPort)(nil)).Elem()
}

func (i WorkloadLoadBalancerDirectPortArray) ToWorkloadLoadBalancerDirectPortArrayOutput() WorkloadLoadBalancerDirectPortArrayOutput {
	return i.ToWorkloadLoadBalancerDirectPortArrayOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerDirectPortArray) ToWorkloadLoadBalancerDirectPortArrayOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerDirectPortArrayOutput)
}

func (i WorkloadLoadBalancerDirectPortArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadLoadBalancerDirectPort] {
	return pulumix.Output[[]WorkloadLoadBalancerDirectPort]{
		OutputState: i.ToWorkloadLoadBalancerDirectPortArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLoadBalancerDirectPortOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerDirectPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerDirectPort)(nil)).Elem()
}

func (o WorkloadLoadBalancerDirectPortOutput) ToWorkloadLoadBalancerDirectPortOutput() WorkloadLoadBalancerDirectPortOutput {
	return o
}

func (o WorkloadLoadBalancerDirectPortOutput) ToWorkloadLoadBalancerDirectPortOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPortOutput {
	return o
}

func (o WorkloadLoadBalancerDirectPortOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerDirectPort] {
	return pulumix.Output[WorkloadLoadBalancerDirectPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerDirectPortOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerDirectPort) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

func (o WorkloadLoadBalancerDirectPortOutput) ExternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerDirectPort) int { return v.ExternalPort }).(pulumi.IntOutput)
}

func (o WorkloadLoadBalancerDirectPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerDirectPort) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o WorkloadLoadBalancerDirectPortOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerDirectPort) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type WorkloadLoadBalancerDirectPortArrayOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerDirectPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadLoadBalancerDirectPort)(nil)).Elem()
}

func (o WorkloadLoadBalancerDirectPortArrayOutput) ToWorkloadLoadBalancerDirectPortArrayOutput() WorkloadLoadBalancerDirectPortArrayOutput {
	return o
}

func (o WorkloadLoadBalancerDirectPortArrayOutput) ToWorkloadLoadBalancerDirectPortArrayOutputWithContext(ctx context.Context) WorkloadLoadBalancerDirectPortArrayOutput {
	return o
}

func (o WorkloadLoadBalancerDirectPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadLoadBalancerDirectPort] {
	return pulumix.Output[[]WorkloadLoadBalancerDirectPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerDirectPortArrayOutput) Index(i pulumi.IntInput) WorkloadLoadBalancerDirectPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadLoadBalancerDirectPort {
		return vs[0].([]WorkloadLoadBalancerDirectPort)[vs[1].(int)]
	}).(WorkloadLoadBalancerDirectPortOutput)
}

type WorkloadLoadBalancerGeoLocation struct {
	Enabled *bool                                   `pulumi:"enabled"`
	Headers *WorkloadLoadBalancerGeoLocationHeaders `pulumi:"headers"`
}

// WorkloadLoadBalancerGeoLocationInput is an input type that accepts WorkloadLoadBalancerGeoLocationArgs and WorkloadLoadBalancerGeoLocationOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerGeoLocationInput` via:
//
//	WorkloadLoadBalancerGeoLocationArgs{...}
type WorkloadLoadBalancerGeoLocationInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerGeoLocationOutput() WorkloadLoadBalancerGeoLocationOutput
	ToWorkloadLoadBalancerGeoLocationOutputWithContext(context.Context) WorkloadLoadBalancerGeoLocationOutput
}

type WorkloadLoadBalancerGeoLocationArgs struct {
	Enabled pulumi.BoolPtrInput                            `pulumi:"enabled"`
	Headers WorkloadLoadBalancerGeoLocationHeadersPtrInput `pulumi:"headers"`
}

func (WorkloadLoadBalancerGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerGeoLocation)(nil)).Elem()
}

func (i WorkloadLoadBalancerGeoLocationArgs) ToWorkloadLoadBalancerGeoLocationOutput() WorkloadLoadBalancerGeoLocationOutput {
	return i.ToWorkloadLoadBalancerGeoLocationOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerGeoLocationArgs) ToWorkloadLoadBalancerGeoLocationOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerGeoLocationOutput)
}

func (i WorkloadLoadBalancerGeoLocationArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerGeoLocation] {
	return pulumix.Output[WorkloadLoadBalancerGeoLocation]{
		OutputState: i.ToWorkloadLoadBalancerGeoLocationOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadLoadBalancerGeoLocationArgs) ToWorkloadLoadBalancerGeoLocationPtrOutput() WorkloadLoadBalancerGeoLocationPtrOutput {
	return i.ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerGeoLocationArgs) ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerGeoLocationOutput).ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(ctx)
}

// WorkloadLoadBalancerGeoLocationPtrInput is an input type that accepts WorkloadLoadBalancerGeoLocationArgs, WorkloadLoadBalancerGeoLocationPtr and WorkloadLoadBalancerGeoLocationPtrOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerGeoLocationPtrInput` via:
//
//	        WorkloadLoadBalancerGeoLocationArgs{...}
//
//	or:
//
//	        nil
type WorkloadLoadBalancerGeoLocationPtrInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerGeoLocationPtrOutput() WorkloadLoadBalancerGeoLocationPtrOutput
	ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(context.Context) WorkloadLoadBalancerGeoLocationPtrOutput
}

type workloadLoadBalancerGeoLocationPtrType WorkloadLoadBalancerGeoLocationArgs

func WorkloadLoadBalancerGeoLocationPtr(v *WorkloadLoadBalancerGeoLocationArgs) WorkloadLoadBalancerGeoLocationPtrInput {
	return (*workloadLoadBalancerGeoLocationPtrType)(v)
}

func (*workloadLoadBalancerGeoLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancerGeoLocation)(nil)).Elem()
}

func (i *workloadLoadBalancerGeoLocationPtrType) ToWorkloadLoadBalancerGeoLocationPtrOutput() WorkloadLoadBalancerGeoLocationPtrOutput {
	return i.ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(context.Background())
}

func (i *workloadLoadBalancerGeoLocationPtrType) ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerGeoLocationPtrOutput)
}

func (i *workloadLoadBalancerGeoLocationPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancerGeoLocation] {
	return pulumix.Output[*WorkloadLoadBalancerGeoLocation]{
		OutputState: i.ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLoadBalancerGeoLocationOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerGeoLocation)(nil)).Elem()
}

func (o WorkloadLoadBalancerGeoLocationOutput) ToWorkloadLoadBalancerGeoLocationOutput() WorkloadLoadBalancerGeoLocationOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationOutput) ToWorkloadLoadBalancerGeoLocationOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationOutput) ToWorkloadLoadBalancerGeoLocationPtrOutput() WorkloadLoadBalancerGeoLocationPtrOutput {
	return o.ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(context.Background())
}

func (o WorkloadLoadBalancerGeoLocationOutput) ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadLoadBalancerGeoLocation) *WorkloadLoadBalancerGeoLocation {
		return &v
	}).(WorkloadLoadBalancerGeoLocationPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerGeoLocation] {
	return pulumix.Output[WorkloadLoadBalancerGeoLocation]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerGeoLocationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerGeoLocation) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationOutput) Headers() WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerGeoLocation) *WorkloadLoadBalancerGeoLocationHeaders { return v.Headers }).(WorkloadLoadBalancerGeoLocationHeadersPtrOutput)
}

type WorkloadLoadBalancerGeoLocationPtrOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerGeoLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancerGeoLocation)(nil)).Elem()
}

func (o WorkloadLoadBalancerGeoLocationPtrOutput) ToWorkloadLoadBalancerGeoLocationPtrOutput() WorkloadLoadBalancerGeoLocationPtrOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationPtrOutput) ToWorkloadLoadBalancerGeoLocationPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationPtrOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancerGeoLocation] {
	return pulumix.Output[*WorkloadLoadBalancerGeoLocation]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerGeoLocationPtrOutput) Elem() WorkloadLoadBalancerGeoLocationOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocation) WorkloadLoadBalancerGeoLocation {
		if v != nil {
			return *v
		}
		var ret WorkloadLoadBalancerGeoLocation
		return ret
	}).(WorkloadLoadBalancerGeoLocationOutput)
}

func (o WorkloadLoadBalancerGeoLocationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocation) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationPtrOutput) Headers() WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocation) *WorkloadLoadBalancerGeoLocationHeaders {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(WorkloadLoadBalancerGeoLocationHeadersPtrOutput)
}

type WorkloadLoadBalancerGeoLocationHeaders struct {
	Asn     *string `pulumi:"asn"`
	City    *string `pulumi:"city"`
	Country *string `pulumi:"country"`
	Region  *string `pulumi:"region"`
}

// WorkloadLoadBalancerGeoLocationHeadersInput is an input type that accepts WorkloadLoadBalancerGeoLocationHeadersArgs and WorkloadLoadBalancerGeoLocationHeadersOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerGeoLocationHeadersInput` via:
//
//	WorkloadLoadBalancerGeoLocationHeadersArgs{...}
type WorkloadLoadBalancerGeoLocationHeadersInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerGeoLocationHeadersOutput() WorkloadLoadBalancerGeoLocationHeadersOutput
	ToWorkloadLoadBalancerGeoLocationHeadersOutputWithContext(context.Context) WorkloadLoadBalancerGeoLocationHeadersOutput
}

type WorkloadLoadBalancerGeoLocationHeadersArgs struct {
	Asn     pulumi.StringPtrInput `pulumi:"asn"`
	City    pulumi.StringPtrInput `pulumi:"city"`
	Country pulumi.StringPtrInput `pulumi:"country"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
}

func (WorkloadLoadBalancerGeoLocationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerGeoLocationHeaders)(nil)).Elem()
}

func (i WorkloadLoadBalancerGeoLocationHeadersArgs) ToWorkloadLoadBalancerGeoLocationHeadersOutput() WorkloadLoadBalancerGeoLocationHeadersOutput {
	return i.ToWorkloadLoadBalancerGeoLocationHeadersOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerGeoLocationHeadersArgs) ToWorkloadLoadBalancerGeoLocationHeadersOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerGeoLocationHeadersOutput)
}

func (i WorkloadLoadBalancerGeoLocationHeadersArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerGeoLocationHeaders] {
	return pulumix.Output[WorkloadLoadBalancerGeoLocationHeaders]{
		OutputState: i.ToWorkloadLoadBalancerGeoLocationHeadersOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadLoadBalancerGeoLocationHeadersArgs) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutput() WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return i.ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(context.Background())
}

func (i WorkloadLoadBalancerGeoLocationHeadersArgs) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerGeoLocationHeadersOutput).ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(ctx)
}

// WorkloadLoadBalancerGeoLocationHeadersPtrInput is an input type that accepts WorkloadLoadBalancerGeoLocationHeadersArgs, WorkloadLoadBalancerGeoLocationHeadersPtr and WorkloadLoadBalancerGeoLocationHeadersPtrOutput values.
// You can construct a concrete instance of `WorkloadLoadBalancerGeoLocationHeadersPtrInput` via:
//
//	        WorkloadLoadBalancerGeoLocationHeadersArgs{...}
//
//	or:
//
//	        nil
type WorkloadLoadBalancerGeoLocationHeadersPtrInput interface {
	pulumi.Input

	ToWorkloadLoadBalancerGeoLocationHeadersPtrOutput() WorkloadLoadBalancerGeoLocationHeadersPtrOutput
	ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(context.Context) WorkloadLoadBalancerGeoLocationHeadersPtrOutput
}

type workloadLoadBalancerGeoLocationHeadersPtrType WorkloadLoadBalancerGeoLocationHeadersArgs

func WorkloadLoadBalancerGeoLocationHeadersPtr(v *WorkloadLoadBalancerGeoLocationHeadersArgs) WorkloadLoadBalancerGeoLocationHeadersPtrInput {
	return (*workloadLoadBalancerGeoLocationHeadersPtrType)(v)
}

func (*workloadLoadBalancerGeoLocationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancerGeoLocationHeaders)(nil)).Elem()
}

func (i *workloadLoadBalancerGeoLocationHeadersPtrType) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutput() WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return i.ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(context.Background())
}

func (i *workloadLoadBalancerGeoLocationHeadersPtrType) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLoadBalancerGeoLocationHeadersPtrOutput)
}

func (i *workloadLoadBalancerGeoLocationHeadersPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancerGeoLocationHeaders] {
	return pulumix.Output[*WorkloadLoadBalancerGeoLocationHeaders]{
		OutputState: i.ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLoadBalancerGeoLocationHeadersOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerGeoLocationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLoadBalancerGeoLocationHeaders)(nil)).Elem()
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) ToWorkloadLoadBalancerGeoLocationHeadersOutput() WorkloadLoadBalancerGeoLocationHeadersOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) ToWorkloadLoadBalancerGeoLocationHeadersOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationHeadersOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutput() WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return o.ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(context.Background())
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadLoadBalancerGeoLocationHeaders) *WorkloadLoadBalancerGeoLocationHeaders {
		return &v
	}).(WorkloadLoadBalancerGeoLocationHeadersPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLoadBalancerGeoLocationHeaders] {
	return pulumix.Output[WorkloadLoadBalancerGeoLocationHeaders]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) Asn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerGeoLocationHeaders) *string { return v.Asn }).(pulumi.StringPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerGeoLocationHeaders) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerGeoLocationHeaders) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLoadBalancerGeoLocationHeaders) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type WorkloadLoadBalancerGeoLocationHeadersPtrOutput struct{ *pulumi.OutputState }

func (WorkloadLoadBalancerGeoLocationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLoadBalancerGeoLocationHeaders)(nil)).Elem()
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutput() WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) ToWorkloadLoadBalancerGeoLocationHeadersPtrOutputWithContext(ctx context.Context) WorkloadLoadBalancerGeoLocationHeadersPtrOutput {
	return o
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLoadBalancerGeoLocationHeaders] {
	return pulumix.Output[*WorkloadLoadBalancerGeoLocationHeaders]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) Elem() WorkloadLoadBalancerGeoLocationHeadersOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocationHeaders) WorkloadLoadBalancerGeoLocationHeaders {
		if v != nil {
			return *v
		}
		var ret WorkloadLoadBalancerGeoLocationHeaders
		return ret
	}).(WorkloadLoadBalancerGeoLocationHeadersOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) Asn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocationHeaders) *string {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocationHeaders) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocationHeaders) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadLoadBalancerGeoLocationHeadersPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLoadBalancerGeoLocationHeaders) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type WorkloadLocalOption struct {
	Autoscaling    *WorkloadLocalOptionAutoscaling `pulumi:"autoscaling"`
	CapacityAi     *bool                           `pulumi:"capacityAi"`
	Debug          *bool                           `pulumi:"debug"`
	Location       string                          `pulumi:"location"`
	Suspend        *bool                           `pulumi:"suspend"`
	TimeoutSeconds *int                            `pulumi:"timeoutSeconds"`
}

// WorkloadLocalOptionInput is an input type that accepts WorkloadLocalOptionArgs and WorkloadLocalOptionOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionInput` via:
//
//	WorkloadLocalOptionArgs{...}
type WorkloadLocalOptionInput interface {
	pulumi.Input

	ToWorkloadLocalOptionOutput() WorkloadLocalOptionOutput
	ToWorkloadLocalOptionOutputWithContext(context.Context) WorkloadLocalOptionOutput
}

type WorkloadLocalOptionArgs struct {
	Autoscaling    WorkloadLocalOptionAutoscalingPtrInput `pulumi:"autoscaling"`
	CapacityAi     pulumi.BoolPtrInput                    `pulumi:"capacityAi"`
	Debug          pulumi.BoolPtrInput                    `pulumi:"debug"`
	Location       pulumi.StringInput                     `pulumi:"location"`
	Suspend        pulumi.BoolPtrInput                    `pulumi:"suspend"`
	TimeoutSeconds pulumi.IntPtrInput                     `pulumi:"timeoutSeconds"`
}

func (WorkloadLocalOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOption)(nil)).Elem()
}

func (i WorkloadLocalOptionArgs) ToWorkloadLocalOptionOutput() WorkloadLocalOptionOutput {
	return i.ToWorkloadLocalOptionOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionArgs) ToWorkloadLocalOptionOutputWithContext(ctx context.Context) WorkloadLocalOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionOutput)
}

func (i WorkloadLocalOptionArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOption] {
	return pulumix.Output[WorkloadLocalOption]{
		OutputState: i.ToWorkloadLocalOptionOutputWithContext(ctx).OutputState,
	}
}

// WorkloadLocalOptionArrayInput is an input type that accepts WorkloadLocalOptionArray and WorkloadLocalOptionArrayOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionArrayInput` via:
//
//	WorkloadLocalOptionArray{ WorkloadLocalOptionArgs{...} }
type WorkloadLocalOptionArrayInput interface {
	pulumi.Input

	ToWorkloadLocalOptionArrayOutput() WorkloadLocalOptionArrayOutput
	ToWorkloadLocalOptionArrayOutputWithContext(context.Context) WorkloadLocalOptionArrayOutput
}

type WorkloadLocalOptionArray []WorkloadLocalOptionInput

func (WorkloadLocalOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadLocalOption)(nil)).Elem()
}

func (i WorkloadLocalOptionArray) ToWorkloadLocalOptionArrayOutput() WorkloadLocalOptionArrayOutput {
	return i.ToWorkloadLocalOptionArrayOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionArray) ToWorkloadLocalOptionArrayOutputWithContext(ctx context.Context) WorkloadLocalOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionArrayOutput)
}

func (i WorkloadLocalOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadLocalOption] {
	return pulumix.Output[[]WorkloadLocalOption]{
		OutputState: i.ToWorkloadLocalOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLocalOptionOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOption)(nil)).Elem()
}

func (o WorkloadLocalOptionOutput) ToWorkloadLocalOptionOutput() WorkloadLocalOptionOutput {
	return o
}

func (o WorkloadLocalOptionOutput) ToWorkloadLocalOptionOutputWithContext(ctx context.Context) WorkloadLocalOptionOutput {
	return o
}

func (o WorkloadLocalOptionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOption] {
	return pulumix.Output[WorkloadLocalOption]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionOutput) Autoscaling() WorkloadLocalOptionAutoscalingPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *WorkloadLocalOptionAutoscaling { return v.Autoscaling }).(WorkloadLocalOptionAutoscalingPtrOutput)
}

func (o WorkloadLocalOptionOutput) CapacityAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *bool { return v.CapacityAi }).(pulumi.BoolPtrOutput)
}

func (o WorkloadLocalOptionOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

func (o WorkloadLocalOptionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadLocalOption) string { return v.Location }).(pulumi.StringOutput)
}

func (o WorkloadLocalOptionOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

func (o WorkloadLocalOptionOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadLocalOptionArrayOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadLocalOption)(nil)).Elem()
}

func (o WorkloadLocalOptionArrayOutput) ToWorkloadLocalOptionArrayOutput() WorkloadLocalOptionArrayOutput {
	return o
}

func (o WorkloadLocalOptionArrayOutput) ToWorkloadLocalOptionArrayOutputWithContext(ctx context.Context) WorkloadLocalOptionArrayOutput {
	return o
}

func (o WorkloadLocalOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadLocalOption] {
	return pulumix.Output[[]WorkloadLocalOption]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionArrayOutput) Index(i pulumi.IntInput) WorkloadLocalOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadLocalOption {
		return vs[0].([]WorkloadLocalOption)[vs[1].(int)]
	}).(WorkloadLocalOptionOutput)
}

type WorkloadLocalOptionAutoscaling struct {
	MaxConcurrency   *int    `pulumi:"maxConcurrency"`
	MaxScale         *int    `pulumi:"maxScale"`
	Metric           *string `pulumi:"metric"`
	MetricPercentile *string `pulumi:"metricPercentile"`
	MinScale         *int    `pulumi:"minScale"`
	ScaleToZeroDelay *int    `pulumi:"scaleToZeroDelay"`
	Target           *int    `pulumi:"target"`
}

// WorkloadLocalOptionAutoscalingInput is an input type that accepts WorkloadLocalOptionAutoscalingArgs and WorkloadLocalOptionAutoscalingOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionAutoscalingInput` via:
//
//	WorkloadLocalOptionAutoscalingArgs{...}
type WorkloadLocalOptionAutoscalingInput interface {
	pulumi.Input

	ToWorkloadLocalOptionAutoscalingOutput() WorkloadLocalOptionAutoscalingOutput
	ToWorkloadLocalOptionAutoscalingOutputWithContext(context.Context) WorkloadLocalOptionAutoscalingOutput
}

type WorkloadLocalOptionAutoscalingArgs struct {
	MaxConcurrency   pulumi.IntPtrInput    `pulumi:"maxConcurrency"`
	MaxScale         pulumi.IntPtrInput    `pulumi:"maxScale"`
	Metric           pulumi.StringPtrInput `pulumi:"metric"`
	MetricPercentile pulumi.StringPtrInput `pulumi:"metricPercentile"`
	MinScale         pulumi.IntPtrInput    `pulumi:"minScale"`
	ScaleToZeroDelay pulumi.IntPtrInput    `pulumi:"scaleToZeroDelay"`
	Target           pulumi.IntPtrInput    `pulumi:"target"`
}

func (WorkloadLocalOptionAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingOutput() WorkloadLocalOptionAutoscalingOutput {
	return i.ToWorkloadLocalOptionAutoscalingOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionAutoscalingOutput)
}

func (i WorkloadLocalOptionAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[WorkloadLocalOptionAutoscaling]{
		OutputState: i.ToWorkloadLocalOptionAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return i.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionAutoscalingOutput).ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx)
}

// WorkloadLocalOptionAutoscalingPtrInput is an input type that accepts WorkloadLocalOptionAutoscalingArgs, WorkloadLocalOptionAutoscalingPtr and WorkloadLocalOptionAutoscalingPtrOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionAutoscalingPtrInput` via:
//
//	        WorkloadLocalOptionAutoscalingArgs{...}
//
//	or:
//
//	        nil
type WorkloadLocalOptionAutoscalingPtrInput interface {
	pulumi.Input

	ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput
	ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Context) WorkloadLocalOptionAutoscalingPtrOutput
}

type workloadLocalOptionAutoscalingPtrType WorkloadLocalOptionAutoscalingArgs

func WorkloadLocalOptionAutoscalingPtr(v *WorkloadLocalOptionAutoscalingArgs) WorkloadLocalOptionAutoscalingPtrInput {
	return (*workloadLocalOptionAutoscalingPtrType)(v)
}

func (*workloadLocalOptionAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (i *workloadLocalOptionAutoscalingPtrType) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return i.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Background())
}

func (i *workloadLocalOptionAutoscalingPtrType) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionAutoscalingPtrOutput)
}

func (i *workloadLocalOptionAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[*WorkloadLocalOptionAutoscaling]{
		OutputState: i.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLocalOptionAutoscalingOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingOutput() WorkloadLocalOptionAutoscalingOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return o.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Background())
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadLocalOptionAutoscaling) *WorkloadLocalOptionAutoscaling {
		return &v
	}).(WorkloadLocalOptionAutoscalingPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[WorkloadLocalOptionAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionAutoscalingOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.MaxConcurrency }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.MaxScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *string { return v.MetricPercentile }).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.MinScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.ScaleToZeroDelay }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.Target }).(pulumi.IntPtrOutput)
}

type WorkloadLocalOptionAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[*WorkloadLocalOptionAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) Elem() WorkloadLocalOptionAutoscalingOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) WorkloadLocalOptionAutoscaling {
		if v != nil {
			return *v
		}
		var ret WorkloadLocalOptionAutoscaling
		return ret
	}).(WorkloadLocalOptionAutoscalingOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrency
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MetricPercentile
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MinScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.ScaleToZeroDelay
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.IntPtrOutput)
}

type WorkloadOptions struct {
	Autoscaling    *WorkloadOptionsAutoscaling `pulumi:"autoscaling"`
	CapacityAi     *bool                       `pulumi:"capacityAi"`
	Debug          *bool                       `pulumi:"debug"`
	Suspend        *bool                       `pulumi:"suspend"`
	TimeoutSeconds *int                        `pulumi:"timeoutSeconds"`
}

// WorkloadOptionsInput is an input type that accepts WorkloadOptionsArgs and WorkloadOptionsOutput values.
// You can construct a concrete instance of `WorkloadOptionsInput` via:
//
//	WorkloadOptionsArgs{...}
type WorkloadOptionsInput interface {
	pulumi.Input

	ToWorkloadOptionsOutput() WorkloadOptionsOutput
	ToWorkloadOptionsOutputWithContext(context.Context) WorkloadOptionsOutput
}

type WorkloadOptionsArgs struct {
	Autoscaling    WorkloadOptionsAutoscalingPtrInput `pulumi:"autoscaling"`
	CapacityAi     pulumi.BoolPtrInput                `pulumi:"capacityAi"`
	Debug          pulumi.BoolPtrInput                `pulumi:"debug"`
	Suspend        pulumi.BoolPtrInput                `pulumi:"suspend"`
	TimeoutSeconds pulumi.IntPtrInput                 `pulumi:"timeoutSeconds"`
}

func (WorkloadOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptions)(nil)).Elem()
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsOutput() WorkloadOptionsOutput {
	return i.ToWorkloadOptionsOutputWithContext(context.Background())
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsOutputWithContext(ctx context.Context) WorkloadOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsOutput)
}

func (i WorkloadOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptions] {
	return pulumix.Output[WorkloadOptions]{
		OutputState: i.ToWorkloadOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return i.ToWorkloadOptionsPtrOutputWithContext(context.Background())
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsOutput).ToWorkloadOptionsPtrOutputWithContext(ctx)
}

// WorkloadOptionsPtrInput is an input type that accepts WorkloadOptionsArgs, WorkloadOptionsPtr and WorkloadOptionsPtrOutput values.
// You can construct a concrete instance of `WorkloadOptionsPtrInput` via:
//
//	        WorkloadOptionsArgs{...}
//
//	or:
//
//	        nil
type WorkloadOptionsPtrInput interface {
	pulumi.Input

	ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput
	ToWorkloadOptionsPtrOutputWithContext(context.Context) WorkloadOptionsPtrOutput
}

type workloadOptionsPtrType WorkloadOptionsArgs

func WorkloadOptionsPtr(v *WorkloadOptionsArgs) WorkloadOptionsPtrInput {
	return (*workloadOptionsPtrType)(v)
}

func (*workloadOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptions)(nil)).Elem()
}

func (i *workloadOptionsPtrType) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return i.ToWorkloadOptionsPtrOutputWithContext(context.Background())
}

func (i *workloadOptionsPtrType) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsPtrOutput)
}

func (i *workloadOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptions] {
	return pulumix.Output[*WorkloadOptions]{
		OutputState: i.ToWorkloadOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadOptionsOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptions)(nil)).Elem()
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsOutput() WorkloadOptionsOutput {
	return o
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsOutputWithContext(ctx context.Context) WorkloadOptionsOutput {
	return o
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return o.ToWorkloadOptionsPtrOutputWithContext(context.Background())
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadOptions) *WorkloadOptions {
		return &v
	}).(WorkloadOptionsPtrOutput)
}

func (o WorkloadOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptions] {
	return pulumix.Output[WorkloadOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsOutput) Autoscaling() WorkloadOptionsAutoscalingPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *WorkloadOptionsAutoscaling { return v.Autoscaling }).(WorkloadOptionsAutoscalingPtrOutput)
}

func (o WorkloadOptionsOutput) CapacityAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *bool { return v.CapacityAi }).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadOptionsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptions)(nil)).Elem()
}

func (o WorkloadOptionsPtrOutput) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return o
}

func (o WorkloadOptionsPtrOutput) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return o
}

func (o WorkloadOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptions] {
	return pulumix.Output[*WorkloadOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsPtrOutput) Elem() WorkloadOptionsOutput {
	return o.ApplyT(func(v *WorkloadOptions) WorkloadOptions {
		if v != nil {
			return *v
		}
		var ret WorkloadOptions
		return ret
	}).(WorkloadOptionsOutput)
}

func (o WorkloadOptionsPtrOutput) Autoscaling() WorkloadOptionsAutoscalingPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *WorkloadOptionsAutoscaling {
		if v == nil {
			return nil
		}
		return v.Autoscaling
	}).(WorkloadOptionsAutoscalingPtrOutput)
}

func (o WorkloadOptionsPtrOutput) CapacityAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *bool {
		if v == nil {
			return nil
		}
		return v.CapacityAi
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Debug
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type WorkloadOptionsAutoscaling struct {
	MaxConcurrency   *int    `pulumi:"maxConcurrency"`
	MaxScale         *int    `pulumi:"maxScale"`
	Metric           *string `pulumi:"metric"`
	MetricPercentile *string `pulumi:"metricPercentile"`
	MinScale         *int    `pulumi:"minScale"`
	ScaleToZeroDelay *int    `pulumi:"scaleToZeroDelay"`
	Target           *int    `pulumi:"target"`
}

// WorkloadOptionsAutoscalingInput is an input type that accepts WorkloadOptionsAutoscalingArgs and WorkloadOptionsAutoscalingOutput values.
// You can construct a concrete instance of `WorkloadOptionsAutoscalingInput` via:
//
//	WorkloadOptionsAutoscalingArgs{...}
type WorkloadOptionsAutoscalingInput interface {
	pulumi.Input

	ToWorkloadOptionsAutoscalingOutput() WorkloadOptionsAutoscalingOutput
	ToWorkloadOptionsAutoscalingOutputWithContext(context.Context) WorkloadOptionsAutoscalingOutput
}

type WorkloadOptionsAutoscalingArgs struct {
	MaxConcurrency   pulumi.IntPtrInput    `pulumi:"maxConcurrency"`
	MaxScale         pulumi.IntPtrInput    `pulumi:"maxScale"`
	Metric           pulumi.StringPtrInput `pulumi:"metric"`
	MetricPercentile pulumi.StringPtrInput `pulumi:"metricPercentile"`
	MinScale         pulumi.IntPtrInput    `pulumi:"minScale"`
	ScaleToZeroDelay pulumi.IntPtrInput    `pulumi:"scaleToZeroDelay"`
	Target           pulumi.IntPtrInput    `pulumi:"target"`
}

func (WorkloadOptionsAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingOutput() WorkloadOptionsAutoscalingOutput {
	return i.ToWorkloadOptionsAutoscalingOutputWithContext(context.Background())
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsAutoscalingOutput)
}

func (i WorkloadOptionsAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptionsAutoscaling] {
	return pulumix.Output[WorkloadOptionsAutoscaling]{
		OutputState: i.ToWorkloadOptionsAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return i.ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Background())
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsAutoscalingOutput).ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx)
}

// WorkloadOptionsAutoscalingPtrInput is an input type that accepts WorkloadOptionsAutoscalingArgs, WorkloadOptionsAutoscalingPtr and WorkloadOptionsAutoscalingPtrOutput values.
// You can construct a concrete instance of `WorkloadOptionsAutoscalingPtrInput` via:
//
//	        WorkloadOptionsAutoscalingArgs{...}
//
//	or:
//
//	        nil
type WorkloadOptionsAutoscalingPtrInput interface {
	pulumi.Input

	ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput
	ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Context) WorkloadOptionsAutoscalingPtrOutput
}

type workloadOptionsAutoscalingPtrType WorkloadOptionsAutoscalingArgs

func WorkloadOptionsAutoscalingPtr(v *WorkloadOptionsAutoscalingArgs) WorkloadOptionsAutoscalingPtrInput {
	return (*workloadOptionsAutoscalingPtrType)(v)
}

func (*workloadOptionsAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (i *workloadOptionsAutoscalingPtrType) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return i.ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Background())
}

func (i *workloadOptionsAutoscalingPtrType) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsAutoscalingPtrOutput)
}

func (i *workloadOptionsAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptionsAutoscaling] {
	return pulumix.Output[*WorkloadOptionsAutoscaling]{
		OutputState: i.ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadOptionsAutoscalingOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingOutput() WorkloadOptionsAutoscalingOutput {
	return o
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingOutput {
	return o
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return o.ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Background())
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadOptionsAutoscaling) *WorkloadOptionsAutoscaling {
		return &v
	}).(WorkloadOptionsAutoscalingPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptionsAutoscaling] {
	return pulumix.Output[WorkloadOptionsAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsAutoscalingOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.MaxConcurrency }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.MaxScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *string { return v.MetricPercentile }).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.MinScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.ScaleToZeroDelay }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.Target }).(pulumi.IntPtrOutput)
}

type WorkloadOptionsAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (o WorkloadOptionsAutoscalingPtrOutput) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return o
}

func (o WorkloadOptionsAutoscalingPtrOutput) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return o
}

func (o WorkloadOptionsAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptionsAutoscaling] {
	return pulumix.Output[*WorkloadOptionsAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsAutoscalingPtrOutput) Elem() WorkloadOptionsAutoscalingOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) WorkloadOptionsAutoscaling {
		if v != nil {
			return *v
		}
		var ret WorkloadOptionsAutoscaling
		return ret
	}).(WorkloadOptionsAutoscalingOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrency
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MetricPercentile
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MinScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.ScaleToZeroDelay
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.IntPtrOutput)
}

type WorkloadRolloutOptions struct {
	MaxSurgeReplicas       *string `pulumi:"maxSurgeReplicas"`
	MaxUnavailableReplicas *string `pulumi:"maxUnavailableReplicas"`
	MinReadySeconds        *int    `pulumi:"minReadySeconds"`
	ScalingPolicy          *string `pulumi:"scalingPolicy"`
}

// WorkloadRolloutOptionsInput is an input type that accepts WorkloadRolloutOptionsArgs and WorkloadRolloutOptionsOutput values.
// You can construct a concrete instance of `WorkloadRolloutOptionsInput` via:
//
//	WorkloadRolloutOptionsArgs{...}
type WorkloadRolloutOptionsInput interface {
	pulumi.Input

	ToWorkloadRolloutOptionsOutput() WorkloadRolloutOptionsOutput
	ToWorkloadRolloutOptionsOutputWithContext(context.Context) WorkloadRolloutOptionsOutput
}

type WorkloadRolloutOptionsArgs struct {
	MaxSurgeReplicas       pulumi.StringPtrInput `pulumi:"maxSurgeReplicas"`
	MaxUnavailableReplicas pulumi.StringPtrInput `pulumi:"maxUnavailableReplicas"`
	MinReadySeconds        pulumi.IntPtrInput    `pulumi:"minReadySeconds"`
	ScalingPolicy          pulumi.StringPtrInput `pulumi:"scalingPolicy"`
}

func (WorkloadRolloutOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadRolloutOptions)(nil)).Elem()
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsOutput() WorkloadRolloutOptionsOutput {
	return i.ToWorkloadRolloutOptionsOutputWithContext(context.Background())
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsOutputWithContext(ctx context.Context) WorkloadRolloutOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadRolloutOptionsOutput)
}

func (i WorkloadRolloutOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadRolloutOptions] {
	return pulumix.Output[WorkloadRolloutOptions]{
		OutputState: i.ToWorkloadRolloutOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return i.ToWorkloadRolloutOptionsPtrOutputWithContext(context.Background())
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadRolloutOptionsOutput).ToWorkloadRolloutOptionsPtrOutputWithContext(ctx)
}

// WorkloadRolloutOptionsPtrInput is an input type that accepts WorkloadRolloutOptionsArgs, WorkloadRolloutOptionsPtr and WorkloadRolloutOptionsPtrOutput values.
// You can construct a concrete instance of `WorkloadRolloutOptionsPtrInput` via:
//
//	        WorkloadRolloutOptionsArgs{...}
//
//	or:
//
//	        nil
type WorkloadRolloutOptionsPtrInput interface {
	pulumi.Input

	ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput
	ToWorkloadRolloutOptionsPtrOutputWithContext(context.Context) WorkloadRolloutOptionsPtrOutput
}

type workloadRolloutOptionsPtrType WorkloadRolloutOptionsArgs

func WorkloadRolloutOptionsPtr(v *WorkloadRolloutOptionsArgs) WorkloadRolloutOptionsPtrInput {
	return (*workloadRolloutOptionsPtrType)(v)
}

func (*workloadRolloutOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadRolloutOptions)(nil)).Elem()
}

func (i *workloadRolloutOptionsPtrType) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return i.ToWorkloadRolloutOptionsPtrOutputWithContext(context.Background())
}

func (i *workloadRolloutOptionsPtrType) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadRolloutOptionsPtrOutput)
}

func (i *workloadRolloutOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadRolloutOptions] {
	return pulumix.Output[*WorkloadRolloutOptions]{
		OutputState: i.ToWorkloadRolloutOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadRolloutOptionsOutput struct{ *pulumi.OutputState }

func (WorkloadRolloutOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadRolloutOptions)(nil)).Elem()
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsOutput() WorkloadRolloutOptionsOutput {
	return o
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsOutputWithContext(ctx context.Context) WorkloadRolloutOptionsOutput {
	return o
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return o.ToWorkloadRolloutOptionsPtrOutputWithContext(context.Background())
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadRolloutOptions) *WorkloadRolloutOptions {
		return &v
	}).(WorkloadRolloutOptionsPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadRolloutOptions] {
	return pulumix.Output[WorkloadRolloutOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadRolloutOptionsOutput) MaxSurgeReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *string { return v.MaxSurgeReplicas }).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) MaxUnavailableReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *string { return v.MaxUnavailableReplicas }).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *int { return v.MinReadySeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) ScalingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *string { return v.ScalingPolicy }).(pulumi.StringPtrOutput)
}

type WorkloadRolloutOptionsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadRolloutOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadRolloutOptions)(nil)).Elem()
}

func (o WorkloadRolloutOptionsPtrOutput) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return o
}

func (o WorkloadRolloutOptionsPtrOutput) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return o
}

func (o WorkloadRolloutOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadRolloutOptions] {
	return pulumix.Output[*WorkloadRolloutOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadRolloutOptionsPtrOutput) Elem() WorkloadRolloutOptionsOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) WorkloadRolloutOptions {
		if v != nil {
			return *v
		}
		var ret WorkloadRolloutOptions
		return ret
	}).(WorkloadRolloutOptionsOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) MaxSurgeReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxSurgeReplicas
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) MaxUnavailableReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxUnavailableReplicas
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *int {
		if v == nil {
			return nil
		}
		return v.MinReadySeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) ScalingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *string {
		if v == nil {
			return nil
		}
		return v.ScalingPolicy
	}).(pulumi.StringPtrOutput)
}

type WorkloadSecurityOptions struct {
	FileSystemGroupId *int `pulumi:"fileSystemGroupId"`
}

// WorkloadSecurityOptionsInput is an input type that accepts WorkloadSecurityOptionsArgs and WorkloadSecurityOptionsOutput values.
// You can construct a concrete instance of `WorkloadSecurityOptionsInput` via:
//
//	WorkloadSecurityOptionsArgs{...}
type WorkloadSecurityOptionsInput interface {
	pulumi.Input

	ToWorkloadSecurityOptionsOutput() WorkloadSecurityOptionsOutput
	ToWorkloadSecurityOptionsOutputWithContext(context.Context) WorkloadSecurityOptionsOutput
}

type WorkloadSecurityOptionsArgs struct {
	FileSystemGroupId pulumi.IntPtrInput `pulumi:"fileSystemGroupId"`
}

func (WorkloadSecurityOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSecurityOptions)(nil)).Elem()
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsOutput() WorkloadSecurityOptionsOutput {
	return i.ToWorkloadSecurityOptionsOutputWithContext(context.Background())
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsOutputWithContext(ctx context.Context) WorkloadSecurityOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSecurityOptionsOutput)
}

func (i WorkloadSecurityOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadSecurityOptions] {
	return pulumix.Output[WorkloadSecurityOptions]{
		OutputState: i.ToWorkloadSecurityOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return i.ToWorkloadSecurityOptionsPtrOutputWithContext(context.Background())
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSecurityOptionsOutput).ToWorkloadSecurityOptionsPtrOutputWithContext(ctx)
}

// WorkloadSecurityOptionsPtrInput is an input type that accepts WorkloadSecurityOptionsArgs, WorkloadSecurityOptionsPtr and WorkloadSecurityOptionsPtrOutput values.
// You can construct a concrete instance of `WorkloadSecurityOptionsPtrInput` via:
//
//	        WorkloadSecurityOptionsArgs{...}
//
//	or:
//
//	        nil
type WorkloadSecurityOptionsPtrInput interface {
	pulumi.Input

	ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput
	ToWorkloadSecurityOptionsPtrOutputWithContext(context.Context) WorkloadSecurityOptionsPtrOutput
}

type workloadSecurityOptionsPtrType WorkloadSecurityOptionsArgs

func WorkloadSecurityOptionsPtr(v *WorkloadSecurityOptionsArgs) WorkloadSecurityOptionsPtrInput {
	return (*workloadSecurityOptionsPtrType)(v)
}

func (*workloadSecurityOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSecurityOptions)(nil)).Elem()
}

func (i *workloadSecurityOptionsPtrType) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return i.ToWorkloadSecurityOptionsPtrOutputWithContext(context.Background())
}

func (i *workloadSecurityOptionsPtrType) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSecurityOptionsPtrOutput)
}

func (i *workloadSecurityOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSecurityOptions] {
	return pulumix.Output[*WorkloadSecurityOptions]{
		OutputState: i.ToWorkloadSecurityOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadSecurityOptionsOutput struct{ *pulumi.OutputState }

func (WorkloadSecurityOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSecurityOptions)(nil)).Elem()
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsOutput() WorkloadSecurityOptionsOutput {
	return o
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsOutputWithContext(ctx context.Context) WorkloadSecurityOptionsOutput {
	return o
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return o.ToWorkloadSecurityOptionsPtrOutputWithContext(context.Background())
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadSecurityOptions) *WorkloadSecurityOptions {
		return &v
	}).(WorkloadSecurityOptionsPtrOutput)
}

func (o WorkloadSecurityOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadSecurityOptions] {
	return pulumix.Output[WorkloadSecurityOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSecurityOptionsOutput) FileSystemGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadSecurityOptions) *int { return v.FileSystemGroupId }).(pulumi.IntPtrOutput)
}

type WorkloadSecurityOptionsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadSecurityOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSecurityOptions)(nil)).Elem()
}

func (o WorkloadSecurityOptionsPtrOutput) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return o
}

func (o WorkloadSecurityOptionsPtrOutput) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return o
}

func (o WorkloadSecurityOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSecurityOptions] {
	return pulumix.Output[*WorkloadSecurityOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSecurityOptionsPtrOutput) Elem() WorkloadSecurityOptionsOutput {
	return o.ApplyT(func(v *WorkloadSecurityOptions) WorkloadSecurityOptions {
		if v != nil {
			return *v
		}
		var ret WorkloadSecurityOptions
		return ret
	}).(WorkloadSecurityOptionsOutput)
}

func (o WorkloadSecurityOptionsPtrOutput) FileSystemGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadSecurityOptions) *int {
		if v == nil {
			return nil
		}
		return v.FileSystemGroupId
	}).(pulumi.IntPtrOutput)
}

type WorkloadSidecar struct {
	Envoy string `pulumi:"envoy"`
}

// WorkloadSidecarInput is an input type that accepts WorkloadSidecarArgs and WorkloadSidecarOutput values.
// You can construct a concrete instance of `WorkloadSidecarInput` via:
//
//	WorkloadSidecarArgs{...}
type WorkloadSidecarInput interface {
	pulumi.Input

	ToWorkloadSidecarOutput() WorkloadSidecarOutput
	ToWorkloadSidecarOutputWithContext(context.Context) WorkloadSidecarOutput
}

type WorkloadSidecarArgs struct {
	Envoy pulumi.StringInput `pulumi:"envoy"`
}

func (WorkloadSidecarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSidecar)(nil)).Elem()
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarOutput() WorkloadSidecarOutput {
	return i.ToWorkloadSidecarOutputWithContext(context.Background())
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarOutputWithContext(ctx context.Context) WorkloadSidecarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSidecarOutput)
}

func (i WorkloadSidecarArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadSidecar] {
	return pulumix.Output[WorkloadSidecar]{
		OutputState: i.ToWorkloadSidecarOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return i.ToWorkloadSidecarPtrOutputWithContext(context.Background())
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSidecarOutput).ToWorkloadSidecarPtrOutputWithContext(ctx)
}

// WorkloadSidecarPtrInput is an input type that accepts WorkloadSidecarArgs, WorkloadSidecarPtr and WorkloadSidecarPtrOutput values.
// You can construct a concrete instance of `WorkloadSidecarPtrInput` via:
//
//	        WorkloadSidecarArgs{...}
//
//	or:
//
//	        nil
type WorkloadSidecarPtrInput interface {
	pulumi.Input

	ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput
	ToWorkloadSidecarPtrOutputWithContext(context.Context) WorkloadSidecarPtrOutput
}

type workloadSidecarPtrType WorkloadSidecarArgs

func WorkloadSidecarPtr(v *WorkloadSidecarArgs) WorkloadSidecarPtrInput {
	return (*workloadSidecarPtrType)(v)
}

func (*workloadSidecarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSidecar)(nil)).Elem()
}

func (i *workloadSidecarPtrType) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return i.ToWorkloadSidecarPtrOutputWithContext(context.Background())
}

func (i *workloadSidecarPtrType) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSidecarPtrOutput)
}

func (i *workloadSidecarPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSidecar] {
	return pulumix.Output[*WorkloadSidecar]{
		OutputState: i.ToWorkloadSidecarPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadSidecarOutput struct{ *pulumi.OutputState }

func (WorkloadSidecarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSidecar)(nil)).Elem()
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarOutput() WorkloadSidecarOutput {
	return o
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarOutputWithContext(ctx context.Context) WorkloadSidecarOutput {
	return o
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return o.ToWorkloadSidecarPtrOutputWithContext(context.Background())
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadSidecar) *WorkloadSidecar {
		return &v
	}).(WorkloadSidecarPtrOutput)
}

func (o WorkloadSidecarOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadSidecar] {
	return pulumix.Output[WorkloadSidecar]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSidecarOutput) Envoy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadSidecar) string { return v.Envoy }).(pulumi.StringOutput)
}

type WorkloadSidecarPtrOutput struct{ *pulumi.OutputState }

func (WorkloadSidecarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSidecar)(nil)).Elem()
}

func (o WorkloadSidecarPtrOutput) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return o
}

func (o WorkloadSidecarPtrOutput) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return o
}

func (o WorkloadSidecarPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSidecar] {
	return pulumix.Output[*WorkloadSidecar]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSidecarPtrOutput) Elem() WorkloadSidecarOutput {
	return o.ApplyT(func(v *WorkloadSidecar) WorkloadSidecar {
		if v != nil {
			return *v
		}
		var ret WorkloadSidecar
		return ret
	}).(WorkloadSidecarOutput)
}

func (o WorkloadSidecarPtrOutput) Envoy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadSidecar) *string {
		if v == nil {
			return nil
		}
		return &v.Envoy
	}).(pulumi.StringPtrOutput)
}

type WorkloadStatus struct {
	CanonicalEndpoint   *string                       `pulumi:"canonicalEndpoint"`
	CurrentReplicaCount *int                          `pulumi:"currentReplicaCount"`
	Endpoint            *string                       `pulumi:"endpoint"`
	HealthChecks        []WorkloadStatusHealthCheck   `pulumi:"healthChecks"`
	InternalName        *string                       `pulumi:"internalName"`
	LoadBalancers       []WorkloadStatusLoadBalancer  `pulumi:"loadBalancers"`
	ParentId            *string                       `pulumi:"parentId"`
	ResolvedImages      []WorkloadStatusResolvedImage `pulumi:"resolvedImages"`
}

// WorkloadStatusInput is an input type that accepts WorkloadStatusArgs and WorkloadStatusOutput values.
// You can construct a concrete instance of `WorkloadStatusInput` via:
//
//	WorkloadStatusArgs{...}
type WorkloadStatusInput interface {
	pulumi.Input

	ToWorkloadStatusOutput() WorkloadStatusOutput
	ToWorkloadStatusOutputWithContext(context.Context) WorkloadStatusOutput
}

type WorkloadStatusArgs struct {
	CanonicalEndpoint   pulumi.StringPtrInput                 `pulumi:"canonicalEndpoint"`
	CurrentReplicaCount pulumi.IntPtrInput                    `pulumi:"currentReplicaCount"`
	Endpoint            pulumi.StringPtrInput                 `pulumi:"endpoint"`
	HealthChecks        WorkloadStatusHealthCheckArrayInput   `pulumi:"healthChecks"`
	InternalName        pulumi.StringPtrInput                 `pulumi:"internalName"`
	LoadBalancers       WorkloadStatusLoadBalancerArrayInput  `pulumi:"loadBalancers"`
	ParentId            pulumi.StringPtrInput                 `pulumi:"parentId"`
	ResolvedImages      WorkloadStatusResolvedImageArrayInput `pulumi:"resolvedImages"`
}

func (WorkloadStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatus)(nil)).Elem()
}

func (i WorkloadStatusArgs) ToWorkloadStatusOutput() WorkloadStatusOutput {
	return i.ToWorkloadStatusOutputWithContext(context.Background())
}

func (i WorkloadStatusArgs) ToWorkloadStatusOutputWithContext(ctx context.Context) WorkloadStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusOutput)
}

func (i WorkloadStatusArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatus] {
	return pulumix.Output[WorkloadStatus]{
		OutputState: i.ToWorkloadStatusOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusArrayInput is an input type that accepts WorkloadStatusArray and WorkloadStatusArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusArrayInput` via:
//
//	WorkloadStatusArray{ WorkloadStatusArgs{...} }
type WorkloadStatusArrayInput interface {
	pulumi.Input

	ToWorkloadStatusArrayOutput() WorkloadStatusArrayOutput
	ToWorkloadStatusArrayOutputWithContext(context.Context) WorkloadStatusArrayOutput
}

type WorkloadStatusArray []WorkloadStatusInput

func (WorkloadStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatus)(nil)).Elem()
}

func (i WorkloadStatusArray) ToWorkloadStatusArrayOutput() WorkloadStatusArrayOutput {
	return i.ToWorkloadStatusArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusArray) ToWorkloadStatusArrayOutputWithContext(ctx context.Context) WorkloadStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusArrayOutput)
}

func (i WorkloadStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatus] {
	return pulumix.Output[[]WorkloadStatus]{
		OutputState: i.ToWorkloadStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusOutput struct{ *pulumi.OutputState }

func (WorkloadStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatus)(nil)).Elem()
}

func (o WorkloadStatusOutput) ToWorkloadStatusOutput() WorkloadStatusOutput {
	return o
}

func (o WorkloadStatusOutput) ToWorkloadStatusOutputWithContext(ctx context.Context) WorkloadStatusOutput {
	return o
}

func (o WorkloadStatusOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatus] {
	return pulumix.Output[WorkloadStatus]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusOutput) CanonicalEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.CanonicalEndpoint }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) CurrentReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *int { return v.CurrentReplicaCount }).(pulumi.IntPtrOutput)
}

func (o WorkloadStatusOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) HealthChecks() WorkloadStatusHealthCheckArrayOutput {
	return o.ApplyT(func(v WorkloadStatus) []WorkloadStatusHealthCheck { return v.HealthChecks }).(WorkloadStatusHealthCheckArrayOutput)
}

func (o WorkloadStatusOutput) InternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.InternalName }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) LoadBalancers() WorkloadStatusLoadBalancerArrayOutput {
	return o.ApplyT(func(v WorkloadStatus) []WorkloadStatusLoadBalancer { return v.LoadBalancers }).(WorkloadStatusLoadBalancerArrayOutput)
}

func (o WorkloadStatusOutput) ParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.ParentId }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) ResolvedImages() WorkloadStatusResolvedImageArrayOutput {
	return o.ApplyT(func(v WorkloadStatus) []WorkloadStatusResolvedImage { return v.ResolvedImages }).(WorkloadStatusResolvedImageArrayOutput)
}

type WorkloadStatusArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatus)(nil)).Elem()
}

func (o WorkloadStatusArrayOutput) ToWorkloadStatusArrayOutput() WorkloadStatusArrayOutput {
	return o
}

func (o WorkloadStatusArrayOutput) ToWorkloadStatusArrayOutputWithContext(ctx context.Context) WorkloadStatusArrayOutput {
	return o
}

func (o WorkloadStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatus] {
	return pulumix.Output[[]WorkloadStatus]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusArrayOutput) Index(i pulumi.IntInput) WorkloadStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatus {
		return vs[0].([]WorkloadStatus)[vs[1].(int)]
	}).(WorkloadStatusOutput)
}

type WorkloadStatusHealthCheck struct {
	Active      bool    `pulumi:"active"`
	Code        *int    `pulumi:"code"`
	Failures    *int    `pulumi:"failures"`
	LastChecked *string `pulumi:"lastChecked"`
	Message     *string `pulumi:"message"`
	Success     *bool   `pulumi:"success"`
	Successes   *int    `pulumi:"successes"`
}

// WorkloadStatusHealthCheckInput is an input type that accepts WorkloadStatusHealthCheckArgs and WorkloadStatusHealthCheckOutput values.
// You can construct a concrete instance of `WorkloadStatusHealthCheckInput` via:
//
//	WorkloadStatusHealthCheckArgs{...}
type WorkloadStatusHealthCheckInput interface {
	pulumi.Input

	ToWorkloadStatusHealthCheckOutput() WorkloadStatusHealthCheckOutput
	ToWorkloadStatusHealthCheckOutputWithContext(context.Context) WorkloadStatusHealthCheckOutput
}

type WorkloadStatusHealthCheckArgs struct {
	Active      pulumi.BoolInput      `pulumi:"active"`
	Code        pulumi.IntPtrInput    `pulumi:"code"`
	Failures    pulumi.IntPtrInput    `pulumi:"failures"`
	LastChecked pulumi.StringPtrInput `pulumi:"lastChecked"`
	Message     pulumi.StringPtrInput `pulumi:"message"`
	Success     pulumi.BoolPtrInput   `pulumi:"success"`
	Successes   pulumi.IntPtrInput    `pulumi:"successes"`
}

func (WorkloadStatusHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusHealthCheck)(nil)).Elem()
}

func (i WorkloadStatusHealthCheckArgs) ToWorkloadStatusHealthCheckOutput() WorkloadStatusHealthCheckOutput {
	return i.ToWorkloadStatusHealthCheckOutputWithContext(context.Background())
}

func (i WorkloadStatusHealthCheckArgs) ToWorkloadStatusHealthCheckOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusHealthCheckOutput)
}

func (i WorkloadStatusHealthCheckArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusHealthCheck] {
	return pulumix.Output[WorkloadStatusHealthCheck]{
		OutputState: i.ToWorkloadStatusHealthCheckOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusHealthCheckArrayInput is an input type that accepts WorkloadStatusHealthCheckArray and WorkloadStatusHealthCheckArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusHealthCheckArrayInput` via:
//
//	WorkloadStatusHealthCheckArray{ WorkloadStatusHealthCheckArgs{...} }
type WorkloadStatusHealthCheckArrayInput interface {
	pulumi.Input

	ToWorkloadStatusHealthCheckArrayOutput() WorkloadStatusHealthCheckArrayOutput
	ToWorkloadStatusHealthCheckArrayOutputWithContext(context.Context) WorkloadStatusHealthCheckArrayOutput
}

type WorkloadStatusHealthCheckArray []WorkloadStatusHealthCheckInput

func (WorkloadStatusHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusHealthCheck)(nil)).Elem()
}

func (i WorkloadStatusHealthCheckArray) ToWorkloadStatusHealthCheckArrayOutput() WorkloadStatusHealthCheckArrayOutput {
	return i.ToWorkloadStatusHealthCheckArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusHealthCheckArray) ToWorkloadStatusHealthCheckArrayOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusHealthCheckArrayOutput)
}

func (i WorkloadStatusHealthCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusHealthCheck] {
	return pulumix.Output[[]WorkloadStatusHealthCheck]{
		OutputState: i.ToWorkloadStatusHealthCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusHealthCheckOutput struct{ *pulumi.OutputState }

func (WorkloadStatusHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusHealthCheck)(nil)).Elem()
}

func (o WorkloadStatusHealthCheckOutput) ToWorkloadStatusHealthCheckOutput() WorkloadStatusHealthCheckOutput {
	return o
}

func (o WorkloadStatusHealthCheckOutput) ToWorkloadStatusHealthCheckOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckOutput {
	return o
}

func (o WorkloadStatusHealthCheckOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusHealthCheck] {
	return pulumix.Output[WorkloadStatusHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusHealthCheckOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) bool { return v.Active }).(pulumi.BoolOutput)
}

func (o WorkloadStatusHealthCheckOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *int { return v.Code }).(pulumi.IntPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Failures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *int { return v.Failures }).(pulumi.IntPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) LastChecked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *string { return v.LastChecked }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Success() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *bool { return v.Success }).(pulumi.BoolPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Successes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *int { return v.Successes }).(pulumi.IntPtrOutput)
}

type WorkloadStatusHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusHealthCheck)(nil)).Elem()
}

func (o WorkloadStatusHealthCheckArrayOutput) ToWorkloadStatusHealthCheckArrayOutput() WorkloadStatusHealthCheckArrayOutput {
	return o
}

func (o WorkloadStatusHealthCheckArrayOutput) ToWorkloadStatusHealthCheckArrayOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckArrayOutput {
	return o
}

func (o WorkloadStatusHealthCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusHealthCheck] {
	return pulumix.Output[[]WorkloadStatusHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusHealthCheckArrayOutput) Index(i pulumi.IntInput) WorkloadStatusHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusHealthCheck {
		return vs[0].([]WorkloadStatusHealthCheck)[vs[1].(int)]
	}).(WorkloadStatusHealthCheckOutput)
}

type WorkloadStatusLoadBalancer struct {
	Origin *string `pulumi:"origin"`
	Url    *string `pulumi:"url"`
}

// WorkloadStatusLoadBalancerInput is an input type that accepts WorkloadStatusLoadBalancerArgs and WorkloadStatusLoadBalancerOutput values.
// You can construct a concrete instance of `WorkloadStatusLoadBalancerInput` via:
//
//	WorkloadStatusLoadBalancerArgs{...}
type WorkloadStatusLoadBalancerInput interface {
	pulumi.Input

	ToWorkloadStatusLoadBalancerOutput() WorkloadStatusLoadBalancerOutput
	ToWorkloadStatusLoadBalancerOutputWithContext(context.Context) WorkloadStatusLoadBalancerOutput
}

type WorkloadStatusLoadBalancerArgs struct {
	Origin pulumi.StringPtrInput `pulumi:"origin"`
	Url    pulumi.StringPtrInput `pulumi:"url"`
}

func (WorkloadStatusLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusLoadBalancer)(nil)).Elem()
}

func (i WorkloadStatusLoadBalancerArgs) ToWorkloadStatusLoadBalancerOutput() WorkloadStatusLoadBalancerOutput {
	return i.ToWorkloadStatusLoadBalancerOutputWithContext(context.Background())
}

func (i WorkloadStatusLoadBalancerArgs) ToWorkloadStatusLoadBalancerOutputWithContext(ctx context.Context) WorkloadStatusLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusLoadBalancerOutput)
}

func (i WorkloadStatusLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusLoadBalancer] {
	return pulumix.Output[WorkloadStatusLoadBalancer]{
		OutputState: i.ToWorkloadStatusLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusLoadBalancerArrayInput is an input type that accepts WorkloadStatusLoadBalancerArray and WorkloadStatusLoadBalancerArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusLoadBalancerArrayInput` via:
//
//	WorkloadStatusLoadBalancerArray{ WorkloadStatusLoadBalancerArgs{...} }
type WorkloadStatusLoadBalancerArrayInput interface {
	pulumi.Input

	ToWorkloadStatusLoadBalancerArrayOutput() WorkloadStatusLoadBalancerArrayOutput
	ToWorkloadStatusLoadBalancerArrayOutputWithContext(context.Context) WorkloadStatusLoadBalancerArrayOutput
}

type WorkloadStatusLoadBalancerArray []WorkloadStatusLoadBalancerInput

func (WorkloadStatusLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusLoadBalancer)(nil)).Elem()
}

func (i WorkloadStatusLoadBalancerArray) ToWorkloadStatusLoadBalancerArrayOutput() WorkloadStatusLoadBalancerArrayOutput {
	return i.ToWorkloadStatusLoadBalancerArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusLoadBalancerArray) ToWorkloadStatusLoadBalancerArrayOutputWithContext(ctx context.Context) WorkloadStatusLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusLoadBalancerArrayOutput)
}

func (i WorkloadStatusLoadBalancerArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusLoadBalancer] {
	return pulumix.Output[[]WorkloadStatusLoadBalancer]{
		OutputState: i.ToWorkloadStatusLoadBalancerArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusLoadBalancerOutput struct{ *pulumi.OutputState }

func (WorkloadStatusLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusLoadBalancer)(nil)).Elem()
}

func (o WorkloadStatusLoadBalancerOutput) ToWorkloadStatusLoadBalancerOutput() WorkloadStatusLoadBalancerOutput {
	return o
}

func (o WorkloadStatusLoadBalancerOutput) ToWorkloadStatusLoadBalancerOutputWithContext(ctx context.Context) WorkloadStatusLoadBalancerOutput {
	return o
}

func (o WorkloadStatusLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusLoadBalancer] {
	return pulumix.Output[WorkloadStatusLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusLoadBalancerOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusLoadBalancer) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusLoadBalancerOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusLoadBalancer) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WorkloadStatusLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusLoadBalancer)(nil)).Elem()
}

func (o WorkloadStatusLoadBalancerArrayOutput) ToWorkloadStatusLoadBalancerArrayOutput() WorkloadStatusLoadBalancerArrayOutput {
	return o
}

func (o WorkloadStatusLoadBalancerArrayOutput) ToWorkloadStatusLoadBalancerArrayOutputWithContext(ctx context.Context) WorkloadStatusLoadBalancerArrayOutput {
	return o
}

func (o WorkloadStatusLoadBalancerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusLoadBalancer] {
	return pulumix.Output[[]WorkloadStatusLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusLoadBalancerArrayOutput) Index(i pulumi.IntInput) WorkloadStatusLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusLoadBalancer {
		return vs[0].([]WorkloadStatusLoadBalancer)[vs[1].(int)]
	}).(WorkloadStatusLoadBalancerOutput)
}

type WorkloadStatusResolvedImage struct {
	Images             []WorkloadStatusResolvedImageImage `pulumi:"images"`
	ResolvedAt         *string                            `pulumi:"resolvedAt"`
	ResolvedForVersion *int                               `pulumi:"resolvedForVersion"`
}

// WorkloadStatusResolvedImageInput is an input type that accepts WorkloadStatusResolvedImageArgs and WorkloadStatusResolvedImageOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageInput` via:
//
//	WorkloadStatusResolvedImageArgs{...}
type WorkloadStatusResolvedImageInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageOutput() WorkloadStatusResolvedImageOutput
	ToWorkloadStatusResolvedImageOutputWithContext(context.Context) WorkloadStatusResolvedImageOutput
}

type WorkloadStatusResolvedImageArgs struct {
	Images             WorkloadStatusResolvedImageImageArrayInput `pulumi:"images"`
	ResolvedAt         pulumi.StringPtrInput                      `pulumi:"resolvedAt"`
	ResolvedForVersion pulumi.IntPtrInput                         `pulumi:"resolvedForVersion"`
}

func (WorkloadStatusResolvedImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageArgs) ToWorkloadStatusResolvedImageOutput() WorkloadStatusResolvedImageOutput {
	return i.ToWorkloadStatusResolvedImageOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageArgs) ToWorkloadStatusResolvedImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageOutput)
}

func (i WorkloadStatusResolvedImageArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImage] {
	return pulumix.Output[WorkloadStatusResolvedImage]{
		OutputState: i.ToWorkloadStatusResolvedImageOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusResolvedImageArrayInput is an input type that accepts WorkloadStatusResolvedImageArray and WorkloadStatusResolvedImageArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageArrayInput` via:
//
//	WorkloadStatusResolvedImageArray{ WorkloadStatusResolvedImageArgs{...} }
type WorkloadStatusResolvedImageArrayInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageArrayOutput() WorkloadStatusResolvedImageArrayOutput
	ToWorkloadStatusResolvedImageArrayOutputWithContext(context.Context) WorkloadStatusResolvedImageArrayOutput
}

type WorkloadStatusResolvedImageArray []WorkloadStatusResolvedImageInput

func (WorkloadStatusResolvedImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageArray) ToWorkloadStatusResolvedImageArrayOutput() WorkloadStatusResolvedImageArrayOutput {
	return i.ToWorkloadStatusResolvedImageArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageArray) ToWorkloadStatusResolvedImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageArrayOutput)
}

func (i WorkloadStatusResolvedImageArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImage]{
		OutputState: i.ToWorkloadStatusResolvedImageArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusResolvedImageOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageOutput) ToWorkloadStatusResolvedImageOutput() WorkloadStatusResolvedImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageOutput) ToWorkloadStatusResolvedImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImage] {
	return pulumix.Output[WorkloadStatusResolvedImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageOutput) Images() WorkloadStatusResolvedImageImageArrayOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImage) []WorkloadStatusResolvedImageImage { return v.Images }).(WorkloadStatusResolvedImageImageArrayOutput)
}

func (o WorkloadStatusResolvedImageOutput) ResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImage) *string { return v.ResolvedAt }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageOutput) ResolvedForVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImage) *int { return v.ResolvedForVersion }).(pulumi.IntPtrOutput)
}

type WorkloadStatusResolvedImageArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageArrayOutput) ToWorkloadStatusResolvedImageArrayOutput() WorkloadStatusResolvedImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageArrayOutput) ToWorkloadStatusResolvedImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageArrayOutput) Index(i pulumi.IntInput) WorkloadStatusResolvedImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusResolvedImage {
		return vs[0].([]WorkloadStatusResolvedImage)[vs[1].(int)]
	}).(WorkloadStatusResolvedImageOutput)
}

type WorkloadStatusResolvedImageImage struct {
	Digest    *string                                    `pulumi:"digest"`
	Manifests []WorkloadStatusResolvedImageImageManifest `pulumi:"manifests"`
}

// WorkloadStatusResolvedImageImageInput is an input type that accepts WorkloadStatusResolvedImageImageArgs and WorkloadStatusResolvedImageImageOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageInput` via:
//
//	WorkloadStatusResolvedImageImageArgs{...}
type WorkloadStatusResolvedImageImageInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageOutput() WorkloadStatusResolvedImageImageOutput
	ToWorkloadStatusResolvedImageImageOutputWithContext(context.Context) WorkloadStatusResolvedImageImageOutput
}

type WorkloadStatusResolvedImageImageArgs struct {
	Digest    pulumi.StringPtrInput                              `pulumi:"digest"`
	Manifests WorkloadStatusResolvedImageImageManifestArrayInput `pulumi:"manifests"`
}

func (WorkloadStatusResolvedImageImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageArgs) ToWorkloadStatusResolvedImageImageOutput() WorkloadStatusResolvedImageImageOutput {
	return i.ToWorkloadStatusResolvedImageImageOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageArgs) ToWorkloadStatusResolvedImageImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageOutput)
}

func (i WorkloadStatusResolvedImageImageArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImage] {
	return pulumix.Output[WorkloadStatusResolvedImageImage]{
		OutputState: i.ToWorkloadStatusResolvedImageImageOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusResolvedImageImageArrayInput is an input type that accepts WorkloadStatusResolvedImageImageArray and WorkloadStatusResolvedImageImageArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageArrayInput` via:
//
//	WorkloadStatusResolvedImageImageArray{ WorkloadStatusResolvedImageImageArgs{...} }
type WorkloadStatusResolvedImageImageArrayInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageArrayOutput() WorkloadStatusResolvedImageImageArrayOutput
	ToWorkloadStatusResolvedImageImageArrayOutputWithContext(context.Context) WorkloadStatusResolvedImageImageArrayOutput
}

type WorkloadStatusResolvedImageImageArray []WorkloadStatusResolvedImageImageInput

func (WorkloadStatusResolvedImageImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageArray) ToWorkloadStatusResolvedImageImageArrayOutput() WorkloadStatusResolvedImageImageArrayOutput {
	return i.ToWorkloadStatusResolvedImageImageArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageArray) ToWorkloadStatusResolvedImageImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageArrayOutput)
}

func (i WorkloadStatusResolvedImageImageArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImage]{
		OutputState: i.ToWorkloadStatusResolvedImageImageArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusResolvedImageImageOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageOutput) ToWorkloadStatusResolvedImageImageOutput() WorkloadStatusResolvedImageImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageOutput) ToWorkloadStatusResolvedImageImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImage] {
	return pulumix.Output[WorkloadStatusResolvedImageImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImage) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageOutput) Manifests() WorkloadStatusResolvedImageImageManifestArrayOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImage) []WorkloadStatusResolvedImageImageManifest {
		return v.Manifests
	}).(WorkloadStatusResolvedImageImageManifestArrayOutput)
}

type WorkloadStatusResolvedImageImageArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageArrayOutput) ToWorkloadStatusResolvedImageImageArrayOutput() WorkloadStatusResolvedImageImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageArrayOutput) ToWorkloadStatusResolvedImageImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageArrayOutput) Index(i pulumi.IntInput) WorkloadStatusResolvedImageImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusResolvedImageImage {
		return vs[0].([]WorkloadStatusResolvedImageImage)[vs[1].(int)]
	}).(WorkloadStatusResolvedImageImageOutput)
}

type WorkloadStatusResolvedImageImageManifest struct {
	Digest    *string           `pulumi:"digest"`
	Image     *string           `pulumi:"image"`
	MediaType *string           `pulumi:"mediaType"`
	Platform  map[string]string `pulumi:"platform"`
}

// WorkloadStatusResolvedImageImageManifestInput is an input type that accepts WorkloadStatusResolvedImageImageManifestArgs and WorkloadStatusResolvedImageImageManifestOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageManifestInput` via:
//
//	WorkloadStatusResolvedImageImageManifestArgs{...}
type WorkloadStatusResolvedImageImageManifestInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageManifestOutput() WorkloadStatusResolvedImageImageManifestOutput
	ToWorkloadStatusResolvedImageImageManifestOutputWithContext(context.Context) WorkloadStatusResolvedImageImageManifestOutput
}

type WorkloadStatusResolvedImageImageManifestArgs struct {
	Digest    pulumi.StringPtrInput `pulumi:"digest"`
	Image     pulumi.StringPtrInput `pulumi:"image"`
	MediaType pulumi.StringPtrInput `pulumi:"mediaType"`
	Platform  pulumi.StringMapInput `pulumi:"platform"`
}

func (WorkloadStatusResolvedImageImageManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageManifestArgs) ToWorkloadStatusResolvedImageImageManifestOutput() WorkloadStatusResolvedImageImageManifestOutput {
	return i.ToWorkloadStatusResolvedImageImageManifestOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageManifestArgs) ToWorkloadStatusResolvedImageImageManifestOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageManifestOutput)
}

func (i WorkloadStatusResolvedImageImageManifestArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[WorkloadStatusResolvedImageImageManifest]{
		OutputState: i.ToWorkloadStatusResolvedImageImageManifestOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusResolvedImageImageManifestArrayInput is an input type that accepts WorkloadStatusResolvedImageImageManifestArray and WorkloadStatusResolvedImageImageManifestArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageManifestArrayInput` via:
//
//	WorkloadStatusResolvedImageImageManifestArray{ WorkloadStatusResolvedImageImageManifestArgs{...} }
type WorkloadStatusResolvedImageImageManifestArrayInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageManifestArrayOutput() WorkloadStatusResolvedImageImageManifestArrayOutput
	ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(context.Context) WorkloadStatusResolvedImageImageManifestArrayOutput
}

type WorkloadStatusResolvedImageImageManifestArray []WorkloadStatusResolvedImageImageManifestInput

func (WorkloadStatusResolvedImageImageManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageManifestArray) ToWorkloadStatusResolvedImageImageManifestArrayOutput() WorkloadStatusResolvedImageImageManifestArrayOutput {
	return i.ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageManifestArray) ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageManifestArrayOutput)
}

func (i WorkloadStatusResolvedImageImageManifestArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImageManifest]{
		OutputState: i.ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusResolvedImageImageManifestOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageManifestOutput) ToWorkloadStatusResolvedImageImageManifestOutput() WorkloadStatusResolvedImageImageManifestOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestOutput) ToWorkloadStatusResolvedImageImageManifestOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[WorkloadStatusResolvedImageImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageManifestOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageManifestOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageManifestOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageManifestOutput) Platform() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) map[string]string { return v.Platform }).(pulumi.StringMapOutput)
}

type WorkloadStatusResolvedImageImageManifestArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) ToWorkloadStatusResolvedImageImageManifestArrayOutput() WorkloadStatusResolvedImageImageManifestArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) Index(i pulumi.IntInput) WorkloadStatusResolvedImageImageManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusResolvedImageImageManifest {
		return vs[0].([]WorkloadStatusResolvedImageImageManifest)[vs[1].(int)]
	}).(WorkloadStatusResolvedImageImageManifestOutput)
}

type GetGvcControlplaneTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Sampling   float64           `pulumi:"sampling"`
}

// GetGvcControlplaneTracingInput is an input type that accepts GetGvcControlplaneTracingArgs and GetGvcControlplaneTracingOutput values.
// You can construct a concrete instance of `GetGvcControlplaneTracingInput` via:
//
//	GetGvcControlplaneTracingArgs{...}
type GetGvcControlplaneTracingInput interface {
	pulumi.Input

	ToGetGvcControlplaneTracingOutput() GetGvcControlplaneTracingOutput
	ToGetGvcControlplaneTracingOutputWithContext(context.Context) GetGvcControlplaneTracingOutput
}

type GetGvcControlplaneTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Sampling   pulumi.Float64Input   `pulumi:"sampling"`
}

func (GetGvcControlplaneTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcControlplaneTracing)(nil)).Elem()
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingOutput() GetGvcControlplaneTracingOutput {
	return i.ToGetGvcControlplaneTracingOutputWithContext(context.Background())
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingOutputWithContext(ctx context.Context) GetGvcControlplaneTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcControlplaneTracingOutput)
}

func (i GetGvcControlplaneTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcControlplaneTracing] {
	return pulumix.Output[GetGvcControlplaneTracing]{
		OutputState: i.ToGetGvcControlplaneTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return i.ToGetGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcControlplaneTracingOutput).ToGetGvcControlplaneTracingPtrOutputWithContext(ctx)
}

// GetGvcControlplaneTracingPtrInput is an input type that accepts GetGvcControlplaneTracingArgs, GetGvcControlplaneTracingPtr and GetGvcControlplaneTracingPtrOutput values.
// You can construct a concrete instance of `GetGvcControlplaneTracingPtrInput` via:
//
//	        GetGvcControlplaneTracingArgs{...}
//
//	or:
//
//	        nil
type GetGvcControlplaneTracingPtrInput interface {
	pulumi.Input

	ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput
	ToGetGvcControlplaneTracingPtrOutputWithContext(context.Context) GetGvcControlplaneTracingPtrOutput
}

type getGvcControlplaneTracingPtrType GetGvcControlplaneTracingArgs

func GetGvcControlplaneTracingPtr(v *GetGvcControlplaneTracingArgs) GetGvcControlplaneTracingPtrInput {
	return (*getGvcControlplaneTracingPtrType)(v)
}

func (*getGvcControlplaneTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcControlplaneTracing)(nil)).Elem()
}

func (i *getGvcControlplaneTracingPtrType) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return i.ToGetGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i *getGvcControlplaneTracingPtrType) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcControlplaneTracingPtrOutput)
}

func (i *getGvcControlplaneTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcControlplaneTracing] {
	return pulumix.Output[*GetGvcControlplaneTracing]{
		OutputState: i.ToGetGvcControlplaneTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcControlplaneTracingOutput struct{ *pulumi.OutputState }

func (GetGvcControlplaneTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcControlplaneTracing)(nil)).Elem()
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingOutput() GetGvcControlplaneTracingOutput {
	return o
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingOutputWithContext(ctx context.Context) GetGvcControlplaneTracingOutput {
	return o
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return o.ToGetGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcControlplaneTracing) *GetGvcControlplaneTracing {
		return &v
	}).(GetGvcControlplaneTracingPtrOutput)
}

func (o GetGvcControlplaneTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcControlplaneTracing] {
	return pulumix.Output[GetGvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcControlplaneTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGvcControlplaneTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GetGvcControlplaneTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v GetGvcControlplaneTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type GetGvcControlplaneTracingPtrOutput struct{ *pulumi.OutputState }

func (GetGvcControlplaneTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcControlplaneTracing)(nil)).Elem()
}

func (o GetGvcControlplaneTracingPtrOutput) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return o
}

func (o GetGvcControlplaneTracingPtrOutput) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return o
}

func (o GetGvcControlplaneTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcControlplaneTracing] {
	return pulumix.Output[*GetGvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcControlplaneTracingPtrOutput) Elem() GetGvcControlplaneTracingOutput {
	return o.ApplyT(func(v *GetGvcControlplaneTracing) GetGvcControlplaneTracing {
		if v != nil {
			return *v
		}
		var ret GetGvcControlplaneTracing
		return ret
	}).(GetGvcControlplaneTracingOutput)
}

func (o GetGvcControlplaneTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetGvcControlplaneTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GetGvcControlplaneTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GetGvcControlplaneTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type GetGvcLightstepTracing struct {
	Credentials *string           `pulumi:"credentials"`
	CustomTags  map[string]string `pulumi:"customTags"`
	Endpoint    string            `pulumi:"endpoint"`
	Sampling    float64           `pulumi:"sampling"`
}

// GetGvcLightstepTracingInput is an input type that accepts GetGvcLightstepTracingArgs and GetGvcLightstepTracingOutput values.
// You can construct a concrete instance of `GetGvcLightstepTracingInput` via:
//
//	GetGvcLightstepTracingArgs{...}
type GetGvcLightstepTracingInput interface {
	pulumi.Input

	ToGetGvcLightstepTracingOutput() GetGvcLightstepTracingOutput
	ToGetGvcLightstepTracingOutputWithContext(context.Context) GetGvcLightstepTracingOutput
}

type GetGvcLightstepTracingArgs struct {
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	CustomTags  pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint    pulumi.StringInput    `pulumi:"endpoint"`
	Sampling    pulumi.Float64Input   `pulumi:"sampling"`
}

func (GetGvcLightstepTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLightstepTracing)(nil)).Elem()
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingOutput() GetGvcLightstepTracingOutput {
	return i.ToGetGvcLightstepTracingOutputWithContext(context.Background())
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingOutputWithContext(ctx context.Context) GetGvcLightstepTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLightstepTracingOutput)
}

func (i GetGvcLightstepTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcLightstepTracing] {
	return pulumix.Output[GetGvcLightstepTracing]{
		OutputState: i.ToGetGvcLightstepTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return i.ToGetGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLightstepTracingOutput).ToGetGvcLightstepTracingPtrOutputWithContext(ctx)
}

// GetGvcLightstepTracingPtrInput is an input type that accepts GetGvcLightstepTracingArgs, GetGvcLightstepTracingPtr and GetGvcLightstepTracingPtrOutput values.
// You can construct a concrete instance of `GetGvcLightstepTracingPtrInput` via:
//
//	        GetGvcLightstepTracingArgs{...}
//
//	or:
//
//	        nil
type GetGvcLightstepTracingPtrInput interface {
	pulumi.Input

	ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput
	ToGetGvcLightstepTracingPtrOutputWithContext(context.Context) GetGvcLightstepTracingPtrOutput
}

type getGvcLightstepTracingPtrType GetGvcLightstepTracingArgs

func GetGvcLightstepTracingPtr(v *GetGvcLightstepTracingArgs) GetGvcLightstepTracingPtrInput {
	return (*getGvcLightstepTracingPtrType)(v)
}

func (*getGvcLightstepTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLightstepTracing)(nil)).Elem()
}

func (i *getGvcLightstepTracingPtrType) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return i.ToGetGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i *getGvcLightstepTracingPtrType) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLightstepTracingPtrOutput)
}

func (i *getGvcLightstepTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLightstepTracing] {
	return pulumix.Output[*GetGvcLightstepTracing]{
		OutputState: i.ToGetGvcLightstepTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcLightstepTracingOutput struct{ *pulumi.OutputState }

func (GetGvcLightstepTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLightstepTracing)(nil)).Elem()
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingOutput() GetGvcLightstepTracingOutput {
	return o
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingOutputWithContext(ctx context.Context) GetGvcLightstepTracingOutput {
	return o
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return o.ToGetGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcLightstepTracing) *GetGvcLightstepTracing {
		return &v
	}).(GetGvcLightstepTracingPtrOutput)
}

func (o GetGvcLightstepTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcLightstepTracing] {
	return pulumix.Output[GetGvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLightstepTracingOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGvcLightstepTracing) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

func (o GetGvcLightstepTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGvcLightstepTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GetGvcLightstepTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetGvcLightstepTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GetGvcLightstepTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v GetGvcLightstepTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type GetGvcLightstepTracingPtrOutput struct{ *pulumi.OutputState }

func (GetGvcLightstepTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLightstepTracing)(nil)).Elem()
}

func (o GetGvcLightstepTracingPtrOutput) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return o
}

func (o GetGvcLightstepTracingPtrOutput) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return o
}

func (o GetGvcLightstepTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLightstepTracing] {
	return pulumix.Output[*GetGvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLightstepTracingPtrOutput) Elem() GetGvcLightstepTracingOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) GetGvcLightstepTracing {
		if v != nil {
			return *v
		}
		var ret GetGvcLightstepTracing
		return ret
	}).(GetGvcLightstepTracingOutput)
}

func (o GetGvcLightstepTracingPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o GetGvcLightstepTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GetGvcLightstepTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GetGvcLightstepTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type GetGvcLoadBalancer struct {
	Dedicated      bool                        `pulumi:"dedicated"`
	Redirect       *GetGvcLoadBalancerRedirect `pulumi:"redirect"`
	TrustedProxies *int                        `pulumi:"trustedProxies"`
}

// GetGvcLoadBalancerInput is an input type that accepts GetGvcLoadBalancerArgs and GetGvcLoadBalancerOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerInput` via:
//
//	GetGvcLoadBalancerArgs{...}
type GetGvcLoadBalancerInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerOutput() GetGvcLoadBalancerOutput
	ToGetGvcLoadBalancerOutputWithContext(context.Context) GetGvcLoadBalancerOutput
}

type GetGvcLoadBalancerArgs struct {
	Dedicated      pulumi.BoolInput                   `pulumi:"dedicated"`
	Redirect       GetGvcLoadBalancerRedirectPtrInput `pulumi:"redirect"`
	TrustedProxies pulumi.IntPtrInput                 `pulumi:"trustedProxies"`
}

func (GetGvcLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancer)(nil)).Elem()
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerOutput() GetGvcLoadBalancerOutput {
	return i.ToGetGvcLoadBalancerOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerOutputWithContext(ctx context.Context) GetGvcLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerOutput)
}

func (i GetGvcLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancer] {
	return pulumix.Output[GetGvcLoadBalancer]{
		OutputState: i.ToGetGvcLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return i.ToGetGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerOutput).ToGetGvcLoadBalancerPtrOutputWithContext(ctx)
}

// GetGvcLoadBalancerPtrInput is an input type that accepts GetGvcLoadBalancerArgs, GetGvcLoadBalancerPtr and GetGvcLoadBalancerPtrOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerPtrInput` via:
//
//	        GetGvcLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type GetGvcLoadBalancerPtrInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput
	ToGetGvcLoadBalancerPtrOutputWithContext(context.Context) GetGvcLoadBalancerPtrOutput
}

type getGvcLoadBalancerPtrType GetGvcLoadBalancerArgs

func GetGvcLoadBalancerPtr(v *GetGvcLoadBalancerArgs) GetGvcLoadBalancerPtrInput {
	return (*getGvcLoadBalancerPtrType)(v)
}

func (*getGvcLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancer)(nil)).Elem()
}

func (i *getGvcLoadBalancerPtrType) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return i.ToGetGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *getGvcLoadBalancerPtrType) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerPtrOutput)
}

func (i *getGvcLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancer] {
	return pulumix.Output[*GetGvcLoadBalancer]{
		OutputState: i.ToGetGvcLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcLoadBalancerOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancer)(nil)).Elem()
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerOutput() GetGvcLoadBalancerOutput {
	return o
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerOutputWithContext(ctx context.Context) GetGvcLoadBalancerOutput {
	return o
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return o.ToGetGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcLoadBalancer) *GetGvcLoadBalancer {
		return &v
	}).(GetGvcLoadBalancerPtrOutput)
}

func (o GetGvcLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancer] {
	return pulumix.Output[GetGvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerOutput) Dedicated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGvcLoadBalancer) bool { return v.Dedicated }).(pulumi.BoolOutput)
}

func (o GetGvcLoadBalancerOutput) Redirect() GetGvcLoadBalancerRedirectPtrOutput {
	return o.ApplyT(func(v GetGvcLoadBalancer) *GetGvcLoadBalancerRedirect { return v.Redirect }).(GetGvcLoadBalancerRedirectPtrOutput)
}

func (o GetGvcLoadBalancerOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGvcLoadBalancer) *int { return v.TrustedProxies }).(pulumi.IntPtrOutput)
}

type GetGvcLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancer)(nil)).Elem()
}

func (o GetGvcLoadBalancerPtrOutput) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return o
}

func (o GetGvcLoadBalancerPtrOutput) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return o
}

func (o GetGvcLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancer] {
	return pulumix.Output[*GetGvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerPtrOutput) Elem() GetGvcLoadBalancerOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancer) GetGvcLoadBalancer {
		if v != nil {
			return *v
		}
		var ret GetGvcLoadBalancer
		return ret
	}).(GetGvcLoadBalancerOutput)
}

func (o GetGvcLoadBalancerPtrOutput) Dedicated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return &v.Dedicated
	}).(pulumi.BoolPtrOutput)
}

func (o GetGvcLoadBalancerPtrOutput) Redirect() GetGvcLoadBalancerRedirectPtrOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancer) *GetGvcLoadBalancerRedirect {
		if v == nil {
			return nil
		}
		return v.Redirect
	}).(GetGvcLoadBalancerRedirectPtrOutput)
}

func (o GetGvcLoadBalancerPtrOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancer) *int {
		if v == nil {
			return nil
		}
		return v.TrustedProxies
	}).(pulumi.IntPtrOutput)
}

type GetGvcLoadBalancerRedirect struct {
	Class *GetGvcLoadBalancerRedirectClass `pulumi:"class"`
}

// GetGvcLoadBalancerRedirectInput is an input type that accepts GetGvcLoadBalancerRedirectArgs and GetGvcLoadBalancerRedirectOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerRedirectInput` via:
//
//	GetGvcLoadBalancerRedirectArgs{...}
type GetGvcLoadBalancerRedirectInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerRedirectOutput() GetGvcLoadBalancerRedirectOutput
	ToGetGvcLoadBalancerRedirectOutputWithContext(context.Context) GetGvcLoadBalancerRedirectOutput
}

type GetGvcLoadBalancerRedirectArgs struct {
	Class GetGvcLoadBalancerRedirectClassPtrInput `pulumi:"class"`
}

func (GetGvcLoadBalancerRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancerRedirect)(nil)).Elem()
}

func (i GetGvcLoadBalancerRedirectArgs) ToGetGvcLoadBalancerRedirectOutput() GetGvcLoadBalancerRedirectOutput {
	return i.ToGetGvcLoadBalancerRedirectOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerRedirectArgs) ToGetGvcLoadBalancerRedirectOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerRedirectOutput)
}

func (i GetGvcLoadBalancerRedirectArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancerRedirect] {
	return pulumix.Output[GetGvcLoadBalancerRedirect]{
		OutputState: i.ToGetGvcLoadBalancerRedirectOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcLoadBalancerRedirectArgs) ToGetGvcLoadBalancerRedirectPtrOutput() GetGvcLoadBalancerRedirectPtrOutput {
	return i.ToGetGvcLoadBalancerRedirectPtrOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerRedirectArgs) ToGetGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerRedirectOutput).ToGetGvcLoadBalancerRedirectPtrOutputWithContext(ctx)
}

// GetGvcLoadBalancerRedirectPtrInput is an input type that accepts GetGvcLoadBalancerRedirectArgs, GetGvcLoadBalancerRedirectPtr and GetGvcLoadBalancerRedirectPtrOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerRedirectPtrInput` via:
//
//	        GetGvcLoadBalancerRedirectArgs{...}
//
//	or:
//
//	        nil
type GetGvcLoadBalancerRedirectPtrInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerRedirectPtrOutput() GetGvcLoadBalancerRedirectPtrOutput
	ToGetGvcLoadBalancerRedirectPtrOutputWithContext(context.Context) GetGvcLoadBalancerRedirectPtrOutput
}

type getGvcLoadBalancerRedirectPtrType GetGvcLoadBalancerRedirectArgs

func GetGvcLoadBalancerRedirectPtr(v *GetGvcLoadBalancerRedirectArgs) GetGvcLoadBalancerRedirectPtrInput {
	return (*getGvcLoadBalancerRedirectPtrType)(v)
}

func (*getGvcLoadBalancerRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancerRedirect)(nil)).Elem()
}

func (i *getGvcLoadBalancerRedirectPtrType) ToGetGvcLoadBalancerRedirectPtrOutput() GetGvcLoadBalancerRedirectPtrOutput {
	return i.ToGetGvcLoadBalancerRedirectPtrOutputWithContext(context.Background())
}

func (i *getGvcLoadBalancerRedirectPtrType) ToGetGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerRedirectPtrOutput)
}

func (i *getGvcLoadBalancerRedirectPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancerRedirect] {
	return pulumix.Output[*GetGvcLoadBalancerRedirect]{
		OutputState: i.ToGetGvcLoadBalancerRedirectPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcLoadBalancerRedirectOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancerRedirect)(nil)).Elem()
}

func (o GetGvcLoadBalancerRedirectOutput) ToGetGvcLoadBalancerRedirectOutput() GetGvcLoadBalancerRedirectOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectOutput) ToGetGvcLoadBalancerRedirectOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectOutput) ToGetGvcLoadBalancerRedirectPtrOutput() GetGvcLoadBalancerRedirectPtrOutput {
	return o.ToGetGvcLoadBalancerRedirectPtrOutputWithContext(context.Background())
}

func (o GetGvcLoadBalancerRedirectOutput) ToGetGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcLoadBalancerRedirect) *GetGvcLoadBalancerRedirect {
		return &v
	}).(GetGvcLoadBalancerRedirectPtrOutput)
}

func (o GetGvcLoadBalancerRedirectOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancerRedirect] {
	return pulumix.Output[GetGvcLoadBalancerRedirect]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerRedirectOutput) Class() GetGvcLoadBalancerRedirectClassPtrOutput {
	return o.ApplyT(func(v GetGvcLoadBalancerRedirect) *GetGvcLoadBalancerRedirectClass { return v.Class }).(GetGvcLoadBalancerRedirectClassPtrOutput)
}

type GetGvcLoadBalancerRedirectPtrOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancerRedirect)(nil)).Elem()
}

func (o GetGvcLoadBalancerRedirectPtrOutput) ToGetGvcLoadBalancerRedirectPtrOutput() GetGvcLoadBalancerRedirectPtrOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectPtrOutput) ToGetGvcLoadBalancerRedirectPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectPtrOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancerRedirect] {
	return pulumix.Output[*GetGvcLoadBalancerRedirect]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerRedirectPtrOutput) Elem() GetGvcLoadBalancerRedirectOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancerRedirect) GetGvcLoadBalancerRedirect {
		if v != nil {
			return *v
		}
		var ret GetGvcLoadBalancerRedirect
		return ret
	}).(GetGvcLoadBalancerRedirectOutput)
}

func (o GetGvcLoadBalancerRedirectPtrOutput) Class() GetGvcLoadBalancerRedirectClassPtrOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancerRedirect) *GetGvcLoadBalancerRedirectClass {
		if v == nil {
			return nil
		}
		return v.Class
	}).(GetGvcLoadBalancerRedirectClassPtrOutput)
}

type GetGvcLoadBalancerRedirectClass struct {
	Status5xx *string `pulumi:"status5xx"`
}

// GetGvcLoadBalancerRedirectClassInput is an input type that accepts GetGvcLoadBalancerRedirectClassArgs and GetGvcLoadBalancerRedirectClassOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerRedirectClassInput` via:
//
//	GetGvcLoadBalancerRedirectClassArgs{...}
type GetGvcLoadBalancerRedirectClassInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerRedirectClassOutput() GetGvcLoadBalancerRedirectClassOutput
	ToGetGvcLoadBalancerRedirectClassOutputWithContext(context.Context) GetGvcLoadBalancerRedirectClassOutput
}

type GetGvcLoadBalancerRedirectClassArgs struct {
	Status5xx pulumi.StringPtrInput `pulumi:"status5xx"`
}

func (GetGvcLoadBalancerRedirectClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (i GetGvcLoadBalancerRedirectClassArgs) ToGetGvcLoadBalancerRedirectClassOutput() GetGvcLoadBalancerRedirectClassOutput {
	return i.ToGetGvcLoadBalancerRedirectClassOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerRedirectClassArgs) ToGetGvcLoadBalancerRedirectClassOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerRedirectClassOutput)
}

func (i GetGvcLoadBalancerRedirectClassArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancerRedirectClass] {
	return pulumix.Output[GetGvcLoadBalancerRedirectClass]{
		OutputState: i.ToGetGvcLoadBalancerRedirectClassOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcLoadBalancerRedirectClassArgs) ToGetGvcLoadBalancerRedirectClassPtrOutput() GetGvcLoadBalancerRedirectClassPtrOutput {
	return i.ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerRedirectClassArgs) ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerRedirectClassOutput).ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx)
}

// GetGvcLoadBalancerRedirectClassPtrInput is an input type that accepts GetGvcLoadBalancerRedirectClassArgs, GetGvcLoadBalancerRedirectClassPtr and GetGvcLoadBalancerRedirectClassPtrOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerRedirectClassPtrInput` via:
//
//	        GetGvcLoadBalancerRedirectClassArgs{...}
//
//	or:
//
//	        nil
type GetGvcLoadBalancerRedirectClassPtrInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerRedirectClassPtrOutput() GetGvcLoadBalancerRedirectClassPtrOutput
	ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Context) GetGvcLoadBalancerRedirectClassPtrOutput
}

type getGvcLoadBalancerRedirectClassPtrType GetGvcLoadBalancerRedirectClassArgs

func GetGvcLoadBalancerRedirectClassPtr(v *GetGvcLoadBalancerRedirectClassArgs) GetGvcLoadBalancerRedirectClassPtrInput {
	return (*getGvcLoadBalancerRedirectClassPtrType)(v)
}

func (*getGvcLoadBalancerRedirectClassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (i *getGvcLoadBalancerRedirectClassPtrType) ToGetGvcLoadBalancerRedirectClassPtrOutput() GetGvcLoadBalancerRedirectClassPtrOutput {
	return i.ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Background())
}

func (i *getGvcLoadBalancerRedirectClassPtrType) ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerRedirectClassPtrOutput)
}

func (i *getGvcLoadBalancerRedirectClassPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancerRedirectClass] {
	return pulumix.Output[*GetGvcLoadBalancerRedirectClass]{
		OutputState: i.ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcLoadBalancerRedirectClassOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerRedirectClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (o GetGvcLoadBalancerRedirectClassOutput) ToGetGvcLoadBalancerRedirectClassOutput() GetGvcLoadBalancerRedirectClassOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectClassOutput) ToGetGvcLoadBalancerRedirectClassOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectClassOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectClassOutput) ToGetGvcLoadBalancerRedirectClassPtrOutput() GetGvcLoadBalancerRedirectClassPtrOutput {
	return o.ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(context.Background())
}

func (o GetGvcLoadBalancerRedirectClassOutput) ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcLoadBalancerRedirectClass) *GetGvcLoadBalancerRedirectClass {
		return &v
	}).(GetGvcLoadBalancerRedirectClassPtrOutput)
}

func (o GetGvcLoadBalancerRedirectClassOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancerRedirectClass] {
	return pulumix.Output[GetGvcLoadBalancerRedirectClass]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerRedirectClassOutput) Status5xx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGvcLoadBalancerRedirectClass) *string { return v.Status5xx }).(pulumi.StringPtrOutput)
}

type GetGvcLoadBalancerRedirectClassPtrOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerRedirectClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancerRedirectClass)(nil)).Elem()
}

func (o GetGvcLoadBalancerRedirectClassPtrOutput) ToGetGvcLoadBalancerRedirectClassPtrOutput() GetGvcLoadBalancerRedirectClassPtrOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectClassPtrOutput) ToGetGvcLoadBalancerRedirectClassPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerRedirectClassPtrOutput {
	return o
}

func (o GetGvcLoadBalancerRedirectClassPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancerRedirectClass] {
	return pulumix.Output[*GetGvcLoadBalancerRedirectClass]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerRedirectClassPtrOutput) Elem() GetGvcLoadBalancerRedirectClassOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancerRedirectClass) GetGvcLoadBalancerRedirectClass {
		if v != nil {
			return *v
		}
		var ret GetGvcLoadBalancerRedirectClass
		return ret
	}).(GetGvcLoadBalancerRedirectClassOutput)
}

func (o GetGvcLoadBalancerRedirectClassPtrOutput) Status5xx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancerRedirectClass) *string {
		if v == nil {
			return nil
		}
		return v.Status5xx
	}).(pulumi.StringPtrOutput)
}

type GetGvcOtelTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Endpoint   string            `pulumi:"endpoint"`
	Sampling   float64           `pulumi:"sampling"`
}

// GetGvcOtelTracingInput is an input type that accepts GetGvcOtelTracingArgs and GetGvcOtelTracingOutput values.
// You can construct a concrete instance of `GetGvcOtelTracingInput` via:
//
//	GetGvcOtelTracingArgs{...}
type GetGvcOtelTracingInput interface {
	pulumi.Input

	ToGetGvcOtelTracingOutput() GetGvcOtelTracingOutput
	ToGetGvcOtelTracingOutputWithContext(context.Context) GetGvcOtelTracingOutput
}

type GetGvcOtelTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint   pulumi.StringInput    `pulumi:"endpoint"`
	Sampling   pulumi.Float64Input   `pulumi:"sampling"`
}

func (GetGvcOtelTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcOtelTracing)(nil)).Elem()
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingOutput() GetGvcOtelTracingOutput {
	return i.ToGetGvcOtelTracingOutputWithContext(context.Background())
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingOutputWithContext(ctx context.Context) GetGvcOtelTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcOtelTracingOutput)
}

func (i GetGvcOtelTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcOtelTracing] {
	return pulumix.Output[GetGvcOtelTracing]{
		OutputState: i.ToGetGvcOtelTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return i.ToGetGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcOtelTracingOutput).ToGetGvcOtelTracingPtrOutputWithContext(ctx)
}

// GetGvcOtelTracingPtrInput is an input type that accepts GetGvcOtelTracingArgs, GetGvcOtelTracingPtr and GetGvcOtelTracingPtrOutput values.
// You can construct a concrete instance of `GetGvcOtelTracingPtrInput` via:
//
//	        GetGvcOtelTracingArgs{...}
//
//	or:
//
//	        nil
type GetGvcOtelTracingPtrInput interface {
	pulumi.Input

	ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput
	ToGetGvcOtelTracingPtrOutputWithContext(context.Context) GetGvcOtelTracingPtrOutput
}

type getGvcOtelTracingPtrType GetGvcOtelTracingArgs

func GetGvcOtelTracingPtr(v *GetGvcOtelTracingArgs) GetGvcOtelTracingPtrInput {
	return (*getGvcOtelTracingPtrType)(v)
}

func (*getGvcOtelTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcOtelTracing)(nil)).Elem()
}

func (i *getGvcOtelTracingPtrType) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return i.ToGetGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i *getGvcOtelTracingPtrType) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcOtelTracingPtrOutput)
}

func (i *getGvcOtelTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcOtelTracing] {
	return pulumix.Output[*GetGvcOtelTracing]{
		OutputState: i.ToGetGvcOtelTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcOtelTracingOutput struct{ *pulumi.OutputState }

func (GetGvcOtelTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcOtelTracing)(nil)).Elem()
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingOutput() GetGvcOtelTracingOutput {
	return o
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingOutputWithContext(ctx context.Context) GetGvcOtelTracingOutput {
	return o
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return o.ToGetGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcOtelTracing) *GetGvcOtelTracing {
		return &v
	}).(GetGvcOtelTracingPtrOutput)
}

func (o GetGvcOtelTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcOtelTracing] {
	return pulumix.Output[GetGvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcOtelTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGvcOtelTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GetGvcOtelTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetGvcOtelTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GetGvcOtelTracingOutput) Sampling() pulumi.Float64Output {
	return o.ApplyT(func(v GetGvcOtelTracing) float64 { return v.Sampling }).(pulumi.Float64Output)
}

type GetGvcOtelTracingPtrOutput struct{ *pulumi.OutputState }

func (GetGvcOtelTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcOtelTracing)(nil)).Elem()
}

func (o GetGvcOtelTracingPtrOutput) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return o
}

func (o GetGvcOtelTracingPtrOutput) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return o
}

func (o GetGvcOtelTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcOtelTracing] {
	return pulumix.Output[*GetGvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcOtelTracingPtrOutput) Elem() GetGvcOtelTracingOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) GetGvcOtelTracing {
		if v != nil {
			return *v
		}
		var ret GetGvcOtelTracing
		return ret
	}).(GetGvcOtelTracingOutput)
}

func (o GetGvcOtelTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GetGvcOtelTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GetGvcOtelTracingPtrOutput) Sampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) *float64 {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.Float64PtrOutput)
}

type GetGvcSidecar struct {
	Envoy string `pulumi:"envoy"`
}

// GetGvcSidecarInput is an input type that accepts GetGvcSidecarArgs and GetGvcSidecarOutput values.
// You can construct a concrete instance of `GetGvcSidecarInput` via:
//
//	GetGvcSidecarArgs{...}
type GetGvcSidecarInput interface {
	pulumi.Input

	ToGetGvcSidecarOutput() GetGvcSidecarOutput
	ToGetGvcSidecarOutputWithContext(context.Context) GetGvcSidecarOutput
}

type GetGvcSidecarArgs struct {
	Envoy pulumi.StringInput `pulumi:"envoy"`
}

func (GetGvcSidecarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcSidecar)(nil)).Elem()
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarOutput() GetGvcSidecarOutput {
	return i.ToGetGvcSidecarOutputWithContext(context.Background())
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarOutputWithContext(ctx context.Context) GetGvcSidecarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcSidecarOutput)
}

func (i GetGvcSidecarArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcSidecar] {
	return pulumix.Output[GetGvcSidecar]{
		OutputState: i.ToGetGvcSidecarOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return i.ToGetGvcSidecarPtrOutputWithContext(context.Background())
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcSidecarOutput).ToGetGvcSidecarPtrOutputWithContext(ctx)
}

// GetGvcSidecarPtrInput is an input type that accepts GetGvcSidecarArgs, GetGvcSidecarPtr and GetGvcSidecarPtrOutput values.
// You can construct a concrete instance of `GetGvcSidecarPtrInput` via:
//
//	        GetGvcSidecarArgs{...}
//
//	or:
//
//	        nil
type GetGvcSidecarPtrInput interface {
	pulumi.Input

	ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput
	ToGetGvcSidecarPtrOutputWithContext(context.Context) GetGvcSidecarPtrOutput
}

type getGvcSidecarPtrType GetGvcSidecarArgs

func GetGvcSidecarPtr(v *GetGvcSidecarArgs) GetGvcSidecarPtrInput {
	return (*getGvcSidecarPtrType)(v)
}

func (*getGvcSidecarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcSidecar)(nil)).Elem()
}

func (i *getGvcSidecarPtrType) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return i.ToGetGvcSidecarPtrOutputWithContext(context.Background())
}

func (i *getGvcSidecarPtrType) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcSidecarPtrOutput)
}

func (i *getGvcSidecarPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcSidecar] {
	return pulumix.Output[*GetGvcSidecar]{
		OutputState: i.ToGetGvcSidecarPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcSidecarOutput struct{ *pulumi.OutputState }

func (GetGvcSidecarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcSidecar)(nil)).Elem()
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarOutput() GetGvcSidecarOutput {
	return o
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarOutputWithContext(ctx context.Context) GetGvcSidecarOutput {
	return o
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return o.ToGetGvcSidecarPtrOutputWithContext(context.Background())
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcSidecar) *GetGvcSidecar {
		return &v
	}).(GetGvcSidecarPtrOutput)
}

func (o GetGvcSidecarOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcSidecar] {
	return pulumix.Output[GetGvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcSidecarOutput) Envoy() pulumi.StringOutput {
	return o.ApplyT(func(v GetGvcSidecar) string { return v.Envoy }).(pulumi.StringOutput)
}

type GetGvcSidecarPtrOutput struct{ *pulumi.OutputState }

func (GetGvcSidecarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcSidecar)(nil)).Elem()
}

func (o GetGvcSidecarPtrOutput) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return o
}

func (o GetGvcSidecarPtrOutput) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return o
}

func (o GetGvcSidecarPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcSidecar] {
	return pulumix.Output[*GetGvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcSidecarPtrOutput) Elem() GetGvcSidecarOutput {
	return o.ApplyT(func(v *GetGvcSidecar) GetGvcSidecar {
		if v != nil {
			return *v
		}
		var ret GetGvcSidecar
		return ret
	}).(GetGvcSidecarOutput)
}

func (o GetGvcSidecarPtrOutput) Envoy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcSidecar) *string {
		if v == nil {
			return nil
		}
		return &v.Envoy
	}).(pulumi.StringPtrOutput)
}

type GetImageManifest struct {
	Configs       []GetImageManifestConfig `pulumi:"configs"`
	Layers        []GetImageManifestLayer  `pulumi:"layers"`
	MediaType     string                   `pulumi:"mediaType"`
	SchemaVersion int                      `pulumi:"schemaVersion"`
}

// GetImageManifestInput is an input type that accepts GetImageManifestArgs and GetImageManifestOutput values.
// You can construct a concrete instance of `GetImageManifestInput` via:
//
//	GetImageManifestArgs{...}
type GetImageManifestInput interface {
	pulumi.Input

	ToGetImageManifestOutput() GetImageManifestOutput
	ToGetImageManifestOutputWithContext(context.Context) GetImageManifestOutput
}

type GetImageManifestArgs struct {
	Configs       GetImageManifestConfigArrayInput `pulumi:"configs"`
	Layers        GetImageManifestLayerArrayInput  `pulumi:"layers"`
	MediaType     pulumi.StringInput               `pulumi:"mediaType"`
	SchemaVersion pulumi.IntInput                  `pulumi:"schemaVersion"`
}

func (GetImageManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifest)(nil)).Elem()
}

func (i GetImageManifestArgs) ToGetImageManifestOutput() GetImageManifestOutput {
	return i.ToGetImageManifestOutputWithContext(context.Background())
}

func (i GetImageManifestArgs) ToGetImageManifestOutputWithContext(ctx context.Context) GetImageManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestOutput)
}

func (i GetImageManifestArgs) ToOutput(ctx context.Context) pulumix.Output[GetImageManifest] {
	return pulumix.Output[GetImageManifest]{
		OutputState: i.ToGetImageManifestOutputWithContext(ctx).OutputState,
	}
}

// GetImageManifestArrayInput is an input type that accepts GetImageManifestArray and GetImageManifestArrayOutput values.
// You can construct a concrete instance of `GetImageManifestArrayInput` via:
//
//	GetImageManifestArray{ GetImageManifestArgs{...} }
type GetImageManifestArrayInput interface {
	pulumi.Input

	ToGetImageManifestArrayOutput() GetImageManifestArrayOutput
	ToGetImageManifestArrayOutputWithContext(context.Context) GetImageManifestArrayOutput
}

type GetImageManifestArray []GetImageManifestInput

func (GetImageManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifest)(nil)).Elem()
}

func (i GetImageManifestArray) ToGetImageManifestArrayOutput() GetImageManifestArrayOutput {
	return i.ToGetImageManifestArrayOutputWithContext(context.Background())
}

func (i GetImageManifestArray) ToGetImageManifestArrayOutputWithContext(ctx context.Context) GetImageManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestArrayOutput)
}

func (i GetImageManifestArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifest] {
	return pulumix.Output[[]GetImageManifest]{
		OutputState: i.ToGetImageManifestArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImageManifestOutput struct{ *pulumi.OutputState }

func (GetImageManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifest)(nil)).Elem()
}

func (o GetImageManifestOutput) ToGetImageManifestOutput() GetImageManifestOutput {
	return o
}

func (o GetImageManifestOutput) ToGetImageManifestOutputWithContext(ctx context.Context) GetImageManifestOutput {
	return o
}

func (o GetImageManifestOutput) ToOutput(ctx context.Context) pulumix.Output[GetImageManifest] {
	return pulumix.Output[GetImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestOutput) Configs() GetImageManifestConfigArrayOutput {
	return o.ApplyT(func(v GetImageManifest) []GetImageManifestConfig { return v.Configs }).(GetImageManifestConfigArrayOutput)
}

func (o GetImageManifestOutput) Layers() GetImageManifestLayerArrayOutput {
	return o.ApplyT(func(v GetImageManifest) []GetImageManifestLayer { return v.Layers }).(GetImageManifestLayerArrayOutput)
}

func (o GetImageManifestOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifest) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImageManifestOutput) SchemaVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageManifest) int { return v.SchemaVersion }).(pulumi.IntOutput)
}

type GetImageManifestArrayOutput struct{ *pulumi.OutputState }

func (GetImageManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifest)(nil)).Elem()
}

func (o GetImageManifestArrayOutput) ToGetImageManifestArrayOutput() GetImageManifestArrayOutput {
	return o
}

func (o GetImageManifestArrayOutput) ToGetImageManifestArrayOutputWithContext(ctx context.Context) GetImageManifestArrayOutput {
	return o
}

func (o GetImageManifestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifest] {
	return pulumix.Output[[]GetImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestArrayOutput) Index(i pulumi.IntInput) GetImageManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageManifest {
		return vs[0].([]GetImageManifest)[vs[1].(int)]
	}).(GetImageManifestOutput)
}

type GetImageManifestConfig struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImageManifestConfigInput is an input type that accepts GetImageManifestConfigArgs and GetImageManifestConfigOutput values.
// You can construct a concrete instance of `GetImageManifestConfigInput` via:
//
//	GetImageManifestConfigArgs{...}
type GetImageManifestConfigInput interface {
	pulumi.Input

	ToGetImageManifestConfigOutput() GetImageManifestConfigOutput
	ToGetImageManifestConfigOutputWithContext(context.Context) GetImageManifestConfigOutput
}

type GetImageManifestConfigArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImageManifestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestConfig)(nil)).Elem()
}

func (i GetImageManifestConfigArgs) ToGetImageManifestConfigOutput() GetImageManifestConfigOutput {
	return i.ToGetImageManifestConfigOutputWithContext(context.Background())
}

func (i GetImageManifestConfigArgs) ToGetImageManifestConfigOutputWithContext(ctx context.Context) GetImageManifestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestConfigOutput)
}

func (i GetImageManifestConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestConfig] {
	return pulumix.Output[GetImageManifestConfig]{
		OutputState: i.ToGetImageManifestConfigOutputWithContext(ctx).OutputState,
	}
}

// GetImageManifestConfigArrayInput is an input type that accepts GetImageManifestConfigArray and GetImageManifestConfigArrayOutput values.
// You can construct a concrete instance of `GetImageManifestConfigArrayInput` via:
//
//	GetImageManifestConfigArray{ GetImageManifestConfigArgs{...} }
type GetImageManifestConfigArrayInput interface {
	pulumi.Input

	ToGetImageManifestConfigArrayOutput() GetImageManifestConfigArrayOutput
	ToGetImageManifestConfigArrayOutputWithContext(context.Context) GetImageManifestConfigArrayOutput
}

type GetImageManifestConfigArray []GetImageManifestConfigInput

func (GetImageManifestConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestConfig)(nil)).Elem()
}

func (i GetImageManifestConfigArray) ToGetImageManifestConfigArrayOutput() GetImageManifestConfigArrayOutput {
	return i.ToGetImageManifestConfigArrayOutputWithContext(context.Background())
}

func (i GetImageManifestConfigArray) ToGetImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImageManifestConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestConfigArrayOutput)
}

func (i GetImageManifestConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestConfig] {
	return pulumix.Output[[]GetImageManifestConfig]{
		OutputState: i.ToGetImageManifestConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImageManifestConfigOutput struct{ *pulumi.OutputState }

func (GetImageManifestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestConfig)(nil)).Elem()
}

func (o GetImageManifestConfigOutput) ToGetImageManifestConfigOutput() GetImageManifestConfigOutput {
	return o
}

func (o GetImageManifestConfigOutput) ToGetImageManifestConfigOutputWithContext(ctx context.Context) GetImageManifestConfigOutput {
	return o
}

func (o GetImageManifestConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestConfig] {
	return pulumix.Output[GetImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestConfigOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestConfig) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImageManifestConfigOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestConfig) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImageManifestConfigOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageManifestConfig) int { return v.Size }).(pulumi.IntOutput)
}

type GetImageManifestConfigArrayOutput struct{ *pulumi.OutputState }

func (GetImageManifestConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestConfig)(nil)).Elem()
}

func (o GetImageManifestConfigArrayOutput) ToGetImageManifestConfigArrayOutput() GetImageManifestConfigArrayOutput {
	return o
}

func (o GetImageManifestConfigArrayOutput) ToGetImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImageManifestConfigArrayOutput {
	return o
}

func (o GetImageManifestConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestConfig] {
	return pulumix.Output[[]GetImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestConfigArrayOutput) Index(i pulumi.IntInput) GetImageManifestConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageManifestConfig {
		return vs[0].([]GetImageManifestConfig)[vs[1].(int)]
	}).(GetImageManifestConfigOutput)
}

type GetImageManifestLayer struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImageManifestLayerInput is an input type that accepts GetImageManifestLayerArgs and GetImageManifestLayerOutput values.
// You can construct a concrete instance of `GetImageManifestLayerInput` via:
//
//	GetImageManifestLayerArgs{...}
type GetImageManifestLayerInput interface {
	pulumi.Input

	ToGetImageManifestLayerOutput() GetImageManifestLayerOutput
	ToGetImageManifestLayerOutputWithContext(context.Context) GetImageManifestLayerOutput
}

type GetImageManifestLayerArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImageManifestLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestLayer)(nil)).Elem()
}

func (i GetImageManifestLayerArgs) ToGetImageManifestLayerOutput() GetImageManifestLayerOutput {
	return i.ToGetImageManifestLayerOutputWithContext(context.Background())
}

func (i GetImageManifestLayerArgs) ToGetImageManifestLayerOutputWithContext(ctx context.Context) GetImageManifestLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestLayerOutput)
}

func (i GetImageManifestLayerArgs) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestLayer] {
	return pulumix.Output[GetImageManifestLayer]{
		OutputState: i.ToGetImageManifestLayerOutputWithContext(ctx).OutputState,
	}
}

// GetImageManifestLayerArrayInput is an input type that accepts GetImageManifestLayerArray and GetImageManifestLayerArrayOutput values.
// You can construct a concrete instance of `GetImageManifestLayerArrayInput` via:
//
//	GetImageManifestLayerArray{ GetImageManifestLayerArgs{...} }
type GetImageManifestLayerArrayInput interface {
	pulumi.Input

	ToGetImageManifestLayerArrayOutput() GetImageManifestLayerArrayOutput
	ToGetImageManifestLayerArrayOutputWithContext(context.Context) GetImageManifestLayerArrayOutput
}

type GetImageManifestLayerArray []GetImageManifestLayerInput

func (GetImageManifestLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestLayer)(nil)).Elem()
}

func (i GetImageManifestLayerArray) ToGetImageManifestLayerArrayOutput() GetImageManifestLayerArrayOutput {
	return i.ToGetImageManifestLayerArrayOutputWithContext(context.Background())
}

func (i GetImageManifestLayerArray) ToGetImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImageManifestLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestLayerArrayOutput)
}

func (i GetImageManifestLayerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestLayer] {
	return pulumix.Output[[]GetImageManifestLayer]{
		OutputState: i.ToGetImageManifestLayerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImageManifestLayerOutput struct{ *pulumi.OutputState }

func (GetImageManifestLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestLayer)(nil)).Elem()
}

func (o GetImageManifestLayerOutput) ToGetImageManifestLayerOutput() GetImageManifestLayerOutput {
	return o
}

func (o GetImageManifestLayerOutput) ToGetImageManifestLayerOutputWithContext(ctx context.Context) GetImageManifestLayerOutput {
	return o
}

func (o GetImageManifestLayerOutput) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestLayer] {
	return pulumix.Output[GetImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestLayerOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestLayer) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImageManifestLayerOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestLayer) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImageManifestLayerOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageManifestLayer) int { return v.Size }).(pulumi.IntOutput)
}

type GetImageManifestLayerArrayOutput struct{ *pulumi.OutputState }

func (GetImageManifestLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestLayer)(nil)).Elem()
}

func (o GetImageManifestLayerArrayOutput) ToGetImageManifestLayerArrayOutput() GetImageManifestLayerArrayOutput {
	return o
}

func (o GetImageManifestLayerArrayOutput) ToGetImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImageManifestLayerArrayOutput {
	return o
}

func (o GetImageManifestLayerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestLayer] {
	return pulumix.Output[[]GetImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestLayerArrayOutput) Index(i pulumi.IntInput) GetImageManifestLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageManifestLayer {
		return vs[0].([]GetImageManifestLayer)[vs[1].(int)]
	}).(GetImageManifestLayerOutput)
}

type GetImagesImage struct {
	CplnId     string                   `pulumi:"cplnId"`
	Digest     string                   `pulumi:"digest"`
	Manifests  []GetImagesImageManifest `pulumi:"manifests"`
	Name       string                   `pulumi:"name"`
	Repository string                   `pulumi:"repository"`
	SelfLink   string                   `pulumi:"selfLink"`
	Tag        string                   `pulumi:"tag"`
	Tags       map[string]string        `pulumi:"tags"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//	GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	CplnId     pulumi.StringInput               `pulumi:"cplnId"`
	Digest     pulumi.StringInput               `pulumi:"digest"`
	Manifests  GetImagesImageManifestArrayInput `pulumi:"manifests"`
	Name       pulumi.StringInput               `pulumi:"name"`
	Repository pulumi.StringInput               `pulumi:"repository"`
	SelfLink   pulumi.StringInput               `pulumi:"selfLink"`
	Tag        pulumi.StringInput               `pulumi:"tag"`
	Tags       pulumi.StringMapInput            `pulumi:"tags"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

func (i GetImagesImageArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImage] {
	return pulumix.Output[GetImagesImage]{
		OutputState: i.ToGetImagesImageOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//	GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

func (i GetImagesImageArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImage] {
	return pulumix.Output[[]GetImagesImage]{
		OutputState: i.ToGetImagesImageArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImage] {
	return pulumix.Output[GetImagesImage]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CplnId }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Manifests() GetImagesImageManifestArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImageManifest { return v.Manifests }).(GetImagesImageManifestArrayOutput)
}

func (o GetImagesImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Repository }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Tag }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetImagesImage) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImage] {
	return pulumix.Output[[]GetImagesImage]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetImagesImageManifest struct {
	Configs       []GetImagesImageManifestConfig `pulumi:"configs"`
	Layers        []GetImagesImageManifestLayer  `pulumi:"layers"`
	MediaType     string                         `pulumi:"mediaType"`
	SchemaVersion int                            `pulumi:"schemaVersion"`
}

// GetImagesImageManifestInput is an input type that accepts GetImagesImageManifestArgs and GetImagesImageManifestOutput values.
// You can construct a concrete instance of `GetImagesImageManifestInput` via:
//
//	GetImagesImageManifestArgs{...}
type GetImagesImageManifestInput interface {
	pulumi.Input

	ToGetImagesImageManifestOutput() GetImagesImageManifestOutput
	ToGetImagesImageManifestOutputWithContext(context.Context) GetImagesImageManifestOutput
}

type GetImagesImageManifestArgs struct {
	Configs       GetImagesImageManifestConfigArrayInput `pulumi:"configs"`
	Layers        GetImagesImageManifestLayerArrayInput  `pulumi:"layers"`
	MediaType     pulumi.StringInput                     `pulumi:"mediaType"`
	SchemaVersion pulumi.IntInput                        `pulumi:"schemaVersion"`
}

func (GetImagesImageManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifest)(nil)).Elem()
}

func (i GetImagesImageManifestArgs) ToGetImagesImageManifestOutput() GetImagesImageManifestOutput {
	return i.ToGetImagesImageManifestOutputWithContext(context.Background())
}

func (i GetImagesImageManifestArgs) ToGetImagesImageManifestOutputWithContext(ctx context.Context) GetImagesImageManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestOutput)
}

func (i GetImagesImageManifestArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifest] {
	return pulumix.Output[GetImagesImageManifest]{
		OutputState: i.ToGetImagesImageManifestOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageManifestArrayInput is an input type that accepts GetImagesImageManifestArray and GetImagesImageManifestArrayOutput values.
// You can construct a concrete instance of `GetImagesImageManifestArrayInput` via:
//
//	GetImagesImageManifestArray{ GetImagesImageManifestArgs{...} }
type GetImagesImageManifestArrayInput interface {
	pulumi.Input

	ToGetImagesImageManifestArrayOutput() GetImagesImageManifestArrayOutput
	ToGetImagesImageManifestArrayOutputWithContext(context.Context) GetImagesImageManifestArrayOutput
}

type GetImagesImageManifestArray []GetImagesImageManifestInput

func (GetImagesImageManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifest)(nil)).Elem()
}

func (i GetImagesImageManifestArray) ToGetImagesImageManifestArrayOutput() GetImagesImageManifestArrayOutput {
	return i.ToGetImagesImageManifestArrayOutputWithContext(context.Background())
}

func (i GetImagesImageManifestArray) ToGetImagesImageManifestArrayOutputWithContext(ctx context.Context) GetImagesImageManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestArrayOutput)
}

func (i GetImagesImageManifestArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifest] {
	return pulumix.Output[[]GetImagesImageManifest]{
		OutputState: i.ToGetImagesImageManifestArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageManifestOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifest)(nil)).Elem()
}

func (o GetImagesImageManifestOutput) ToGetImagesImageManifestOutput() GetImagesImageManifestOutput {
	return o
}

func (o GetImagesImageManifestOutput) ToGetImagesImageManifestOutputWithContext(ctx context.Context) GetImagesImageManifestOutput {
	return o
}

func (o GetImagesImageManifestOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifest] {
	return pulumix.Output[GetImagesImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestOutput) Configs() GetImagesImageManifestConfigArrayOutput {
	return o.ApplyT(func(v GetImagesImageManifest) []GetImagesImageManifestConfig { return v.Configs }).(GetImagesImageManifestConfigArrayOutput)
}

func (o GetImagesImageManifestOutput) Layers() GetImagesImageManifestLayerArrayOutput {
	return o.ApplyT(func(v GetImagesImageManifest) []GetImagesImageManifestLayer { return v.Layers }).(GetImagesImageManifestLayerArrayOutput)
}

func (o GetImagesImageManifestOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifest) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestOutput) SchemaVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageManifest) int { return v.SchemaVersion }).(pulumi.IntOutput)
}

type GetImagesImageManifestArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifest)(nil)).Elem()
}

func (o GetImagesImageManifestArrayOutput) ToGetImagesImageManifestArrayOutput() GetImagesImageManifestArrayOutput {
	return o
}

func (o GetImagesImageManifestArrayOutput) ToGetImagesImageManifestArrayOutputWithContext(ctx context.Context) GetImagesImageManifestArrayOutput {
	return o
}

func (o GetImagesImageManifestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifest] {
	return pulumix.Output[[]GetImagesImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestArrayOutput) Index(i pulumi.IntInput) GetImagesImageManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageManifest {
		return vs[0].([]GetImagesImageManifest)[vs[1].(int)]
	}).(GetImagesImageManifestOutput)
}

type GetImagesImageManifestConfig struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImagesImageManifestConfigInput is an input type that accepts GetImagesImageManifestConfigArgs and GetImagesImageManifestConfigOutput values.
// You can construct a concrete instance of `GetImagesImageManifestConfigInput` via:
//
//	GetImagesImageManifestConfigArgs{...}
type GetImagesImageManifestConfigInput interface {
	pulumi.Input

	ToGetImagesImageManifestConfigOutput() GetImagesImageManifestConfigOutput
	ToGetImagesImageManifestConfigOutputWithContext(context.Context) GetImagesImageManifestConfigOutput
}

type GetImagesImageManifestConfigArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImagesImageManifestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestConfig)(nil)).Elem()
}

func (i GetImagesImageManifestConfigArgs) ToGetImagesImageManifestConfigOutput() GetImagesImageManifestConfigOutput {
	return i.ToGetImagesImageManifestConfigOutputWithContext(context.Background())
}

func (i GetImagesImageManifestConfigArgs) ToGetImagesImageManifestConfigOutputWithContext(ctx context.Context) GetImagesImageManifestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestConfigOutput)
}

func (i GetImagesImageManifestConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestConfig] {
	return pulumix.Output[GetImagesImageManifestConfig]{
		OutputState: i.ToGetImagesImageManifestConfigOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageManifestConfigArrayInput is an input type that accepts GetImagesImageManifestConfigArray and GetImagesImageManifestConfigArrayOutput values.
// You can construct a concrete instance of `GetImagesImageManifestConfigArrayInput` via:
//
//	GetImagesImageManifestConfigArray{ GetImagesImageManifestConfigArgs{...} }
type GetImagesImageManifestConfigArrayInput interface {
	pulumi.Input

	ToGetImagesImageManifestConfigArrayOutput() GetImagesImageManifestConfigArrayOutput
	ToGetImagesImageManifestConfigArrayOutputWithContext(context.Context) GetImagesImageManifestConfigArrayOutput
}

type GetImagesImageManifestConfigArray []GetImagesImageManifestConfigInput

func (GetImagesImageManifestConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestConfig)(nil)).Elem()
}

func (i GetImagesImageManifestConfigArray) ToGetImagesImageManifestConfigArrayOutput() GetImagesImageManifestConfigArrayOutput {
	return i.ToGetImagesImageManifestConfigArrayOutputWithContext(context.Background())
}

func (i GetImagesImageManifestConfigArray) ToGetImagesImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImagesImageManifestConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestConfigArrayOutput)
}

func (i GetImagesImageManifestConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestConfig] {
	return pulumix.Output[[]GetImagesImageManifestConfig]{
		OutputState: i.ToGetImagesImageManifestConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageManifestConfigOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestConfig)(nil)).Elem()
}

func (o GetImagesImageManifestConfigOutput) ToGetImagesImageManifestConfigOutput() GetImagesImageManifestConfigOutput {
	return o
}

func (o GetImagesImageManifestConfigOutput) ToGetImagesImageManifestConfigOutputWithContext(ctx context.Context) GetImagesImageManifestConfigOutput {
	return o
}

func (o GetImagesImageManifestConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestConfig] {
	return pulumix.Output[GetImagesImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestConfigOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestConfig) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestConfigOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestConfig) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestConfigOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageManifestConfig) int { return v.Size }).(pulumi.IntOutput)
}

type GetImagesImageManifestConfigArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestConfig)(nil)).Elem()
}

func (o GetImagesImageManifestConfigArrayOutput) ToGetImagesImageManifestConfigArrayOutput() GetImagesImageManifestConfigArrayOutput {
	return o
}

func (o GetImagesImageManifestConfigArrayOutput) ToGetImagesImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImagesImageManifestConfigArrayOutput {
	return o
}

func (o GetImagesImageManifestConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestConfig] {
	return pulumix.Output[[]GetImagesImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestConfigArrayOutput) Index(i pulumi.IntInput) GetImagesImageManifestConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageManifestConfig {
		return vs[0].([]GetImagesImageManifestConfig)[vs[1].(int)]
	}).(GetImagesImageManifestConfigOutput)
}

type GetImagesImageManifestLayer struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImagesImageManifestLayerInput is an input type that accepts GetImagesImageManifestLayerArgs and GetImagesImageManifestLayerOutput values.
// You can construct a concrete instance of `GetImagesImageManifestLayerInput` via:
//
//	GetImagesImageManifestLayerArgs{...}
type GetImagesImageManifestLayerInput interface {
	pulumi.Input

	ToGetImagesImageManifestLayerOutput() GetImagesImageManifestLayerOutput
	ToGetImagesImageManifestLayerOutputWithContext(context.Context) GetImagesImageManifestLayerOutput
}

type GetImagesImageManifestLayerArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImagesImageManifestLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestLayer)(nil)).Elem()
}

func (i GetImagesImageManifestLayerArgs) ToGetImagesImageManifestLayerOutput() GetImagesImageManifestLayerOutput {
	return i.ToGetImagesImageManifestLayerOutputWithContext(context.Background())
}

func (i GetImagesImageManifestLayerArgs) ToGetImagesImageManifestLayerOutputWithContext(ctx context.Context) GetImagesImageManifestLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestLayerOutput)
}

func (i GetImagesImageManifestLayerArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestLayer] {
	return pulumix.Output[GetImagesImageManifestLayer]{
		OutputState: i.ToGetImagesImageManifestLayerOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageManifestLayerArrayInput is an input type that accepts GetImagesImageManifestLayerArray and GetImagesImageManifestLayerArrayOutput values.
// You can construct a concrete instance of `GetImagesImageManifestLayerArrayInput` via:
//
//	GetImagesImageManifestLayerArray{ GetImagesImageManifestLayerArgs{...} }
type GetImagesImageManifestLayerArrayInput interface {
	pulumi.Input

	ToGetImagesImageManifestLayerArrayOutput() GetImagesImageManifestLayerArrayOutput
	ToGetImagesImageManifestLayerArrayOutputWithContext(context.Context) GetImagesImageManifestLayerArrayOutput
}

type GetImagesImageManifestLayerArray []GetImagesImageManifestLayerInput

func (GetImagesImageManifestLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestLayer)(nil)).Elem()
}

func (i GetImagesImageManifestLayerArray) ToGetImagesImageManifestLayerArrayOutput() GetImagesImageManifestLayerArrayOutput {
	return i.ToGetImagesImageManifestLayerArrayOutputWithContext(context.Background())
}

func (i GetImagesImageManifestLayerArray) ToGetImagesImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImagesImageManifestLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestLayerArrayOutput)
}

func (i GetImagesImageManifestLayerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestLayer] {
	return pulumix.Output[[]GetImagesImageManifestLayer]{
		OutputState: i.ToGetImagesImageManifestLayerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageManifestLayerOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestLayer)(nil)).Elem()
}

func (o GetImagesImageManifestLayerOutput) ToGetImagesImageManifestLayerOutput() GetImagesImageManifestLayerOutput {
	return o
}

func (o GetImagesImageManifestLayerOutput) ToGetImagesImageManifestLayerOutputWithContext(ctx context.Context) GetImagesImageManifestLayerOutput {
	return o
}

func (o GetImagesImageManifestLayerOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestLayer] {
	return pulumix.Output[GetImagesImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestLayerOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestLayer) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestLayerOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestLayer) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestLayerOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageManifestLayer) int { return v.Size }).(pulumi.IntOutput)
}

type GetImagesImageManifestLayerArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestLayer)(nil)).Elem()
}

func (o GetImagesImageManifestLayerArrayOutput) ToGetImagesImageManifestLayerArrayOutput() GetImagesImageManifestLayerArrayOutput {
	return o
}

func (o GetImagesImageManifestLayerArrayOutput) ToGetImagesImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImagesImageManifestLayerArrayOutput {
	return o
}

func (o GetImagesImageManifestLayerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestLayer] {
	return pulumix.Output[[]GetImagesImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestLayerArrayOutput) Index(i pulumi.IntInput) GetImagesImageManifestLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageManifestLayer {
		return vs[0].([]GetImagesImageManifestLayer)[vs[1].(int)]
	}).(GetImagesImageManifestLayerOutput)
}

type GetImagesQuery struct {
	Fetch *string             `pulumi:"fetch"`
	Spec  *GetImagesQuerySpec `pulumi:"spec"`
}

// GetImagesQueryInput is an input type that accepts GetImagesQueryArgs and GetImagesQueryOutput values.
// You can construct a concrete instance of `GetImagesQueryInput` via:
//
//	GetImagesQueryArgs{...}
type GetImagesQueryInput interface {
	pulumi.Input

	ToGetImagesQueryOutput() GetImagesQueryOutput
	ToGetImagesQueryOutputWithContext(context.Context) GetImagesQueryOutput
}

type GetImagesQueryArgs struct {
	Fetch pulumi.StringPtrInput      `pulumi:"fetch"`
	Spec  GetImagesQuerySpecPtrInput `pulumi:"spec"`
}

func (GetImagesQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuery)(nil)).Elem()
}

func (i GetImagesQueryArgs) ToGetImagesQueryOutput() GetImagesQueryOutput {
	return i.ToGetImagesQueryOutputWithContext(context.Background())
}

func (i GetImagesQueryArgs) ToGetImagesQueryOutputWithContext(ctx context.Context) GetImagesQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQueryOutput)
}

func (i GetImagesQueryArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuery] {
	return pulumix.Output[GetImagesQuery]{
		OutputState: i.ToGetImagesQueryOutputWithContext(ctx).OutputState,
	}
}

func (i GetImagesQueryArgs) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return i.ToGetImagesQueryPtrOutputWithContext(context.Background())
}

func (i GetImagesQueryArgs) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQueryOutput).ToGetImagesQueryPtrOutputWithContext(ctx)
}

// GetImagesQueryPtrInput is an input type that accepts GetImagesQueryArgs, GetImagesQueryPtr and GetImagesQueryPtrOutput values.
// You can construct a concrete instance of `GetImagesQueryPtrInput` via:
//
//	        GetImagesQueryArgs{...}
//
//	or:
//
//	        nil
type GetImagesQueryPtrInput interface {
	pulumi.Input

	ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput
	ToGetImagesQueryPtrOutputWithContext(context.Context) GetImagesQueryPtrOutput
}

type getImagesQueryPtrType GetImagesQueryArgs

func GetImagesQueryPtr(v *GetImagesQueryArgs) GetImagesQueryPtrInput {
	return (*getImagesQueryPtrType)(v)
}

func (*getImagesQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuery)(nil)).Elem()
}

func (i *getImagesQueryPtrType) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return i.ToGetImagesQueryPtrOutputWithContext(context.Background())
}

func (i *getImagesQueryPtrType) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQueryPtrOutput)
}

func (i *getImagesQueryPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuery] {
	return pulumix.Output[*GetImagesQuery]{
		OutputState: i.ToGetImagesQueryPtrOutputWithContext(ctx).OutputState,
	}
}

type GetImagesQueryOutput struct{ *pulumi.OutputState }

func (GetImagesQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuery)(nil)).Elem()
}

func (o GetImagesQueryOutput) ToGetImagesQueryOutput() GetImagesQueryOutput {
	return o
}

func (o GetImagesQueryOutput) ToGetImagesQueryOutputWithContext(ctx context.Context) GetImagesQueryOutput {
	return o
}

func (o GetImagesQueryOutput) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return o.ToGetImagesQueryPtrOutputWithContext(context.Background())
}

func (o GetImagesQueryOutput) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetImagesQuery) *GetImagesQuery {
		return &v
	}).(GetImagesQueryPtrOutput)
}

func (o GetImagesQueryOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuery] {
	return pulumix.Output[GetImagesQuery]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQueryOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuery) *string { return v.Fetch }).(pulumi.StringPtrOutput)
}

func (o GetImagesQueryOutput) Spec() GetImagesQuerySpecPtrOutput {
	return o.ApplyT(func(v GetImagesQuery) *GetImagesQuerySpec { return v.Spec }).(GetImagesQuerySpecPtrOutput)
}

type GetImagesQueryPtrOutput struct{ *pulumi.OutputState }

func (GetImagesQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuery)(nil)).Elem()
}

func (o GetImagesQueryPtrOutput) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return o
}

func (o GetImagesQueryPtrOutput) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return o
}

func (o GetImagesQueryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuery] {
	return pulumix.Output[*GetImagesQuery]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQueryPtrOutput) Elem() GetImagesQueryOutput {
	return o.ApplyT(func(v *GetImagesQuery) GetImagesQuery {
		if v != nil {
			return *v
		}
		var ret GetImagesQuery
		return ret
	}).(GetImagesQueryOutput)
}

func (o GetImagesQueryPtrOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetImagesQuery) *string {
		if v == nil {
			return nil
		}
		return v.Fetch
	}).(pulumi.StringPtrOutput)
}

func (o GetImagesQueryPtrOutput) Spec() GetImagesQuerySpecPtrOutput {
	return o.ApplyT(func(v *GetImagesQuery) *GetImagesQuerySpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(GetImagesQuerySpecPtrOutput)
}

type GetImagesQuerySpec struct {
	Match *string                  `pulumi:"match"`
	Terms []GetImagesQuerySpecTerm `pulumi:"terms"`
}

// GetImagesQuerySpecInput is an input type that accepts GetImagesQuerySpecArgs and GetImagesQuerySpecOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecInput` via:
//
//	GetImagesQuerySpecArgs{...}
type GetImagesQuerySpecInput interface {
	pulumi.Input

	ToGetImagesQuerySpecOutput() GetImagesQuerySpecOutput
	ToGetImagesQuerySpecOutputWithContext(context.Context) GetImagesQuerySpecOutput
}

type GetImagesQuerySpecArgs struct {
	Match pulumi.StringPtrInput            `pulumi:"match"`
	Terms GetImagesQuerySpecTermArrayInput `pulumi:"terms"`
}

func (GetImagesQuerySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpec)(nil)).Elem()
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecOutput() GetImagesQuerySpecOutput {
	return i.ToGetImagesQuerySpecOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecOutputWithContext(ctx context.Context) GetImagesQuerySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecOutput)
}

func (i GetImagesQuerySpecArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpec] {
	return pulumix.Output[GetImagesQuerySpec]{
		OutputState: i.ToGetImagesQuerySpecOutputWithContext(ctx).OutputState,
	}
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return i.ToGetImagesQuerySpecPtrOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecOutput).ToGetImagesQuerySpecPtrOutputWithContext(ctx)
}

// GetImagesQuerySpecPtrInput is an input type that accepts GetImagesQuerySpecArgs, GetImagesQuerySpecPtr and GetImagesQuerySpecPtrOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecPtrInput` via:
//
//	        GetImagesQuerySpecArgs{...}
//
//	or:
//
//	        nil
type GetImagesQuerySpecPtrInput interface {
	pulumi.Input

	ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput
	ToGetImagesQuerySpecPtrOutputWithContext(context.Context) GetImagesQuerySpecPtrOutput
}

type getImagesQuerySpecPtrType GetImagesQuerySpecArgs

func GetImagesQuerySpecPtr(v *GetImagesQuerySpecArgs) GetImagesQuerySpecPtrInput {
	return (*getImagesQuerySpecPtrType)(v)
}

func (*getImagesQuerySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuerySpec)(nil)).Elem()
}

func (i *getImagesQuerySpecPtrType) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return i.ToGetImagesQuerySpecPtrOutputWithContext(context.Background())
}

func (i *getImagesQuerySpecPtrType) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecPtrOutput)
}

func (i *getImagesQuerySpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuerySpec] {
	return pulumix.Output[*GetImagesQuerySpec]{
		OutputState: i.ToGetImagesQuerySpecPtrOutputWithContext(ctx).OutputState,
	}
}

type GetImagesQuerySpecOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpec)(nil)).Elem()
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecOutput() GetImagesQuerySpecOutput {
	return o
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecOutputWithContext(ctx context.Context) GetImagesQuerySpecOutput {
	return o
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return o.ToGetImagesQuerySpecPtrOutputWithContext(context.Background())
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetImagesQuerySpec) *GetImagesQuerySpec {
		return &v
	}).(GetImagesQuerySpecPtrOutput)
}

func (o GetImagesQuerySpecOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpec] {
	return pulumix.Output[GetImagesQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpec) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecOutput) Terms() GetImagesQuerySpecTermArrayOutput {
	return o.ApplyT(func(v GetImagesQuerySpec) []GetImagesQuerySpecTerm { return v.Terms }).(GetImagesQuerySpecTermArrayOutput)
}

type GetImagesQuerySpecPtrOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuerySpec)(nil)).Elem()
}

func (o GetImagesQuerySpecPtrOutput) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return o
}

func (o GetImagesQuerySpecPtrOutput) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return o
}

func (o GetImagesQuerySpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuerySpec] {
	return pulumix.Output[*GetImagesQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecPtrOutput) Elem() GetImagesQuerySpecOutput {
	return o.ApplyT(func(v *GetImagesQuerySpec) GetImagesQuerySpec {
		if v != nil {
			return *v
		}
		var ret GetImagesQuerySpec
		return ret
	}).(GetImagesQuerySpecOutput)
}

func (o GetImagesQuerySpecPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetImagesQuerySpec) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecPtrOutput) Terms() GetImagesQuerySpecTermArrayOutput {
	return o.ApplyT(func(v *GetImagesQuerySpec) []GetImagesQuerySpecTerm {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(GetImagesQuerySpecTermArrayOutput)
}

type GetImagesQuerySpecTerm struct {
	Op       *string `pulumi:"op"`
	Property *string `pulumi:"property"`
	Rel      *string `pulumi:"rel"`
	Tag      *string `pulumi:"tag"`
	Value    *string `pulumi:"value"`
}

// GetImagesQuerySpecTermInput is an input type that accepts GetImagesQuerySpecTermArgs and GetImagesQuerySpecTermOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecTermInput` via:
//
//	GetImagesQuerySpecTermArgs{...}
type GetImagesQuerySpecTermInput interface {
	pulumi.Input

	ToGetImagesQuerySpecTermOutput() GetImagesQuerySpecTermOutput
	ToGetImagesQuerySpecTermOutputWithContext(context.Context) GetImagesQuerySpecTermOutput
}

type GetImagesQuerySpecTermArgs struct {
	Op       pulumi.StringPtrInput `pulumi:"op"`
	Property pulumi.StringPtrInput `pulumi:"property"`
	Rel      pulumi.StringPtrInput `pulumi:"rel"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (GetImagesQuerySpecTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpecTerm)(nil)).Elem()
}

func (i GetImagesQuerySpecTermArgs) ToGetImagesQuerySpecTermOutput() GetImagesQuerySpecTermOutput {
	return i.ToGetImagesQuerySpecTermOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecTermArgs) ToGetImagesQuerySpecTermOutputWithContext(ctx context.Context) GetImagesQuerySpecTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecTermOutput)
}

func (i GetImagesQuerySpecTermArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpecTerm] {
	return pulumix.Output[GetImagesQuerySpecTerm]{
		OutputState: i.ToGetImagesQuerySpecTermOutputWithContext(ctx).OutputState,
	}
}

// GetImagesQuerySpecTermArrayInput is an input type that accepts GetImagesQuerySpecTermArray and GetImagesQuerySpecTermArrayOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecTermArrayInput` via:
//
//	GetImagesQuerySpecTermArray{ GetImagesQuerySpecTermArgs{...} }
type GetImagesQuerySpecTermArrayInput interface {
	pulumi.Input

	ToGetImagesQuerySpecTermArrayOutput() GetImagesQuerySpecTermArrayOutput
	ToGetImagesQuerySpecTermArrayOutputWithContext(context.Context) GetImagesQuerySpecTermArrayOutput
}

type GetImagesQuerySpecTermArray []GetImagesQuerySpecTermInput

func (GetImagesQuerySpecTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesQuerySpecTerm)(nil)).Elem()
}

func (i GetImagesQuerySpecTermArray) ToGetImagesQuerySpecTermArrayOutput() GetImagesQuerySpecTermArrayOutput {
	return i.ToGetImagesQuerySpecTermArrayOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecTermArray) ToGetImagesQuerySpecTermArrayOutputWithContext(ctx context.Context) GetImagesQuerySpecTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecTermArrayOutput)
}

func (i GetImagesQuerySpecTermArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesQuerySpecTerm] {
	return pulumix.Output[[]GetImagesQuerySpecTerm]{
		OutputState: i.ToGetImagesQuerySpecTermArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesQuerySpecTermOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpecTerm)(nil)).Elem()
}

func (o GetImagesQuerySpecTermOutput) ToGetImagesQuerySpecTermOutput() GetImagesQuerySpecTermOutput {
	return o
}

func (o GetImagesQuerySpecTermOutput) ToGetImagesQuerySpecTermOutputWithContext(ctx context.Context) GetImagesQuerySpecTermOutput {
	return o
}

func (o GetImagesQuerySpecTermOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpecTerm] {
	return pulumix.Output[GetImagesQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecTermOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecTermOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecTermOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecTermOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetImagesQuerySpecTermArrayOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesQuerySpecTerm)(nil)).Elem()
}

func (o GetImagesQuerySpecTermArrayOutput) ToGetImagesQuerySpecTermArrayOutput() GetImagesQuerySpecTermArrayOutput {
	return o
}

func (o GetImagesQuerySpecTermArrayOutput) ToGetImagesQuerySpecTermArrayOutputWithContext(ctx context.Context) GetImagesQuerySpecTermArrayOutput {
	return o
}

func (o GetImagesQuerySpecTermArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesQuerySpecTerm] {
	return pulumix.Output[[]GetImagesQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecTermArrayOutput) Index(i pulumi.IntInput) GetImagesQuerySpecTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesQuerySpecTerm {
		return vs[0].([]GetImagesQuerySpecTerm)[vs[1].(int)]
	}).(GetImagesQuerySpecTermOutput)
}

type GetLocationGeo struct {
	City      *string  `pulumi:"city"`
	Continent *string  `pulumi:"continent"`
	Country   *string  `pulumi:"country"`
	Lat       *float64 `pulumi:"lat"`
	Lon       *float64 `pulumi:"lon"`
	State     *string  `pulumi:"state"`
}

// GetLocationGeoInput is an input type that accepts GetLocationGeoArgs and GetLocationGeoOutput values.
// You can construct a concrete instance of `GetLocationGeoInput` via:
//
//	GetLocationGeoArgs{...}
type GetLocationGeoInput interface {
	pulumi.Input

	ToGetLocationGeoOutput() GetLocationGeoOutput
	ToGetLocationGeoOutputWithContext(context.Context) GetLocationGeoOutput
}

type GetLocationGeoArgs struct {
	City      pulumi.StringPtrInput  `pulumi:"city"`
	Continent pulumi.StringPtrInput  `pulumi:"continent"`
	Country   pulumi.StringPtrInput  `pulumi:"country"`
	Lat       pulumi.Float64PtrInput `pulumi:"lat"`
	Lon       pulumi.Float64PtrInput `pulumi:"lon"`
	State     pulumi.StringPtrInput  `pulumi:"state"`
}

func (GetLocationGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGeo)(nil)).Elem()
}

func (i GetLocationGeoArgs) ToGetLocationGeoOutput() GetLocationGeoOutput {
	return i.ToGetLocationGeoOutputWithContext(context.Background())
}

func (i GetLocationGeoArgs) ToGetLocationGeoOutputWithContext(ctx context.Context) GetLocationGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGeoOutput)
}

func (i GetLocationGeoArgs) ToOutput(ctx context.Context) pulumix.Output[GetLocationGeo] {
	return pulumix.Output[GetLocationGeo]{
		OutputState: i.ToGetLocationGeoOutputWithContext(ctx).OutputState,
	}
}

// GetLocationGeoArrayInput is an input type that accepts GetLocationGeoArray and GetLocationGeoArrayOutput values.
// You can construct a concrete instance of `GetLocationGeoArrayInput` via:
//
//	GetLocationGeoArray{ GetLocationGeoArgs{...} }
type GetLocationGeoArrayInput interface {
	pulumi.Input

	ToGetLocationGeoArrayOutput() GetLocationGeoArrayOutput
	ToGetLocationGeoArrayOutputWithContext(context.Context) GetLocationGeoArrayOutput
}

type GetLocationGeoArray []GetLocationGeoInput

func (GetLocationGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGeo)(nil)).Elem()
}

func (i GetLocationGeoArray) ToGetLocationGeoArrayOutput() GetLocationGeoArrayOutput {
	return i.ToGetLocationGeoArrayOutputWithContext(context.Background())
}

func (i GetLocationGeoArray) ToGetLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGeoArrayOutput)
}

func (i GetLocationGeoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationGeo] {
	return pulumix.Output[[]GetLocationGeo]{
		OutputState: i.ToGetLocationGeoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLocationGeoOutput struct{ *pulumi.OutputState }

func (GetLocationGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGeo)(nil)).Elem()
}

func (o GetLocationGeoOutput) ToGetLocationGeoOutput() GetLocationGeoOutput {
	return o
}

func (o GetLocationGeoOutput) ToGetLocationGeoOutputWithContext(ctx context.Context) GetLocationGeoOutput {
	return o
}

func (o GetLocationGeoOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocationGeo] {
	return pulumix.Output[GetLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationGeoOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o GetLocationGeoOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.Continent }).(pulumi.StringPtrOutput)
}

func (o GetLocationGeoOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o GetLocationGeoOutput) Lat() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *float64 { return v.Lat }).(pulumi.Float64PtrOutput)
}

func (o GetLocationGeoOutput) Lon() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *float64 { return v.Lon }).(pulumi.Float64PtrOutput)
}

func (o GetLocationGeoOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.State }).(pulumi.StringPtrOutput)
}

type GetLocationGeoArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGeo)(nil)).Elem()
}

func (o GetLocationGeoArrayOutput) ToGetLocationGeoArrayOutput() GetLocationGeoArrayOutput {
	return o
}

func (o GetLocationGeoArrayOutput) ToGetLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationGeoArrayOutput {
	return o
}

func (o GetLocationGeoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationGeo] {
	return pulumix.Output[[]GetLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationGeoArrayOutput) Index(i pulumi.IntInput) GetLocationGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGeo {
		return vs[0].([]GetLocationGeo)[vs[1].(int)]
	}).(GetLocationGeoOutput)
}

type GetLocationsLocation struct {
	CloudProvider string                    `pulumi:"cloudProvider"`
	CplnId        string                    `pulumi:"cplnId"`
	Description   string                    `pulumi:"description"`
	Enabled       bool                      `pulumi:"enabled"`
	Geos          []GetLocationsLocationGeo `pulumi:"geos"`
	IpRanges      []string                  `pulumi:"ipRanges"`
	Name          string                    `pulumi:"name"`
	Region        string                    `pulumi:"region"`
	SelfLink      string                    `pulumi:"selfLink"`
	Tags          map[string]string         `pulumi:"tags"`
}

// GetLocationsLocationInput is an input type that accepts GetLocationsLocationArgs and GetLocationsLocationOutput values.
// You can construct a concrete instance of `GetLocationsLocationInput` via:
//
//	GetLocationsLocationArgs{...}
type GetLocationsLocationInput interface {
	pulumi.Input

	ToGetLocationsLocationOutput() GetLocationsLocationOutput
	ToGetLocationsLocationOutputWithContext(context.Context) GetLocationsLocationOutput
}

type GetLocationsLocationArgs struct {
	CloudProvider pulumi.StringInput                `pulumi:"cloudProvider"`
	CplnId        pulumi.StringInput                `pulumi:"cplnId"`
	Description   pulumi.StringInput                `pulumi:"description"`
	Enabled       pulumi.BoolInput                  `pulumi:"enabled"`
	Geos          GetLocationsLocationGeoArrayInput `pulumi:"geos"`
	IpRanges      pulumi.StringArrayInput           `pulumi:"ipRanges"`
	Name          pulumi.StringInput                `pulumi:"name"`
	Region        pulumi.StringInput                `pulumi:"region"`
	SelfLink      pulumi.StringInput                `pulumi:"selfLink"`
	Tags          pulumi.StringMapInput             `pulumi:"tags"`
}

func (GetLocationsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return i.ToGetLocationsLocationOutputWithContext(context.Background())
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationOutput)
}

func (i GetLocationsLocationArgs) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocation] {
	return pulumix.Output[GetLocationsLocation]{
		OutputState: i.ToGetLocationsLocationOutputWithContext(ctx).OutputState,
	}
}

// GetLocationsLocationArrayInput is an input type that accepts GetLocationsLocationArray and GetLocationsLocationArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationArrayInput` via:
//
//	GetLocationsLocationArray{ GetLocationsLocationArgs{...} }
type GetLocationsLocationArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput
	ToGetLocationsLocationArrayOutputWithContext(context.Context) GetLocationsLocationArrayOutput
}

type GetLocationsLocationArray []GetLocationsLocationInput

func (GetLocationsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return i.ToGetLocationsLocationArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationArrayOutput)
}

func (i GetLocationsLocationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocation] {
	return pulumix.Output[[]GetLocationsLocation]{
		OutputState: i.ToGetLocationsLocationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLocationsLocationOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocation] {
	return pulumix.Output[GetLocationsLocation]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.CplnId }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationsLocation) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetLocationsLocationOutput) Geos() GetLocationsLocationGeoArrayOutput {
	return o.ApplyT(func(v GetLocationsLocation) []GetLocationsLocationGeo { return v.Geos }).(GetLocationsLocationGeoArrayOutput)
}

func (o GetLocationsLocationOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLocationsLocation) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o GetLocationsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationsLocation) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetLocationsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocation] {
	return pulumix.Output[[]GetLocationsLocation]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocation {
		return vs[0].([]GetLocationsLocation)[vs[1].(int)]
	}).(GetLocationsLocationOutput)
}

type GetLocationsLocationGeo struct {
	City      *string  `pulumi:"city"`
	Continent *string  `pulumi:"continent"`
	Country   *string  `pulumi:"country"`
	Lat       *float64 `pulumi:"lat"`
	Lon       *float64 `pulumi:"lon"`
	State     *string  `pulumi:"state"`
}

// GetLocationsLocationGeoInput is an input type that accepts GetLocationsLocationGeoArgs and GetLocationsLocationGeoOutput values.
// You can construct a concrete instance of `GetLocationsLocationGeoInput` via:
//
//	GetLocationsLocationGeoArgs{...}
type GetLocationsLocationGeoInput interface {
	pulumi.Input

	ToGetLocationsLocationGeoOutput() GetLocationsLocationGeoOutput
	ToGetLocationsLocationGeoOutputWithContext(context.Context) GetLocationsLocationGeoOutput
}

type GetLocationsLocationGeoArgs struct {
	City      pulumi.StringPtrInput  `pulumi:"city"`
	Continent pulumi.StringPtrInput  `pulumi:"continent"`
	Country   pulumi.StringPtrInput  `pulumi:"country"`
	Lat       pulumi.Float64PtrInput `pulumi:"lat"`
	Lon       pulumi.Float64PtrInput `pulumi:"lon"`
	State     pulumi.StringPtrInput  `pulumi:"state"`
}

func (GetLocationsLocationGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocationGeo)(nil)).Elem()
}

func (i GetLocationsLocationGeoArgs) ToGetLocationsLocationGeoOutput() GetLocationsLocationGeoOutput {
	return i.ToGetLocationsLocationGeoOutputWithContext(context.Background())
}

func (i GetLocationsLocationGeoArgs) ToGetLocationsLocationGeoOutputWithContext(ctx context.Context) GetLocationsLocationGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationGeoOutput)
}

func (i GetLocationsLocationGeoArgs) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocationGeo] {
	return pulumix.Output[GetLocationsLocationGeo]{
		OutputState: i.ToGetLocationsLocationGeoOutputWithContext(ctx).OutputState,
	}
}

// GetLocationsLocationGeoArrayInput is an input type that accepts GetLocationsLocationGeoArray and GetLocationsLocationGeoArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationGeoArrayInput` via:
//
//	GetLocationsLocationGeoArray{ GetLocationsLocationGeoArgs{...} }
type GetLocationsLocationGeoArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationGeoArrayOutput() GetLocationsLocationGeoArrayOutput
	ToGetLocationsLocationGeoArrayOutputWithContext(context.Context) GetLocationsLocationGeoArrayOutput
}

type GetLocationsLocationGeoArray []GetLocationsLocationGeoInput

func (GetLocationsLocationGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocationGeo)(nil)).Elem()
}

func (i GetLocationsLocationGeoArray) ToGetLocationsLocationGeoArrayOutput() GetLocationsLocationGeoArrayOutput {
	return i.ToGetLocationsLocationGeoArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationGeoArray) ToGetLocationsLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationsLocationGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationGeoArrayOutput)
}

func (i GetLocationsLocationGeoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocationGeo] {
	return pulumix.Output[[]GetLocationsLocationGeo]{
		OutputState: i.ToGetLocationsLocationGeoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLocationsLocationGeoOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocationGeo)(nil)).Elem()
}

func (o GetLocationsLocationGeoOutput) ToGetLocationsLocationGeoOutput() GetLocationsLocationGeoOutput {
	return o
}

func (o GetLocationsLocationGeoOutput) ToGetLocationsLocationGeoOutputWithContext(ctx context.Context) GetLocationsLocationGeoOutput {
	return o
}

func (o GetLocationsLocationGeoOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocationGeo] {
	return pulumix.Output[GetLocationsLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationGeoOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationGeoOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.Continent }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationGeoOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationGeoOutput) Lat() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *float64 { return v.Lat }).(pulumi.Float64PtrOutput)
}

func (o GetLocationsLocationGeoOutput) Lon() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *float64 { return v.Lon }).(pulumi.Float64PtrOutput)
}

func (o GetLocationsLocationGeoOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.State }).(pulumi.StringPtrOutput)
}

type GetLocationsLocationGeoArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocationGeo)(nil)).Elem()
}

func (o GetLocationsLocationGeoArrayOutput) ToGetLocationsLocationGeoArrayOutput() GetLocationsLocationGeoArrayOutput {
	return o
}

func (o GetLocationsLocationGeoArrayOutput) ToGetLocationsLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationsLocationGeoArrayOutput {
	return o
}

func (o GetLocationsLocationGeoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocationGeo] {
	return pulumix.Output[[]GetLocationsLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationGeoArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocationGeo {
		return vs[0].([]GetLocationsLocationGeo)[vs[1].(int)]
	}).(GetLocationsLocationGeoOutput)
}

type GetSecretAws struct {
	AccessKey  string  `pulumi:"accessKey"`
	ExternalId *string `pulumi:"externalId"`
	RoleArn    *string `pulumi:"roleArn"`
	SecretKey  string  `pulumi:"secretKey"`
}

// GetSecretAwsInput is an input type that accepts GetSecretAwsArgs and GetSecretAwsOutput values.
// You can construct a concrete instance of `GetSecretAwsInput` via:
//
//	GetSecretAwsArgs{...}
type GetSecretAwsInput interface {
	pulumi.Input

	ToGetSecretAwsOutput() GetSecretAwsOutput
	ToGetSecretAwsOutputWithContext(context.Context) GetSecretAwsOutput
}

type GetSecretAwsArgs struct {
	AccessKey  pulumi.StringInput    `pulumi:"accessKey"`
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn    pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey  pulumi.StringInput    `pulumi:"secretKey"`
}

func (GetSecretAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretAws)(nil)).Elem()
}

func (i GetSecretAwsArgs) ToGetSecretAwsOutput() GetSecretAwsOutput {
	return i.ToGetSecretAwsOutputWithContext(context.Background())
}

func (i GetSecretAwsArgs) ToGetSecretAwsOutputWithContext(ctx context.Context) GetSecretAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAwsOutput)
}

func (i GetSecretAwsArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretAws] {
	return pulumix.Output[GetSecretAws]{
		OutputState: i.ToGetSecretAwsOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretAwsArgs) ToGetSecretAwsPtrOutput() GetSecretAwsPtrOutput {
	return i.ToGetSecretAwsPtrOutputWithContext(context.Background())
}

func (i GetSecretAwsArgs) ToGetSecretAwsPtrOutputWithContext(ctx context.Context) GetSecretAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAwsOutput).ToGetSecretAwsPtrOutputWithContext(ctx)
}

// GetSecretAwsPtrInput is an input type that accepts GetSecretAwsArgs, GetSecretAwsPtr and GetSecretAwsPtrOutput values.
// You can construct a concrete instance of `GetSecretAwsPtrInput` via:
//
//	        GetSecretAwsArgs{...}
//
//	or:
//
//	        nil
type GetSecretAwsPtrInput interface {
	pulumi.Input

	ToGetSecretAwsPtrOutput() GetSecretAwsPtrOutput
	ToGetSecretAwsPtrOutputWithContext(context.Context) GetSecretAwsPtrOutput
}

type getSecretAwsPtrType GetSecretAwsArgs

func GetSecretAwsPtr(v *GetSecretAwsArgs) GetSecretAwsPtrInput {
	return (*getSecretAwsPtrType)(v)
}

func (*getSecretAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretAws)(nil)).Elem()
}

func (i *getSecretAwsPtrType) ToGetSecretAwsPtrOutput() GetSecretAwsPtrOutput {
	return i.ToGetSecretAwsPtrOutputWithContext(context.Background())
}

func (i *getSecretAwsPtrType) ToGetSecretAwsPtrOutputWithContext(ctx context.Context) GetSecretAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAwsPtrOutput)
}

func (i *getSecretAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretAws] {
	return pulumix.Output[*GetSecretAws]{
		OutputState: i.ToGetSecretAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretAwsOutput struct{ *pulumi.OutputState }

func (GetSecretAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretAws)(nil)).Elem()
}

func (o GetSecretAwsOutput) ToGetSecretAwsOutput() GetSecretAwsOutput {
	return o
}

func (o GetSecretAwsOutput) ToGetSecretAwsOutputWithContext(ctx context.Context) GetSecretAwsOutput {
	return o
}

func (o GetSecretAwsOutput) ToGetSecretAwsPtrOutput() GetSecretAwsPtrOutput {
	return o.ToGetSecretAwsPtrOutputWithContext(context.Background())
}

func (o GetSecretAwsOutput) ToGetSecretAwsPtrOutputWithContext(ctx context.Context) GetSecretAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretAws) *GetSecretAws {
		return &v
	}).(GetSecretAwsPtrOutput)
}

func (o GetSecretAwsOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretAws] {
	return pulumix.Output[GetSecretAws]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretAwsOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretAws) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o GetSecretAwsOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretAws) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o GetSecretAwsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretAws) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o GetSecretAwsOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretAws) string { return v.SecretKey }).(pulumi.StringOutput)
}

type GetSecretAwsPtrOutput struct{ *pulumi.OutputState }

func (GetSecretAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretAws)(nil)).Elem()
}

func (o GetSecretAwsPtrOutput) ToGetSecretAwsPtrOutput() GetSecretAwsPtrOutput {
	return o
}

func (o GetSecretAwsPtrOutput) ToGetSecretAwsPtrOutputWithContext(ctx context.Context) GetSecretAwsPtrOutput {
	return o
}

func (o GetSecretAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretAws] {
	return pulumix.Output[*GetSecretAws]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretAwsPtrOutput) Elem() GetSecretAwsOutput {
	return o.ApplyT(func(v *GetSecretAws) GetSecretAws {
		if v != nil {
			return *v
		}
		var ret GetSecretAws
		return ret
	}).(GetSecretAwsOutput)
}

func (o GetSecretAwsPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAws) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretAwsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAws) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretAwsPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAws) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GetSecretAzureConnector struct {
	Code string `pulumi:"code"`
	Url  string `pulumi:"url"`
}

// GetSecretAzureConnectorInput is an input type that accepts GetSecretAzureConnectorArgs and GetSecretAzureConnectorOutput values.
// You can construct a concrete instance of `GetSecretAzureConnectorInput` via:
//
//	GetSecretAzureConnectorArgs{...}
type GetSecretAzureConnectorInput interface {
	pulumi.Input

	ToGetSecretAzureConnectorOutput() GetSecretAzureConnectorOutput
	ToGetSecretAzureConnectorOutputWithContext(context.Context) GetSecretAzureConnectorOutput
}

type GetSecretAzureConnectorArgs struct {
	Code pulumi.StringInput `pulumi:"code"`
	Url  pulumi.StringInput `pulumi:"url"`
}

func (GetSecretAzureConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretAzureConnector)(nil)).Elem()
}

func (i GetSecretAzureConnectorArgs) ToGetSecretAzureConnectorOutput() GetSecretAzureConnectorOutput {
	return i.ToGetSecretAzureConnectorOutputWithContext(context.Background())
}

func (i GetSecretAzureConnectorArgs) ToGetSecretAzureConnectorOutputWithContext(ctx context.Context) GetSecretAzureConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAzureConnectorOutput)
}

func (i GetSecretAzureConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretAzureConnector] {
	return pulumix.Output[GetSecretAzureConnector]{
		OutputState: i.ToGetSecretAzureConnectorOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretAzureConnectorArgs) ToGetSecretAzureConnectorPtrOutput() GetSecretAzureConnectorPtrOutput {
	return i.ToGetSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (i GetSecretAzureConnectorArgs) ToGetSecretAzureConnectorPtrOutputWithContext(ctx context.Context) GetSecretAzureConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAzureConnectorOutput).ToGetSecretAzureConnectorPtrOutputWithContext(ctx)
}

// GetSecretAzureConnectorPtrInput is an input type that accepts GetSecretAzureConnectorArgs, GetSecretAzureConnectorPtr and GetSecretAzureConnectorPtrOutput values.
// You can construct a concrete instance of `GetSecretAzureConnectorPtrInput` via:
//
//	        GetSecretAzureConnectorArgs{...}
//
//	or:
//
//	        nil
type GetSecretAzureConnectorPtrInput interface {
	pulumi.Input

	ToGetSecretAzureConnectorPtrOutput() GetSecretAzureConnectorPtrOutput
	ToGetSecretAzureConnectorPtrOutputWithContext(context.Context) GetSecretAzureConnectorPtrOutput
}

type getSecretAzureConnectorPtrType GetSecretAzureConnectorArgs

func GetSecretAzureConnectorPtr(v *GetSecretAzureConnectorArgs) GetSecretAzureConnectorPtrInput {
	return (*getSecretAzureConnectorPtrType)(v)
}

func (*getSecretAzureConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretAzureConnector)(nil)).Elem()
}

func (i *getSecretAzureConnectorPtrType) ToGetSecretAzureConnectorPtrOutput() GetSecretAzureConnectorPtrOutput {
	return i.ToGetSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (i *getSecretAzureConnectorPtrType) ToGetSecretAzureConnectorPtrOutputWithContext(ctx context.Context) GetSecretAzureConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAzureConnectorPtrOutput)
}

func (i *getSecretAzureConnectorPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretAzureConnector] {
	return pulumix.Output[*GetSecretAzureConnector]{
		OutputState: i.ToGetSecretAzureConnectorPtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretAzureConnectorOutput struct{ *pulumi.OutputState }

func (GetSecretAzureConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretAzureConnector)(nil)).Elem()
}

func (o GetSecretAzureConnectorOutput) ToGetSecretAzureConnectorOutput() GetSecretAzureConnectorOutput {
	return o
}

func (o GetSecretAzureConnectorOutput) ToGetSecretAzureConnectorOutputWithContext(ctx context.Context) GetSecretAzureConnectorOutput {
	return o
}

func (o GetSecretAzureConnectorOutput) ToGetSecretAzureConnectorPtrOutput() GetSecretAzureConnectorPtrOutput {
	return o.ToGetSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (o GetSecretAzureConnectorOutput) ToGetSecretAzureConnectorPtrOutputWithContext(ctx context.Context) GetSecretAzureConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretAzureConnector) *GetSecretAzureConnector {
		return &v
	}).(GetSecretAzureConnectorPtrOutput)
}

func (o GetSecretAzureConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretAzureConnector] {
	return pulumix.Output[GetSecretAzureConnector]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretAzureConnectorOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretAzureConnector) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetSecretAzureConnectorOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretAzureConnector) string { return v.Url }).(pulumi.StringOutput)
}

type GetSecretAzureConnectorPtrOutput struct{ *pulumi.OutputState }

func (GetSecretAzureConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretAzureConnector)(nil)).Elem()
}

func (o GetSecretAzureConnectorPtrOutput) ToGetSecretAzureConnectorPtrOutput() GetSecretAzureConnectorPtrOutput {
	return o
}

func (o GetSecretAzureConnectorPtrOutput) ToGetSecretAzureConnectorPtrOutputWithContext(ctx context.Context) GetSecretAzureConnectorPtrOutput {
	return o
}

func (o GetSecretAzureConnectorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretAzureConnector] {
	return pulumix.Output[*GetSecretAzureConnector]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretAzureConnectorPtrOutput) Elem() GetSecretAzureConnectorOutput {
	return o.ApplyT(func(v *GetSecretAzureConnector) GetSecretAzureConnector {
		if v != nil {
			return *v
		}
		var ret GetSecretAzureConnector
		return ret
	}).(GetSecretAzureConnectorOutput)
}

func (o GetSecretAzureConnectorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAzureConnector) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretAzureConnectorPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAzureConnector) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetSecretEcr struct {
	AccessKey  string   `pulumi:"accessKey"`
	ExternalId *string  `pulumi:"externalId"`
	Repos      []string `pulumi:"repos"`
	RoleArn    *string  `pulumi:"roleArn"`
	SecretKey  string   `pulumi:"secretKey"`
}

// GetSecretEcrInput is an input type that accepts GetSecretEcrArgs and GetSecretEcrOutput values.
// You can construct a concrete instance of `GetSecretEcrInput` via:
//
//	GetSecretEcrArgs{...}
type GetSecretEcrInput interface {
	pulumi.Input

	ToGetSecretEcrOutput() GetSecretEcrOutput
	ToGetSecretEcrOutputWithContext(context.Context) GetSecretEcrOutput
}

type GetSecretEcrArgs struct {
	AccessKey  pulumi.StringInput      `pulumi:"accessKey"`
	ExternalId pulumi.StringPtrInput   `pulumi:"externalId"`
	Repos      pulumi.StringArrayInput `pulumi:"repos"`
	RoleArn    pulumi.StringPtrInput   `pulumi:"roleArn"`
	SecretKey  pulumi.StringInput      `pulumi:"secretKey"`
}

func (GetSecretEcrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretEcr)(nil)).Elem()
}

func (i GetSecretEcrArgs) ToGetSecretEcrOutput() GetSecretEcrOutput {
	return i.ToGetSecretEcrOutputWithContext(context.Background())
}

func (i GetSecretEcrArgs) ToGetSecretEcrOutputWithContext(ctx context.Context) GetSecretEcrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretEcrOutput)
}

func (i GetSecretEcrArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretEcr] {
	return pulumix.Output[GetSecretEcr]{
		OutputState: i.ToGetSecretEcrOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretEcrArgs) ToGetSecretEcrPtrOutput() GetSecretEcrPtrOutput {
	return i.ToGetSecretEcrPtrOutputWithContext(context.Background())
}

func (i GetSecretEcrArgs) ToGetSecretEcrPtrOutputWithContext(ctx context.Context) GetSecretEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretEcrOutput).ToGetSecretEcrPtrOutputWithContext(ctx)
}

// GetSecretEcrPtrInput is an input type that accepts GetSecretEcrArgs, GetSecretEcrPtr and GetSecretEcrPtrOutput values.
// You can construct a concrete instance of `GetSecretEcrPtrInput` via:
//
//	        GetSecretEcrArgs{...}
//
//	or:
//
//	        nil
type GetSecretEcrPtrInput interface {
	pulumi.Input

	ToGetSecretEcrPtrOutput() GetSecretEcrPtrOutput
	ToGetSecretEcrPtrOutputWithContext(context.Context) GetSecretEcrPtrOutput
}

type getSecretEcrPtrType GetSecretEcrArgs

func GetSecretEcrPtr(v *GetSecretEcrArgs) GetSecretEcrPtrInput {
	return (*getSecretEcrPtrType)(v)
}

func (*getSecretEcrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretEcr)(nil)).Elem()
}

func (i *getSecretEcrPtrType) ToGetSecretEcrPtrOutput() GetSecretEcrPtrOutput {
	return i.ToGetSecretEcrPtrOutputWithContext(context.Background())
}

func (i *getSecretEcrPtrType) ToGetSecretEcrPtrOutputWithContext(ctx context.Context) GetSecretEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretEcrPtrOutput)
}

func (i *getSecretEcrPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretEcr] {
	return pulumix.Output[*GetSecretEcr]{
		OutputState: i.ToGetSecretEcrPtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretEcrOutput struct{ *pulumi.OutputState }

func (GetSecretEcrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretEcr)(nil)).Elem()
}

func (o GetSecretEcrOutput) ToGetSecretEcrOutput() GetSecretEcrOutput {
	return o
}

func (o GetSecretEcrOutput) ToGetSecretEcrOutputWithContext(ctx context.Context) GetSecretEcrOutput {
	return o
}

func (o GetSecretEcrOutput) ToGetSecretEcrPtrOutput() GetSecretEcrPtrOutput {
	return o.ToGetSecretEcrPtrOutputWithContext(context.Background())
}

func (o GetSecretEcrOutput) ToGetSecretEcrPtrOutputWithContext(ctx context.Context) GetSecretEcrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretEcr) *GetSecretEcr {
		return &v
	}).(GetSecretEcrPtrOutput)
}

func (o GetSecretEcrOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretEcr] {
	return pulumix.Output[GetSecretEcr]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretEcrOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretEcr) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o GetSecretEcrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretEcr) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o GetSecretEcrOutput) Repos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretEcr) []string { return v.Repos }).(pulumi.StringArrayOutput)
}

func (o GetSecretEcrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretEcr) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o GetSecretEcrOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretEcr) string { return v.SecretKey }).(pulumi.StringOutput)
}

type GetSecretEcrPtrOutput struct{ *pulumi.OutputState }

func (GetSecretEcrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretEcr)(nil)).Elem()
}

func (o GetSecretEcrPtrOutput) ToGetSecretEcrPtrOutput() GetSecretEcrPtrOutput {
	return o
}

func (o GetSecretEcrPtrOutput) ToGetSecretEcrPtrOutputWithContext(ctx context.Context) GetSecretEcrPtrOutput {
	return o
}

func (o GetSecretEcrPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretEcr] {
	return pulumix.Output[*GetSecretEcr]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretEcrPtrOutput) Elem() GetSecretEcrOutput {
	return o.ApplyT(func(v *GetSecretEcr) GetSecretEcr {
		if v != nil {
			return *v
		}
		var ret GetSecretEcr
		return ret
	}).(GetSecretEcrOutput)
}

func (o GetSecretEcrPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretEcr) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretEcrPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretEcr) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretEcrPtrOutput) Repos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSecretEcr) []string {
		if v == nil {
			return nil
		}
		return v.Repos
	}).(pulumi.StringArrayOutput)
}

func (o GetSecretEcrPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretEcr) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretEcrPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretEcr) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GetSecretKeypair struct {
	Passphrase *string `pulumi:"passphrase"`
	PublicKey  *string `pulumi:"publicKey"`
	SecretKey  string  `pulumi:"secretKey"`
}

// GetSecretKeypairInput is an input type that accepts GetSecretKeypairArgs and GetSecretKeypairOutput values.
// You can construct a concrete instance of `GetSecretKeypairInput` via:
//
//	GetSecretKeypairArgs{...}
type GetSecretKeypairInput interface {
	pulumi.Input

	ToGetSecretKeypairOutput() GetSecretKeypairOutput
	ToGetSecretKeypairOutputWithContext(context.Context) GetSecretKeypairOutput
}

type GetSecretKeypairArgs struct {
	Passphrase pulumi.StringPtrInput `pulumi:"passphrase"`
	PublicKey  pulumi.StringPtrInput `pulumi:"publicKey"`
	SecretKey  pulumi.StringInput    `pulumi:"secretKey"`
}

func (GetSecretKeypairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretKeypair)(nil)).Elem()
}

func (i GetSecretKeypairArgs) ToGetSecretKeypairOutput() GetSecretKeypairOutput {
	return i.ToGetSecretKeypairOutputWithContext(context.Background())
}

func (i GetSecretKeypairArgs) ToGetSecretKeypairOutputWithContext(ctx context.Context) GetSecretKeypairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretKeypairOutput)
}

func (i GetSecretKeypairArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretKeypair] {
	return pulumix.Output[GetSecretKeypair]{
		OutputState: i.ToGetSecretKeypairOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretKeypairArgs) ToGetSecretKeypairPtrOutput() GetSecretKeypairPtrOutput {
	return i.ToGetSecretKeypairPtrOutputWithContext(context.Background())
}

func (i GetSecretKeypairArgs) ToGetSecretKeypairPtrOutputWithContext(ctx context.Context) GetSecretKeypairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretKeypairOutput).ToGetSecretKeypairPtrOutputWithContext(ctx)
}

// GetSecretKeypairPtrInput is an input type that accepts GetSecretKeypairArgs, GetSecretKeypairPtr and GetSecretKeypairPtrOutput values.
// You can construct a concrete instance of `GetSecretKeypairPtrInput` via:
//
//	        GetSecretKeypairArgs{...}
//
//	or:
//
//	        nil
type GetSecretKeypairPtrInput interface {
	pulumi.Input

	ToGetSecretKeypairPtrOutput() GetSecretKeypairPtrOutput
	ToGetSecretKeypairPtrOutputWithContext(context.Context) GetSecretKeypairPtrOutput
}

type getSecretKeypairPtrType GetSecretKeypairArgs

func GetSecretKeypairPtr(v *GetSecretKeypairArgs) GetSecretKeypairPtrInput {
	return (*getSecretKeypairPtrType)(v)
}

func (*getSecretKeypairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretKeypair)(nil)).Elem()
}

func (i *getSecretKeypairPtrType) ToGetSecretKeypairPtrOutput() GetSecretKeypairPtrOutput {
	return i.ToGetSecretKeypairPtrOutputWithContext(context.Background())
}

func (i *getSecretKeypairPtrType) ToGetSecretKeypairPtrOutputWithContext(ctx context.Context) GetSecretKeypairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretKeypairPtrOutput)
}

func (i *getSecretKeypairPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretKeypair] {
	return pulumix.Output[*GetSecretKeypair]{
		OutputState: i.ToGetSecretKeypairPtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretKeypairOutput struct{ *pulumi.OutputState }

func (GetSecretKeypairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretKeypair)(nil)).Elem()
}

func (o GetSecretKeypairOutput) ToGetSecretKeypairOutput() GetSecretKeypairOutput {
	return o
}

func (o GetSecretKeypairOutput) ToGetSecretKeypairOutputWithContext(ctx context.Context) GetSecretKeypairOutput {
	return o
}

func (o GetSecretKeypairOutput) ToGetSecretKeypairPtrOutput() GetSecretKeypairPtrOutput {
	return o.ToGetSecretKeypairPtrOutputWithContext(context.Background())
}

func (o GetSecretKeypairOutput) ToGetSecretKeypairPtrOutputWithContext(ctx context.Context) GetSecretKeypairPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretKeypair) *GetSecretKeypair {
		return &v
	}).(GetSecretKeypairPtrOutput)
}

func (o GetSecretKeypairOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretKeypair] {
	return pulumix.Output[GetSecretKeypair]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretKeypairOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretKeypair) *string { return v.Passphrase }).(pulumi.StringPtrOutput)
}

func (o GetSecretKeypairOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretKeypair) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o GetSecretKeypairOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretKeypair) string { return v.SecretKey }).(pulumi.StringOutput)
}

type GetSecretKeypairPtrOutput struct{ *pulumi.OutputState }

func (GetSecretKeypairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretKeypair)(nil)).Elem()
}

func (o GetSecretKeypairPtrOutput) ToGetSecretKeypairPtrOutput() GetSecretKeypairPtrOutput {
	return o
}

func (o GetSecretKeypairPtrOutput) ToGetSecretKeypairPtrOutputWithContext(ctx context.Context) GetSecretKeypairPtrOutput {
	return o
}

func (o GetSecretKeypairPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretKeypair] {
	return pulumix.Output[*GetSecretKeypair]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretKeypairPtrOutput) Elem() GetSecretKeypairOutput {
	return o.ApplyT(func(v *GetSecretKeypair) GetSecretKeypair {
		if v != nil {
			return *v
		}
		var ret GetSecretKeypair
		return ret
	}).(GetSecretKeypairOutput)
}

func (o GetSecretKeypairPtrOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretKeypair) *string {
		if v == nil {
			return nil
		}
		return v.Passphrase
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretKeypairPtrOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretKeypair) *string {
		if v == nil {
			return nil
		}
		return v.PublicKey
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretKeypairPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretKeypair) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GetSecretNatsAccount struct {
	AccountId  string `pulumi:"accountId"`
	PrivateKey string `pulumi:"privateKey"`
}

// GetSecretNatsAccountInput is an input type that accepts GetSecretNatsAccountArgs and GetSecretNatsAccountOutput values.
// You can construct a concrete instance of `GetSecretNatsAccountInput` via:
//
//	GetSecretNatsAccountArgs{...}
type GetSecretNatsAccountInput interface {
	pulumi.Input

	ToGetSecretNatsAccountOutput() GetSecretNatsAccountOutput
	ToGetSecretNatsAccountOutputWithContext(context.Context) GetSecretNatsAccountOutput
}

type GetSecretNatsAccountArgs struct {
	AccountId  pulumi.StringInput `pulumi:"accountId"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (GetSecretNatsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretNatsAccount)(nil)).Elem()
}

func (i GetSecretNatsAccountArgs) ToGetSecretNatsAccountOutput() GetSecretNatsAccountOutput {
	return i.ToGetSecretNatsAccountOutputWithContext(context.Background())
}

func (i GetSecretNatsAccountArgs) ToGetSecretNatsAccountOutputWithContext(ctx context.Context) GetSecretNatsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretNatsAccountOutput)
}

func (i GetSecretNatsAccountArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretNatsAccount] {
	return pulumix.Output[GetSecretNatsAccount]{
		OutputState: i.ToGetSecretNatsAccountOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretNatsAccountArgs) ToGetSecretNatsAccountPtrOutput() GetSecretNatsAccountPtrOutput {
	return i.ToGetSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (i GetSecretNatsAccountArgs) ToGetSecretNatsAccountPtrOutputWithContext(ctx context.Context) GetSecretNatsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretNatsAccountOutput).ToGetSecretNatsAccountPtrOutputWithContext(ctx)
}

// GetSecretNatsAccountPtrInput is an input type that accepts GetSecretNatsAccountArgs, GetSecretNatsAccountPtr and GetSecretNatsAccountPtrOutput values.
// You can construct a concrete instance of `GetSecretNatsAccountPtrInput` via:
//
//	        GetSecretNatsAccountArgs{...}
//
//	or:
//
//	        nil
type GetSecretNatsAccountPtrInput interface {
	pulumi.Input

	ToGetSecretNatsAccountPtrOutput() GetSecretNatsAccountPtrOutput
	ToGetSecretNatsAccountPtrOutputWithContext(context.Context) GetSecretNatsAccountPtrOutput
}

type getSecretNatsAccountPtrType GetSecretNatsAccountArgs

func GetSecretNatsAccountPtr(v *GetSecretNatsAccountArgs) GetSecretNatsAccountPtrInput {
	return (*getSecretNatsAccountPtrType)(v)
}

func (*getSecretNatsAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretNatsAccount)(nil)).Elem()
}

func (i *getSecretNatsAccountPtrType) ToGetSecretNatsAccountPtrOutput() GetSecretNatsAccountPtrOutput {
	return i.ToGetSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (i *getSecretNatsAccountPtrType) ToGetSecretNatsAccountPtrOutputWithContext(ctx context.Context) GetSecretNatsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretNatsAccountPtrOutput)
}

func (i *getSecretNatsAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretNatsAccount] {
	return pulumix.Output[*GetSecretNatsAccount]{
		OutputState: i.ToGetSecretNatsAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretNatsAccountOutput struct{ *pulumi.OutputState }

func (GetSecretNatsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretNatsAccount)(nil)).Elem()
}

func (o GetSecretNatsAccountOutput) ToGetSecretNatsAccountOutput() GetSecretNatsAccountOutput {
	return o
}

func (o GetSecretNatsAccountOutput) ToGetSecretNatsAccountOutputWithContext(ctx context.Context) GetSecretNatsAccountOutput {
	return o
}

func (o GetSecretNatsAccountOutput) ToGetSecretNatsAccountPtrOutput() GetSecretNatsAccountPtrOutput {
	return o.ToGetSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (o GetSecretNatsAccountOutput) ToGetSecretNatsAccountPtrOutputWithContext(ctx context.Context) GetSecretNatsAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretNatsAccount) *GetSecretNatsAccount {
		return &v
	}).(GetSecretNatsAccountPtrOutput)
}

func (o GetSecretNatsAccountOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretNatsAccount] {
	return pulumix.Output[GetSecretNatsAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretNatsAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretNatsAccount) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o GetSecretNatsAccountOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretNatsAccount) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type GetSecretNatsAccountPtrOutput struct{ *pulumi.OutputState }

func (GetSecretNatsAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretNatsAccount)(nil)).Elem()
}

func (o GetSecretNatsAccountPtrOutput) ToGetSecretNatsAccountPtrOutput() GetSecretNatsAccountPtrOutput {
	return o
}

func (o GetSecretNatsAccountPtrOutput) ToGetSecretNatsAccountPtrOutputWithContext(ctx context.Context) GetSecretNatsAccountPtrOutput {
	return o
}

func (o GetSecretNatsAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretNatsAccount] {
	return pulumix.Output[*GetSecretNatsAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretNatsAccountPtrOutput) Elem() GetSecretNatsAccountOutput {
	return o.ApplyT(func(v *GetSecretNatsAccount) GetSecretNatsAccount {
		if v != nil {
			return *v
		}
		var ret GetSecretNatsAccount
		return ret
	}).(GetSecretNatsAccountOutput)
}

func (o GetSecretNatsAccountPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretNatsAccount) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretNatsAccountPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretNatsAccount) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type GetSecretOpaque struct {
	Encoding *string `pulumi:"encoding"`
	Payload  string  `pulumi:"payload"`
}

// GetSecretOpaqueInput is an input type that accepts GetSecretOpaqueArgs and GetSecretOpaqueOutput values.
// You can construct a concrete instance of `GetSecretOpaqueInput` via:
//
//	GetSecretOpaqueArgs{...}
type GetSecretOpaqueInput interface {
	pulumi.Input

	ToGetSecretOpaqueOutput() GetSecretOpaqueOutput
	ToGetSecretOpaqueOutputWithContext(context.Context) GetSecretOpaqueOutput
}

type GetSecretOpaqueArgs struct {
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	Payload  pulumi.StringInput    `pulumi:"payload"`
}

func (GetSecretOpaqueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretOpaque)(nil)).Elem()
}

func (i GetSecretOpaqueArgs) ToGetSecretOpaqueOutput() GetSecretOpaqueOutput {
	return i.ToGetSecretOpaqueOutputWithContext(context.Background())
}

func (i GetSecretOpaqueArgs) ToGetSecretOpaqueOutputWithContext(ctx context.Context) GetSecretOpaqueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretOpaqueOutput)
}

func (i GetSecretOpaqueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretOpaque] {
	return pulumix.Output[GetSecretOpaque]{
		OutputState: i.ToGetSecretOpaqueOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretOpaqueArgs) ToGetSecretOpaquePtrOutput() GetSecretOpaquePtrOutput {
	return i.ToGetSecretOpaquePtrOutputWithContext(context.Background())
}

func (i GetSecretOpaqueArgs) ToGetSecretOpaquePtrOutputWithContext(ctx context.Context) GetSecretOpaquePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretOpaqueOutput).ToGetSecretOpaquePtrOutputWithContext(ctx)
}

// GetSecretOpaquePtrInput is an input type that accepts GetSecretOpaqueArgs, GetSecretOpaquePtr and GetSecretOpaquePtrOutput values.
// You can construct a concrete instance of `GetSecretOpaquePtrInput` via:
//
//	        GetSecretOpaqueArgs{...}
//
//	or:
//
//	        nil
type GetSecretOpaquePtrInput interface {
	pulumi.Input

	ToGetSecretOpaquePtrOutput() GetSecretOpaquePtrOutput
	ToGetSecretOpaquePtrOutputWithContext(context.Context) GetSecretOpaquePtrOutput
}

type getSecretOpaquePtrType GetSecretOpaqueArgs

func GetSecretOpaquePtr(v *GetSecretOpaqueArgs) GetSecretOpaquePtrInput {
	return (*getSecretOpaquePtrType)(v)
}

func (*getSecretOpaquePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretOpaque)(nil)).Elem()
}

func (i *getSecretOpaquePtrType) ToGetSecretOpaquePtrOutput() GetSecretOpaquePtrOutput {
	return i.ToGetSecretOpaquePtrOutputWithContext(context.Background())
}

func (i *getSecretOpaquePtrType) ToGetSecretOpaquePtrOutputWithContext(ctx context.Context) GetSecretOpaquePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretOpaquePtrOutput)
}

func (i *getSecretOpaquePtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretOpaque] {
	return pulumix.Output[*GetSecretOpaque]{
		OutputState: i.ToGetSecretOpaquePtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretOpaqueOutput struct{ *pulumi.OutputState }

func (GetSecretOpaqueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretOpaque)(nil)).Elem()
}

func (o GetSecretOpaqueOutput) ToGetSecretOpaqueOutput() GetSecretOpaqueOutput {
	return o
}

func (o GetSecretOpaqueOutput) ToGetSecretOpaqueOutputWithContext(ctx context.Context) GetSecretOpaqueOutput {
	return o
}

func (o GetSecretOpaqueOutput) ToGetSecretOpaquePtrOutput() GetSecretOpaquePtrOutput {
	return o.ToGetSecretOpaquePtrOutputWithContext(context.Background())
}

func (o GetSecretOpaqueOutput) ToGetSecretOpaquePtrOutputWithContext(ctx context.Context) GetSecretOpaquePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretOpaque) *GetSecretOpaque {
		return &v
	}).(GetSecretOpaquePtrOutput)
}

func (o GetSecretOpaqueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretOpaque] {
	return pulumix.Output[GetSecretOpaque]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretOpaqueOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretOpaque) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o GetSecretOpaqueOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretOpaque) string { return v.Payload }).(pulumi.StringOutput)
}

type GetSecretOpaquePtrOutput struct{ *pulumi.OutputState }

func (GetSecretOpaquePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretOpaque)(nil)).Elem()
}

func (o GetSecretOpaquePtrOutput) ToGetSecretOpaquePtrOutput() GetSecretOpaquePtrOutput {
	return o
}

func (o GetSecretOpaquePtrOutput) ToGetSecretOpaquePtrOutputWithContext(ctx context.Context) GetSecretOpaquePtrOutput {
	return o
}

func (o GetSecretOpaquePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretOpaque] {
	return pulumix.Output[*GetSecretOpaque]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretOpaquePtrOutput) Elem() GetSecretOpaqueOutput {
	return o.ApplyT(func(v *GetSecretOpaque) GetSecretOpaque {
		if v != nil {
			return *v
		}
		var ret GetSecretOpaque
		return ret
	}).(GetSecretOpaqueOutput)
}

func (o GetSecretOpaquePtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretOpaque) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretOpaquePtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretOpaque) *string {
		if v == nil {
			return nil
		}
		return &v.Payload
	}).(pulumi.StringPtrOutput)
}

type GetSecretTls struct {
	Cert  string  `pulumi:"cert"`
	Chain *string `pulumi:"chain"`
	Key   string  `pulumi:"key"`
}

// GetSecretTlsInput is an input type that accepts GetSecretTlsArgs and GetSecretTlsOutput values.
// You can construct a concrete instance of `GetSecretTlsInput` via:
//
//	GetSecretTlsArgs{...}
type GetSecretTlsInput interface {
	pulumi.Input

	ToGetSecretTlsOutput() GetSecretTlsOutput
	ToGetSecretTlsOutputWithContext(context.Context) GetSecretTlsOutput
}

type GetSecretTlsArgs struct {
	Cert  pulumi.StringInput    `pulumi:"cert"`
	Chain pulumi.StringPtrInput `pulumi:"chain"`
	Key   pulumi.StringInput    `pulumi:"key"`
}

func (GetSecretTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTls)(nil)).Elem()
}

func (i GetSecretTlsArgs) ToGetSecretTlsOutput() GetSecretTlsOutput {
	return i.ToGetSecretTlsOutputWithContext(context.Background())
}

func (i GetSecretTlsArgs) ToGetSecretTlsOutputWithContext(ctx context.Context) GetSecretTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTlsOutput)
}

func (i GetSecretTlsArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretTls] {
	return pulumix.Output[GetSecretTls]{
		OutputState: i.ToGetSecretTlsOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretTlsArgs) ToGetSecretTlsPtrOutput() GetSecretTlsPtrOutput {
	return i.ToGetSecretTlsPtrOutputWithContext(context.Background())
}

func (i GetSecretTlsArgs) ToGetSecretTlsPtrOutputWithContext(ctx context.Context) GetSecretTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTlsOutput).ToGetSecretTlsPtrOutputWithContext(ctx)
}

// GetSecretTlsPtrInput is an input type that accepts GetSecretTlsArgs, GetSecretTlsPtr and GetSecretTlsPtrOutput values.
// You can construct a concrete instance of `GetSecretTlsPtrInput` via:
//
//	        GetSecretTlsArgs{...}
//
//	or:
//
//	        nil
type GetSecretTlsPtrInput interface {
	pulumi.Input

	ToGetSecretTlsPtrOutput() GetSecretTlsPtrOutput
	ToGetSecretTlsPtrOutputWithContext(context.Context) GetSecretTlsPtrOutput
}

type getSecretTlsPtrType GetSecretTlsArgs

func GetSecretTlsPtr(v *GetSecretTlsArgs) GetSecretTlsPtrInput {
	return (*getSecretTlsPtrType)(v)
}

func (*getSecretTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretTls)(nil)).Elem()
}

func (i *getSecretTlsPtrType) ToGetSecretTlsPtrOutput() GetSecretTlsPtrOutput {
	return i.ToGetSecretTlsPtrOutputWithContext(context.Background())
}

func (i *getSecretTlsPtrType) ToGetSecretTlsPtrOutputWithContext(ctx context.Context) GetSecretTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTlsPtrOutput)
}

func (i *getSecretTlsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretTls] {
	return pulumix.Output[*GetSecretTls]{
		OutputState: i.ToGetSecretTlsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretTlsOutput struct{ *pulumi.OutputState }

func (GetSecretTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTls)(nil)).Elem()
}

func (o GetSecretTlsOutput) ToGetSecretTlsOutput() GetSecretTlsOutput {
	return o
}

func (o GetSecretTlsOutput) ToGetSecretTlsOutputWithContext(ctx context.Context) GetSecretTlsOutput {
	return o
}

func (o GetSecretTlsOutput) ToGetSecretTlsPtrOutput() GetSecretTlsPtrOutput {
	return o.ToGetSecretTlsPtrOutputWithContext(context.Background())
}

func (o GetSecretTlsOutput) ToGetSecretTlsPtrOutputWithContext(ctx context.Context) GetSecretTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretTls) *GetSecretTls {
		return &v
	}).(GetSecretTlsPtrOutput)
}

func (o GetSecretTlsOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretTls] {
	return pulumix.Output[GetSecretTls]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretTlsOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretTls) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetSecretTlsOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretTls) *string { return v.Chain }).(pulumi.StringPtrOutput)
}

func (o GetSecretTlsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretTls) string { return v.Key }).(pulumi.StringOutput)
}

type GetSecretTlsPtrOutput struct{ *pulumi.OutputState }

func (GetSecretTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretTls)(nil)).Elem()
}

func (o GetSecretTlsPtrOutput) ToGetSecretTlsPtrOutput() GetSecretTlsPtrOutput {
	return o
}

func (o GetSecretTlsPtrOutput) ToGetSecretTlsPtrOutputWithContext(ctx context.Context) GetSecretTlsPtrOutput {
	return o
}

func (o GetSecretTlsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretTls] {
	return pulumix.Output[*GetSecretTls]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretTlsPtrOutput) Elem() GetSecretTlsOutput {
	return o.ApplyT(func(v *GetSecretTls) GetSecretTls {
		if v != nil {
			return *v
		}
		var ret GetSecretTls
		return ret
	}).(GetSecretTlsOutput)
}

func (o GetSecretTlsPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretTls) *string {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretTlsPtrOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretTls) *string {
		if v == nil {
			return nil
		}
		return v.Chain
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretTlsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretTls) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type GetSecretUserpass struct {
	Encoding *string `pulumi:"encoding"`
	Password string  `pulumi:"password"`
	Username string  `pulumi:"username"`
}

// GetSecretUserpassInput is an input type that accepts GetSecretUserpassArgs and GetSecretUserpassOutput values.
// You can construct a concrete instance of `GetSecretUserpassInput` via:
//
//	GetSecretUserpassArgs{...}
type GetSecretUserpassInput interface {
	pulumi.Input

	ToGetSecretUserpassOutput() GetSecretUserpassOutput
	ToGetSecretUserpassOutputWithContext(context.Context) GetSecretUserpassOutput
}

type GetSecretUserpassArgs struct {
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	Password pulumi.StringInput    `pulumi:"password"`
	Username pulumi.StringInput    `pulumi:"username"`
}

func (GetSecretUserpassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretUserpass)(nil)).Elem()
}

func (i GetSecretUserpassArgs) ToGetSecretUserpassOutput() GetSecretUserpassOutput {
	return i.ToGetSecretUserpassOutputWithContext(context.Background())
}

func (i GetSecretUserpassArgs) ToGetSecretUserpassOutputWithContext(ctx context.Context) GetSecretUserpassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretUserpassOutput)
}

func (i GetSecretUserpassArgs) ToOutput(ctx context.Context) pulumix.Output[GetSecretUserpass] {
	return pulumix.Output[GetSecretUserpass]{
		OutputState: i.ToGetSecretUserpassOutputWithContext(ctx).OutputState,
	}
}

func (i GetSecretUserpassArgs) ToGetSecretUserpassPtrOutput() GetSecretUserpassPtrOutput {
	return i.ToGetSecretUserpassPtrOutputWithContext(context.Background())
}

func (i GetSecretUserpassArgs) ToGetSecretUserpassPtrOutputWithContext(ctx context.Context) GetSecretUserpassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretUserpassOutput).ToGetSecretUserpassPtrOutputWithContext(ctx)
}

// GetSecretUserpassPtrInput is an input type that accepts GetSecretUserpassArgs, GetSecretUserpassPtr and GetSecretUserpassPtrOutput values.
// You can construct a concrete instance of `GetSecretUserpassPtrInput` via:
//
//	        GetSecretUserpassArgs{...}
//
//	or:
//
//	        nil
type GetSecretUserpassPtrInput interface {
	pulumi.Input

	ToGetSecretUserpassPtrOutput() GetSecretUserpassPtrOutput
	ToGetSecretUserpassPtrOutputWithContext(context.Context) GetSecretUserpassPtrOutput
}

type getSecretUserpassPtrType GetSecretUserpassArgs

func GetSecretUserpassPtr(v *GetSecretUserpassArgs) GetSecretUserpassPtrInput {
	return (*getSecretUserpassPtrType)(v)
}

func (*getSecretUserpassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretUserpass)(nil)).Elem()
}

func (i *getSecretUserpassPtrType) ToGetSecretUserpassPtrOutput() GetSecretUserpassPtrOutput {
	return i.ToGetSecretUserpassPtrOutputWithContext(context.Background())
}

func (i *getSecretUserpassPtrType) ToGetSecretUserpassPtrOutputWithContext(ctx context.Context) GetSecretUserpassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretUserpassPtrOutput)
}

func (i *getSecretUserpassPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetSecretUserpass] {
	return pulumix.Output[*GetSecretUserpass]{
		OutputState: i.ToGetSecretUserpassPtrOutputWithContext(ctx).OutputState,
	}
}

type GetSecretUserpassOutput struct{ *pulumi.OutputState }

func (GetSecretUserpassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretUserpass)(nil)).Elem()
}

func (o GetSecretUserpassOutput) ToGetSecretUserpassOutput() GetSecretUserpassOutput {
	return o
}

func (o GetSecretUserpassOutput) ToGetSecretUserpassOutputWithContext(ctx context.Context) GetSecretUserpassOutput {
	return o
}

func (o GetSecretUserpassOutput) ToGetSecretUserpassPtrOutput() GetSecretUserpassPtrOutput {
	return o.ToGetSecretUserpassPtrOutputWithContext(context.Background())
}

func (o GetSecretUserpassOutput) ToGetSecretUserpassPtrOutputWithContext(ctx context.Context) GetSecretUserpassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretUserpass) *GetSecretUserpass {
		return &v
	}).(GetSecretUserpassPtrOutput)
}

func (o GetSecretUserpassOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretUserpass] {
	return pulumix.Output[GetSecretUserpass]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretUserpassOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretUserpass) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o GetSecretUserpassOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretUserpass) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetSecretUserpassOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretUserpass) string { return v.Username }).(pulumi.StringOutput)
}

type GetSecretUserpassPtrOutput struct{ *pulumi.OutputState }

func (GetSecretUserpassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretUserpass)(nil)).Elem()
}

func (o GetSecretUserpassPtrOutput) ToGetSecretUserpassPtrOutput() GetSecretUserpassPtrOutput {
	return o
}

func (o GetSecretUserpassPtrOutput) ToGetSecretUserpassPtrOutputWithContext(ctx context.Context) GetSecretUserpassPtrOutput {
	return o
}

func (o GetSecretUserpassPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetSecretUserpass] {
	return pulumix.Output[*GetSecretUserpass]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretUserpassPtrOutput) Elem() GetSecretUserpassOutput {
	return o.ApplyT(func(v *GetSecretUserpass) GetSecretUserpass {
		if v != nil {
			return *v
		}
		var ret GetSecretUserpass
		return ret
	}).(GetSecretUserpassOutput)
}

func (o GetSecretUserpassPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretUserpass) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretUserpassPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretUserpass) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o GetSecretUserpassPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretUserpass) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAwsInput)(nil)).Elem(), CloudAccountAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAwsPtrInput)(nil)).Elem(), CloudAccountAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAzureInput)(nil)).Elem(), CloudAccountAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAzurePtrInput)(nil)).Elem(), CloudAccountAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountGcpInput)(nil)).Elem(), CloudAccountGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountGcpPtrInput)(nil)).Elem(), CloudAccountGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountNgsInput)(nil)).Elem(), CloudAccountNgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountNgsPtrInput)(nil)).Elem(), CloudAccountNgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRouteHeadersInput)(nil)).Elem(), DomainRouteHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRouteHeadersPtrInput)(nil)).Elem(), DomainRouteHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRouteHeadersRequestInput)(nil)).Elem(), DomainRouteHeadersRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRouteHeadersRequestPtrInput)(nil)).Elem(), DomainRouteHeadersRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecInput)(nil)).Elem(), DomainSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPtrInput)(nil)).Elem(), DomainSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortInput)(nil)).Elem(), DomainSpecPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortArrayInput)(nil)).Elem(), DomainSpecPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsInput)(nil)).Elem(), DomainSpecPortCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsPtrInput)(nil)).Elem(), DomainSpecPortCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsAllowOriginInput)(nil)).Elem(), DomainSpecPortCorsAllowOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsAllowOriginArrayInput)(nil)).Elem(), DomainSpecPortCorsAllowOriginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsInput)(nil)).Elem(), DomainSpecPortTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsClientCertificateInput)(nil)).Elem(), DomainSpecPortTlsClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsClientCertificatePtrInput)(nil)).Elem(), DomainSpecPortTlsClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsServerCertificateInput)(nil)).Elem(), DomainSpecPortTlsServerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsServerCertificatePtrInput)(nil)).Elem(), DomainSpecPortTlsServerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusInput)(nil)).Elem(), DomainStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusArrayInput)(nil)).Elem(), DomainStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusDnsConfigInput)(nil)).Elem(), DomainStatusDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusDnsConfigArrayInput)(nil)).Elem(), DomainStatusDnsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusEndpointInput)(nil)).Elem(), DomainStatusEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusEndpointArrayInput)(nil)).Elem(), DomainStatusEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusLocationInput)(nil)).Elem(), DomainStatusLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusLocationArrayInput)(nil)).Elem(), DomainStatusLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupIdentityMatcherInput)(nil)).Elem(), GroupIdentityMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupIdentityMatcherPtrInput)(nil)).Elem(), GroupIdentityMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQueryInput)(nil)).Elem(), GroupMemberQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQueryPtrInput)(nil)).Elem(), GroupMemberQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecInput)(nil)).Elem(), GroupMemberQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecPtrInput)(nil)).Elem(), GroupMemberQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecTermInput)(nil)).Elem(), GroupMemberQuerySpecTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecTermArrayInput)(nil)).Elem(), GroupMemberQuerySpecTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcControlplaneTracingInput)(nil)).Elem(), GvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcControlplaneTracingPtrInput)(nil)).Elem(), GvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLightstepTracingInput)(nil)).Elem(), GvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLightstepTracingPtrInput)(nil)).Elem(), GvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerInput)(nil)).Elem(), GvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerPtrInput)(nil)).Elem(), GvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerRedirectInput)(nil)).Elem(), GvcLoadBalancerRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerRedirectPtrInput)(nil)).Elem(), GvcLoadBalancerRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerRedirectClassInput)(nil)).Elem(), GvcLoadBalancerRedirectClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerRedirectClassPtrInput)(nil)).Elem(), GvcLoadBalancerRedirectClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcOtelTracingInput)(nil)).Elem(), GvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcOtelTracingPtrInput)(nil)).Elem(), GvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcSidecarInput)(nil)).Elem(), GvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcSidecarPtrInput)(nil)).Elem(), GvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAccessPolicyInput)(nil)).Elem(), IdentityAwsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAccessPolicyPtrInput)(nil)).Elem(), IdentityAwsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyInput)(nil)).Elem(), IdentityAzureAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyPtrInput)(nil)).Elem(), IdentityAzureAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignmentInput)(nil)).Elem(), IdentityAzureAccessPolicyRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignmentArrayInput)(nil)).Elem(), IdentityAzureAccessPolicyRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyInput)(nil)).Elem(), IdentityGcpAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyPtrInput)(nil)).Elem(), IdentityGcpAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyBindingInput)(nil)).Elem(), IdentityGcpAccessPolicyBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyBindingArrayInput)(nil)).Elem(), IdentityGcpAccessPolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceInput)(nil)).Elem(), IdentityNativeNetworkResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceArrayInput)(nil)).Elem(), IdentityNativeNetworkResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLinkInput)(nil)).Elem(), IdentityNativeNetworkResourceAwsPrivateLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLinkPtrInput)(nil)).Elem(), IdentityNativeNetworkResourceAwsPrivateLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnectInput)(nil)).Elem(), IdentityNativeNetworkResourceGcpServiceConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnectPtrInput)(nil)).Elem(), IdentityNativeNetworkResourceGcpServiceConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNetworkResourceInput)(nil)).Elem(), IdentityNetworkResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNetworkResourceArrayInput)(nil)).Elem(), IdentityNetworkResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyInput)(nil)).Elem(), IdentityNgsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyPtrInput)(nil)).Elem(), IdentityNgsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyPubInput)(nil)).Elem(), IdentityNgsAccessPolicyPubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyPubPtrInput)(nil)).Elem(), IdentityNgsAccessPolicyPubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyRespInput)(nil)).Elem(), IdentityNgsAccessPolicyRespArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyRespPtrInput)(nil)).Elem(), IdentityNgsAccessPolicyRespArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicySubInput)(nil)).Elem(), IdentityNgsAccessPolicySubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicySubPtrInput)(nil)).Elem(), IdentityNgsAccessPolicySubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetLocationInput)(nil)).Elem(), IpSetLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetLocationArrayInput)(nil)).Elem(), IpSetLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetStatusInput)(nil)).Elem(), IpSetStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetStatusArrayInput)(nil)).Elem(), IpSetStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetStatusIpAddressInput)(nil)).Elem(), IpSetStatusIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetStatusIpAddressArrayInput)(nil)).Elem(), IpSetStatusIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocationGeoInput)(nil)).Elem(), LocationGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocationGeoArrayInput)(nil)).Elem(), LocationGeoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsInput)(nil)).Elem(), Mk8sAddOnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsPtrInput)(nil)).Elem(), Mk8sAddOnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAwsEcrInput)(nil)).Elem(), Mk8sAddOnsAwsEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAwsEcrPtrInput)(nil)).Elem(), Mk8sAddOnsAwsEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAwsEfsInput)(nil)).Elem(), Mk8sAddOnsAwsEfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAwsEfsPtrInput)(nil)).Elem(), Mk8sAddOnsAwsEfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAwsElbInput)(nil)).Elem(), Mk8sAddOnsAwsElbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAwsElbPtrInput)(nil)).Elem(), Mk8sAddOnsAwsElbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAzureAcrInput)(nil)).Elem(), Mk8sAddOnsAzureAcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAzureAcrPtrInput)(nil)).Elem(), Mk8sAddOnsAzureAcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAzureWorkloadIdentityInput)(nil)).Elem(), Mk8sAddOnsAzureWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsAzureWorkloadIdentityPtrInput)(nil)).Elem(), Mk8sAddOnsAzureWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsLogsInput)(nil)).Elem(), Mk8sAddOnsLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsLogsPtrInput)(nil)).Elem(), Mk8sAddOnsLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsMetricsInput)(nil)).Elem(), Mk8sAddOnsMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsMetricsPtrInput)(nil)).Elem(), Mk8sAddOnsMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsMetricsScrapeAnnotatedInput)(nil)).Elem(), Mk8sAddOnsMetricsScrapeAnnotatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsMetricsScrapeAnnotatedPtrInput)(nil)).Elem(), Mk8sAddOnsMetricsScrapeAnnotatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsNvidiaInput)(nil)).Elem(), Mk8sAddOnsNvidiaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAddOnsNvidiaPtrInput)(nil)).Elem(), Mk8sAddOnsNvidiaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderInput)(nil)).Elem(), Mk8sAwsProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderPtrInput)(nil)).Elem(), Mk8sAwsProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderAutoscalerInput)(nil)).Elem(), Mk8sAwsProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sAwsProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderDeployRoleChainInput)(nil)).Elem(), Mk8sAwsProviderDeployRoleChainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderDeployRoleChainArrayInput)(nil)).Elem(), Mk8sAwsProviderDeployRoleChainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderImageInput)(nil)).Elem(), Mk8sAwsProviderImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderImagePtrInput)(nil)).Elem(), Mk8sAwsProviderImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderNetworkingInput)(nil)).Elem(), Mk8sAwsProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderNetworkingPtrInput)(nil)).Elem(), Mk8sAwsProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderNodePoolInput)(nil)).Elem(), Mk8sAwsProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderNodePoolArrayInput)(nil)).Elem(), Mk8sAwsProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderNodePoolOverrideImageInput)(nil)).Elem(), Mk8sAwsProviderNodePoolOverrideImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderNodePoolTaintInput)(nil)).Elem(), Mk8sAwsProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sAwsProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sAwsProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderInput)(nil)).Elem(), Mk8sDigitalOceanProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderPtrInput)(nil)).Elem(), Mk8sDigitalOceanProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderAutoscalerInput)(nil)).Elem(), Mk8sDigitalOceanProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sDigitalOceanProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderNetworkingInput)(nil)).Elem(), Mk8sDigitalOceanProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderNetworkingPtrInput)(nil)).Elem(), Mk8sDigitalOceanProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderNodePoolInput)(nil)).Elem(), Mk8sDigitalOceanProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderNodePoolArrayInput)(nil)).Elem(), Mk8sDigitalOceanProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderNodePoolTaintInput)(nil)).Elem(), Mk8sDigitalOceanProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sDigitalOceanProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sDigitalOceanProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sEphemeralProviderInput)(nil)).Elem(), Mk8sEphemeralProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sEphemeralProviderPtrInput)(nil)).Elem(), Mk8sEphemeralProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sEphemeralProviderNodePoolInput)(nil)).Elem(), Mk8sEphemeralProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sEphemeralProviderNodePoolArrayInput)(nil)).Elem(), Mk8sEphemeralProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sEphemeralProviderNodePoolTaintInput)(nil)).Elem(), Mk8sEphemeralProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sEphemeralProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sEphemeralProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sFirewallInput)(nil)).Elem(), Mk8sFirewallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sFirewallArrayInput)(nil)).Elem(), Mk8sFirewallArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderInput)(nil)).Elem(), Mk8sGenericProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderPtrInput)(nil)).Elem(), Mk8sGenericProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderNetworkingInput)(nil)).Elem(), Mk8sGenericProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderNetworkingPtrInput)(nil)).Elem(), Mk8sGenericProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderNodePoolInput)(nil)).Elem(), Mk8sGenericProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderNodePoolArrayInput)(nil)).Elem(), Mk8sGenericProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderNodePoolTaintInput)(nil)).Elem(), Mk8sGenericProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sGenericProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sGenericProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderInput)(nil)).Elem(), Mk8sHetznerProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderPtrInput)(nil)).Elem(), Mk8sHetznerProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderAutoscalerInput)(nil)).Elem(), Mk8sHetznerProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sHetznerProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePoolInput)(nil)).Elem(), Mk8sHetznerProviderDedicatedServerNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePoolArrayInput)(nil)).Elem(), Mk8sHetznerProviderDedicatedServerNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePoolTaintInput)(nil)).Elem(), Mk8sHetznerProviderDedicatedServerNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayInput)(nil)).Elem(), Mk8sHetznerProviderDedicatedServerNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderNetworkingInput)(nil)).Elem(), Mk8sHetznerProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderNetworkingPtrInput)(nil)).Elem(), Mk8sHetznerProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderNodePoolInput)(nil)).Elem(), Mk8sHetznerProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderNodePoolArrayInput)(nil)).Elem(), Mk8sHetznerProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderNodePoolTaintInput)(nil)).Elem(), Mk8sHetznerProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sHetznerProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sHetznerProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderInput)(nil)).Elem(), Mk8sLambdalabsProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderPtrInput)(nil)).Elem(), Mk8sLambdalabsProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderAutoscalerInput)(nil)).Elem(), Mk8sLambdalabsProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sLambdalabsProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderNodePoolInput)(nil)).Elem(), Mk8sLambdalabsProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderNodePoolArrayInput)(nil)).Elem(), Mk8sLambdalabsProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderNodePoolTaintInput)(nil)).Elem(), Mk8sLambdalabsProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sLambdalabsProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePoolInput)(nil)).Elem(), Mk8sLambdalabsProviderUnmanagedNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePoolArrayInput)(nil)).Elem(), Mk8sLambdalabsProviderUnmanagedNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePoolTaintInput)(nil)).Elem(), Mk8sLambdalabsProviderUnmanagedNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayInput)(nil)).Elem(), Mk8sLambdalabsProviderUnmanagedNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderInput)(nil)).Elem(), Mk8sLinodeProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderPtrInput)(nil)).Elem(), Mk8sLinodeProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderAutoscalerInput)(nil)).Elem(), Mk8sLinodeProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sLinodeProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderNetworkingInput)(nil)).Elem(), Mk8sLinodeProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderNetworkingPtrInput)(nil)).Elem(), Mk8sLinodeProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderNodePoolInput)(nil)).Elem(), Mk8sLinodeProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderNodePoolArrayInput)(nil)).Elem(), Mk8sLinodeProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderNodePoolTaintInput)(nil)).Elem(), Mk8sLinodeProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sLinodeProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sLinodeProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderInput)(nil)).Elem(), Mk8sOblivusProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderPtrInput)(nil)).Elem(), Mk8sOblivusProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderAutoscalerInput)(nil)).Elem(), Mk8sOblivusProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sOblivusProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderNodePoolInput)(nil)).Elem(), Mk8sOblivusProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderNodePoolArrayInput)(nil)).Elem(), Mk8sOblivusProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderNodePoolTaintInput)(nil)).Elem(), Mk8sOblivusProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sOblivusProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePoolInput)(nil)).Elem(), Mk8sOblivusProviderUnmanagedNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePoolArrayInput)(nil)).Elem(), Mk8sOblivusProviderUnmanagedNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePoolTaintInput)(nil)).Elem(), Mk8sOblivusProviderUnmanagedNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sOblivusProviderUnmanagedNodePoolTaintArrayInput)(nil)).Elem(), Mk8sOblivusProviderUnmanagedNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderInput)(nil)).Elem(), Mk8sPaperspaceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderPtrInput)(nil)).Elem(), Mk8sPaperspaceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderAutoscalerInput)(nil)).Elem(), Mk8sPaperspaceProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sPaperspaceProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderNodePoolInput)(nil)).Elem(), Mk8sPaperspaceProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderNodePoolArrayInput)(nil)).Elem(), Mk8sPaperspaceProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderNodePoolTaintInput)(nil)).Elem(), Mk8sPaperspaceProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sPaperspaceProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePoolInput)(nil)).Elem(), Mk8sPaperspaceProviderUnmanagedNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePoolArrayInput)(nil)).Elem(), Mk8sPaperspaceProviderUnmanagedNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePoolTaintInput)(nil)).Elem(), Mk8sPaperspaceProviderUnmanagedNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayInput)(nil)).Elem(), Mk8sPaperspaceProviderUnmanagedNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusInput)(nil)).Elem(), Mk8sStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusArrayInput)(nil)).Elem(), Mk8sStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnInput)(nil)).Elem(), Mk8sStatusAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnArrayInput)(nil)).Elem(), Mk8sStatusAddOnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsEcrInput)(nil)).Elem(), Mk8sStatusAddOnAwsEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsEcrArrayInput)(nil)).Elem(), Mk8sStatusAddOnAwsEcrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsEfInput)(nil)).Elem(), Mk8sStatusAddOnAwsEfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsEfArrayInput)(nil)).Elem(), Mk8sStatusAddOnAwsEfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsElbInput)(nil)).Elem(), Mk8sStatusAddOnAwsElbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsElbArrayInput)(nil)).Elem(), Mk8sStatusAddOnAwsElbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentityInput)(nil)).Elem(), Mk8sStatusAddOnAwsWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentityArrayInput)(nil)).Elem(), Mk8sStatusAddOnAwsWorkloadIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigInput)(nil)).Elem(), Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayInput)(nil)).Elem(), Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnDashboardInput)(nil)).Elem(), Mk8sStatusAddOnDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnDashboardArrayInput)(nil)).Elem(), Mk8sStatusAddOnDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnLogInput)(nil)).Elem(), Mk8sStatusAddOnLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnLogArrayInput)(nil)).Elem(), Mk8sStatusAddOnLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnMetricInput)(nil)).Elem(), Mk8sStatusAddOnMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sStatusAddOnMetricArrayInput)(nil)).Elem(), Mk8sStatusAddOnMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderInput)(nil)).Elem(), Mk8sTritonProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderPtrInput)(nil)).Elem(), Mk8sTritonProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderAutoscalerInput)(nil)).Elem(), Mk8sTritonProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderAutoscalerPtrInput)(nil)).Elem(), Mk8sTritonProviderAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderConnectionInput)(nil)).Elem(), Mk8sTritonProviderConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderConnectionPtrInput)(nil)).Elem(), Mk8sTritonProviderConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderNetworkingInput)(nil)).Elem(), Mk8sTritonProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderNetworkingPtrInput)(nil)).Elem(), Mk8sTritonProviderNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderNodePoolInput)(nil)).Elem(), Mk8sTritonProviderNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderNodePoolArrayInput)(nil)).Elem(), Mk8sTritonProviderNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderNodePoolTaintInput)(nil)).Elem(), Mk8sTritonProviderNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Mk8sTritonProviderNodePoolTaintArrayInput)(nil)).Elem(), Mk8sTritonProviderNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgAuthConfigInput)(nil)).Elem(), OrgAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgAuthConfigPtrInput)(nil)).Elem(), OrgAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCloudWatchLoggingInput)(nil)).Elem(), OrgLoggingCloudWatchLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCloudWatchLoggingArrayInput)(nil)).Elem(), OrgLoggingCloudWatchLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCoralogixLoggingInput)(nil)).Elem(), OrgLoggingCoralogixLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCoralogixLoggingArrayInput)(nil)).Elem(), OrgLoggingCoralogixLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingDatadogLoggingInput)(nil)).Elem(), OrgLoggingDatadogLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingDatadogLoggingArrayInput)(nil)).Elem(), OrgLoggingDatadogLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingInput)(nil)).Elem(), OrgLoggingElasticLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingArrayInput)(nil)).Elem(), OrgLoggingElasticLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingAwsInput)(nil)).Elem(), OrgLoggingElasticLoggingAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingAwsPtrInput)(nil)).Elem(), OrgLoggingElasticLoggingAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloudInput)(nil)).Elem(), OrgLoggingElasticLoggingElasticCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloudPtrInput)(nil)).Elem(), OrgLoggingElasticLoggingElasticCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingGenericInput)(nil)).Elem(), OrgLoggingElasticLoggingGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingGenericPtrInput)(nil)).Elem(), OrgLoggingElasticLoggingGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingFluentdLoggingInput)(nil)).Elem(), OrgLoggingFluentdLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingFluentdLoggingArrayInput)(nil)).Elem(), OrgLoggingFluentdLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingLogzioLoggingInput)(nil)).Elem(), OrgLoggingLogzioLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingLogzioLoggingArrayInput)(nil)).Elem(), OrgLoggingLogzioLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingS3LoggingInput)(nil)).Elem(), OrgLoggingS3LoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingS3LoggingArrayInput)(nil)).Elem(), OrgLoggingS3LoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingStackdriverLoggingInput)(nil)).Elem(), OrgLoggingStackdriverLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingStackdriverLoggingArrayInput)(nil)).Elem(), OrgLoggingStackdriverLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingSyslogLoggingInput)(nil)).Elem(), OrgLoggingSyslogLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingSyslogLoggingArrayInput)(nil)).Elem(), OrgLoggingSyslogLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgObservabilityInput)(nil)).Elem(), OrgObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgObservabilityPtrInput)(nil)).Elem(), OrgObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgSecurityInput)(nil)).Elem(), OrgSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgSecurityPtrInput)(nil)).Elem(), OrgSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgSecurityThreatDetectionInput)(nil)).Elem(), OrgSecurityThreatDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgSecurityThreatDetectionPtrInput)(nil)).Elem(), OrgSecurityThreatDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgSecurityThreatDetectionSyslogInput)(nil)).Elem(), OrgSecurityThreatDetectionSyslogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgSecurityThreatDetectionSyslogPtrInput)(nil)).Elem(), OrgSecurityThreatDetectionSyslogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgStatusInput)(nil)).Elem(), OrgStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgStatusArrayInput)(nil)).Elem(), OrgStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingControlplaneTracingInput)(nil)).Elem(), OrgTracingControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingControlplaneTracingPtrInput)(nil)).Elem(), OrgTracingControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingLightstepTracingInput)(nil)).Elem(), OrgTracingLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingLightstepTracingPtrInput)(nil)).Elem(), OrgTracingLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingOtelTracingInput)(nil)).Elem(), OrgTracingOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingOtelTracingPtrInput)(nil)).Elem(), OrgTracingOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingInput)(nil)).Elem(), PolicyBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingArrayInput)(nil)).Elem(), PolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQueryInput)(nil)).Elem(), PolicyTargetQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQueryPtrInput)(nil)).Elem(), PolicyTargetQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecInput)(nil)).Elem(), PolicyTargetQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecPtrInput)(nil)).Elem(), PolicyTargetQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecTermInput)(nil)).Elem(), PolicyTargetQuerySpecTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecTermArrayInput)(nil)).Elem(), PolicyTargetQuerySpecTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAwsInput)(nil)).Elem(), SecretAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAwsPtrInput)(nil)).Elem(), SecretAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAzureConnectorInput)(nil)).Elem(), SecretAzureConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAzureConnectorPtrInput)(nil)).Elem(), SecretAzureConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretEcrInput)(nil)).Elem(), SecretEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretEcrPtrInput)(nil)).Elem(), SecretEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretKeypairInput)(nil)).Elem(), SecretKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretKeypairPtrInput)(nil)).Elem(), SecretKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretNatsAccountInput)(nil)).Elem(), SecretNatsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretNatsAccountPtrInput)(nil)).Elem(), SecretNatsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretOpaqueInput)(nil)).Elem(), SecretOpaqueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretOpaquePtrInput)(nil)).Elem(), SecretOpaqueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTlsInput)(nil)).Elem(), SecretTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTlsPtrInput)(nil)).Elem(), SecretTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretUserpassInput)(nil)).Elem(), SecretUserpassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretUserpassPtrInput)(nil)).Elem(), SecretUserpassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetAutoscalingInput)(nil)).Elem(), VolumeSetAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetAutoscalingPtrInput)(nil)).Elem(), VolumeSetAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetSnapshotsInput)(nil)).Elem(), VolumeSetSnapshotsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetSnapshotsPtrInput)(nil)).Elem(), VolumeSetSnapshotsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetStatusInput)(nil)).Elem(), VolumeSetStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetStatusArrayInput)(nil)).Elem(), VolumeSetStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerInput)(nil)).Elem(), WorkloadContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerArrayInput)(nil)).Elem(), WorkloadContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerGpuNvidiaInput)(nil)).Elem(), WorkloadContainerGpuNvidiaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerGpuNvidiaPtrInput)(nil)).Elem(), WorkloadContainerGpuNvidiaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecycleInput)(nil)).Elem(), WorkloadContainerLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePtrInput)(nil)).Elem(), WorkloadContainerLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartExecInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartExecPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopExecInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopExecPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeInput)(nil)).Elem(), WorkloadContainerLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbePtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeExecInput)(nil)).Elem(), WorkloadContainerLivenessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeExecPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeGrpcInput)(nil)).Elem(), WorkloadContainerLivenessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeGrpcPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGetInput)(nil)).Elem(), WorkloadContainerLivenessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGetPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocketInput)(nil)).Elem(), WorkloadContainerLivenessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocketPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerMetricsInput)(nil)).Elem(), WorkloadContainerMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerMetricsPtrInput)(nil)).Elem(), WorkloadContainerMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerPortInput)(nil)).Elem(), WorkloadContainerPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerPortArrayInput)(nil)).Elem(), WorkloadContainerPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeInput)(nil)).Elem(), WorkloadContainerReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbePtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeExecInput)(nil)).Elem(), WorkloadContainerReadinessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeExecPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeGrpcInput)(nil)).Elem(), WorkloadContainerReadinessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeGrpcPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGetInput)(nil)).Elem(), WorkloadContainerReadinessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGetPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocketInput)(nil)).Elem(), WorkloadContainerReadinessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocketPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerVolumeInput)(nil)).Elem(), WorkloadContainerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerVolumeArrayInput)(nil)).Elem(), WorkloadContainerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecInput)(nil)).Elem(), WorkloadFirewallSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecPtrInput)(nil)).Elem(), WorkloadFirewallSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalInput)(nil)).Elem(), WorkloadFirewallSpecExternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalPtrInput)(nil)).Elem(), WorkloadFirewallSpecExternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPortInput)(nil)).Elem(), WorkloadFirewallSpecExternalOutboundAllowPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPortArrayInput)(nil)).Elem(), WorkloadFirewallSpecExternalOutboundAllowPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecInternalInput)(nil)).Elem(), WorkloadFirewallSpecInternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecInternalPtrInput)(nil)).Elem(), WorkloadFirewallSpecInternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadJobInput)(nil)).Elem(), WorkloadJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadJobPtrInput)(nil)).Elem(), WorkloadJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerInput)(nil)).Elem(), WorkloadLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerPtrInput)(nil)).Elem(), WorkloadLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerDirectInput)(nil)).Elem(), WorkloadLoadBalancerDirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerDirectPtrInput)(nil)).Elem(), WorkloadLoadBalancerDirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerDirectPortInput)(nil)).Elem(), WorkloadLoadBalancerDirectPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerDirectPortArrayInput)(nil)).Elem(), WorkloadLoadBalancerDirectPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerGeoLocationInput)(nil)).Elem(), WorkloadLoadBalancerGeoLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerGeoLocationPtrInput)(nil)).Elem(), WorkloadLoadBalancerGeoLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerGeoLocationHeadersInput)(nil)).Elem(), WorkloadLoadBalancerGeoLocationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLoadBalancerGeoLocationHeadersPtrInput)(nil)).Elem(), WorkloadLoadBalancerGeoLocationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionInput)(nil)).Elem(), WorkloadLocalOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionArrayInput)(nil)).Elem(), WorkloadLocalOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionAutoscalingInput)(nil)).Elem(), WorkloadLocalOptionAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionAutoscalingPtrInput)(nil)).Elem(), WorkloadLocalOptionAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsInput)(nil)).Elem(), WorkloadOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsPtrInput)(nil)).Elem(), WorkloadOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsAutoscalingInput)(nil)).Elem(), WorkloadOptionsAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsAutoscalingPtrInput)(nil)).Elem(), WorkloadOptionsAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadRolloutOptionsInput)(nil)).Elem(), WorkloadRolloutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadRolloutOptionsPtrInput)(nil)).Elem(), WorkloadRolloutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSecurityOptionsInput)(nil)).Elem(), WorkloadSecurityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSecurityOptionsPtrInput)(nil)).Elem(), WorkloadSecurityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSidecarInput)(nil)).Elem(), WorkloadSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSidecarPtrInput)(nil)).Elem(), WorkloadSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusInput)(nil)).Elem(), WorkloadStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusArrayInput)(nil)).Elem(), WorkloadStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusHealthCheckInput)(nil)).Elem(), WorkloadStatusHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusHealthCheckArrayInput)(nil)).Elem(), WorkloadStatusHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusLoadBalancerInput)(nil)).Elem(), WorkloadStatusLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusLoadBalancerArrayInput)(nil)).Elem(), WorkloadStatusLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageInput)(nil)).Elem(), WorkloadStatusResolvedImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageArrayInput)(nil)).Elem(), WorkloadStatusResolvedImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageInput)(nil)).Elem(), WorkloadStatusResolvedImageImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageArrayInput)(nil)).Elem(), WorkloadStatusResolvedImageImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageManifestInput)(nil)).Elem(), WorkloadStatusResolvedImageImageManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageManifestArrayInput)(nil)).Elem(), WorkloadStatusResolvedImageImageManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcControlplaneTracingInput)(nil)).Elem(), GetGvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcControlplaneTracingPtrInput)(nil)).Elem(), GetGvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLightstepTracingInput)(nil)).Elem(), GetGvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLightstepTracingPtrInput)(nil)).Elem(), GetGvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerInput)(nil)).Elem(), GetGvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerPtrInput)(nil)).Elem(), GetGvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerRedirectInput)(nil)).Elem(), GetGvcLoadBalancerRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerRedirectPtrInput)(nil)).Elem(), GetGvcLoadBalancerRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerRedirectClassInput)(nil)).Elem(), GetGvcLoadBalancerRedirectClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerRedirectClassPtrInput)(nil)).Elem(), GetGvcLoadBalancerRedirectClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcOtelTracingInput)(nil)).Elem(), GetGvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcOtelTracingPtrInput)(nil)).Elem(), GetGvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcSidecarInput)(nil)).Elem(), GetGvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcSidecarPtrInput)(nil)).Elem(), GetGvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestInput)(nil)).Elem(), GetImageManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestArrayInput)(nil)).Elem(), GetImageManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestConfigInput)(nil)).Elem(), GetImageManifestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestConfigArrayInput)(nil)).Elem(), GetImageManifestConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestLayerInput)(nil)).Elem(), GetImageManifestLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestLayerArrayInput)(nil)).Elem(), GetImageManifestLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestInput)(nil)).Elem(), GetImagesImageManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestArrayInput)(nil)).Elem(), GetImagesImageManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestConfigInput)(nil)).Elem(), GetImagesImageManifestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestConfigArrayInput)(nil)).Elem(), GetImagesImageManifestConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestLayerInput)(nil)).Elem(), GetImagesImageManifestLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestLayerArrayInput)(nil)).Elem(), GetImagesImageManifestLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQueryInput)(nil)).Elem(), GetImagesQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQueryPtrInput)(nil)).Elem(), GetImagesQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecInput)(nil)).Elem(), GetImagesQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecPtrInput)(nil)).Elem(), GetImagesQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecTermInput)(nil)).Elem(), GetImagesQuerySpecTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecTermArrayInput)(nil)).Elem(), GetImagesQuerySpecTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGeoInput)(nil)).Elem(), GetLocationGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGeoArrayInput)(nil)).Elem(), GetLocationGeoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationInput)(nil)).Elem(), GetLocationsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationArrayInput)(nil)).Elem(), GetLocationsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationGeoInput)(nil)).Elem(), GetLocationsLocationGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationGeoArrayInput)(nil)).Elem(), GetLocationsLocationGeoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretAwsInput)(nil)).Elem(), GetSecretAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretAwsPtrInput)(nil)).Elem(), GetSecretAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretAzureConnectorInput)(nil)).Elem(), GetSecretAzureConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretAzureConnectorPtrInput)(nil)).Elem(), GetSecretAzureConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretEcrInput)(nil)).Elem(), GetSecretEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretEcrPtrInput)(nil)).Elem(), GetSecretEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretKeypairInput)(nil)).Elem(), GetSecretKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretKeypairPtrInput)(nil)).Elem(), GetSecretKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretNatsAccountInput)(nil)).Elem(), GetSecretNatsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretNatsAccountPtrInput)(nil)).Elem(), GetSecretNatsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretOpaqueInput)(nil)).Elem(), GetSecretOpaqueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretOpaquePtrInput)(nil)).Elem(), GetSecretOpaqueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretTlsInput)(nil)).Elem(), GetSecretTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretTlsPtrInput)(nil)).Elem(), GetSecretTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretUserpassInput)(nil)).Elem(), GetSecretUserpassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretUserpassPtrInput)(nil)).Elem(), GetSecretUserpassArgs{})
	pulumi.RegisterOutputType(CloudAccountAwsOutput{})
	pulumi.RegisterOutputType(CloudAccountAwsPtrOutput{})
	pulumi.RegisterOutputType(CloudAccountAzureOutput{})
	pulumi.RegisterOutputType(CloudAccountAzurePtrOutput{})
	pulumi.RegisterOutputType(CloudAccountGcpOutput{})
	pulumi.RegisterOutputType(CloudAccountGcpPtrOutput{})
	pulumi.RegisterOutputType(CloudAccountNgsOutput{})
	pulumi.RegisterOutputType(CloudAccountNgsPtrOutput{})
	pulumi.RegisterOutputType(DomainRouteHeadersOutput{})
	pulumi.RegisterOutputType(DomainRouteHeadersPtrOutput{})
	pulumi.RegisterOutputType(DomainRouteHeadersRequestOutput{})
	pulumi.RegisterOutputType(DomainRouteHeadersRequestPtrOutput{})
	pulumi.RegisterOutputType(DomainSpecOutput{})
	pulumi.RegisterOutputType(DomainSpecPtrOutput{})
	pulumi.RegisterOutputType(DomainSpecPortOutput{})
	pulumi.RegisterOutputType(DomainSpecPortArrayOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsPtrOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsAllowOriginOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsAllowOriginArrayOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsClientCertificateOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsServerCertificateOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsServerCertificatePtrOutput{})
	pulumi.RegisterOutputType(DomainStatusOutput{})
	pulumi.RegisterOutputType(DomainStatusArrayOutput{})
	pulumi.RegisterOutputType(DomainStatusDnsConfigOutput{})
	pulumi.RegisterOutputType(DomainStatusDnsConfigArrayOutput{})
	pulumi.RegisterOutputType(DomainStatusEndpointOutput{})
	pulumi.RegisterOutputType(DomainStatusEndpointArrayOutput{})
	pulumi.RegisterOutputType(DomainStatusLocationOutput{})
	pulumi.RegisterOutputType(DomainStatusLocationArrayOutput{})
	pulumi.RegisterOutputType(GroupIdentityMatcherOutput{})
	pulumi.RegisterOutputType(GroupIdentityMatcherPtrOutput{})
	pulumi.RegisterOutputType(GroupMemberQueryOutput{})
	pulumi.RegisterOutputType(GroupMemberQueryPtrOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecPtrOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecTermOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecTermArrayOutput{})
	pulumi.RegisterOutputType(GvcControlplaneTracingOutput{})
	pulumi.RegisterOutputType(GvcControlplaneTracingPtrOutput{})
	pulumi.RegisterOutputType(GvcLightstepTracingOutput{})
	pulumi.RegisterOutputType(GvcLightstepTracingPtrOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerRedirectOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerRedirectPtrOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerRedirectClassOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerRedirectClassPtrOutput{})
	pulumi.RegisterOutputType(GvcOtelTracingOutput{})
	pulumi.RegisterOutputType(GvcOtelTracingPtrOutput{})
	pulumi.RegisterOutputType(GvcSidecarOutput{})
	pulumi.RegisterOutputType(GvcSidecarPtrOutput{})
	pulumi.RegisterOutputType(IdentityAwsAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityAwsAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyRoleAssignmentOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyBindingOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceArrayOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceAwsPrivateLinkOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceGcpServiceConnectOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput{})
	pulumi.RegisterOutputType(IdentityNetworkResourceOutput{})
	pulumi.RegisterOutputType(IdentityNetworkResourceArrayOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyPubOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyPubPtrOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyRespOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyRespPtrOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicySubOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicySubPtrOutput{})
	pulumi.RegisterOutputType(IpSetLocationOutput{})
	pulumi.RegisterOutputType(IpSetLocationArrayOutput{})
	pulumi.RegisterOutputType(IpSetStatusOutput{})
	pulumi.RegisterOutputType(IpSetStatusArrayOutput{})
	pulumi.RegisterOutputType(IpSetStatusIpAddressOutput{})
	pulumi.RegisterOutputType(IpSetStatusIpAddressArrayOutput{})
	pulumi.RegisterOutputType(LocationGeoOutput{})
	pulumi.RegisterOutputType(LocationGeoArrayOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAwsEcrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAwsEcrPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAwsEfsOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAwsEfsPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAwsElbOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAwsElbPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAzureAcrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAzureAcrPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAzureWorkloadIdentityOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsAzureWorkloadIdentityPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsLogsOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsLogsPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsMetricsOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsMetricsPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsMetricsScrapeAnnotatedOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsMetricsScrapeAnnotatedPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsNvidiaOutput{})
	pulumi.RegisterOutputType(Mk8sAddOnsNvidiaPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderDeployRoleChainOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderDeployRoleChainArrayOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderImageOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderImagePtrOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderNetworkingOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderNetworkingPtrOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderNodePoolOverrideImageOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sAwsProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderNetworkingOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderNetworkingPtrOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sDigitalOceanProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sEphemeralProviderOutput{})
	pulumi.RegisterOutputType(Mk8sEphemeralProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sEphemeralProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sEphemeralProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sEphemeralProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sEphemeralProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sFirewallOutput{})
	pulumi.RegisterOutputType(Mk8sFirewallArrayOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderNetworkingOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderNetworkingPtrOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sGenericProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderDedicatedServerNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderDedicatedServerNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderDedicatedServerNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderDedicatedServerNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderNetworkingOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderNetworkingPtrOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sHetznerProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderUnmanagedNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderUnmanagedNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderUnmanagedNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sLambdalabsProviderUnmanagedNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderNetworkingOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderNetworkingPtrOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sLinodeProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderUnmanagedNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderUnmanagedNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderUnmanagedNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sOblivusProviderUnmanagedNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderUnmanagedNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderUnmanagedNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderUnmanagedNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sPaperspaceProviderUnmanagedNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusOutput{})
	pulumi.RegisterOutputType(Mk8sStatusArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsEcrOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsEcrArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsEfOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsEfArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsElbOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsElbArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsWorkloadIdentityOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsWorkloadIdentityArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfigArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnDashboardOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnDashboardArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnLogOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnLogArrayOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnMetricOutput{})
	pulumi.RegisterOutputType(Mk8sStatusAddOnMetricArrayOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderPtrOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderAutoscalerOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderConnectionOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderConnectionPtrOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderNetworkingOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderNetworkingPtrOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderNodePoolOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderNodePoolArrayOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderNodePoolTaintOutput{})
	pulumi.RegisterOutputType(Mk8sTritonProviderNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(OrgAuthConfigOutput{})
	pulumi.RegisterOutputType(OrgAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingCloudWatchLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingCloudWatchLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingCoralogixLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingCoralogixLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingDatadogLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingDatadogLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingAwsOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingAwsPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingElasticCloudOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingElasticCloudPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingGenericOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingGenericPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingFluentdLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingFluentdLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingLogzioLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingLogzioLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingS3LoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingS3LoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingStackdriverLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingStackdriverLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingSyslogLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingSyslogLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgObservabilityOutput{})
	pulumi.RegisterOutputType(OrgObservabilityPtrOutput{})
	pulumi.RegisterOutputType(OrgSecurityOutput{})
	pulumi.RegisterOutputType(OrgSecurityPtrOutput{})
	pulumi.RegisterOutputType(OrgSecurityThreatDetectionOutput{})
	pulumi.RegisterOutputType(OrgSecurityThreatDetectionPtrOutput{})
	pulumi.RegisterOutputType(OrgSecurityThreatDetectionSyslogOutput{})
	pulumi.RegisterOutputType(OrgSecurityThreatDetectionSyslogPtrOutput{})
	pulumi.RegisterOutputType(OrgStatusOutput{})
	pulumi.RegisterOutputType(OrgStatusArrayOutput{})
	pulumi.RegisterOutputType(OrgTracingControlplaneTracingOutput{})
	pulumi.RegisterOutputType(OrgTracingControlplaneTracingPtrOutput{})
	pulumi.RegisterOutputType(OrgTracingLightstepTracingOutput{})
	pulumi.RegisterOutputType(OrgTracingLightstepTracingPtrOutput{})
	pulumi.RegisterOutputType(OrgTracingOtelTracingOutput{})
	pulumi.RegisterOutputType(OrgTracingOtelTracingPtrOutput{})
	pulumi.RegisterOutputType(PolicyBindingOutput{})
	pulumi.RegisterOutputType(PolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(PolicyTargetQueryOutput{})
	pulumi.RegisterOutputType(PolicyTargetQueryPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecTermOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecTermArrayOutput{})
	pulumi.RegisterOutputType(SecretAwsOutput{})
	pulumi.RegisterOutputType(SecretAwsPtrOutput{})
	pulumi.RegisterOutputType(SecretAzureConnectorOutput{})
	pulumi.RegisterOutputType(SecretAzureConnectorPtrOutput{})
	pulumi.RegisterOutputType(SecretEcrOutput{})
	pulumi.RegisterOutputType(SecretEcrPtrOutput{})
	pulumi.RegisterOutputType(SecretKeypairOutput{})
	pulumi.RegisterOutputType(SecretKeypairPtrOutput{})
	pulumi.RegisterOutputType(SecretNatsAccountOutput{})
	pulumi.RegisterOutputType(SecretNatsAccountPtrOutput{})
	pulumi.RegisterOutputType(SecretOpaqueOutput{})
	pulumi.RegisterOutputType(SecretOpaquePtrOutput{})
	pulumi.RegisterOutputType(SecretTlsOutput{})
	pulumi.RegisterOutputType(SecretTlsPtrOutput{})
	pulumi.RegisterOutputType(SecretUserpassOutput{})
	pulumi.RegisterOutputType(SecretUserpassPtrOutput{})
	pulumi.RegisterOutputType(VolumeSetAutoscalingOutput{})
	pulumi.RegisterOutputType(VolumeSetAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(VolumeSetSnapshotsOutput{})
	pulumi.RegisterOutputType(VolumeSetSnapshotsPtrOutput{})
	pulumi.RegisterOutputType(VolumeSetStatusOutput{})
	pulumi.RegisterOutputType(VolumeSetStatusArrayOutput{})
	pulumi.RegisterOutputType(WorkloadContainerOutput{})
	pulumi.RegisterOutputType(WorkloadContainerArrayOutput{})
	pulumi.RegisterOutputType(WorkloadContainerGpuNvidiaOutput{})
	pulumi.RegisterOutputType(WorkloadContainerGpuNvidiaPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecycleOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeGrpcOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeGrpcPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerMetricsOutput{})
	pulumi.RegisterOutputType(WorkloadContainerMetricsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerPortOutput{})
	pulumi.RegisterOutputType(WorkloadContainerPortArrayOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeGrpcOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeGrpcPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerVolumeOutput{})
	pulumi.RegisterOutputType(WorkloadContainerVolumeArrayOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalPtrOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalOutboundAllowPortOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecInternalOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecInternalPtrOutput{})
	pulumi.RegisterOutputType(WorkloadJobOutput{})
	pulumi.RegisterOutputType(WorkloadJobPtrOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerDirectOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerDirectPtrOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerDirectPortOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerDirectPortArrayOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerGeoLocationOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerGeoLocationPtrOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerGeoLocationHeadersOutput{})
	pulumi.RegisterOutputType(WorkloadLoadBalancerGeoLocationHeadersPtrOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionArrayOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionAutoscalingOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsAutoscalingOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(WorkloadRolloutOptionsOutput{})
	pulumi.RegisterOutputType(WorkloadRolloutOptionsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadSecurityOptionsOutput{})
	pulumi.RegisterOutputType(WorkloadSecurityOptionsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadSidecarOutput{})
	pulumi.RegisterOutputType(WorkloadSidecarPtrOutput{})
	pulumi.RegisterOutputType(WorkloadStatusOutput{})
	pulumi.RegisterOutputType(WorkloadStatusArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusHealthCheckOutput{})
	pulumi.RegisterOutputType(WorkloadStatusHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusLoadBalancerOutput{})
	pulumi.RegisterOutputType(WorkloadStatusLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageManifestOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageManifestArrayOutput{})
	pulumi.RegisterOutputType(GetGvcControlplaneTracingOutput{})
	pulumi.RegisterOutputType(GetGvcControlplaneTracingPtrOutput{})
	pulumi.RegisterOutputType(GetGvcLightstepTracingOutput{})
	pulumi.RegisterOutputType(GetGvcLightstepTracingPtrOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerRedirectOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerRedirectPtrOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerRedirectClassOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerRedirectClassPtrOutput{})
	pulumi.RegisterOutputType(GetGvcOtelTracingOutput{})
	pulumi.RegisterOutputType(GetGvcOtelTracingPtrOutput{})
	pulumi.RegisterOutputType(GetGvcSidecarOutput{})
	pulumi.RegisterOutputType(GetGvcSidecarPtrOutput{})
	pulumi.RegisterOutputType(GetImageManifestOutput{})
	pulumi.RegisterOutputType(GetImageManifestArrayOutput{})
	pulumi.RegisterOutputType(GetImageManifestConfigOutput{})
	pulumi.RegisterOutputType(GetImageManifestConfigArrayOutput{})
	pulumi.RegisterOutputType(GetImageManifestLayerOutput{})
	pulumi.RegisterOutputType(GetImageManifestLayerArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestConfigOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestConfigArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestLayerOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestLayerArrayOutput{})
	pulumi.RegisterOutputType(GetImagesQueryOutput{})
	pulumi.RegisterOutputType(GetImagesQueryPtrOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecPtrOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecTermOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecTermArrayOutput{})
	pulumi.RegisterOutputType(GetLocationGeoOutput{})
	pulumi.RegisterOutputType(GetLocationGeoArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationGeoOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationGeoArrayOutput{})
	pulumi.RegisterOutputType(GetSecretAwsOutput{})
	pulumi.RegisterOutputType(GetSecretAwsPtrOutput{})
	pulumi.RegisterOutputType(GetSecretAzureConnectorOutput{})
	pulumi.RegisterOutputType(GetSecretAzureConnectorPtrOutput{})
	pulumi.RegisterOutputType(GetSecretEcrOutput{})
	pulumi.RegisterOutputType(GetSecretEcrPtrOutput{})
	pulumi.RegisterOutputType(GetSecretKeypairOutput{})
	pulumi.RegisterOutputType(GetSecretKeypairPtrOutput{})
	pulumi.RegisterOutputType(GetSecretNatsAccountOutput{})
	pulumi.RegisterOutputType(GetSecretNatsAccountPtrOutput{})
	pulumi.RegisterOutputType(GetSecretOpaqueOutput{})
	pulumi.RegisterOutputType(GetSecretOpaquePtrOutput{})
	pulumi.RegisterOutputType(GetSecretTlsOutput{})
	pulumi.RegisterOutputType(GetSecretTlsPtrOutput{})
	pulumi.RegisterOutputType(GetSecretUserpassOutput{})
	pulumi.RegisterOutputType(GetSecretUserpassPtrOutput{})
}
