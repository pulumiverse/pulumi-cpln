// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

var _ = internal.GetEnvOrDefault

type CloudAccountAws struct {
	RoleArn string `pulumi:"roleArn"`
}

// CloudAccountAwsInput is an input type that accepts CloudAccountAwsArgs and CloudAccountAwsOutput values.
// You can construct a concrete instance of `CloudAccountAwsInput` via:
//
//	CloudAccountAwsArgs{...}
type CloudAccountAwsInput interface {
	pulumi.Input

	ToCloudAccountAwsOutput() CloudAccountAwsOutput
	ToCloudAccountAwsOutputWithContext(context.Context) CloudAccountAwsOutput
}

type CloudAccountAwsArgs struct {
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (CloudAccountAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAws)(nil)).Elem()
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsOutput() CloudAccountAwsOutput {
	return i.ToCloudAccountAwsOutputWithContext(context.Background())
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsOutputWithContext(ctx context.Context) CloudAccountAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAwsOutput)
}

func (i CloudAccountAwsArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAws] {
	return pulumix.Output[CloudAccountAws]{
		OutputState: i.ToCloudAccountAwsOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return i.ToCloudAccountAwsPtrOutputWithContext(context.Background())
}

func (i CloudAccountAwsArgs) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAwsOutput).ToCloudAccountAwsPtrOutputWithContext(ctx)
}

// CloudAccountAwsPtrInput is an input type that accepts CloudAccountAwsArgs, CloudAccountAwsPtr and CloudAccountAwsPtrOutput values.
// You can construct a concrete instance of `CloudAccountAwsPtrInput` via:
//
//	        CloudAccountAwsArgs{...}
//
//	or:
//
//	        nil
type CloudAccountAwsPtrInput interface {
	pulumi.Input

	ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput
	ToCloudAccountAwsPtrOutputWithContext(context.Context) CloudAccountAwsPtrOutput
}

type cloudAccountAwsPtrType CloudAccountAwsArgs

func CloudAccountAwsPtr(v *CloudAccountAwsArgs) CloudAccountAwsPtrInput {
	return (*cloudAccountAwsPtrType)(v)
}

func (*cloudAccountAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAws)(nil)).Elem()
}

func (i *cloudAccountAwsPtrType) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return i.ToCloudAccountAwsPtrOutputWithContext(context.Background())
}

func (i *cloudAccountAwsPtrType) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAwsPtrOutput)
}

func (i *cloudAccountAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAws] {
	return pulumix.Output[*CloudAccountAws]{
		OutputState: i.ToCloudAccountAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountAwsOutput struct{ *pulumi.OutputState }

func (CloudAccountAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAws)(nil)).Elem()
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsOutput() CloudAccountAwsOutput {
	return o
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsOutputWithContext(ctx context.Context) CloudAccountAwsOutput {
	return o
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return o.ToCloudAccountAwsPtrOutputWithContext(context.Background())
}

func (o CloudAccountAwsOutput) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountAws) *CloudAccountAws {
		return &v
	}).(CloudAccountAwsPtrOutput)
}

func (o CloudAccountAwsOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAws] {
	return pulumix.Output[CloudAccountAws]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAwsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountAws) string { return v.RoleArn }).(pulumi.StringOutput)
}

type CloudAccountAwsPtrOutput struct{ *pulumi.OutputState }

func (CloudAccountAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAws)(nil)).Elem()
}

func (o CloudAccountAwsPtrOutput) ToCloudAccountAwsPtrOutput() CloudAccountAwsPtrOutput {
	return o
}

func (o CloudAccountAwsPtrOutput) ToCloudAccountAwsPtrOutputWithContext(ctx context.Context) CloudAccountAwsPtrOutput {
	return o
}

func (o CloudAccountAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAws] {
	return pulumix.Output[*CloudAccountAws]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAwsPtrOutput) Elem() CloudAccountAwsOutput {
	return o.ApplyT(func(v *CloudAccountAws) CloudAccountAws {
		if v != nil {
			return *v
		}
		var ret CloudAccountAws
		return ret
	}).(CloudAccountAwsOutput)
}

func (o CloudAccountAwsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountAws) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type CloudAccountAzure struct {
	SecretLink string `pulumi:"secretLink"`
}

// CloudAccountAzureInput is an input type that accepts CloudAccountAzureArgs and CloudAccountAzureOutput values.
// You can construct a concrete instance of `CloudAccountAzureInput` via:
//
//	CloudAccountAzureArgs{...}
type CloudAccountAzureInput interface {
	pulumi.Input

	ToCloudAccountAzureOutput() CloudAccountAzureOutput
	ToCloudAccountAzureOutputWithContext(context.Context) CloudAccountAzureOutput
}

type CloudAccountAzureArgs struct {
	SecretLink pulumi.StringInput `pulumi:"secretLink"`
}

func (CloudAccountAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAzure)(nil)).Elem()
}

func (i CloudAccountAzureArgs) ToCloudAccountAzureOutput() CloudAccountAzureOutput {
	return i.ToCloudAccountAzureOutputWithContext(context.Background())
}

func (i CloudAccountAzureArgs) ToCloudAccountAzureOutputWithContext(ctx context.Context) CloudAccountAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzureOutput)
}

func (i CloudAccountAzureArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAzure] {
	return pulumix.Output[CloudAccountAzure]{
		OutputState: i.ToCloudAccountAzureOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountAzureArgs) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return i.ToCloudAccountAzurePtrOutputWithContext(context.Background())
}

func (i CloudAccountAzureArgs) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzureOutput).ToCloudAccountAzurePtrOutputWithContext(ctx)
}

// CloudAccountAzurePtrInput is an input type that accepts CloudAccountAzureArgs, CloudAccountAzurePtr and CloudAccountAzurePtrOutput values.
// You can construct a concrete instance of `CloudAccountAzurePtrInput` via:
//
//	        CloudAccountAzureArgs{...}
//
//	or:
//
//	        nil
type CloudAccountAzurePtrInput interface {
	pulumi.Input

	ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput
	ToCloudAccountAzurePtrOutputWithContext(context.Context) CloudAccountAzurePtrOutput
}

type cloudAccountAzurePtrType CloudAccountAzureArgs

func CloudAccountAzurePtr(v *CloudAccountAzureArgs) CloudAccountAzurePtrInput {
	return (*cloudAccountAzurePtrType)(v)
}

func (*cloudAccountAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAzure)(nil)).Elem()
}

func (i *cloudAccountAzurePtrType) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return i.ToCloudAccountAzurePtrOutputWithContext(context.Background())
}

func (i *cloudAccountAzurePtrType) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzurePtrOutput)
}

func (i *cloudAccountAzurePtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAzure] {
	return pulumix.Output[*CloudAccountAzure]{
		OutputState: i.ToCloudAccountAzurePtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountAzureOutput struct{ *pulumi.OutputState }

func (CloudAccountAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountAzure)(nil)).Elem()
}

func (o CloudAccountAzureOutput) ToCloudAccountAzureOutput() CloudAccountAzureOutput {
	return o
}

func (o CloudAccountAzureOutput) ToCloudAccountAzureOutputWithContext(ctx context.Context) CloudAccountAzureOutput {
	return o
}

func (o CloudAccountAzureOutput) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return o.ToCloudAccountAzurePtrOutputWithContext(context.Background())
}

func (o CloudAccountAzureOutput) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountAzure) *CloudAccountAzure {
		return &v
	}).(CloudAccountAzurePtrOutput)
}

func (o CloudAccountAzureOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountAzure] {
	return pulumix.Output[CloudAccountAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAzureOutput) SecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountAzure) string { return v.SecretLink }).(pulumi.StringOutput)
}

type CloudAccountAzurePtrOutput struct{ *pulumi.OutputState }

func (CloudAccountAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAzure)(nil)).Elem()
}

func (o CloudAccountAzurePtrOutput) ToCloudAccountAzurePtrOutput() CloudAccountAzurePtrOutput {
	return o
}

func (o CloudAccountAzurePtrOutput) ToCloudAccountAzurePtrOutputWithContext(ctx context.Context) CloudAccountAzurePtrOutput {
	return o
}

func (o CloudAccountAzurePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountAzure] {
	return pulumix.Output[*CloudAccountAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountAzurePtrOutput) Elem() CloudAccountAzureOutput {
	return o.ApplyT(func(v *CloudAccountAzure) CloudAccountAzure {
		if v != nil {
			return *v
		}
		var ret CloudAccountAzure
		return ret
	}).(CloudAccountAzureOutput)
}

func (o CloudAccountAzurePtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountAzure) *string {
		if v == nil {
			return nil
		}
		return &v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type CloudAccountGcp struct {
	ProjectId string `pulumi:"projectId"`
}

// CloudAccountGcpInput is an input type that accepts CloudAccountGcpArgs and CloudAccountGcpOutput values.
// You can construct a concrete instance of `CloudAccountGcpInput` via:
//
//	CloudAccountGcpArgs{...}
type CloudAccountGcpInput interface {
	pulumi.Input

	ToCloudAccountGcpOutput() CloudAccountGcpOutput
	ToCloudAccountGcpOutputWithContext(context.Context) CloudAccountGcpOutput
}

type CloudAccountGcpArgs struct {
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (CloudAccountGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountGcp)(nil)).Elem()
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpOutput() CloudAccountGcpOutput {
	return i.ToCloudAccountGcpOutputWithContext(context.Background())
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpOutputWithContext(ctx context.Context) CloudAccountGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpOutput)
}

func (i CloudAccountGcpArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountGcp] {
	return pulumix.Output[CloudAccountGcp]{
		OutputState: i.ToCloudAccountGcpOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return i.ToCloudAccountGcpPtrOutputWithContext(context.Background())
}

func (i CloudAccountGcpArgs) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpOutput).ToCloudAccountGcpPtrOutputWithContext(ctx)
}

// CloudAccountGcpPtrInput is an input type that accepts CloudAccountGcpArgs, CloudAccountGcpPtr and CloudAccountGcpPtrOutput values.
// You can construct a concrete instance of `CloudAccountGcpPtrInput` via:
//
//	        CloudAccountGcpArgs{...}
//
//	or:
//
//	        nil
type CloudAccountGcpPtrInput interface {
	pulumi.Input

	ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput
	ToCloudAccountGcpPtrOutputWithContext(context.Context) CloudAccountGcpPtrOutput
}

type cloudAccountGcpPtrType CloudAccountGcpArgs

func CloudAccountGcpPtr(v *CloudAccountGcpArgs) CloudAccountGcpPtrInput {
	return (*cloudAccountGcpPtrType)(v)
}

func (*cloudAccountGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountGcp)(nil)).Elem()
}

func (i *cloudAccountGcpPtrType) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return i.ToCloudAccountGcpPtrOutputWithContext(context.Background())
}

func (i *cloudAccountGcpPtrType) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpPtrOutput)
}

func (i *cloudAccountGcpPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountGcp] {
	return pulumix.Output[*CloudAccountGcp]{
		OutputState: i.ToCloudAccountGcpPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountGcpOutput struct{ *pulumi.OutputState }

func (CloudAccountGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountGcp)(nil)).Elem()
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpOutput() CloudAccountGcpOutput {
	return o
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpOutputWithContext(ctx context.Context) CloudAccountGcpOutput {
	return o
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return o.ToCloudAccountGcpPtrOutputWithContext(context.Background())
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountGcp) *CloudAccountGcp {
		return &v
	}).(CloudAccountGcpPtrOutput)
}

func (o CloudAccountGcpOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountGcp] {
	return pulumix.Output[CloudAccountGcp]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountGcpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountGcp) string { return v.ProjectId }).(pulumi.StringOutput)
}

type CloudAccountGcpPtrOutput struct{ *pulumi.OutputState }

func (CloudAccountGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountGcp)(nil)).Elem()
}

func (o CloudAccountGcpPtrOutput) ToCloudAccountGcpPtrOutput() CloudAccountGcpPtrOutput {
	return o
}

func (o CloudAccountGcpPtrOutput) ToCloudAccountGcpPtrOutputWithContext(ctx context.Context) CloudAccountGcpPtrOutput {
	return o
}

func (o CloudAccountGcpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountGcp] {
	return pulumix.Output[*CloudAccountGcp]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountGcpPtrOutput) Elem() CloudAccountGcpOutput {
	return o.ApplyT(func(v *CloudAccountGcp) CloudAccountGcp {
		if v != nil {
			return *v
		}
		var ret CloudAccountGcp
		return ret
	}).(CloudAccountGcpOutput)
}

func (o CloudAccountGcpPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountGcp) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

type CloudAccountNgs struct {
	SecretLink string `pulumi:"secretLink"`
}

// CloudAccountNgsInput is an input type that accepts CloudAccountNgsArgs and CloudAccountNgsOutput values.
// You can construct a concrete instance of `CloudAccountNgsInput` via:
//
//	CloudAccountNgsArgs{...}
type CloudAccountNgsInput interface {
	pulumi.Input

	ToCloudAccountNgsOutput() CloudAccountNgsOutput
	ToCloudAccountNgsOutputWithContext(context.Context) CloudAccountNgsOutput
}

type CloudAccountNgsArgs struct {
	SecretLink pulumi.StringInput `pulumi:"secretLink"`
}

func (CloudAccountNgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountNgs)(nil)).Elem()
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsOutput() CloudAccountNgsOutput {
	return i.ToCloudAccountNgsOutputWithContext(context.Background())
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsOutputWithContext(ctx context.Context) CloudAccountNgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountNgsOutput)
}

func (i CloudAccountNgsArgs) ToOutput(ctx context.Context) pulumix.Output[CloudAccountNgs] {
	return pulumix.Output[CloudAccountNgs]{
		OutputState: i.ToCloudAccountNgsOutputWithContext(ctx).OutputState,
	}
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return i.ToCloudAccountNgsPtrOutputWithContext(context.Background())
}

func (i CloudAccountNgsArgs) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountNgsOutput).ToCloudAccountNgsPtrOutputWithContext(ctx)
}

// CloudAccountNgsPtrInput is an input type that accepts CloudAccountNgsArgs, CloudAccountNgsPtr and CloudAccountNgsPtrOutput values.
// You can construct a concrete instance of `CloudAccountNgsPtrInput` via:
//
//	        CloudAccountNgsArgs{...}
//
//	or:
//
//	        nil
type CloudAccountNgsPtrInput interface {
	pulumi.Input

	ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput
	ToCloudAccountNgsPtrOutputWithContext(context.Context) CloudAccountNgsPtrOutput
}

type cloudAccountNgsPtrType CloudAccountNgsArgs

func CloudAccountNgsPtr(v *CloudAccountNgsArgs) CloudAccountNgsPtrInput {
	return (*cloudAccountNgsPtrType)(v)
}

func (*cloudAccountNgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountNgs)(nil)).Elem()
}

func (i *cloudAccountNgsPtrType) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return i.ToCloudAccountNgsPtrOutputWithContext(context.Background())
}

func (i *cloudAccountNgsPtrType) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountNgsPtrOutput)
}

func (i *cloudAccountNgsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountNgs] {
	return pulumix.Output[*CloudAccountNgs]{
		OutputState: i.ToCloudAccountNgsPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountNgsOutput struct{ *pulumi.OutputState }

func (CloudAccountNgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAccountNgs)(nil)).Elem()
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsOutput() CloudAccountNgsOutput {
	return o
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsOutputWithContext(ctx context.Context) CloudAccountNgsOutput {
	return o
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return o.ToCloudAccountNgsPtrOutputWithContext(context.Background())
}

func (o CloudAccountNgsOutput) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAccountNgs) *CloudAccountNgs {
		return &v
	}).(CloudAccountNgsPtrOutput)
}

func (o CloudAccountNgsOutput) ToOutput(ctx context.Context) pulumix.Output[CloudAccountNgs] {
	return pulumix.Output[CloudAccountNgs]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountNgsOutput) SecretLink() pulumi.StringOutput {
	return o.ApplyT(func(v CloudAccountNgs) string { return v.SecretLink }).(pulumi.StringOutput)
}

type CloudAccountNgsPtrOutput struct{ *pulumi.OutputState }

func (CloudAccountNgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountNgs)(nil)).Elem()
}

func (o CloudAccountNgsPtrOutput) ToCloudAccountNgsPtrOutput() CloudAccountNgsPtrOutput {
	return o
}

func (o CloudAccountNgsPtrOutput) ToCloudAccountNgsPtrOutputWithContext(ctx context.Context) CloudAccountNgsPtrOutput {
	return o
}

func (o CloudAccountNgsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccountNgs] {
	return pulumix.Output[*CloudAccountNgs]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountNgsPtrOutput) Elem() CloudAccountNgsOutput {
	return o.ApplyT(func(v *CloudAccountNgs) CloudAccountNgs {
		if v != nil {
			return *v
		}
		var ret CloudAccountNgs
		return ret
	}).(CloudAccountNgsOutput)
}

func (o CloudAccountNgsPtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountNgs) *string {
		if v == nil {
			return nil
		}
		return &v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type DomainSpec struct {
	AcceptAllHosts *bool            `pulumi:"acceptAllHosts"`
	DnsMode        *string          `pulumi:"dnsMode"`
	GvcLink        *string          `pulumi:"gvcLink"`
	Ports          []DomainSpecPort `pulumi:"ports"`
}

// DomainSpecInput is an input type that accepts DomainSpecArgs and DomainSpecOutput values.
// You can construct a concrete instance of `DomainSpecInput` via:
//
//	DomainSpecArgs{...}
type DomainSpecInput interface {
	pulumi.Input

	ToDomainSpecOutput() DomainSpecOutput
	ToDomainSpecOutputWithContext(context.Context) DomainSpecOutput
}

type DomainSpecArgs struct {
	AcceptAllHosts pulumi.BoolPtrInput      `pulumi:"acceptAllHosts"`
	DnsMode        pulumi.StringPtrInput    `pulumi:"dnsMode"`
	GvcLink        pulumi.StringPtrInput    `pulumi:"gvcLink"`
	Ports          DomainSpecPortArrayInput `pulumi:"ports"`
}

func (DomainSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpec)(nil)).Elem()
}

func (i DomainSpecArgs) ToDomainSpecOutput() DomainSpecOutput {
	return i.ToDomainSpecOutputWithContext(context.Background())
}

func (i DomainSpecArgs) ToDomainSpecOutputWithContext(ctx context.Context) DomainSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecOutput)
}

func (i DomainSpecArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpec] {
	return pulumix.Output[DomainSpec]{
		OutputState: i.ToDomainSpecOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecArgs) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return i.ToDomainSpecPtrOutputWithContext(context.Background())
}

func (i DomainSpecArgs) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecOutput).ToDomainSpecPtrOutputWithContext(ctx)
}

// DomainSpecPtrInput is an input type that accepts DomainSpecArgs, DomainSpecPtr and DomainSpecPtrOutput values.
// You can construct a concrete instance of `DomainSpecPtrInput` via:
//
//	        DomainSpecArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPtrInput interface {
	pulumi.Input

	ToDomainSpecPtrOutput() DomainSpecPtrOutput
	ToDomainSpecPtrOutputWithContext(context.Context) DomainSpecPtrOutput
}

type domainSpecPtrType DomainSpecArgs

func DomainSpecPtr(v *DomainSpecArgs) DomainSpecPtrInput {
	return (*domainSpecPtrType)(v)
}

func (*domainSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpec)(nil)).Elem()
}

func (i *domainSpecPtrType) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return i.ToDomainSpecPtrOutputWithContext(context.Background())
}

func (i *domainSpecPtrType) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPtrOutput)
}

func (i *domainSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpec] {
	return pulumix.Output[*DomainSpec]{
		OutputState: i.ToDomainSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecOutput struct{ *pulumi.OutputState }

func (DomainSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpec)(nil)).Elem()
}

func (o DomainSpecOutput) ToDomainSpecOutput() DomainSpecOutput {
	return o
}

func (o DomainSpecOutput) ToDomainSpecOutputWithContext(ctx context.Context) DomainSpecOutput {
	return o
}

func (o DomainSpecOutput) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return o.ToDomainSpecPtrOutputWithContext(context.Background())
}

func (o DomainSpecOutput) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpec) *DomainSpec {
		return &v
	}).(DomainSpecPtrOutput)
}

func (o DomainSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpec] {
	return pulumix.Output[DomainSpec]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecOutput) AcceptAllHosts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSpec) *bool { return v.AcceptAllHosts }).(pulumi.BoolPtrOutput)
}

func (o DomainSpecOutput) DnsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpec) *string { return v.DnsMode }).(pulumi.StringPtrOutput)
}

func (o DomainSpecOutput) GvcLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpec) *string { return v.GvcLink }).(pulumi.StringPtrOutput)
}

func (o DomainSpecOutput) Ports() DomainSpecPortArrayOutput {
	return o.ApplyT(func(v DomainSpec) []DomainSpecPort { return v.Ports }).(DomainSpecPortArrayOutput)
}

type DomainSpecPtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpec)(nil)).Elem()
}

func (o DomainSpecPtrOutput) ToDomainSpecPtrOutput() DomainSpecPtrOutput {
	return o
}

func (o DomainSpecPtrOutput) ToDomainSpecPtrOutputWithContext(ctx context.Context) DomainSpecPtrOutput {
	return o
}

func (o DomainSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpec] {
	return pulumix.Output[*DomainSpec]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPtrOutput) Elem() DomainSpecOutput {
	return o.ApplyT(func(v *DomainSpec) DomainSpec {
		if v != nil {
			return *v
		}
		var ret DomainSpec
		return ret
	}).(DomainSpecOutput)
}

func (o DomainSpecPtrOutput) AcceptAllHosts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSpec) *bool {
		if v == nil {
			return nil
		}
		return v.AcceptAllHosts
	}).(pulumi.BoolPtrOutput)
}

func (o DomainSpecPtrOutput) DnsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpec) *string {
		if v == nil {
			return nil
		}
		return v.DnsMode
	}).(pulumi.StringPtrOutput)
}

func (o DomainSpecPtrOutput) GvcLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpec) *string {
		if v == nil {
			return nil
		}
		return v.GvcLink
	}).(pulumi.StringPtrOutput)
}

func (o DomainSpecPtrOutput) Ports() DomainSpecPortArrayOutput {
	return o.ApplyT(func(v *DomainSpec) []DomainSpecPort {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(DomainSpecPortArrayOutput)
}

type DomainSpecPort struct {
	Cors     *DomainSpecPortCors `pulumi:"cors"`
	Number   *int                `pulumi:"number"`
	Protocol *string             `pulumi:"protocol"`
	Tls      DomainSpecPortTls   `pulumi:"tls"`
}

// DomainSpecPortInput is an input type that accepts DomainSpecPortArgs and DomainSpecPortOutput values.
// You can construct a concrete instance of `DomainSpecPortInput` via:
//
//	DomainSpecPortArgs{...}
type DomainSpecPortInput interface {
	pulumi.Input

	ToDomainSpecPortOutput() DomainSpecPortOutput
	ToDomainSpecPortOutputWithContext(context.Context) DomainSpecPortOutput
}

type DomainSpecPortArgs struct {
	Cors     DomainSpecPortCorsPtrInput `pulumi:"cors"`
	Number   pulumi.IntPtrInput         `pulumi:"number"`
	Protocol pulumi.StringPtrInput      `pulumi:"protocol"`
	Tls      DomainSpecPortTlsInput     `pulumi:"tls"`
}

func (DomainSpecPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPort)(nil)).Elem()
}

func (i DomainSpecPortArgs) ToDomainSpecPortOutput() DomainSpecPortOutput {
	return i.ToDomainSpecPortOutputWithContext(context.Background())
}

func (i DomainSpecPortArgs) ToDomainSpecPortOutputWithContext(ctx context.Context) DomainSpecPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortOutput)
}

func (i DomainSpecPortArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPort] {
	return pulumix.Output[DomainSpecPort]{
		OutputState: i.ToDomainSpecPortOutputWithContext(ctx).OutputState,
	}
}

// DomainSpecPortArrayInput is an input type that accepts DomainSpecPortArray and DomainSpecPortArrayOutput values.
// You can construct a concrete instance of `DomainSpecPortArrayInput` via:
//
//	DomainSpecPortArray{ DomainSpecPortArgs{...} }
type DomainSpecPortArrayInput interface {
	pulumi.Input

	ToDomainSpecPortArrayOutput() DomainSpecPortArrayOutput
	ToDomainSpecPortArrayOutputWithContext(context.Context) DomainSpecPortArrayOutput
}

type DomainSpecPortArray []DomainSpecPortInput

func (DomainSpecPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPort)(nil)).Elem()
}

func (i DomainSpecPortArray) ToDomainSpecPortArrayOutput() DomainSpecPortArrayOutput {
	return i.ToDomainSpecPortArrayOutputWithContext(context.Background())
}

func (i DomainSpecPortArray) ToDomainSpecPortArrayOutputWithContext(ctx context.Context) DomainSpecPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortArrayOutput)
}

func (i DomainSpecPortArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPort] {
	return pulumix.Output[[]DomainSpecPort]{
		OutputState: i.ToDomainSpecPortArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortOutput struct{ *pulumi.OutputState }

func (DomainSpecPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPort)(nil)).Elem()
}

func (o DomainSpecPortOutput) ToDomainSpecPortOutput() DomainSpecPortOutput {
	return o
}

func (o DomainSpecPortOutput) ToDomainSpecPortOutputWithContext(ctx context.Context) DomainSpecPortOutput {
	return o
}

func (o DomainSpecPortOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPort] {
	return pulumix.Output[DomainSpecPort]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortOutput) Cors() DomainSpecPortCorsPtrOutput {
	return o.ApplyT(func(v DomainSpecPort) *DomainSpecPortCors { return v.Cors }).(DomainSpecPortCorsPtrOutput)
}

func (o DomainSpecPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainSpecPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

func (o DomainSpecPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o DomainSpecPortOutput) Tls() DomainSpecPortTlsOutput {
	return o.ApplyT(func(v DomainSpecPort) DomainSpecPortTls { return v.Tls }).(DomainSpecPortTlsOutput)
}

type DomainSpecPortArrayOutput struct{ *pulumi.OutputState }

func (DomainSpecPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPort)(nil)).Elem()
}

func (o DomainSpecPortArrayOutput) ToDomainSpecPortArrayOutput() DomainSpecPortArrayOutput {
	return o
}

func (o DomainSpecPortArrayOutput) ToDomainSpecPortArrayOutputWithContext(ctx context.Context) DomainSpecPortArrayOutput {
	return o
}

func (o DomainSpecPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPort] {
	return pulumix.Output[[]DomainSpecPort]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortArrayOutput) Index(i pulumi.IntInput) DomainSpecPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainSpecPort {
		return vs[0].([]DomainSpecPort)[vs[1].(int)]
	}).(DomainSpecPortOutput)
}

type DomainSpecPortCors struct {
	AllowCredentials *bool                           `pulumi:"allowCredentials"`
	AllowHeaders     []string                        `pulumi:"allowHeaders"`
	AllowMethods     []string                        `pulumi:"allowMethods"`
	AllowOrigins     []DomainSpecPortCorsAllowOrigin `pulumi:"allowOrigins"`
	ExposeHeaders    []string                        `pulumi:"exposeHeaders"`
	MaxAge           *string                         `pulumi:"maxAge"`
}

// DomainSpecPortCorsInput is an input type that accepts DomainSpecPortCorsArgs and DomainSpecPortCorsOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsInput` via:
//
//	DomainSpecPortCorsArgs{...}
type DomainSpecPortCorsInput interface {
	pulumi.Input

	ToDomainSpecPortCorsOutput() DomainSpecPortCorsOutput
	ToDomainSpecPortCorsOutputWithContext(context.Context) DomainSpecPortCorsOutput
}

type DomainSpecPortCorsArgs struct {
	AllowCredentials pulumi.BoolPtrInput                     `pulumi:"allowCredentials"`
	AllowHeaders     pulumi.StringArrayInput                 `pulumi:"allowHeaders"`
	AllowMethods     pulumi.StringArrayInput                 `pulumi:"allowMethods"`
	AllowOrigins     DomainSpecPortCorsAllowOriginArrayInput `pulumi:"allowOrigins"`
	ExposeHeaders    pulumi.StringArrayInput                 `pulumi:"exposeHeaders"`
	MaxAge           pulumi.StringPtrInput                   `pulumi:"maxAge"`
}

func (DomainSpecPortCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCors)(nil)).Elem()
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsOutput() DomainSpecPortCorsOutput {
	return i.ToDomainSpecPortCorsOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsOutputWithContext(ctx context.Context) DomainSpecPortCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsOutput)
}

func (i DomainSpecPortCorsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCors] {
	return pulumix.Output[DomainSpecPortCors]{
		OutputState: i.ToDomainSpecPortCorsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return i.ToDomainSpecPortCorsPtrOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsArgs) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsOutput).ToDomainSpecPortCorsPtrOutputWithContext(ctx)
}

// DomainSpecPortCorsPtrInput is an input type that accepts DomainSpecPortCorsArgs, DomainSpecPortCorsPtr and DomainSpecPortCorsPtrOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsPtrInput` via:
//
//	        DomainSpecPortCorsArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPortCorsPtrInput interface {
	pulumi.Input

	ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput
	ToDomainSpecPortCorsPtrOutputWithContext(context.Context) DomainSpecPortCorsPtrOutput
}

type domainSpecPortCorsPtrType DomainSpecPortCorsArgs

func DomainSpecPortCorsPtr(v *DomainSpecPortCorsArgs) DomainSpecPortCorsPtrInput {
	return (*domainSpecPortCorsPtrType)(v)
}

func (*domainSpecPortCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortCors)(nil)).Elem()
}

func (i *domainSpecPortCorsPtrType) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return i.ToDomainSpecPortCorsPtrOutputWithContext(context.Background())
}

func (i *domainSpecPortCorsPtrType) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsPtrOutput)
}

func (i *domainSpecPortCorsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortCors] {
	return pulumix.Output[*DomainSpecPortCors]{
		OutputState: i.ToDomainSpecPortCorsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortCorsOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCors)(nil)).Elem()
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsOutput() DomainSpecPortCorsOutput {
	return o
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsOutputWithContext(ctx context.Context) DomainSpecPortCorsOutput {
	return o
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return o.ToDomainSpecPortCorsPtrOutputWithContext(context.Background())
}

func (o DomainSpecPortCorsOutput) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpecPortCors) *DomainSpecPortCors {
		return &v
	}).(DomainSpecPortCorsPtrOutput)
}

func (o DomainSpecPortCorsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCors] {
	return pulumix.Output[DomainSpecPortCors]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSpecPortCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

func (o DomainSpecPortCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsOutput) AllowOrigins() DomainSpecPortCorsAllowOriginArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []DomainSpecPortCorsAllowOrigin { return v.AllowOrigins }).(DomainSpecPortCorsAllowOriginArrayOutput)
}

func (o DomainSpecPortCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortCors) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type DomainSpecPortCorsPtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortCors)(nil)).Elem()
}

func (o DomainSpecPortCorsPtrOutput) ToDomainSpecPortCorsPtrOutput() DomainSpecPortCorsPtrOutput {
	return o
}

func (o DomainSpecPortCorsPtrOutput) ToDomainSpecPortCorsPtrOutputWithContext(ctx context.Context) DomainSpecPortCorsPtrOutput {
	return o
}

func (o DomainSpecPortCorsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortCors] {
	return pulumix.Output[*DomainSpecPortCors]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsPtrOutput) Elem() DomainSpecPortCorsOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) DomainSpecPortCors {
		if v != nil {
			return *v
		}
		var ret DomainSpecPortCors
		return ret
	}).(DomainSpecPortCorsOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) AllowOrigins() DomainSpecPortCorsAllowOriginArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []DomainSpecPortCorsAllowOrigin {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(DomainSpecPortCorsAllowOriginArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortCorsPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortCors) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type DomainSpecPortCorsAllowOrigin struct {
	Exact string `pulumi:"exact"`
}

// DomainSpecPortCorsAllowOriginInput is an input type that accepts DomainSpecPortCorsAllowOriginArgs and DomainSpecPortCorsAllowOriginOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsAllowOriginInput` via:
//
//	DomainSpecPortCorsAllowOriginArgs{...}
type DomainSpecPortCorsAllowOriginInput interface {
	pulumi.Input

	ToDomainSpecPortCorsAllowOriginOutput() DomainSpecPortCorsAllowOriginOutput
	ToDomainSpecPortCorsAllowOriginOutputWithContext(context.Context) DomainSpecPortCorsAllowOriginOutput
}

type DomainSpecPortCorsAllowOriginArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (DomainSpecPortCorsAllowOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (i DomainSpecPortCorsAllowOriginArgs) ToDomainSpecPortCorsAllowOriginOutput() DomainSpecPortCorsAllowOriginOutput {
	return i.ToDomainSpecPortCorsAllowOriginOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsAllowOriginArgs) ToDomainSpecPortCorsAllowOriginOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsAllowOriginOutput)
}

func (i DomainSpecPortCorsAllowOriginArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[DomainSpecPortCorsAllowOrigin]{
		OutputState: i.ToDomainSpecPortCorsAllowOriginOutputWithContext(ctx).OutputState,
	}
}

// DomainSpecPortCorsAllowOriginArrayInput is an input type that accepts DomainSpecPortCorsAllowOriginArray and DomainSpecPortCorsAllowOriginArrayOutput values.
// You can construct a concrete instance of `DomainSpecPortCorsAllowOriginArrayInput` via:
//
//	DomainSpecPortCorsAllowOriginArray{ DomainSpecPortCorsAllowOriginArgs{...} }
type DomainSpecPortCorsAllowOriginArrayInput interface {
	pulumi.Input

	ToDomainSpecPortCorsAllowOriginArrayOutput() DomainSpecPortCorsAllowOriginArrayOutput
	ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(context.Context) DomainSpecPortCorsAllowOriginArrayOutput
}

type DomainSpecPortCorsAllowOriginArray []DomainSpecPortCorsAllowOriginInput

func (DomainSpecPortCorsAllowOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (i DomainSpecPortCorsAllowOriginArray) ToDomainSpecPortCorsAllowOriginArrayOutput() DomainSpecPortCorsAllowOriginArrayOutput {
	return i.ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(context.Background())
}

func (i DomainSpecPortCorsAllowOriginArray) ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortCorsAllowOriginArrayOutput)
}

func (i DomainSpecPortCorsAllowOriginArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[[]DomainSpecPortCorsAllowOrigin]{
		OutputState: i.ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortCorsAllowOriginOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsAllowOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (o DomainSpecPortCorsAllowOriginOutput) ToDomainSpecPortCorsAllowOriginOutput() DomainSpecPortCorsAllowOriginOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginOutput) ToDomainSpecPortCorsAllowOriginOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[DomainSpecPortCorsAllowOrigin]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsAllowOriginOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSpecPortCorsAllowOrigin) string { return v.Exact }).(pulumi.StringOutput)
}

type DomainSpecPortCorsAllowOriginArrayOutput struct{ *pulumi.OutputState }

func (DomainSpecPortCorsAllowOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSpecPortCorsAllowOrigin)(nil)).Elem()
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) ToDomainSpecPortCorsAllowOriginArrayOutput() DomainSpecPortCorsAllowOriginArrayOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) ToDomainSpecPortCorsAllowOriginArrayOutputWithContext(ctx context.Context) DomainSpecPortCorsAllowOriginArrayOutput {
	return o
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainSpecPortCorsAllowOrigin] {
	return pulumix.Output[[]DomainSpecPortCorsAllowOrigin]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortCorsAllowOriginArrayOutput) Index(i pulumi.IntInput) DomainSpecPortCorsAllowOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainSpecPortCorsAllowOrigin {
		return vs[0].([]DomainSpecPortCorsAllowOrigin)[vs[1].(int)]
	}).(DomainSpecPortCorsAllowOriginOutput)
}

type DomainSpecPortTls struct {
	CipherSuites       []string                            `pulumi:"cipherSuites"`
	ClientCertificate  *DomainSpecPortTlsClientCertificate `pulumi:"clientCertificate"`
	MinProtocolVersion *string                             `pulumi:"minProtocolVersion"`
	ServerCertificate  *DomainSpecPortTlsServerCertificate `pulumi:"serverCertificate"`
}

// DomainSpecPortTlsInput is an input type that accepts DomainSpecPortTlsArgs and DomainSpecPortTlsOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsInput` via:
//
//	DomainSpecPortTlsArgs{...}
type DomainSpecPortTlsInput interface {
	pulumi.Input

	ToDomainSpecPortTlsOutput() DomainSpecPortTlsOutput
	ToDomainSpecPortTlsOutputWithContext(context.Context) DomainSpecPortTlsOutput
}

type DomainSpecPortTlsArgs struct {
	CipherSuites       pulumi.StringArrayInput                    `pulumi:"cipherSuites"`
	ClientCertificate  DomainSpecPortTlsClientCertificatePtrInput `pulumi:"clientCertificate"`
	MinProtocolVersion pulumi.StringPtrInput                      `pulumi:"minProtocolVersion"`
	ServerCertificate  DomainSpecPortTlsServerCertificatePtrInput `pulumi:"serverCertificate"`
}

func (DomainSpecPortTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTls)(nil)).Elem()
}

func (i DomainSpecPortTlsArgs) ToDomainSpecPortTlsOutput() DomainSpecPortTlsOutput {
	return i.ToDomainSpecPortTlsOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsArgs) ToDomainSpecPortTlsOutputWithContext(ctx context.Context) DomainSpecPortTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsOutput)
}

func (i DomainSpecPortTlsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTls] {
	return pulumix.Output[DomainSpecPortTls]{
		OutputState: i.ToDomainSpecPortTlsOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortTlsOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTls)(nil)).Elem()
}

func (o DomainSpecPortTlsOutput) ToDomainSpecPortTlsOutput() DomainSpecPortTlsOutput {
	return o
}

func (o DomainSpecPortTlsOutput) ToDomainSpecPortTlsOutputWithContext(ctx context.Context) DomainSpecPortTlsOutput {
	return o
}

func (o DomainSpecPortTlsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTls] {
	return pulumix.Output[DomainSpecPortTls]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSpecPortTls) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

func (o DomainSpecPortTlsOutput) ClientCertificate() DomainSpecPortTlsClientCertificatePtrOutput {
	return o.ApplyT(func(v DomainSpecPortTls) *DomainSpecPortTlsClientCertificate { return v.ClientCertificate }).(DomainSpecPortTlsClientCertificatePtrOutput)
}

func (o DomainSpecPortTlsOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortTls) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

func (o DomainSpecPortTlsOutput) ServerCertificate() DomainSpecPortTlsServerCertificatePtrOutput {
	return o.ApplyT(func(v DomainSpecPortTls) *DomainSpecPortTlsServerCertificate { return v.ServerCertificate }).(DomainSpecPortTlsServerCertificatePtrOutput)
}

type DomainSpecPortTlsClientCertificate struct {
	SecretLink *string `pulumi:"secretLink"`
}

// DomainSpecPortTlsClientCertificateInput is an input type that accepts DomainSpecPortTlsClientCertificateArgs and DomainSpecPortTlsClientCertificateOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsClientCertificateInput` via:
//
//	DomainSpecPortTlsClientCertificateArgs{...}
type DomainSpecPortTlsClientCertificateInput interface {
	pulumi.Input

	ToDomainSpecPortTlsClientCertificateOutput() DomainSpecPortTlsClientCertificateOutput
	ToDomainSpecPortTlsClientCertificateOutputWithContext(context.Context) DomainSpecPortTlsClientCertificateOutput
}

type DomainSpecPortTlsClientCertificateArgs struct {
	SecretLink pulumi.StringPtrInput `pulumi:"secretLink"`
}

func (DomainSpecPortTlsClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificateOutput() DomainSpecPortTlsClientCertificateOutput {
	return i.ToDomainSpecPortTlsClientCertificateOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsClientCertificateOutput)
}

func (i DomainSpecPortTlsClientCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[DomainSpecPortTlsClientCertificate]{
		OutputState: i.ToDomainSpecPortTlsClientCertificateOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return i.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsClientCertificateArgs) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsClientCertificateOutput).ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx)
}

// DomainSpecPortTlsClientCertificatePtrInput is an input type that accepts DomainSpecPortTlsClientCertificateArgs, DomainSpecPortTlsClientCertificatePtr and DomainSpecPortTlsClientCertificatePtrOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsClientCertificatePtrInput` via:
//
//	        DomainSpecPortTlsClientCertificateArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPortTlsClientCertificatePtrInput interface {
	pulumi.Input

	ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput
	ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Context) DomainSpecPortTlsClientCertificatePtrOutput
}

type domainSpecPortTlsClientCertificatePtrType DomainSpecPortTlsClientCertificateArgs

func DomainSpecPortTlsClientCertificatePtr(v *DomainSpecPortTlsClientCertificateArgs) DomainSpecPortTlsClientCertificatePtrInput {
	return (*domainSpecPortTlsClientCertificatePtrType)(v)
}

func (*domainSpecPortTlsClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (i *domainSpecPortTlsClientCertificatePtrType) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return i.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Background())
}

func (i *domainSpecPortTlsClientCertificatePtrType) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsClientCertificatePtrOutput)
}

func (i *domainSpecPortTlsClientCertificatePtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[*DomainSpecPortTlsClientCertificate]{
		OutputState: i.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortTlsClientCertificateOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificateOutput() DomainSpecPortTlsClientCertificateOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificateOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return o.ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(context.Background())
}

func (o DomainSpecPortTlsClientCertificateOutput) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpecPortTlsClientCertificate) *DomainSpecPortTlsClientCertificate {
		return &v
	}).(DomainSpecPortTlsClientCertificatePtrOutput)
}

func (o DomainSpecPortTlsClientCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[DomainSpecPortTlsClientCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsClientCertificateOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortTlsClientCertificate) *string { return v.SecretLink }).(pulumi.StringPtrOutput)
}

type DomainSpecPortTlsClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsClientCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) ToDomainSpecPortTlsClientCertificatePtrOutput() DomainSpecPortTlsClientCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) ToDomainSpecPortTlsClientCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsClientCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsClientCertificate] {
	return pulumix.Output[*DomainSpecPortTlsClientCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) Elem() DomainSpecPortTlsClientCertificateOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsClientCertificate) DomainSpecPortTlsClientCertificate {
		if v != nil {
			return *v
		}
		var ret DomainSpecPortTlsClientCertificate
		return ret
	}).(DomainSpecPortTlsClientCertificateOutput)
}

func (o DomainSpecPortTlsClientCertificatePtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type DomainSpecPortTlsServerCertificate struct {
	SecretLink *string `pulumi:"secretLink"`
}

// DomainSpecPortTlsServerCertificateInput is an input type that accepts DomainSpecPortTlsServerCertificateArgs and DomainSpecPortTlsServerCertificateOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsServerCertificateInput` via:
//
//	DomainSpecPortTlsServerCertificateArgs{...}
type DomainSpecPortTlsServerCertificateInput interface {
	pulumi.Input

	ToDomainSpecPortTlsServerCertificateOutput() DomainSpecPortTlsServerCertificateOutput
	ToDomainSpecPortTlsServerCertificateOutputWithContext(context.Context) DomainSpecPortTlsServerCertificateOutput
}

type DomainSpecPortTlsServerCertificateArgs struct {
	SecretLink pulumi.StringPtrInput `pulumi:"secretLink"`
}

func (DomainSpecPortTlsServerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificateOutput() DomainSpecPortTlsServerCertificateOutput {
	return i.ToDomainSpecPortTlsServerCertificateOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsServerCertificateOutput)
}

func (i DomainSpecPortTlsServerCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[DomainSpecPortTlsServerCertificate]{
		OutputState: i.ToDomainSpecPortTlsServerCertificateOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return i.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Background())
}

func (i DomainSpecPortTlsServerCertificateArgs) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsServerCertificateOutput).ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx)
}

// DomainSpecPortTlsServerCertificatePtrInput is an input type that accepts DomainSpecPortTlsServerCertificateArgs, DomainSpecPortTlsServerCertificatePtr and DomainSpecPortTlsServerCertificatePtrOutput values.
// You can construct a concrete instance of `DomainSpecPortTlsServerCertificatePtrInput` via:
//
//	        DomainSpecPortTlsServerCertificateArgs{...}
//
//	or:
//
//	        nil
type DomainSpecPortTlsServerCertificatePtrInput interface {
	pulumi.Input

	ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput
	ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Context) DomainSpecPortTlsServerCertificatePtrOutput
}

type domainSpecPortTlsServerCertificatePtrType DomainSpecPortTlsServerCertificateArgs

func DomainSpecPortTlsServerCertificatePtr(v *DomainSpecPortTlsServerCertificateArgs) DomainSpecPortTlsServerCertificatePtrInput {
	return (*domainSpecPortTlsServerCertificatePtrType)(v)
}

func (*domainSpecPortTlsServerCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (i *domainSpecPortTlsServerCertificatePtrType) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return i.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Background())
}

func (i *domainSpecPortTlsServerCertificatePtrType) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSpecPortTlsServerCertificatePtrOutput)
}

func (i *domainSpecPortTlsServerCertificatePtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[*DomainSpecPortTlsServerCertificate]{
		OutputState: i.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSpecPortTlsServerCertificateOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificateOutput() DomainSpecPortTlsServerCertificateOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificateOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificateOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return o.ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(context.Background())
}

func (o DomainSpecPortTlsServerCertificateOutput) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSpecPortTlsServerCertificate) *DomainSpecPortTlsServerCertificate {
		return &v
	}).(DomainSpecPortTlsServerCertificatePtrOutput)
}

func (o DomainSpecPortTlsServerCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[DomainSpecPortTlsServerCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsServerCertificateOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSpecPortTlsServerCertificate) *string { return v.SecretLink }).(pulumi.StringPtrOutput)
}

type DomainSpecPortTlsServerCertificatePtrOutput struct{ *pulumi.OutputState }

func (DomainSpecPortTlsServerCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSpecPortTlsServerCertificate)(nil)).Elem()
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) ToDomainSpecPortTlsServerCertificatePtrOutput() DomainSpecPortTlsServerCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) ToDomainSpecPortTlsServerCertificatePtrOutputWithContext(ctx context.Context) DomainSpecPortTlsServerCertificatePtrOutput {
	return o
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSpecPortTlsServerCertificate] {
	return pulumix.Output[*DomainSpecPortTlsServerCertificate]{
		OutputState: o.OutputState,
	}
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) Elem() DomainSpecPortTlsServerCertificateOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsServerCertificate) DomainSpecPortTlsServerCertificate {
		if v != nil {
			return *v
		}
		var ret DomainSpecPortTlsServerCertificate
		return ret
	}).(DomainSpecPortTlsServerCertificateOutput)
}

func (o DomainSpecPortTlsServerCertificatePtrOutput) SecretLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSpecPortTlsServerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretLink
	}).(pulumi.StringPtrOutput)
}

type DomainStatus struct {
	DnsConfigs  []DomainStatusDnsConfig `pulumi:"dnsConfigs"`
	Endpoints   []DomainStatusEndpoint  `pulumi:"endpoints"`
	Fingerprint *string                 `pulumi:"fingerprint"`
	Locations   []DomainStatusLocation  `pulumi:"locations"`
	Status      *string                 `pulumi:"status"`
	Warning     *string                 `pulumi:"warning"`
}

// DomainStatusInput is an input type that accepts DomainStatusArgs and DomainStatusOutput values.
// You can construct a concrete instance of `DomainStatusInput` via:
//
//	DomainStatusArgs{...}
type DomainStatusInput interface {
	pulumi.Input

	ToDomainStatusOutput() DomainStatusOutput
	ToDomainStatusOutputWithContext(context.Context) DomainStatusOutput
}

type DomainStatusArgs struct {
	DnsConfigs  DomainStatusDnsConfigArrayInput `pulumi:"dnsConfigs"`
	Endpoints   DomainStatusEndpointArrayInput  `pulumi:"endpoints"`
	Fingerprint pulumi.StringPtrInput           `pulumi:"fingerprint"`
	Locations   DomainStatusLocationArrayInput  `pulumi:"locations"`
	Status      pulumi.StringPtrInput           `pulumi:"status"`
	Warning     pulumi.StringPtrInput           `pulumi:"warning"`
}

func (DomainStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatus)(nil)).Elem()
}

func (i DomainStatusArgs) ToDomainStatusOutput() DomainStatusOutput {
	return i.ToDomainStatusOutputWithContext(context.Background())
}

func (i DomainStatusArgs) ToDomainStatusOutputWithContext(ctx context.Context) DomainStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusOutput)
}

func (i DomainStatusArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatus] {
	return pulumix.Output[DomainStatus]{
		OutputState: i.ToDomainStatusOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusArrayInput is an input type that accepts DomainStatusArray and DomainStatusArrayOutput values.
// You can construct a concrete instance of `DomainStatusArrayInput` via:
//
//	DomainStatusArray{ DomainStatusArgs{...} }
type DomainStatusArrayInput interface {
	pulumi.Input

	ToDomainStatusArrayOutput() DomainStatusArrayOutput
	ToDomainStatusArrayOutputWithContext(context.Context) DomainStatusArrayOutput
}

type DomainStatusArray []DomainStatusInput

func (DomainStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatus)(nil)).Elem()
}

func (i DomainStatusArray) ToDomainStatusArrayOutput() DomainStatusArrayOutput {
	return i.ToDomainStatusArrayOutputWithContext(context.Background())
}

func (i DomainStatusArray) ToDomainStatusArrayOutputWithContext(ctx context.Context) DomainStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusArrayOutput)
}

func (i DomainStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatus] {
	return pulumix.Output[[]DomainStatus]{
		OutputState: i.ToDomainStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusOutput struct{ *pulumi.OutputState }

func (DomainStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatus)(nil)).Elem()
}

func (o DomainStatusOutput) ToDomainStatusOutput() DomainStatusOutput {
	return o
}

func (o DomainStatusOutput) ToDomainStatusOutputWithContext(ctx context.Context) DomainStatusOutput {
	return o
}

func (o DomainStatusOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatus] {
	return pulumix.Output[DomainStatus]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusOutput) DnsConfigs() DomainStatusDnsConfigArrayOutput {
	return o.ApplyT(func(v DomainStatus) []DomainStatusDnsConfig { return v.DnsConfigs }).(DomainStatusDnsConfigArrayOutput)
}

func (o DomainStatusOutput) Endpoints() DomainStatusEndpointArrayOutput {
	return o.ApplyT(func(v DomainStatus) []DomainStatusEndpoint { return v.Endpoints }).(DomainStatusEndpointArrayOutput)
}

func (o DomainStatusOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatus) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

func (o DomainStatusOutput) Locations() DomainStatusLocationArrayOutput {
	return o.ApplyT(func(v DomainStatus) []DomainStatusLocation { return v.Locations }).(DomainStatusLocationArrayOutput)
}

func (o DomainStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o DomainStatusOutput) Warning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatus) *string { return v.Warning }).(pulumi.StringPtrOutput)
}

type DomainStatusArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatus)(nil)).Elem()
}

func (o DomainStatusArrayOutput) ToDomainStatusArrayOutput() DomainStatusArrayOutput {
	return o
}

func (o DomainStatusArrayOutput) ToDomainStatusArrayOutputWithContext(ctx context.Context) DomainStatusArrayOutput {
	return o
}

func (o DomainStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatus] {
	return pulumix.Output[[]DomainStatus]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusArrayOutput) Index(i pulumi.IntInput) DomainStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatus {
		return vs[0].([]DomainStatus)[vs[1].(int)]
	}).(DomainStatusOutput)
}

type DomainStatusDnsConfig struct {
	Host  *string `pulumi:"host"`
	Ttl   *int    `pulumi:"ttl"`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// DomainStatusDnsConfigInput is an input type that accepts DomainStatusDnsConfigArgs and DomainStatusDnsConfigOutput values.
// You can construct a concrete instance of `DomainStatusDnsConfigInput` via:
//
//	DomainStatusDnsConfigArgs{...}
type DomainStatusDnsConfigInput interface {
	pulumi.Input

	ToDomainStatusDnsConfigOutput() DomainStatusDnsConfigOutput
	ToDomainStatusDnsConfigOutputWithContext(context.Context) DomainStatusDnsConfigOutput
}

type DomainStatusDnsConfigArgs struct {
	Host  pulumi.StringPtrInput `pulumi:"host"`
	Ttl   pulumi.IntPtrInput    `pulumi:"ttl"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DomainStatusDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusDnsConfig)(nil)).Elem()
}

func (i DomainStatusDnsConfigArgs) ToDomainStatusDnsConfigOutput() DomainStatusDnsConfigOutput {
	return i.ToDomainStatusDnsConfigOutputWithContext(context.Background())
}

func (i DomainStatusDnsConfigArgs) ToDomainStatusDnsConfigOutputWithContext(ctx context.Context) DomainStatusDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusDnsConfigOutput)
}

func (i DomainStatusDnsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatusDnsConfig] {
	return pulumix.Output[DomainStatusDnsConfig]{
		OutputState: i.ToDomainStatusDnsConfigOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusDnsConfigArrayInput is an input type that accepts DomainStatusDnsConfigArray and DomainStatusDnsConfigArrayOutput values.
// You can construct a concrete instance of `DomainStatusDnsConfigArrayInput` via:
//
//	DomainStatusDnsConfigArray{ DomainStatusDnsConfigArgs{...} }
type DomainStatusDnsConfigArrayInput interface {
	pulumi.Input

	ToDomainStatusDnsConfigArrayOutput() DomainStatusDnsConfigArrayOutput
	ToDomainStatusDnsConfigArrayOutputWithContext(context.Context) DomainStatusDnsConfigArrayOutput
}

type DomainStatusDnsConfigArray []DomainStatusDnsConfigInput

func (DomainStatusDnsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusDnsConfig)(nil)).Elem()
}

func (i DomainStatusDnsConfigArray) ToDomainStatusDnsConfigArrayOutput() DomainStatusDnsConfigArrayOutput {
	return i.ToDomainStatusDnsConfigArrayOutputWithContext(context.Background())
}

func (i DomainStatusDnsConfigArray) ToDomainStatusDnsConfigArrayOutputWithContext(ctx context.Context) DomainStatusDnsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusDnsConfigArrayOutput)
}

func (i DomainStatusDnsConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusDnsConfig] {
	return pulumix.Output[[]DomainStatusDnsConfig]{
		OutputState: i.ToDomainStatusDnsConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusDnsConfigOutput struct{ *pulumi.OutputState }

func (DomainStatusDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusDnsConfig)(nil)).Elem()
}

func (o DomainStatusDnsConfigOutput) ToDomainStatusDnsConfigOutput() DomainStatusDnsConfigOutput {
	return o
}

func (o DomainStatusDnsConfigOutput) ToDomainStatusDnsConfigOutputWithContext(ctx context.Context) DomainStatusDnsConfigOutput {
	return o
}

func (o DomainStatusDnsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatusDnsConfig] {
	return pulumix.Output[DomainStatusDnsConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusDnsConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o DomainStatusDnsConfigOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

func (o DomainStatusDnsConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o DomainStatusDnsConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusDnsConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DomainStatusDnsConfigArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusDnsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusDnsConfig)(nil)).Elem()
}

func (o DomainStatusDnsConfigArrayOutput) ToDomainStatusDnsConfigArrayOutput() DomainStatusDnsConfigArrayOutput {
	return o
}

func (o DomainStatusDnsConfigArrayOutput) ToDomainStatusDnsConfigArrayOutputWithContext(ctx context.Context) DomainStatusDnsConfigArrayOutput {
	return o
}

func (o DomainStatusDnsConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusDnsConfig] {
	return pulumix.Output[[]DomainStatusDnsConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusDnsConfigArrayOutput) Index(i pulumi.IntInput) DomainStatusDnsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatusDnsConfig {
		return vs[0].([]DomainStatusDnsConfig)[vs[1].(int)]
	}).(DomainStatusDnsConfigOutput)
}

type DomainStatusEndpoint struct {
	Url          *string `pulumi:"url"`
	WorkloadLink *string `pulumi:"workloadLink"`
}

// DomainStatusEndpointInput is an input type that accepts DomainStatusEndpointArgs and DomainStatusEndpointOutput values.
// You can construct a concrete instance of `DomainStatusEndpointInput` via:
//
//	DomainStatusEndpointArgs{...}
type DomainStatusEndpointInput interface {
	pulumi.Input

	ToDomainStatusEndpointOutput() DomainStatusEndpointOutput
	ToDomainStatusEndpointOutputWithContext(context.Context) DomainStatusEndpointOutput
}

type DomainStatusEndpointArgs struct {
	Url          pulumi.StringPtrInput `pulumi:"url"`
	WorkloadLink pulumi.StringPtrInput `pulumi:"workloadLink"`
}

func (DomainStatusEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusEndpoint)(nil)).Elem()
}

func (i DomainStatusEndpointArgs) ToDomainStatusEndpointOutput() DomainStatusEndpointOutput {
	return i.ToDomainStatusEndpointOutputWithContext(context.Background())
}

func (i DomainStatusEndpointArgs) ToDomainStatusEndpointOutputWithContext(ctx context.Context) DomainStatusEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusEndpointOutput)
}

func (i DomainStatusEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatusEndpoint] {
	return pulumix.Output[DomainStatusEndpoint]{
		OutputState: i.ToDomainStatusEndpointOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusEndpointArrayInput is an input type that accepts DomainStatusEndpointArray and DomainStatusEndpointArrayOutput values.
// You can construct a concrete instance of `DomainStatusEndpointArrayInput` via:
//
//	DomainStatusEndpointArray{ DomainStatusEndpointArgs{...} }
type DomainStatusEndpointArrayInput interface {
	pulumi.Input

	ToDomainStatusEndpointArrayOutput() DomainStatusEndpointArrayOutput
	ToDomainStatusEndpointArrayOutputWithContext(context.Context) DomainStatusEndpointArrayOutput
}

type DomainStatusEndpointArray []DomainStatusEndpointInput

func (DomainStatusEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusEndpoint)(nil)).Elem()
}

func (i DomainStatusEndpointArray) ToDomainStatusEndpointArrayOutput() DomainStatusEndpointArrayOutput {
	return i.ToDomainStatusEndpointArrayOutputWithContext(context.Background())
}

func (i DomainStatusEndpointArray) ToDomainStatusEndpointArrayOutputWithContext(ctx context.Context) DomainStatusEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusEndpointArrayOutput)
}

func (i DomainStatusEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusEndpoint] {
	return pulumix.Output[[]DomainStatusEndpoint]{
		OutputState: i.ToDomainStatusEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusEndpointOutput struct{ *pulumi.OutputState }

func (DomainStatusEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusEndpoint)(nil)).Elem()
}

func (o DomainStatusEndpointOutput) ToDomainStatusEndpointOutput() DomainStatusEndpointOutput {
	return o
}

func (o DomainStatusEndpointOutput) ToDomainStatusEndpointOutputWithContext(ctx context.Context) DomainStatusEndpointOutput {
	return o
}

func (o DomainStatusEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatusEndpoint] {
	return pulumix.Output[DomainStatusEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusEndpointOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusEndpoint) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func (o DomainStatusEndpointOutput) WorkloadLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusEndpoint) *string { return v.WorkloadLink }).(pulumi.StringPtrOutput)
}

type DomainStatusEndpointArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusEndpoint)(nil)).Elem()
}

func (o DomainStatusEndpointArrayOutput) ToDomainStatusEndpointArrayOutput() DomainStatusEndpointArrayOutput {
	return o
}

func (o DomainStatusEndpointArrayOutput) ToDomainStatusEndpointArrayOutputWithContext(ctx context.Context) DomainStatusEndpointArrayOutput {
	return o
}

func (o DomainStatusEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusEndpoint] {
	return pulumix.Output[[]DomainStatusEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusEndpointArrayOutput) Index(i pulumi.IntInput) DomainStatusEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatusEndpoint {
		return vs[0].([]DomainStatusEndpoint)[vs[1].(int)]
	}).(DomainStatusEndpointOutput)
}

type DomainStatusLocation struct {
	CertificateStatus *string `pulumi:"certificateStatus"`
	Name              *string `pulumi:"name"`
}

// DomainStatusLocationInput is an input type that accepts DomainStatusLocationArgs and DomainStatusLocationOutput values.
// You can construct a concrete instance of `DomainStatusLocationInput` via:
//
//	DomainStatusLocationArgs{...}
type DomainStatusLocationInput interface {
	pulumi.Input

	ToDomainStatusLocationOutput() DomainStatusLocationOutput
	ToDomainStatusLocationOutputWithContext(context.Context) DomainStatusLocationOutput
}

type DomainStatusLocationArgs struct {
	CertificateStatus pulumi.StringPtrInput `pulumi:"certificateStatus"`
	Name              pulumi.StringPtrInput `pulumi:"name"`
}

func (DomainStatusLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusLocation)(nil)).Elem()
}

func (i DomainStatusLocationArgs) ToDomainStatusLocationOutput() DomainStatusLocationOutput {
	return i.ToDomainStatusLocationOutputWithContext(context.Background())
}

func (i DomainStatusLocationArgs) ToDomainStatusLocationOutputWithContext(ctx context.Context) DomainStatusLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusLocationOutput)
}

func (i DomainStatusLocationArgs) ToOutput(ctx context.Context) pulumix.Output[DomainStatusLocation] {
	return pulumix.Output[DomainStatusLocation]{
		OutputState: i.ToDomainStatusLocationOutputWithContext(ctx).OutputState,
	}
}

// DomainStatusLocationArrayInput is an input type that accepts DomainStatusLocationArray and DomainStatusLocationArrayOutput values.
// You can construct a concrete instance of `DomainStatusLocationArrayInput` via:
//
//	DomainStatusLocationArray{ DomainStatusLocationArgs{...} }
type DomainStatusLocationArrayInput interface {
	pulumi.Input

	ToDomainStatusLocationArrayOutput() DomainStatusLocationArrayOutput
	ToDomainStatusLocationArrayOutputWithContext(context.Context) DomainStatusLocationArrayOutput
}

type DomainStatusLocationArray []DomainStatusLocationInput

func (DomainStatusLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusLocation)(nil)).Elem()
}

func (i DomainStatusLocationArray) ToDomainStatusLocationArrayOutput() DomainStatusLocationArrayOutput {
	return i.ToDomainStatusLocationArrayOutputWithContext(context.Background())
}

func (i DomainStatusLocationArray) ToDomainStatusLocationArrayOutputWithContext(ctx context.Context) DomainStatusLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusLocationArrayOutput)
}

func (i DomainStatusLocationArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusLocation] {
	return pulumix.Output[[]DomainStatusLocation]{
		OutputState: i.ToDomainStatusLocationArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainStatusLocationOutput struct{ *pulumi.OutputState }

func (DomainStatusLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusLocation)(nil)).Elem()
}

func (o DomainStatusLocationOutput) ToDomainStatusLocationOutput() DomainStatusLocationOutput {
	return o
}

func (o DomainStatusLocationOutput) ToDomainStatusLocationOutputWithContext(ctx context.Context) DomainStatusLocationOutput {
	return o
}

func (o DomainStatusLocationOutput) ToOutput(ctx context.Context) pulumix.Output[DomainStatusLocation] {
	return pulumix.Output[DomainStatusLocation]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusLocationOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusLocation) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

func (o DomainStatusLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainStatusLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DomainStatusLocationArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusLocation)(nil)).Elem()
}

func (o DomainStatusLocationArrayOutput) ToDomainStatusLocationArrayOutput() DomainStatusLocationArrayOutput {
	return o
}

func (o DomainStatusLocationArrayOutput) ToDomainStatusLocationArrayOutputWithContext(ctx context.Context) DomainStatusLocationArrayOutput {
	return o
}

func (o DomainStatusLocationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainStatusLocation] {
	return pulumix.Output[[]DomainStatusLocation]{
		OutputState: o.OutputState,
	}
}

func (o DomainStatusLocationArrayOutput) Index(i pulumi.IntInput) DomainStatusLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatusLocation {
		return vs[0].([]DomainStatusLocation)[vs[1].(int)]
	}).(DomainStatusLocationOutput)
}

type GroupIdentityMatcher struct {
	Expression string  `pulumi:"expression"`
	Language   *string `pulumi:"language"`
}

// GroupIdentityMatcherInput is an input type that accepts GroupIdentityMatcherArgs and GroupIdentityMatcherOutput values.
// You can construct a concrete instance of `GroupIdentityMatcherInput` via:
//
//	GroupIdentityMatcherArgs{...}
type GroupIdentityMatcherInput interface {
	pulumi.Input

	ToGroupIdentityMatcherOutput() GroupIdentityMatcherOutput
	ToGroupIdentityMatcherOutputWithContext(context.Context) GroupIdentityMatcherOutput
}

type GroupIdentityMatcherArgs struct {
	Expression pulumi.StringInput    `pulumi:"expression"`
	Language   pulumi.StringPtrInput `pulumi:"language"`
}

func (GroupIdentityMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentityMatcher)(nil)).Elem()
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherOutput() GroupIdentityMatcherOutput {
	return i.ToGroupIdentityMatcherOutputWithContext(context.Background())
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherOutputWithContext(ctx context.Context) GroupIdentityMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityMatcherOutput)
}

func (i GroupIdentityMatcherArgs) ToOutput(ctx context.Context) pulumix.Output[GroupIdentityMatcher] {
	return pulumix.Output[GroupIdentityMatcher]{
		OutputState: i.ToGroupIdentityMatcherOutputWithContext(ctx).OutputState,
	}
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return i.ToGroupIdentityMatcherPtrOutputWithContext(context.Background())
}

func (i GroupIdentityMatcherArgs) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityMatcherOutput).ToGroupIdentityMatcherPtrOutputWithContext(ctx)
}

// GroupIdentityMatcherPtrInput is an input type that accepts GroupIdentityMatcherArgs, GroupIdentityMatcherPtr and GroupIdentityMatcherPtrOutput values.
// You can construct a concrete instance of `GroupIdentityMatcherPtrInput` via:
//
//	        GroupIdentityMatcherArgs{...}
//
//	or:
//
//	        nil
type GroupIdentityMatcherPtrInput interface {
	pulumi.Input

	ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput
	ToGroupIdentityMatcherPtrOutputWithContext(context.Context) GroupIdentityMatcherPtrOutput
}

type groupIdentityMatcherPtrType GroupIdentityMatcherArgs

func GroupIdentityMatcherPtr(v *GroupIdentityMatcherArgs) GroupIdentityMatcherPtrInput {
	return (*groupIdentityMatcherPtrType)(v)
}

func (*groupIdentityMatcherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentityMatcher)(nil)).Elem()
}

func (i *groupIdentityMatcherPtrType) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return i.ToGroupIdentityMatcherPtrOutputWithContext(context.Background())
}

func (i *groupIdentityMatcherPtrType) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityMatcherPtrOutput)
}

func (i *groupIdentityMatcherPtrType) ToOutput(ctx context.Context) pulumix.Output[*GroupIdentityMatcher] {
	return pulumix.Output[*GroupIdentityMatcher]{
		OutputState: i.ToGroupIdentityMatcherPtrOutputWithContext(ctx).OutputState,
	}
}

type GroupIdentityMatcherOutput struct{ *pulumi.OutputState }

func (GroupIdentityMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentityMatcher)(nil)).Elem()
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherOutput() GroupIdentityMatcherOutput {
	return o
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherOutputWithContext(ctx context.Context) GroupIdentityMatcherOutput {
	return o
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return o.ToGroupIdentityMatcherPtrOutputWithContext(context.Background())
}

func (o GroupIdentityMatcherOutput) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupIdentityMatcher) *GroupIdentityMatcher {
		return &v
	}).(GroupIdentityMatcherPtrOutput)
}

func (o GroupIdentityMatcherOutput) ToOutput(ctx context.Context) pulumix.Output[GroupIdentityMatcher] {
	return pulumix.Output[GroupIdentityMatcher]{
		OutputState: o.OutputState,
	}
}

func (o GroupIdentityMatcherOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GroupIdentityMatcher) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GroupIdentityMatcherOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupIdentityMatcher) *string { return v.Language }).(pulumi.StringPtrOutput)
}

type GroupIdentityMatcherPtrOutput struct{ *pulumi.OutputState }

func (GroupIdentityMatcherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentityMatcher)(nil)).Elem()
}

func (o GroupIdentityMatcherPtrOutput) ToGroupIdentityMatcherPtrOutput() GroupIdentityMatcherPtrOutput {
	return o
}

func (o GroupIdentityMatcherPtrOutput) ToGroupIdentityMatcherPtrOutputWithContext(ctx context.Context) GroupIdentityMatcherPtrOutput {
	return o
}

func (o GroupIdentityMatcherPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GroupIdentityMatcher] {
	return pulumix.Output[*GroupIdentityMatcher]{
		OutputState: o.OutputState,
	}
}

func (o GroupIdentityMatcherPtrOutput) Elem() GroupIdentityMatcherOutput {
	return o.ApplyT(func(v *GroupIdentityMatcher) GroupIdentityMatcher {
		if v != nil {
			return *v
		}
		var ret GroupIdentityMatcher
		return ret
	}).(GroupIdentityMatcherOutput)
}

func (o GroupIdentityMatcherPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentityMatcher) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o GroupIdentityMatcherPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentityMatcher) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

type GroupMemberQuery struct {
	Fetch *string               `pulumi:"fetch"`
	Spec  *GroupMemberQuerySpec `pulumi:"spec"`
}

// GroupMemberQueryInput is an input type that accepts GroupMemberQueryArgs and GroupMemberQueryOutput values.
// You can construct a concrete instance of `GroupMemberQueryInput` via:
//
//	GroupMemberQueryArgs{...}
type GroupMemberQueryInput interface {
	pulumi.Input

	ToGroupMemberQueryOutput() GroupMemberQueryOutput
	ToGroupMemberQueryOutputWithContext(context.Context) GroupMemberQueryOutput
}

type GroupMemberQueryArgs struct {
	Fetch pulumi.StringPtrInput        `pulumi:"fetch"`
	Spec  GroupMemberQuerySpecPtrInput `pulumi:"spec"`
}

func (GroupMemberQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuery)(nil)).Elem()
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryOutput() GroupMemberQueryOutput {
	return i.ToGroupMemberQueryOutputWithContext(context.Background())
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryOutputWithContext(ctx context.Context) GroupMemberQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQueryOutput)
}

func (i GroupMemberQueryArgs) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuery] {
	return pulumix.Output[GroupMemberQuery]{
		OutputState: i.ToGroupMemberQueryOutputWithContext(ctx).OutputState,
	}
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return i.ToGroupMemberQueryPtrOutputWithContext(context.Background())
}

func (i GroupMemberQueryArgs) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQueryOutput).ToGroupMemberQueryPtrOutputWithContext(ctx)
}

// GroupMemberQueryPtrInput is an input type that accepts GroupMemberQueryArgs, GroupMemberQueryPtr and GroupMemberQueryPtrOutput values.
// You can construct a concrete instance of `GroupMemberQueryPtrInput` via:
//
//	        GroupMemberQueryArgs{...}
//
//	or:
//
//	        nil
type GroupMemberQueryPtrInput interface {
	pulumi.Input

	ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput
	ToGroupMemberQueryPtrOutputWithContext(context.Context) GroupMemberQueryPtrOutput
}

type groupMemberQueryPtrType GroupMemberQueryArgs

func GroupMemberQueryPtr(v *GroupMemberQueryArgs) GroupMemberQueryPtrInput {
	return (*groupMemberQueryPtrType)(v)
}

func (*groupMemberQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuery)(nil)).Elem()
}

func (i *groupMemberQueryPtrType) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return i.ToGroupMemberQueryPtrOutputWithContext(context.Background())
}

func (i *groupMemberQueryPtrType) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQueryPtrOutput)
}

func (i *groupMemberQueryPtrType) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuery] {
	return pulumix.Output[*GroupMemberQuery]{
		OutputState: i.ToGroupMemberQueryPtrOutputWithContext(ctx).OutputState,
	}
}

type GroupMemberQueryOutput struct{ *pulumi.OutputState }

func (GroupMemberQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuery)(nil)).Elem()
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryOutput() GroupMemberQueryOutput {
	return o
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryOutputWithContext(ctx context.Context) GroupMemberQueryOutput {
	return o
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return o.ToGroupMemberQueryPtrOutputWithContext(context.Background())
}

func (o GroupMemberQueryOutput) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMemberQuery) *GroupMemberQuery {
		return &v
	}).(GroupMemberQueryPtrOutput)
}

func (o GroupMemberQueryOutput) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuery] {
	return pulumix.Output[GroupMemberQuery]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQueryOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuery) *string { return v.Fetch }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQueryOutput) Spec() GroupMemberQuerySpecPtrOutput {
	return o.ApplyT(func(v GroupMemberQuery) *GroupMemberQuerySpec { return v.Spec }).(GroupMemberQuerySpecPtrOutput)
}

type GroupMemberQueryPtrOutput struct{ *pulumi.OutputState }

func (GroupMemberQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuery)(nil)).Elem()
}

func (o GroupMemberQueryPtrOutput) ToGroupMemberQueryPtrOutput() GroupMemberQueryPtrOutput {
	return o
}

func (o GroupMemberQueryPtrOutput) ToGroupMemberQueryPtrOutputWithContext(ctx context.Context) GroupMemberQueryPtrOutput {
	return o
}

func (o GroupMemberQueryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuery] {
	return pulumix.Output[*GroupMemberQuery]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQueryPtrOutput) Elem() GroupMemberQueryOutput {
	return o.ApplyT(func(v *GroupMemberQuery) GroupMemberQuery {
		if v != nil {
			return *v
		}
		var ret GroupMemberQuery
		return ret
	}).(GroupMemberQueryOutput)
}

func (o GroupMemberQueryPtrOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMemberQuery) *string {
		if v == nil {
			return nil
		}
		return v.Fetch
	}).(pulumi.StringPtrOutput)
}

func (o GroupMemberQueryPtrOutput) Spec() GroupMemberQuerySpecPtrOutput {
	return o.ApplyT(func(v *GroupMemberQuery) *GroupMemberQuerySpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(GroupMemberQuerySpecPtrOutput)
}

type GroupMemberQuerySpec struct {
	Match *string                    `pulumi:"match"`
	Terms []GroupMemberQuerySpecTerm `pulumi:"terms"`
}

// GroupMemberQuerySpecInput is an input type that accepts GroupMemberQuerySpecArgs and GroupMemberQuerySpecOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecInput` via:
//
//	GroupMemberQuerySpecArgs{...}
type GroupMemberQuerySpecInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecOutput() GroupMemberQuerySpecOutput
	ToGroupMemberQuerySpecOutputWithContext(context.Context) GroupMemberQuerySpecOutput
}

type GroupMemberQuerySpecArgs struct {
	Match pulumi.StringPtrInput              `pulumi:"match"`
	Terms GroupMemberQuerySpecTermArrayInput `pulumi:"terms"`
}

func (GroupMemberQuerySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpec)(nil)).Elem()
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecOutput() GroupMemberQuerySpecOutput {
	return i.ToGroupMemberQuerySpecOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecOutputWithContext(ctx context.Context) GroupMemberQuerySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecOutput)
}

func (i GroupMemberQuerySpecArgs) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpec] {
	return pulumix.Output[GroupMemberQuerySpec]{
		OutputState: i.ToGroupMemberQuerySpecOutputWithContext(ctx).OutputState,
	}
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return i.ToGroupMemberQuerySpecPtrOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecArgs) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecOutput).ToGroupMemberQuerySpecPtrOutputWithContext(ctx)
}

// GroupMemberQuerySpecPtrInput is an input type that accepts GroupMemberQuerySpecArgs, GroupMemberQuerySpecPtr and GroupMemberQuerySpecPtrOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecPtrInput` via:
//
//	        GroupMemberQuerySpecArgs{...}
//
//	or:
//
//	        nil
type GroupMemberQuerySpecPtrInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput
	ToGroupMemberQuerySpecPtrOutputWithContext(context.Context) GroupMemberQuerySpecPtrOutput
}

type groupMemberQuerySpecPtrType GroupMemberQuerySpecArgs

func GroupMemberQuerySpecPtr(v *GroupMemberQuerySpecArgs) GroupMemberQuerySpecPtrInput {
	return (*groupMemberQuerySpecPtrType)(v)
}

func (*groupMemberQuerySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuerySpec)(nil)).Elem()
}

func (i *groupMemberQuerySpecPtrType) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return i.ToGroupMemberQuerySpecPtrOutputWithContext(context.Background())
}

func (i *groupMemberQuerySpecPtrType) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecPtrOutput)
}

func (i *groupMemberQuerySpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuerySpec] {
	return pulumix.Output[*GroupMemberQuerySpec]{
		OutputState: i.ToGroupMemberQuerySpecPtrOutputWithContext(ctx).OutputState,
	}
}

type GroupMemberQuerySpecOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpec)(nil)).Elem()
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecOutput() GroupMemberQuerySpecOutput {
	return o
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecOutputWithContext(ctx context.Context) GroupMemberQuerySpecOutput {
	return o
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return o.ToGroupMemberQuerySpecPtrOutputWithContext(context.Background())
}

func (o GroupMemberQuerySpecOutput) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMemberQuerySpec) *GroupMemberQuerySpec {
		return &v
	}).(GroupMemberQuerySpecPtrOutput)
}

func (o GroupMemberQuerySpecOutput) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpec] {
	return pulumix.Output[GroupMemberQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpec) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecOutput) Terms() GroupMemberQuerySpecTermArrayOutput {
	return o.ApplyT(func(v GroupMemberQuerySpec) []GroupMemberQuerySpecTerm { return v.Terms }).(GroupMemberQuerySpecTermArrayOutput)
}

type GroupMemberQuerySpecPtrOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMemberQuerySpec)(nil)).Elem()
}

func (o GroupMemberQuerySpecPtrOutput) ToGroupMemberQuerySpecPtrOutput() GroupMemberQuerySpecPtrOutput {
	return o
}

func (o GroupMemberQuerySpecPtrOutput) ToGroupMemberQuerySpecPtrOutputWithContext(ctx context.Context) GroupMemberQuerySpecPtrOutput {
	return o
}

func (o GroupMemberQuerySpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GroupMemberQuerySpec] {
	return pulumix.Output[*GroupMemberQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecPtrOutput) Elem() GroupMemberQuerySpecOutput {
	return o.ApplyT(func(v *GroupMemberQuerySpec) GroupMemberQuerySpec {
		if v != nil {
			return *v
		}
		var ret GroupMemberQuerySpec
		return ret
	}).(GroupMemberQuerySpecOutput)
}

func (o GroupMemberQuerySpecPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMemberQuerySpec) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecPtrOutput) Terms() GroupMemberQuerySpecTermArrayOutput {
	return o.ApplyT(func(v *GroupMemberQuerySpec) []GroupMemberQuerySpecTerm {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(GroupMemberQuerySpecTermArrayOutput)
}

type GroupMemberQuerySpecTerm struct {
	Op       *string `pulumi:"op"`
	Property *string `pulumi:"property"`
	Tag      *string `pulumi:"tag"`
	Value    *string `pulumi:"value"`
}

// GroupMemberQuerySpecTermInput is an input type that accepts GroupMemberQuerySpecTermArgs and GroupMemberQuerySpecTermOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecTermInput` via:
//
//	GroupMemberQuerySpecTermArgs{...}
type GroupMemberQuerySpecTermInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecTermOutput() GroupMemberQuerySpecTermOutput
	ToGroupMemberQuerySpecTermOutputWithContext(context.Context) GroupMemberQuerySpecTermOutput
}

type GroupMemberQuerySpecTermArgs struct {
	Op       pulumi.StringPtrInput `pulumi:"op"`
	Property pulumi.StringPtrInput `pulumi:"property"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (GroupMemberQuerySpecTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (i GroupMemberQuerySpecTermArgs) ToGroupMemberQuerySpecTermOutput() GroupMemberQuerySpecTermOutput {
	return i.ToGroupMemberQuerySpecTermOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecTermArgs) ToGroupMemberQuerySpecTermOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecTermOutput)
}

func (i GroupMemberQuerySpecTermArgs) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpecTerm] {
	return pulumix.Output[GroupMemberQuerySpecTerm]{
		OutputState: i.ToGroupMemberQuerySpecTermOutputWithContext(ctx).OutputState,
	}
}

// GroupMemberQuerySpecTermArrayInput is an input type that accepts GroupMemberQuerySpecTermArray and GroupMemberQuerySpecTermArrayOutput values.
// You can construct a concrete instance of `GroupMemberQuerySpecTermArrayInput` via:
//
//	GroupMemberQuerySpecTermArray{ GroupMemberQuerySpecTermArgs{...} }
type GroupMemberQuerySpecTermArrayInput interface {
	pulumi.Input

	ToGroupMemberQuerySpecTermArrayOutput() GroupMemberQuerySpecTermArrayOutput
	ToGroupMemberQuerySpecTermArrayOutputWithContext(context.Context) GroupMemberQuerySpecTermArrayOutput
}

type GroupMemberQuerySpecTermArray []GroupMemberQuerySpecTermInput

func (GroupMemberQuerySpecTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (i GroupMemberQuerySpecTermArray) ToGroupMemberQuerySpecTermArrayOutput() GroupMemberQuerySpecTermArrayOutput {
	return i.ToGroupMemberQuerySpecTermArrayOutputWithContext(context.Background())
}

func (i GroupMemberQuerySpecTermArray) ToGroupMemberQuerySpecTermArrayOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberQuerySpecTermArrayOutput)
}

func (i GroupMemberQuerySpecTermArray) ToOutput(ctx context.Context) pulumix.Output[[]GroupMemberQuerySpecTerm] {
	return pulumix.Output[[]GroupMemberQuerySpecTerm]{
		OutputState: i.ToGroupMemberQuerySpecTermArrayOutputWithContext(ctx).OutputState,
	}
}

type GroupMemberQuerySpecTermOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (o GroupMemberQuerySpecTermOutput) ToGroupMemberQuerySpecTermOutput() GroupMemberQuerySpecTermOutput {
	return o
}

func (o GroupMemberQuerySpecTermOutput) ToGroupMemberQuerySpecTermOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermOutput {
	return o
}

func (o GroupMemberQuerySpecTermOutput) ToOutput(ctx context.Context) pulumix.Output[GroupMemberQuerySpecTerm] {
	return pulumix.Output[GroupMemberQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecTermOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecTermOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecTermOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o GroupMemberQuerySpecTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMemberQuerySpecTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GroupMemberQuerySpecTermArrayOutput struct{ *pulumi.OutputState }

func (GroupMemberQuerySpecTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMemberQuerySpecTerm)(nil)).Elem()
}

func (o GroupMemberQuerySpecTermArrayOutput) ToGroupMemberQuerySpecTermArrayOutput() GroupMemberQuerySpecTermArrayOutput {
	return o
}

func (o GroupMemberQuerySpecTermArrayOutput) ToGroupMemberQuerySpecTermArrayOutputWithContext(ctx context.Context) GroupMemberQuerySpecTermArrayOutput {
	return o
}

func (o GroupMemberQuerySpecTermArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GroupMemberQuerySpecTerm] {
	return pulumix.Output[[]GroupMemberQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GroupMemberQuerySpecTermArrayOutput) Index(i pulumi.IntInput) GroupMemberQuerySpecTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMemberQuerySpecTerm {
		return vs[0].([]GroupMemberQuerySpecTerm)[vs[1].(int)]
	}).(GroupMemberQuerySpecTermOutput)
}

type GvcControlplaneTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Sampling   int               `pulumi:"sampling"`
}

// GvcControlplaneTracingInput is an input type that accepts GvcControlplaneTracingArgs and GvcControlplaneTracingOutput values.
// You can construct a concrete instance of `GvcControlplaneTracingInput` via:
//
//	GvcControlplaneTracingArgs{...}
type GvcControlplaneTracingInput interface {
	pulumi.Input

	ToGvcControlplaneTracingOutput() GvcControlplaneTracingOutput
	ToGvcControlplaneTracingOutputWithContext(context.Context) GvcControlplaneTracingOutput
}

type GvcControlplaneTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Sampling   pulumi.IntInput       `pulumi:"sampling"`
}

func (GvcControlplaneTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcControlplaneTracing)(nil)).Elem()
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingOutput() GvcControlplaneTracingOutput {
	return i.ToGvcControlplaneTracingOutputWithContext(context.Background())
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingOutputWithContext(ctx context.Context) GvcControlplaneTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcControlplaneTracingOutput)
}

func (i GvcControlplaneTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GvcControlplaneTracing] {
	return pulumix.Output[GvcControlplaneTracing]{
		OutputState: i.ToGvcControlplaneTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return i.ToGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i GvcControlplaneTracingArgs) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcControlplaneTracingOutput).ToGvcControlplaneTracingPtrOutputWithContext(ctx)
}

// GvcControlplaneTracingPtrInput is an input type that accepts GvcControlplaneTracingArgs, GvcControlplaneTracingPtr and GvcControlplaneTracingPtrOutput values.
// You can construct a concrete instance of `GvcControlplaneTracingPtrInput` via:
//
//	        GvcControlplaneTracingArgs{...}
//
//	or:
//
//	        nil
type GvcControlplaneTracingPtrInput interface {
	pulumi.Input

	ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput
	ToGvcControlplaneTracingPtrOutputWithContext(context.Context) GvcControlplaneTracingPtrOutput
}

type gvcControlplaneTracingPtrType GvcControlplaneTracingArgs

func GvcControlplaneTracingPtr(v *GvcControlplaneTracingArgs) GvcControlplaneTracingPtrInput {
	return (*gvcControlplaneTracingPtrType)(v)
}

func (*gvcControlplaneTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcControlplaneTracing)(nil)).Elem()
}

func (i *gvcControlplaneTracingPtrType) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return i.ToGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i *gvcControlplaneTracingPtrType) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcControlplaneTracingPtrOutput)
}

func (i *gvcControlplaneTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcControlplaneTracing] {
	return pulumix.Output[*GvcControlplaneTracing]{
		OutputState: i.ToGvcControlplaneTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcControlplaneTracingOutput struct{ *pulumi.OutputState }

func (GvcControlplaneTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcControlplaneTracing)(nil)).Elem()
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingOutput() GvcControlplaneTracingOutput {
	return o
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingOutputWithContext(ctx context.Context) GvcControlplaneTracingOutput {
	return o
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return o.ToGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (o GvcControlplaneTracingOutput) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcControlplaneTracing) *GvcControlplaneTracing {
		return &v
	}).(GvcControlplaneTracingPtrOutput)
}

func (o GvcControlplaneTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GvcControlplaneTracing] {
	return pulumix.Output[GvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcControlplaneTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GvcControlplaneTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GvcControlplaneTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v GvcControlplaneTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type GvcControlplaneTracingPtrOutput struct{ *pulumi.OutputState }

func (GvcControlplaneTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcControlplaneTracing)(nil)).Elem()
}

func (o GvcControlplaneTracingPtrOutput) ToGvcControlplaneTracingPtrOutput() GvcControlplaneTracingPtrOutput {
	return o
}

func (o GvcControlplaneTracingPtrOutput) ToGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GvcControlplaneTracingPtrOutput {
	return o
}

func (o GvcControlplaneTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcControlplaneTracing] {
	return pulumix.Output[*GvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcControlplaneTracingPtrOutput) Elem() GvcControlplaneTracingOutput {
	return o.ApplyT(func(v *GvcControlplaneTracing) GvcControlplaneTracing {
		if v != nil {
			return *v
		}
		var ret GvcControlplaneTracing
		return ret
	}).(GvcControlplaneTracingOutput)
}

func (o GvcControlplaneTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GvcControlplaneTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GvcControlplaneTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GvcControlplaneTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type GvcLightstepTracing struct {
	Credentials *string           `pulumi:"credentials"`
	CustomTags  map[string]string `pulumi:"customTags"`
	Endpoint    string            `pulumi:"endpoint"`
	Sampling    int               `pulumi:"sampling"`
}

// GvcLightstepTracingInput is an input type that accepts GvcLightstepTracingArgs and GvcLightstepTracingOutput values.
// You can construct a concrete instance of `GvcLightstepTracingInput` via:
//
//	GvcLightstepTracingArgs{...}
type GvcLightstepTracingInput interface {
	pulumi.Input

	ToGvcLightstepTracingOutput() GvcLightstepTracingOutput
	ToGvcLightstepTracingOutputWithContext(context.Context) GvcLightstepTracingOutput
}

type GvcLightstepTracingArgs struct {
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	CustomTags  pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint    pulumi.StringInput    `pulumi:"endpoint"`
	Sampling    pulumi.IntInput       `pulumi:"sampling"`
}

func (GvcLightstepTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLightstepTracing)(nil)).Elem()
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingOutput() GvcLightstepTracingOutput {
	return i.ToGvcLightstepTracingOutputWithContext(context.Background())
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingOutputWithContext(ctx context.Context) GvcLightstepTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLightstepTracingOutput)
}

func (i GvcLightstepTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GvcLightstepTracing] {
	return pulumix.Output[GvcLightstepTracing]{
		OutputState: i.ToGvcLightstepTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return i.ToGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i GvcLightstepTracingArgs) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLightstepTracingOutput).ToGvcLightstepTracingPtrOutputWithContext(ctx)
}

// GvcLightstepTracingPtrInput is an input type that accepts GvcLightstepTracingArgs, GvcLightstepTracingPtr and GvcLightstepTracingPtrOutput values.
// You can construct a concrete instance of `GvcLightstepTracingPtrInput` via:
//
//	        GvcLightstepTracingArgs{...}
//
//	or:
//
//	        nil
type GvcLightstepTracingPtrInput interface {
	pulumi.Input

	ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput
	ToGvcLightstepTracingPtrOutputWithContext(context.Context) GvcLightstepTracingPtrOutput
}

type gvcLightstepTracingPtrType GvcLightstepTracingArgs

func GvcLightstepTracingPtr(v *GvcLightstepTracingArgs) GvcLightstepTracingPtrInput {
	return (*gvcLightstepTracingPtrType)(v)
}

func (*gvcLightstepTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLightstepTracing)(nil)).Elem()
}

func (i *gvcLightstepTracingPtrType) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return i.ToGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i *gvcLightstepTracingPtrType) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLightstepTracingPtrOutput)
}

func (i *gvcLightstepTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcLightstepTracing] {
	return pulumix.Output[*GvcLightstepTracing]{
		OutputState: i.ToGvcLightstepTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcLightstepTracingOutput struct{ *pulumi.OutputState }

func (GvcLightstepTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLightstepTracing)(nil)).Elem()
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingOutput() GvcLightstepTracingOutput {
	return o
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingOutputWithContext(ctx context.Context) GvcLightstepTracingOutput {
	return o
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return o.ToGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (o GvcLightstepTracingOutput) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcLightstepTracing) *GvcLightstepTracing {
		return &v
	}).(GvcLightstepTracingPtrOutput)
}

func (o GvcLightstepTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GvcLightstepTracing] {
	return pulumix.Output[GvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcLightstepTracingOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GvcLightstepTracing) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

func (o GvcLightstepTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GvcLightstepTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GvcLightstepTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GvcLightstepTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GvcLightstepTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v GvcLightstepTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type GvcLightstepTracingPtrOutput struct{ *pulumi.OutputState }

func (GvcLightstepTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLightstepTracing)(nil)).Elem()
}

func (o GvcLightstepTracingPtrOutput) ToGvcLightstepTracingPtrOutput() GvcLightstepTracingPtrOutput {
	return o
}

func (o GvcLightstepTracingPtrOutput) ToGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GvcLightstepTracingPtrOutput {
	return o
}

func (o GvcLightstepTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcLightstepTracing] {
	return pulumix.Output[*GvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcLightstepTracingPtrOutput) Elem() GvcLightstepTracingOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) GvcLightstepTracing {
		if v != nil {
			return *v
		}
		var ret GvcLightstepTracing
		return ret
	}).(GvcLightstepTracingOutput)
}

func (o GvcLightstepTracingPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o GvcLightstepTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GvcLightstepTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GvcLightstepTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GvcLightstepTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type GvcLoadBalancer struct {
	Dedicated      bool `pulumi:"dedicated"`
	TrustedProxies *int `pulumi:"trustedProxies"`
}

// GvcLoadBalancerInput is an input type that accepts GvcLoadBalancerArgs and GvcLoadBalancerOutput values.
// You can construct a concrete instance of `GvcLoadBalancerInput` via:
//
//	GvcLoadBalancerArgs{...}
type GvcLoadBalancerInput interface {
	pulumi.Input

	ToGvcLoadBalancerOutput() GvcLoadBalancerOutput
	ToGvcLoadBalancerOutputWithContext(context.Context) GvcLoadBalancerOutput
}

type GvcLoadBalancerArgs struct {
	Dedicated      pulumi.BoolInput   `pulumi:"dedicated"`
	TrustedProxies pulumi.IntPtrInput `pulumi:"trustedProxies"`
}

func (GvcLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancer)(nil)).Elem()
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerOutput() GvcLoadBalancerOutput {
	return i.ToGvcLoadBalancerOutputWithContext(context.Background())
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerOutputWithContext(ctx context.Context) GvcLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerOutput)
}

func (i GvcLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancer] {
	return pulumix.Output[GvcLoadBalancer]{
		OutputState: i.ToGvcLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return i.ToGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i GvcLoadBalancerArgs) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerOutput).ToGvcLoadBalancerPtrOutputWithContext(ctx)
}

// GvcLoadBalancerPtrInput is an input type that accepts GvcLoadBalancerArgs, GvcLoadBalancerPtr and GvcLoadBalancerPtrOutput values.
// You can construct a concrete instance of `GvcLoadBalancerPtrInput` via:
//
//	        GvcLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type GvcLoadBalancerPtrInput interface {
	pulumi.Input

	ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput
	ToGvcLoadBalancerPtrOutputWithContext(context.Context) GvcLoadBalancerPtrOutput
}

type gvcLoadBalancerPtrType GvcLoadBalancerArgs

func GvcLoadBalancerPtr(v *GvcLoadBalancerArgs) GvcLoadBalancerPtrInput {
	return (*gvcLoadBalancerPtrType)(v)
}

func (*gvcLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancer)(nil)).Elem()
}

func (i *gvcLoadBalancerPtrType) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return i.ToGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *gvcLoadBalancerPtrType) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcLoadBalancerPtrOutput)
}

func (i *gvcLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancer] {
	return pulumix.Output[*GvcLoadBalancer]{
		OutputState: i.ToGvcLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcLoadBalancerOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcLoadBalancer)(nil)).Elem()
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerOutput() GvcLoadBalancerOutput {
	return o
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerOutputWithContext(ctx context.Context) GvcLoadBalancerOutput {
	return o
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return o.ToGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (o GvcLoadBalancerOutput) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcLoadBalancer) *GvcLoadBalancer {
		return &v
	}).(GvcLoadBalancerPtrOutput)
}

func (o GvcLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[GvcLoadBalancer] {
	return pulumix.Output[GvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerOutput) Dedicated() pulumi.BoolOutput {
	return o.ApplyT(func(v GvcLoadBalancer) bool { return v.Dedicated }).(pulumi.BoolOutput)
}

func (o GvcLoadBalancerOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GvcLoadBalancer) *int { return v.TrustedProxies }).(pulumi.IntPtrOutput)
}

type GvcLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (GvcLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcLoadBalancer)(nil)).Elem()
}

func (o GvcLoadBalancerPtrOutput) ToGvcLoadBalancerPtrOutput() GvcLoadBalancerPtrOutput {
	return o
}

func (o GvcLoadBalancerPtrOutput) ToGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GvcLoadBalancerPtrOutput {
	return o
}

func (o GvcLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcLoadBalancer] {
	return pulumix.Output[*GvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GvcLoadBalancerPtrOutput) Elem() GvcLoadBalancerOutput {
	return o.ApplyT(func(v *GvcLoadBalancer) GvcLoadBalancer {
		if v != nil {
			return *v
		}
		var ret GvcLoadBalancer
		return ret
	}).(GvcLoadBalancerOutput)
}

func (o GvcLoadBalancerPtrOutput) Dedicated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GvcLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return &v.Dedicated
	}).(pulumi.BoolPtrOutput)
}

func (o GvcLoadBalancerPtrOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GvcLoadBalancer) *int {
		if v == nil {
			return nil
		}
		return v.TrustedProxies
	}).(pulumi.IntPtrOutput)
}

type GvcOtelTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Endpoint   string            `pulumi:"endpoint"`
	Sampling   int               `pulumi:"sampling"`
}

// GvcOtelTracingInput is an input type that accepts GvcOtelTracingArgs and GvcOtelTracingOutput values.
// You can construct a concrete instance of `GvcOtelTracingInput` via:
//
//	GvcOtelTracingArgs{...}
type GvcOtelTracingInput interface {
	pulumi.Input

	ToGvcOtelTracingOutput() GvcOtelTracingOutput
	ToGvcOtelTracingOutputWithContext(context.Context) GvcOtelTracingOutput
}

type GvcOtelTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint   pulumi.StringInput    `pulumi:"endpoint"`
	Sampling   pulumi.IntInput       `pulumi:"sampling"`
}

func (GvcOtelTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcOtelTracing)(nil)).Elem()
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingOutput() GvcOtelTracingOutput {
	return i.ToGvcOtelTracingOutputWithContext(context.Background())
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingOutputWithContext(ctx context.Context) GvcOtelTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcOtelTracingOutput)
}

func (i GvcOtelTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GvcOtelTracing] {
	return pulumix.Output[GvcOtelTracing]{
		OutputState: i.ToGvcOtelTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return i.ToGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i GvcOtelTracingArgs) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcOtelTracingOutput).ToGvcOtelTracingPtrOutputWithContext(ctx)
}

// GvcOtelTracingPtrInput is an input type that accepts GvcOtelTracingArgs, GvcOtelTracingPtr and GvcOtelTracingPtrOutput values.
// You can construct a concrete instance of `GvcOtelTracingPtrInput` via:
//
//	        GvcOtelTracingArgs{...}
//
//	or:
//
//	        nil
type GvcOtelTracingPtrInput interface {
	pulumi.Input

	ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput
	ToGvcOtelTracingPtrOutputWithContext(context.Context) GvcOtelTracingPtrOutput
}

type gvcOtelTracingPtrType GvcOtelTracingArgs

func GvcOtelTracingPtr(v *GvcOtelTracingArgs) GvcOtelTracingPtrInput {
	return (*gvcOtelTracingPtrType)(v)
}

func (*gvcOtelTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcOtelTracing)(nil)).Elem()
}

func (i *gvcOtelTracingPtrType) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return i.ToGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i *gvcOtelTracingPtrType) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcOtelTracingPtrOutput)
}

func (i *gvcOtelTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcOtelTracing] {
	return pulumix.Output[*GvcOtelTracing]{
		OutputState: i.ToGvcOtelTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcOtelTracingOutput struct{ *pulumi.OutputState }

func (GvcOtelTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcOtelTracing)(nil)).Elem()
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingOutput() GvcOtelTracingOutput {
	return o
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingOutputWithContext(ctx context.Context) GvcOtelTracingOutput {
	return o
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return o.ToGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (o GvcOtelTracingOutput) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcOtelTracing) *GvcOtelTracing {
		return &v
	}).(GvcOtelTracingPtrOutput)
}

func (o GvcOtelTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GvcOtelTracing] {
	return pulumix.Output[GvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcOtelTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GvcOtelTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GvcOtelTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GvcOtelTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GvcOtelTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v GvcOtelTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type GvcOtelTracingPtrOutput struct{ *pulumi.OutputState }

func (GvcOtelTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcOtelTracing)(nil)).Elem()
}

func (o GvcOtelTracingPtrOutput) ToGvcOtelTracingPtrOutput() GvcOtelTracingPtrOutput {
	return o
}

func (o GvcOtelTracingPtrOutput) ToGvcOtelTracingPtrOutputWithContext(ctx context.Context) GvcOtelTracingPtrOutput {
	return o
}

func (o GvcOtelTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcOtelTracing] {
	return pulumix.Output[*GvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GvcOtelTracingPtrOutput) Elem() GvcOtelTracingOutput {
	return o.ApplyT(func(v *GvcOtelTracing) GvcOtelTracing {
		if v != nil {
			return *v
		}
		var ret GvcOtelTracing
		return ret
	}).(GvcOtelTracingOutput)
}

func (o GvcOtelTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GvcOtelTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GvcOtelTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcOtelTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GvcOtelTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GvcOtelTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type GvcSidecar struct {
	Envoy string `pulumi:"envoy"`
}

// GvcSidecarInput is an input type that accepts GvcSidecarArgs and GvcSidecarOutput values.
// You can construct a concrete instance of `GvcSidecarInput` via:
//
//	GvcSidecarArgs{...}
type GvcSidecarInput interface {
	pulumi.Input

	ToGvcSidecarOutput() GvcSidecarOutput
	ToGvcSidecarOutputWithContext(context.Context) GvcSidecarOutput
}

type GvcSidecarArgs struct {
	Envoy pulumi.StringInput `pulumi:"envoy"`
}

func (GvcSidecarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcSidecar)(nil)).Elem()
}

func (i GvcSidecarArgs) ToGvcSidecarOutput() GvcSidecarOutput {
	return i.ToGvcSidecarOutputWithContext(context.Background())
}

func (i GvcSidecarArgs) ToGvcSidecarOutputWithContext(ctx context.Context) GvcSidecarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcSidecarOutput)
}

func (i GvcSidecarArgs) ToOutput(ctx context.Context) pulumix.Output[GvcSidecar] {
	return pulumix.Output[GvcSidecar]{
		OutputState: i.ToGvcSidecarOutputWithContext(ctx).OutputState,
	}
}

func (i GvcSidecarArgs) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return i.ToGvcSidecarPtrOutputWithContext(context.Background())
}

func (i GvcSidecarArgs) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcSidecarOutput).ToGvcSidecarPtrOutputWithContext(ctx)
}

// GvcSidecarPtrInput is an input type that accepts GvcSidecarArgs, GvcSidecarPtr and GvcSidecarPtrOutput values.
// You can construct a concrete instance of `GvcSidecarPtrInput` via:
//
//	        GvcSidecarArgs{...}
//
//	or:
//
//	        nil
type GvcSidecarPtrInput interface {
	pulumi.Input

	ToGvcSidecarPtrOutput() GvcSidecarPtrOutput
	ToGvcSidecarPtrOutputWithContext(context.Context) GvcSidecarPtrOutput
}

type gvcSidecarPtrType GvcSidecarArgs

func GvcSidecarPtr(v *GvcSidecarArgs) GvcSidecarPtrInput {
	return (*gvcSidecarPtrType)(v)
}

func (*gvcSidecarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcSidecar)(nil)).Elem()
}

func (i *gvcSidecarPtrType) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return i.ToGvcSidecarPtrOutputWithContext(context.Background())
}

func (i *gvcSidecarPtrType) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GvcSidecarPtrOutput)
}

func (i *gvcSidecarPtrType) ToOutput(ctx context.Context) pulumix.Output[*GvcSidecar] {
	return pulumix.Output[*GvcSidecar]{
		OutputState: i.ToGvcSidecarPtrOutputWithContext(ctx).OutputState,
	}
}

type GvcSidecarOutput struct{ *pulumi.OutputState }

func (GvcSidecarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GvcSidecar)(nil)).Elem()
}

func (o GvcSidecarOutput) ToGvcSidecarOutput() GvcSidecarOutput {
	return o
}

func (o GvcSidecarOutput) ToGvcSidecarOutputWithContext(ctx context.Context) GvcSidecarOutput {
	return o
}

func (o GvcSidecarOutput) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return o.ToGvcSidecarPtrOutputWithContext(context.Background())
}

func (o GvcSidecarOutput) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GvcSidecar) *GvcSidecar {
		return &v
	}).(GvcSidecarPtrOutput)
}

func (o GvcSidecarOutput) ToOutput(ctx context.Context) pulumix.Output[GvcSidecar] {
	return pulumix.Output[GvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GvcSidecarOutput) Envoy() pulumi.StringOutput {
	return o.ApplyT(func(v GvcSidecar) string { return v.Envoy }).(pulumi.StringOutput)
}

type GvcSidecarPtrOutput struct{ *pulumi.OutputState }

func (GvcSidecarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GvcSidecar)(nil)).Elem()
}

func (o GvcSidecarPtrOutput) ToGvcSidecarPtrOutput() GvcSidecarPtrOutput {
	return o
}

func (o GvcSidecarPtrOutput) ToGvcSidecarPtrOutputWithContext(ctx context.Context) GvcSidecarPtrOutput {
	return o
}

func (o GvcSidecarPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GvcSidecar] {
	return pulumix.Output[*GvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GvcSidecarPtrOutput) Elem() GvcSidecarOutput {
	return o.ApplyT(func(v *GvcSidecar) GvcSidecar {
		if v != nil {
			return *v
		}
		var ret GvcSidecar
		return ret
	}).(GvcSidecarOutput)
}

func (o GvcSidecarPtrOutput) Envoy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GvcSidecar) *string {
		if v == nil {
			return nil
		}
		return &v.Envoy
	}).(pulumi.StringPtrOutput)
}

type IdentityAwsAccessPolicy struct {
	CloudAccountLink string   `pulumi:"cloudAccountLink"`
	PolicyRefs       []string `pulumi:"policyRefs"`
	RoleName         *string  `pulumi:"roleName"`
}

// IdentityAwsAccessPolicyInput is an input type that accepts IdentityAwsAccessPolicyArgs and IdentityAwsAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityAwsAccessPolicyInput` via:
//
//	IdentityAwsAccessPolicyArgs{...}
type IdentityAwsAccessPolicyInput interface {
	pulumi.Input

	ToIdentityAwsAccessPolicyOutput() IdentityAwsAccessPolicyOutput
	ToIdentityAwsAccessPolicyOutputWithContext(context.Context) IdentityAwsAccessPolicyOutput
}

type IdentityAwsAccessPolicyArgs struct {
	CloudAccountLink pulumi.StringInput      `pulumi:"cloudAccountLink"`
	PolicyRefs       pulumi.StringArrayInput `pulumi:"policyRefs"`
	RoleName         pulumi.StringPtrInput   `pulumi:"roleName"`
}

func (IdentityAwsAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAwsAccessPolicy)(nil)).Elem()
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyOutput() IdentityAwsAccessPolicyOutput {
	return i.ToIdentityAwsAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAccessPolicyOutput)
}

func (i IdentityAwsAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityAwsAccessPolicy] {
	return pulumix.Output[IdentityAwsAccessPolicy]{
		OutputState: i.ToIdentityAwsAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return i.ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityAwsAccessPolicyArgs) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAccessPolicyOutput).ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityAwsAccessPolicyPtrInput is an input type that accepts IdentityAwsAccessPolicyArgs, IdentityAwsAccessPolicyPtr and IdentityAwsAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityAwsAccessPolicyPtrInput` via:
//
//	        IdentityAwsAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityAwsAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput
	ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Context) IdentityAwsAccessPolicyPtrOutput
}

type identityAwsAccessPolicyPtrType IdentityAwsAccessPolicyArgs

func IdentityAwsAccessPolicyPtr(v *IdentityAwsAccessPolicyArgs) IdentityAwsAccessPolicyPtrInput {
	return (*identityAwsAccessPolicyPtrType)(v)
}

func (*identityAwsAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAwsAccessPolicy)(nil)).Elem()
}

func (i *identityAwsAccessPolicyPtrType) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return i.ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityAwsAccessPolicyPtrType) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAccessPolicyPtrOutput)
}

func (i *identityAwsAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityAwsAccessPolicy] {
	return pulumix.Output[*IdentityAwsAccessPolicy]{
		OutputState: i.ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityAwsAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityAwsAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAwsAccessPolicy)(nil)).Elem()
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyOutput() IdentityAwsAccessPolicyOutput {
	return o
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyOutput {
	return o
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return o.ToIdentityAwsAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityAwsAccessPolicyOutput) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityAwsAccessPolicy) *IdentityAwsAccessPolicy {
		return &v
	}).(IdentityAwsAccessPolicyPtrOutput)
}

func (o IdentityAwsAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityAwsAccessPolicy] {
	return pulumix.Output[IdentityAwsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAwsAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityAwsAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityAwsAccessPolicyOutput) PolicyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityAwsAccessPolicy) []string { return v.PolicyRefs }).(pulumi.StringArrayOutput)
}

func (o IdentityAwsAccessPolicyOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAwsAccessPolicy) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type IdentityAwsAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityAwsAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAwsAccessPolicy)(nil)).Elem()
}

func (o IdentityAwsAccessPolicyPtrOutput) ToIdentityAwsAccessPolicyPtrOutput() IdentityAwsAccessPolicyPtrOutput {
	return o
}

func (o IdentityAwsAccessPolicyPtrOutput) ToIdentityAwsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAwsAccessPolicyPtrOutput {
	return o
}

func (o IdentityAwsAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityAwsAccessPolicy] {
	return pulumix.Output[*IdentityAwsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAwsAccessPolicyPtrOutput) Elem() IdentityAwsAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) IdentityAwsAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityAwsAccessPolicy
		return ret
	}).(IdentityAwsAccessPolicyOutput)
}

func (o IdentityAwsAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityAwsAccessPolicyPtrOutput) PolicyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) []string {
		if v == nil {
			return nil
		}
		return v.PolicyRefs
	}).(pulumi.StringArrayOutput)
}

func (o IdentityAwsAccessPolicyPtrOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAwsAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RoleName
	}).(pulumi.StringPtrOutput)
}

type IdentityAzureAccessPolicy struct {
	CloudAccountLink string                                    `pulumi:"cloudAccountLink"`
	RoleAssignments  []IdentityAzureAccessPolicyRoleAssignment `pulumi:"roleAssignments"`
}

// IdentityAzureAccessPolicyInput is an input type that accepts IdentityAzureAccessPolicyArgs and IdentityAzureAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyInput` via:
//
//	IdentityAzureAccessPolicyArgs{...}
type IdentityAzureAccessPolicyInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyOutput() IdentityAzureAccessPolicyOutput
	ToIdentityAzureAccessPolicyOutputWithContext(context.Context) IdentityAzureAccessPolicyOutput
}

type IdentityAzureAccessPolicyArgs struct {
	CloudAccountLink pulumi.StringInput                                `pulumi:"cloudAccountLink"`
	RoleAssignments  IdentityAzureAccessPolicyRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (IdentityAzureAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicy)(nil)).Elem()
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyOutput() IdentityAzureAccessPolicyOutput {
	return i.ToIdentityAzureAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyOutput)
}

func (i IdentityAzureAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicy] {
	return pulumix.Output[IdentityAzureAccessPolicy]{
		OutputState: i.ToIdentityAzureAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return i.ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyArgs) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyOutput).ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityAzureAccessPolicyPtrInput is an input type that accepts IdentityAzureAccessPolicyArgs, IdentityAzureAccessPolicyPtr and IdentityAzureAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyPtrInput` via:
//
//	        IdentityAzureAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityAzureAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput
	ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Context) IdentityAzureAccessPolicyPtrOutput
}

type identityAzureAccessPolicyPtrType IdentityAzureAccessPolicyArgs

func IdentityAzureAccessPolicyPtr(v *IdentityAzureAccessPolicyArgs) IdentityAzureAccessPolicyPtrInput {
	return (*identityAzureAccessPolicyPtrType)(v)
}

func (*identityAzureAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAzureAccessPolicy)(nil)).Elem()
}

func (i *identityAzureAccessPolicyPtrType) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return i.ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityAzureAccessPolicyPtrType) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyPtrOutput)
}

func (i *identityAzureAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityAzureAccessPolicy] {
	return pulumix.Output[*IdentityAzureAccessPolicy]{
		OutputState: i.ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityAzureAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicy)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyOutput() IdentityAzureAccessPolicyOutput {
	return o
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyOutput {
	return o
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return o.ToIdentityAzureAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityAzureAccessPolicyOutput) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityAzureAccessPolicy) *IdentityAzureAccessPolicy {
		return &v
	}).(IdentityAzureAccessPolicyPtrOutput)
}

func (o IdentityAzureAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicy] {
	return pulumix.Output[IdentityAzureAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityAzureAccessPolicyOutput) RoleAssignments() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicy) []IdentityAzureAccessPolicyRoleAssignment { return v.RoleAssignments }).(IdentityAzureAccessPolicyRoleAssignmentArrayOutput)
}

type IdentityAzureAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAzureAccessPolicy)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyPtrOutput) ToIdentityAzureAccessPolicyPtrOutput() IdentityAzureAccessPolicyPtrOutput {
	return o
}

func (o IdentityAzureAccessPolicyPtrOutput) ToIdentityAzureAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyPtrOutput {
	return o
}

func (o IdentityAzureAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityAzureAccessPolicy] {
	return pulumix.Output[*IdentityAzureAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyPtrOutput) Elem() IdentityAzureAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityAzureAccessPolicy) IdentityAzureAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityAzureAccessPolicy
		return ret
	}).(IdentityAzureAccessPolicyOutput)
}

func (o IdentityAzureAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAzureAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityAzureAccessPolicyPtrOutput) RoleAssignments() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o.ApplyT(func(v *IdentityAzureAccessPolicy) []IdentityAzureAccessPolicyRoleAssignment {
		if v == nil {
			return nil
		}
		return v.RoleAssignments
	}).(IdentityAzureAccessPolicyRoleAssignmentArrayOutput)
}

type IdentityAzureAccessPolicyRoleAssignment struct {
	Roles []string `pulumi:"roles"`
	Scope *string  `pulumi:"scope"`
}

// IdentityAzureAccessPolicyRoleAssignmentInput is an input type that accepts IdentityAzureAccessPolicyRoleAssignmentArgs and IdentityAzureAccessPolicyRoleAssignmentOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyRoleAssignmentInput` via:
//
//	IdentityAzureAccessPolicyRoleAssignmentArgs{...}
type IdentityAzureAccessPolicyRoleAssignmentInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyRoleAssignmentOutput() IdentityAzureAccessPolicyRoleAssignmentOutput
	ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(context.Context) IdentityAzureAccessPolicyRoleAssignmentOutput
}

type IdentityAzureAccessPolicyRoleAssignmentArgs struct {
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	Scope pulumi.StringPtrInput   `pulumi:"scope"`
}

func (IdentityAzureAccessPolicyRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (i IdentityAzureAccessPolicyRoleAssignmentArgs) ToIdentityAzureAccessPolicyRoleAssignmentOutput() IdentityAzureAccessPolicyRoleAssignmentOutput {
	return i.ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyRoleAssignmentArgs) ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyRoleAssignmentOutput)
}

func (i IdentityAzureAccessPolicyRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: i.ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// IdentityAzureAccessPolicyRoleAssignmentArrayInput is an input type that accepts IdentityAzureAccessPolicyRoleAssignmentArray and IdentityAzureAccessPolicyRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `IdentityAzureAccessPolicyRoleAssignmentArrayInput` via:
//
//	IdentityAzureAccessPolicyRoleAssignmentArray{ IdentityAzureAccessPolicyRoleAssignmentArgs{...} }
type IdentityAzureAccessPolicyRoleAssignmentArrayInput interface {
	pulumi.Input

	ToIdentityAzureAccessPolicyRoleAssignmentArrayOutput() IdentityAzureAccessPolicyRoleAssignmentArrayOutput
	ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(context.Context) IdentityAzureAccessPolicyRoleAssignmentArrayOutput
}

type IdentityAzureAccessPolicyRoleAssignmentArray []IdentityAzureAccessPolicyRoleAssignmentInput

func (IdentityAzureAccessPolicyRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (i IdentityAzureAccessPolicyRoleAssignmentArray) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutput() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return i.ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i IdentityAzureAccessPolicyRoleAssignmentArray) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAccessPolicyRoleAssignmentArrayOutput)
}

func (i IdentityAzureAccessPolicyRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: i.ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityAzureAccessPolicyRoleAssignmentOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) ToIdentityAzureAccessPolicyRoleAssignmentOutput() IdentityAzureAccessPolicyRoleAssignmentOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) ToIdentityAzureAccessPolicyRoleAssignmentOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicyRoleAssignment) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o IdentityAzureAccessPolicyRoleAssignmentOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAzureAccessPolicyRoleAssignment) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type IdentityAzureAccessPolicyRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAzureAccessPolicyRoleAssignment)(nil)).Elem()
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutput() IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ToIdentityAzureAccessPolicyRoleAssignmentArrayOutputWithContext(ctx context.Context) IdentityAzureAccessPolicyRoleAssignmentArrayOutput {
	return o
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment] {
	return pulumix.Output[[]IdentityAzureAccessPolicyRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o IdentityAzureAccessPolicyRoleAssignmentArrayOutput) Index(i pulumi.IntInput) IdentityAzureAccessPolicyRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityAzureAccessPolicyRoleAssignment {
		return vs[0].([]IdentityAzureAccessPolicyRoleAssignment)[vs[1].(int)]
	}).(IdentityAzureAccessPolicyRoleAssignmentOutput)
}

type IdentityGcpAccessPolicy struct {
	Bindings         []IdentityGcpAccessPolicyBinding `pulumi:"bindings"`
	CloudAccountLink string                           `pulumi:"cloudAccountLink"`
	Scopes           *string                          `pulumi:"scopes"`
	ServiceAccount   *string                          `pulumi:"serviceAccount"`
}

// IdentityGcpAccessPolicyInput is an input type that accepts IdentityGcpAccessPolicyArgs and IdentityGcpAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyInput` via:
//
//	IdentityGcpAccessPolicyArgs{...}
type IdentityGcpAccessPolicyInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyOutput() IdentityGcpAccessPolicyOutput
	ToIdentityGcpAccessPolicyOutputWithContext(context.Context) IdentityGcpAccessPolicyOutput
}

type IdentityGcpAccessPolicyArgs struct {
	Bindings         IdentityGcpAccessPolicyBindingArrayInput `pulumi:"bindings"`
	CloudAccountLink pulumi.StringInput                       `pulumi:"cloudAccountLink"`
	Scopes           pulumi.StringPtrInput                    `pulumi:"scopes"`
	ServiceAccount   pulumi.StringPtrInput                    `pulumi:"serviceAccount"`
}

func (IdentityGcpAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicy)(nil)).Elem()
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyOutput() IdentityGcpAccessPolicyOutput {
	return i.ToIdentityGcpAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyOutput)
}

func (i IdentityGcpAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicy] {
	return pulumix.Output[IdentityGcpAccessPolicy]{
		OutputState: i.ToIdentityGcpAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return i.ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyArgs) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyOutput).ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityGcpAccessPolicyPtrInput is an input type that accepts IdentityGcpAccessPolicyArgs, IdentityGcpAccessPolicyPtr and IdentityGcpAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyPtrInput` via:
//
//	        IdentityGcpAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityGcpAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput
	ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Context) IdentityGcpAccessPolicyPtrOutput
}

type identityGcpAccessPolicyPtrType IdentityGcpAccessPolicyArgs

func IdentityGcpAccessPolicyPtr(v *IdentityGcpAccessPolicyArgs) IdentityGcpAccessPolicyPtrInput {
	return (*identityGcpAccessPolicyPtrType)(v)
}

func (*identityGcpAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityGcpAccessPolicy)(nil)).Elem()
}

func (i *identityGcpAccessPolicyPtrType) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return i.ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityGcpAccessPolicyPtrType) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyPtrOutput)
}

func (i *identityGcpAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityGcpAccessPolicy] {
	return pulumix.Output[*IdentityGcpAccessPolicy]{
		OutputState: i.ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityGcpAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicy)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyOutput() IdentityGcpAccessPolicyOutput {
	return o
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyOutput {
	return o
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return o.ToIdentityGcpAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityGcpAccessPolicyOutput) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityGcpAccessPolicy) *IdentityGcpAccessPolicy {
		return &v
	}).(IdentityGcpAccessPolicyPtrOutput)
}

func (o IdentityGcpAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicy] {
	return pulumix.Output[IdentityGcpAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyOutput) Bindings() IdentityGcpAccessPolicyBindingArrayOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) []IdentityGcpAccessPolicyBinding { return v.Bindings }).(IdentityGcpAccessPolicyBindingArrayOutput)
}

func (o IdentityGcpAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityGcpAccessPolicyOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicy) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type IdentityGcpAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityGcpAccessPolicy)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyPtrOutput) ToIdentityGcpAccessPolicyPtrOutput() IdentityGcpAccessPolicyPtrOutput {
	return o
}

func (o IdentityGcpAccessPolicyPtrOutput) ToIdentityGcpAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyPtrOutput {
	return o
}

func (o IdentityGcpAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityGcpAccessPolicy] {
	return pulumix.Output[*IdentityGcpAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyPtrOutput) Elem() IdentityGcpAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) IdentityGcpAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityGcpAccessPolicy
		return ret
	}).(IdentityGcpAccessPolicyOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) Bindings() IdentityGcpAccessPolicyBindingArrayOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) []IdentityGcpAccessPolicyBinding {
		if v == nil {
			return nil
		}
		return v.Bindings
	}).(IdentityGcpAccessPolicyBindingArrayOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityGcpAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

type IdentityGcpAccessPolicyBinding struct {
	Resource *string  `pulumi:"resource"`
	Roles    []string `pulumi:"roles"`
}

// IdentityGcpAccessPolicyBindingInput is an input type that accepts IdentityGcpAccessPolicyBindingArgs and IdentityGcpAccessPolicyBindingOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyBindingInput` via:
//
//	IdentityGcpAccessPolicyBindingArgs{...}
type IdentityGcpAccessPolicyBindingInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyBindingOutput() IdentityGcpAccessPolicyBindingOutput
	ToIdentityGcpAccessPolicyBindingOutputWithContext(context.Context) IdentityGcpAccessPolicyBindingOutput
}

type IdentityGcpAccessPolicyBindingArgs struct {
	Resource pulumi.StringPtrInput   `pulumi:"resource"`
	Roles    pulumi.StringArrayInput `pulumi:"roles"`
}

func (IdentityGcpAccessPolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (i IdentityGcpAccessPolicyBindingArgs) ToIdentityGcpAccessPolicyBindingOutput() IdentityGcpAccessPolicyBindingOutput {
	return i.ToIdentityGcpAccessPolicyBindingOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyBindingArgs) ToIdentityGcpAccessPolicyBindingOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyBindingOutput)
}

func (i IdentityGcpAccessPolicyBindingArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[IdentityGcpAccessPolicyBinding]{
		OutputState: i.ToIdentityGcpAccessPolicyBindingOutputWithContext(ctx).OutputState,
	}
}

// IdentityGcpAccessPolicyBindingArrayInput is an input type that accepts IdentityGcpAccessPolicyBindingArray and IdentityGcpAccessPolicyBindingArrayOutput values.
// You can construct a concrete instance of `IdentityGcpAccessPolicyBindingArrayInput` via:
//
//	IdentityGcpAccessPolicyBindingArray{ IdentityGcpAccessPolicyBindingArgs{...} }
type IdentityGcpAccessPolicyBindingArrayInput interface {
	pulumi.Input

	ToIdentityGcpAccessPolicyBindingArrayOutput() IdentityGcpAccessPolicyBindingArrayOutput
	ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(context.Context) IdentityGcpAccessPolicyBindingArrayOutput
}

type IdentityGcpAccessPolicyBindingArray []IdentityGcpAccessPolicyBindingInput

func (IdentityGcpAccessPolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (i IdentityGcpAccessPolicyBindingArray) ToIdentityGcpAccessPolicyBindingArrayOutput() IdentityGcpAccessPolicyBindingArrayOutput {
	return i.ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(context.Background())
}

func (i IdentityGcpAccessPolicyBindingArray) ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAccessPolicyBindingArrayOutput)
}

func (i IdentityGcpAccessPolicyBindingArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[[]IdentityGcpAccessPolicyBinding]{
		OutputState: i.ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityGcpAccessPolicyBindingOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyBindingOutput) ToIdentityGcpAccessPolicyBindingOutput() IdentityGcpAccessPolicyBindingOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingOutput) ToIdentityGcpAccessPolicyBindingOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[IdentityGcpAccessPolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyBindingOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicyBinding) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

func (o IdentityGcpAccessPolicyBindingOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityGcpAccessPolicyBinding) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type IdentityGcpAccessPolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (IdentityGcpAccessPolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityGcpAccessPolicyBinding)(nil)).Elem()
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) ToIdentityGcpAccessPolicyBindingArrayOutput() IdentityGcpAccessPolicyBindingArrayOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) ToIdentityGcpAccessPolicyBindingArrayOutputWithContext(ctx context.Context) IdentityGcpAccessPolicyBindingArrayOutput {
	return o
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityGcpAccessPolicyBinding] {
	return pulumix.Output[[]IdentityGcpAccessPolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o IdentityGcpAccessPolicyBindingArrayOutput) Index(i pulumi.IntInput) IdentityGcpAccessPolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityGcpAccessPolicyBinding {
		return vs[0].([]IdentityGcpAccessPolicyBinding)[vs[1].(int)]
	}).(IdentityGcpAccessPolicyBindingOutput)
}

type IdentityNativeNetworkResource struct {
	AwsPrivateLink    *IdentityNativeNetworkResourceAwsPrivateLink    `pulumi:"awsPrivateLink"`
	Fqdn              string                                          `pulumi:"fqdn"`
	GcpServiceConnect *IdentityNativeNetworkResourceGcpServiceConnect `pulumi:"gcpServiceConnect"`
	Name              string                                          `pulumi:"name"`
	Ports             []int                                           `pulumi:"ports"`
}

// IdentityNativeNetworkResourceInput is an input type that accepts IdentityNativeNetworkResourceArgs and IdentityNativeNetworkResourceOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceInput` via:
//
//	IdentityNativeNetworkResourceArgs{...}
type IdentityNativeNetworkResourceInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceOutput() IdentityNativeNetworkResourceOutput
	ToIdentityNativeNetworkResourceOutputWithContext(context.Context) IdentityNativeNetworkResourceOutput
}

type IdentityNativeNetworkResourceArgs struct {
	AwsPrivateLink    IdentityNativeNetworkResourceAwsPrivateLinkPtrInput    `pulumi:"awsPrivateLink"`
	Fqdn              pulumi.StringInput                                     `pulumi:"fqdn"`
	GcpServiceConnect IdentityNativeNetworkResourceGcpServiceConnectPtrInput `pulumi:"gcpServiceConnect"`
	Name              pulumi.StringInput                                     `pulumi:"name"`
	Ports             pulumi.IntArrayInput                                   `pulumi:"ports"`
}

func (IdentityNativeNetworkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResource)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceArgs) ToIdentityNativeNetworkResourceOutput() IdentityNativeNetworkResourceOutput {
	return i.ToIdentityNativeNetworkResourceOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceArgs) ToIdentityNativeNetworkResourceOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceOutput)
}

func (i IdentityNativeNetworkResourceArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResource] {
	return pulumix.Output[IdentityNativeNetworkResource]{
		OutputState: i.ToIdentityNativeNetworkResourceOutputWithContext(ctx).OutputState,
	}
}

// IdentityNativeNetworkResourceArrayInput is an input type that accepts IdentityNativeNetworkResourceArray and IdentityNativeNetworkResourceArrayOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceArrayInput` via:
//
//	IdentityNativeNetworkResourceArray{ IdentityNativeNetworkResourceArgs{...} }
type IdentityNativeNetworkResourceArrayInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceArrayOutput() IdentityNativeNetworkResourceArrayOutput
	ToIdentityNativeNetworkResourceArrayOutputWithContext(context.Context) IdentityNativeNetworkResourceArrayOutput
}

type IdentityNativeNetworkResourceArray []IdentityNativeNetworkResourceInput

func (IdentityNativeNetworkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNativeNetworkResource)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceArray) ToIdentityNativeNetworkResourceArrayOutput() IdentityNativeNetworkResourceArrayOutput {
	return i.ToIdentityNativeNetworkResourceArrayOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceArray) ToIdentityNativeNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceArrayOutput)
}

func (i IdentityNativeNetworkResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNativeNetworkResource] {
	return pulumix.Output[[]IdentityNativeNetworkResource]{
		OutputState: i.ToIdentityNativeNetworkResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityNativeNetworkResourceOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResource)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceOutput) ToIdentityNativeNetworkResourceOutput() IdentityNativeNetworkResourceOutput {
	return o
}

func (o IdentityNativeNetworkResourceOutput) ToIdentityNativeNetworkResourceOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceOutput {
	return o
}

func (o IdentityNativeNetworkResourceOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResource] {
	return pulumix.Output[IdentityNativeNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceOutput) AwsPrivateLink() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) *IdentityNativeNetworkResourceAwsPrivateLink {
		return v.AwsPrivateLink
	}).(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput)
}

func (o IdentityNativeNetworkResourceOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) string { return v.Fqdn }).(pulumi.StringOutput)
}

func (o IdentityNativeNetworkResourceOutput) GcpServiceConnect() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) *IdentityNativeNetworkResourceGcpServiceConnect {
		return v.GcpServiceConnect
	}).(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput)
}

func (o IdentityNativeNetworkResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) string { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityNativeNetworkResourceOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResource) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type IdentityNativeNetworkResourceArrayOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNativeNetworkResource)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceArrayOutput) ToIdentityNativeNetworkResourceArrayOutput() IdentityNativeNetworkResourceArrayOutput {
	return o
}

func (o IdentityNativeNetworkResourceArrayOutput) ToIdentityNativeNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceArrayOutput {
	return o
}

func (o IdentityNativeNetworkResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNativeNetworkResource] {
	return pulumix.Output[[]IdentityNativeNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceArrayOutput) Index(i pulumi.IntInput) IdentityNativeNetworkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityNativeNetworkResource {
		return vs[0].([]IdentityNativeNetworkResource)[vs[1].(int)]
	}).(IdentityNativeNetworkResourceOutput)
}

type IdentityNativeNetworkResourceAwsPrivateLink struct {
	EndpointServiceName string `pulumi:"endpointServiceName"`
}

// IdentityNativeNetworkResourceAwsPrivateLinkInput is an input type that accepts IdentityNativeNetworkResourceAwsPrivateLinkArgs and IdentityNativeNetworkResourceAwsPrivateLinkOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceAwsPrivateLinkInput` via:
//
//	IdentityNativeNetworkResourceAwsPrivateLinkArgs{...}
type IdentityNativeNetworkResourceAwsPrivateLinkInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceAwsPrivateLinkOutput() IdentityNativeNetworkResourceAwsPrivateLinkOutput
	ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(context.Context) IdentityNativeNetworkResourceAwsPrivateLinkOutput
}

type IdentityNativeNetworkResourceAwsPrivateLinkArgs struct {
	EndpointServiceName pulumi.StringInput `pulumi:"endpointServiceName"`
}

func (IdentityNativeNetworkResourceAwsPrivateLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkOutput() IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return i.ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceAwsPrivateLinkOutput)
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: i.ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return i.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceAwsPrivateLinkArgs) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceAwsPrivateLinkOutput).ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx)
}

// IdentityNativeNetworkResourceAwsPrivateLinkPtrInput is an input type that accepts IdentityNativeNetworkResourceAwsPrivateLinkArgs, IdentityNativeNetworkResourceAwsPrivateLinkPtr and IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceAwsPrivateLinkPtrInput` via:
//
//	        IdentityNativeNetworkResourceAwsPrivateLinkArgs{...}
//
//	or:
//
//	        nil
type IdentityNativeNetworkResourceAwsPrivateLinkPtrInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput
	ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput
}

type identityNativeNetworkResourceAwsPrivateLinkPtrType IdentityNativeNetworkResourceAwsPrivateLinkArgs

func IdentityNativeNetworkResourceAwsPrivateLinkPtr(v *IdentityNativeNetworkResourceAwsPrivateLinkArgs) IdentityNativeNetworkResourceAwsPrivateLinkPtrInput {
	return (*identityNativeNetworkResourceAwsPrivateLinkPtrType)(v)
}

func (*identityNativeNetworkResourceAwsPrivateLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (i *identityNativeNetworkResourceAwsPrivateLinkPtrType) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return i.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Background())
}

func (i *identityNativeNetworkResourceAwsPrivateLinkPtrType) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput)
}

func (i *identityNativeNetworkResourceAwsPrivateLinkPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: i.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNativeNetworkResourceAwsPrivateLinkOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceAwsPrivateLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkOutput() IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o.ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(context.Background())
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNativeNetworkResourceAwsPrivateLink) *IdentityNativeNetworkResourceAwsPrivateLink {
		return &v
	}).(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput)
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkOutput) EndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResourceAwsPrivateLink) string { return v.EndpointServiceName }).(pulumi.StringOutput)
}

type IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceAwsPrivateLink)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutput() IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ToIdentityNativeNetworkResourceAwsPrivateLinkPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink] {
	return pulumix.Output[*IdentityNativeNetworkResourceAwsPrivateLink]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) Elem() IdentityNativeNetworkResourceAwsPrivateLinkOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceAwsPrivateLink) IdentityNativeNetworkResourceAwsPrivateLink {
		if v != nil {
			return *v
		}
		var ret IdentityNativeNetworkResourceAwsPrivateLink
		return ret
	}).(IdentityNativeNetworkResourceAwsPrivateLinkOutput)
}

func (o IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput) EndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceAwsPrivateLink) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointServiceName
	}).(pulumi.StringPtrOutput)
}

type IdentityNativeNetworkResourceGcpServiceConnect struct {
	TargetService string `pulumi:"targetService"`
}

// IdentityNativeNetworkResourceGcpServiceConnectInput is an input type that accepts IdentityNativeNetworkResourceGcpServiceConnectArgs and IdentityNativeNetworkResourceGcpServiceConnectOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceGcpServiceConnectInput` via:
//
//	IdentityNativeNetworkResourceGcpServiceConnectArgs{...}
type IdentityNativeNetworkResourceGcpServiceConnectInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceGcpServiceConnectOutput() IdentityNativeNetworkResourceGcpServiceConnectOutput
	ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(context.Context) IdentityNativeNetworkResourceGcpServiceConnectOutput
}

type IdentityNativeNetworkResourceGcpServiceConnectArgs struct {
	TargetService pulumi.StringInput `pulumi:"targetService"`
}

func (IdentityNativeNetworkResourceGcpServiceConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectOutput() IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return i.ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceGcpServiceConnectOutput)
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: i.ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return i.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Background())
}

func (i IdentityNativeNetworkResourceGcpServiceConnectArgs) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceGcpServiceConnectOutput).ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx)
}

// IdentityNativeNetworkResourceGcpServiceConnectPtrInput is an input type that accepts IdentityNativeNetworkResourceGcpServiceConnectArgs, IdentityNativeNetworkResourceGcpServiceConnectPtr and IdentityNativeNetworkResourceGcpServiceConnectPtrOutput values.
// You can construct a concrete instance of `IdentityNativeNetworkResourceGcpServiceConnectPtrInput` via:
//
//	        IdentityNativeNetworkResourceGcpServiceConnectArgs{...}
//
//	or:
//
//	        nil
type IdentityNativeNetworkResourceGcpServiceConnectPtrInput interface {
	pulumi.Input

	ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput
	ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput
}

type identityNativeNetworkResourceGcpServiceConnectPtrType IdentityNativeNetworkResourceGcpServiceConnectArgs

func IdentityNativeNetworkResourceGcpServiceConnectPtr(v *IdentityNativeNetworkResourceGcpServiceConnectArgs) IdentityNativeNetworkResourceGcpServiceConnectPtrInput {
	return (*identityNativeNetworkResourceGcpServiceConnectPtrType)(v)
}

func (*identityNativeNetworkResourceGcpServiceConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (i *identityNativeNetworkResourceGcpServiceConnectPtrType) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return i.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Background())
}

func (i *identityNativeNetworkResourceGcpServiceConnectPtrType) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput)
}

func (i *identityNativeNetworkResourceGcpServiceConnectPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: i.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNativeNetworkResourceGcpServiceConnectOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceGcpServiceConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectOutput() IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o.ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(context.Background())
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNativeNetworkResourceGcpServiceConnect) *IdentityNativeNetworkResourceGcpServiceConnect {
		return &v
	}).(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput)
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceGcpServiceConnectOutput) TargetService() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNativeNetworkResourceGcpServiceConnect) string { return v.TargetService }).(pulumi.StringOutput)
}

type IdentityNativeNetworkResourceGcpServiceConnectPtrOutput struct{ *pulumi.OutputState }

func (IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNativeNetworkResourceGcpServiceConnect)(nil)).Elem()
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutput() IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ToIdentityNativeNetworkResourceGcpServiceConnectPtrOutputWithContext(ctx context.Context) IdentityNativeNetworkResourceGcpServiceConnectPtrOutput {
	return o
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect] {
	return pulumix.Output[*IdentityNativeNetworkResourceGcpServiceConnect]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) Elem() IdentityNativeNetworkResourceGcpServiceConnectOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceGcpServiceConnect) IdentityNativeNetworkResourceGcpServiceConnect {
		if v != nil {
			return *v
		}
		var ret IdentityNativeNetworkResourceGcpServiceConnect
		return ret
	}).(IdentityNativeNetworkResourceGcpServiceConnectOutput)
}

func (o IdentityNativeNetworkResourceGcpServiceConnectPtrOutput) TargetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNativeNetworkResourceGcpServiceConnect) *string {
		if v == nil {
			return nil
		}
		return &v.TargetService
	}).(pulumi.StringPtrOutput)
}

type IdentityNetworkResource struct {
	AgentLink  string   `pulumi:"agentLink"`
	Fqdn       *string  `pulumi:"fqdn"`
	Ips        []string `pulumi:"ips"`
	Name       string   `pulumi:"name"`
	Ports      []int    `pulumi:"ports"`
	ResolverIp *string  `pulumi:"resolverIp"`
}

// IdentityNetworkResourceInput is an input type that accepts IdentityNetworkResourceArgs and IdentityNetworkResourceOutput values.
// You can construct a concrete instance of `IdentityNetworkResourceInput` via:
//
//	IdentityNetworkResourceArgs{...}
type IdentityNetworkResourceInput interface {
	pulumi.Input

	ToIdentityNetworkResourceOutput() IdentityNetworkResourceOutput
	ToIdentityNetworkResourceOutputWithContext(context.Context) IdentityNetworkResourceOutput
}

type IdentityNetworkResourceArgs struct {
	AgentLink  pulumi.StringInput      `pulumi:"agentLink"`
	Fqdn       pulumi.StringPtrInput   `pulumi:"fqdn"`
	Ips        pulumi.StringArrayInput `pulumi:"ips"`
	Name       pulumi.StringInput      `pulumi:"name"`
	Ports      pulumi.IntArrayInput    `pulumi:"ports"`
	ResolverIp pulumi.StringPtrInput   `pulumi:"resolverIp"`
}

func (IdentityNetworkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNetworkResource)(nil)).Elem()
}

func (i IdentityNetworkResourceArgs) ToIdentityNetworkResourceOutput() IdentityNetworkResourceOutput {
	return i.ToIdentityNetworkResourceOutputWithContext(context.Background())
}

func (i IdentityNetworkResourceArgs) ToIdentityNetworkResourceOutputWithContext(ctx context.Context) IdentityNetworkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkResourceOutput)
}

func (i IdentityNetworkResourceArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNetworkResource] {
	return pulumix.Output[IdentityNetworkResource]{
		OutputState: i.ToIdentityNetworkResourceOutputWithContext(ctx).OutputState,
	}
}

// IdentityNetworkResourceArrayInput is an input type that accepts IdentityNetworkResourceArray and IdentityNetworkResourceArrayOutput values.
// You can construct a concrete instance of `IdentityNetworkResourceArrayInput` via:
//
//	IdentityNetworkResourceArray{ IdentityNetworkResourceArgs{...} }
type IdentityNetworkResourceArrayInput interface {
	pulumi.Input

	ToIdentityNetworkResourceArrayOutput() IdentityNetworkResourceArrayOutput
	ToIdentityNetworkResourceArrayOutputWithContext(context.Context) IdentityNetworkResourceArrayOutput
}

type IdentityNetworkResourceArray []IdentityNetworkResourceInput

func (IdentityNetworkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNetworkResource)(nil)).Elem()
}

func (i IdentityNetworkResourceArray) ToIdentityNetworkResourceArrayOutput() IdentityNetworkResourceArrayOutput {
	return i.ToIdentityNetworkResourceArrayOutputWithContext(context.Background())
}

func (i IdentityNetworkResourceArray) ToIdentityNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNetworkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkResourceArrayOutput)
}

func (i IdentityNetworkResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNetworkResource] {
	return pulumix.Output[[]IdentityNetworkResource]{
		OutputState: i.ToIdentityNetworkResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type IdentityNetworkResourceOutput struct{ *pulumi.OutputState }

func (IdentityNetworkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNetworkResource)(nil)).Elem()
}

func (o IdentityNetworkResourceOutput) ToIdentityNetworkResourceOutput() IdentityNetworkResourceOutput {
	return o
}

func (o IdentityNetworkResourceOutput) ToIdentityNetworkResourceOutputWithContext(ctx context.Context) IdentityNetworkResourceOutput {
	return o
}

func (o IdentityNetworkResourceOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNetworkResource] {
	return pulumix.Output[IdentityNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNetworkResourceOutput) AgentLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNetworkResource) string { return v.AgentLink }).(pulumi.StringOutput)
}

func (o IdentityNetworkResourceOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityNetworkResource) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

func (o IdentityNetworkResourceOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNetworkResource) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o IdentityNetworkResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNetworkResource) string { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityNetworkResourceOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IdentityNetworkResource) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o IdentityNetworkResourceOutput) ResolverIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityNetworkResource) *string { return v.ResolverIp }).(pulumi.StringPtrOutput)
}

type IdentityNetworkResourceArrayOutput struct{ *pulumi.OutputState }

func (IdentityNetworkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNetworkResource)(nil)).Elem()
}

func (o IdentityNetworkResourceArrayOutput) ToIdentityNetworkResourceArrayOutput() IdentityNetworkResourceArrayOutput {
	return o
}

func (o IdentityNetworkResourceArrayOutput) ToIdentityNetworkResourceArrayOutputWithContext(ctx context.Context) IdentityNetworkResourceArrayOutput {
	return o
}

func (o IdentityNetworkResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IdentityNetworkResource] {
	return pulumix.Output[[]IdentityNetworkResource]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNetworkResourceArrayOutput) Index(i pulumi.IntInput) IdentityNetworkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityNetworkResource {
		return vs[0].([]IdentityNetworkResource)[vs[1].(int)]
	}).(IdentityNetworkResourceOutput)
}

type IdentityNgsAccessPolicy struct {
	CloudAccountLink string                       `pulumi:"cloudAccountLink"`
	Data             *int                         `pulumi:"data"`
	Payload          *int                         `pulumi:"payload"`
	Pub              *IdentityNgsAccessPolicyPub  `pulumi:"pub"`
	Resp             *IdentityNgsAccessPolicyResp `pulumi:"resp"`
	Sub              *IdentityNgsAccessPolicySub  `pulumi:"sub"`
	Subs             *int                         `pulumi:"subs"`
}

// IdentityNgsAccessPolicyInput is an input type that accepts IdentityNgsAccessPolicyArgs and IdentityNgsAccessPolicyOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyInput` via:
//
//	IdentityNgsAccessPolicyArgs{...}
type IdentityNgsAccessPolicyInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyOutput() IdentityNgsAccessPolicyOutput
	ToIdentityNgsAccessPolicyOutputWithContext(context.Context) IdentityNgsAccessPolicyOutput
}

type IdentityNgsAccessPolicyArgs struct {
	CloudAccountLink pulumi.StringInput                  `pulumi:"cloudAccountLink"`
	Data             pulumi.IntPtrInput                  `pulumi:"data"`
	Payload          pulumi.IntPtrInput                  `pulumi:"payload"`
	Pub              IdentityNgsAccessPolicyPubPtrInput  `pulumi:"pub"`
	Resp             IdentityNgsAccessPolicyRespPtrInput `pulumi:"resp"`
	Sub              IdentityNgsAccessPolicySubPtrInput  `pulumi:"sub"`
	Subs             pulumi.IntPtrInput                  `pulumi:"subs"`
}

func (IdentityNgsAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicy)(nil)).Elem()
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyOutput() IdentityNgsAccessPolicyOutput {
	return i.ToIdentityNgsAccessPolicyOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyOutput)
}

func (i IdentityNgsAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicy] {
	return pulumix.Output[IdentityNgsAccessPolicy]{
		OutputState: i.ToIdentityNgsAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return i.ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyArgs) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyOutput).ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicyPtrInput is an input type that accepts IdentityNgsAccessPolicyArgs, IdentityNgsAccessPolicyPtr and IdentityNgsAccessPolicyPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyPtrInput` via:
//
//	        IdentityNgsAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicyPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput
	ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Context) IdentityNgsAccessPolicyPtrOutput
}

type identityNgsAccessPolicyPtrType IdentityNgsAccessPolicyArgs

func IdentityNgsAccessPolicyPtr(v *IdentityNgsAccessPolicyArgs) IdentityNgsAccessPolicyPtrInput {
	return (*identityNgsAccessPolicyPtrType)(v)
}

func (*identityNgsAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicy)(nil)).Elem()
}

func (i *identityNgsAccessPolicyPtrType) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return i.ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicyPtrType) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPtrOutput)
}

func (i *identityNgsAccessPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicy] {
	return pulumix.Output[*IdentityNgsAccessPolicy]{
		OutputState: i.ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicyOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicy)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyOutput() IdentityNgsAccessPolicyOutput {
	return o
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyOutput {
	return o
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return o.ToIdentityNgsAccessPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicyOutput) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicy {
		return &v
	}).(IdentityNgsAccessPolicyPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicy] {
	return pulumix.Output[IdentityNgsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyOutput) CloudAccountLink() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) string { return v.CloudAccountLink }).(pulumi.StringOutput)
}

func (o IdentityNgsAccessPolicyOutput) Data() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *int { return v.Data }).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Payload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *int { return v.Payload }).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Pub() IdentityNgsAccessPolicyPubPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyPub { return v.Pub }).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Resp() IdentityNgsAccessPolicyRespPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyResp { return v.Resp }).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Sub() IdentityNgsAccessPolicySubPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *IdentityNgsAccessPolicySub { return v.Sub }).(IdentityNgsAccessPolicySubPtrOutput)
}

func (o IdentityNgsAccessPolicyOutput) Subs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicy) *int { return v.Subs }).(pulumi.IntPtrOutput)
}

type IdentityNgsAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicy)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyPtrOutput) ToIdentityNgsAccessPolicyPtrOutput() IdentityNgsAccessPolicyPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPtrOutput) ToIdentityNgsAccessPolicyPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicy] {
	return pulumix.Output[*IdentityNgsAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyPtrOutput) Elem() IdentityNgsAccessPolicyOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) IdentityNgsAccessPolicy {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicy
		return ret
	}).(IdentityNgsAccessPolicyOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) CloudAccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CloudAccountLink
	}).(pulumi.StringPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Data() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Payload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Pub() IdentityNgsAccessPolicyPubPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyPub {
		if v == nil {
			return nil
		}
		return v.Pub
	}).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Resp() IdentityNgsAccessPolicyRespPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *IdentityNgsAccessPolicyResp {
		if v == nil {
			return nil
		}
		return v.Resp
	}).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Sub() IdentityNgsAccessPolicySubPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *IdentityNgsAccessPolicySub {
		if v == nil {
			return nil
		}
		return v.Sub
	}).(IdentityNgsAccessPolicySubPtrOutput)
}

func (o IdentityNgsAccessPolicyPtrOutput) Subs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Subs
	}).(pulumi.IntPtrOutput)
}

type IdentityNgsAccessPolicyPub struct {
	Allows []string `pulumi:"allows"`
	Denies []string `pulumi:"denies"`
}

// IdentityNgsAccessPolicyPubInput is an input type that accepts IdentityNgsAccessPolicyPubArgs and IdentityNgsAccessPolicyPubOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyPubInput` via:
//
//	IdentityNgsAccessPolicyPubArgs{...}
type IdentityNgsAccessPolicyPubInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyPubOutput() IdentityNgsAccessPolicyPubOutput
	ToIdentityNgsAccessPolicyPubOutputWithContext(context.Context) IdentityNgsAccessPolicyPubOutput
}

type IdentityNgsAccessPolicyPubArgs struct {
	Allows pulumi.StringArrayInput `pulumi:"allows"`
	Denies pulumi.StringArrayInput `pulumi:"denies"`
}

func (IdentityNgsAccessPolicyPubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubOutput() IdentityNgsAccessPolicyPubOutput {
	return i.ToIdentityNgsAccessPolicyPubOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPubOutput)
}

func (i IdentityNgsAccessPolicyPubArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyPub] {
	return pulumix.Output[IdentityNgsAccessPolicyPub]{
		OutputState: i.ToIdentityNgsAccessPolicyPubOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return i.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyPubArgs) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPubOutput).ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicyPubPtrInput is an input type that accepts IdentityNgsAccessPolicyPubArgs, IdentityNgsAccessPolicyPubPtr and IdentityNgsAccessPolicyPubPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyPubPtrInput` via:
//
//	        IdentityNgsAccessPolicyPubArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicyPubPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput
	ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Context) IdentityNgsAccessPolicyPubPtrOutput
}

type identityNgsAccessPolicyPubPtrType IdentityNgsAccessPolicyPubArgs

func IdentityNgsAccessPolicyPubPtr(v *IdentityNgsAccessPolicyPubArgs) IdentityNgsAccessPolicyPubPtrInput {
	return (*identityNgsAccessPolicyPubPtrType)(v)
}

func (*identityNgsAccessPolicyPubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (i *identityNgsAccessPolicyPubPtrType) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return i.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicyPubPtrType) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (i *identityNgsAccessPolicyPubPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyPub] {
	return pulumix.Output[*IdentityNgsAccessPolicyPub]{
		OutputState: i.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicyPubOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyPubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubOutput() IdentityNgsAccessPolicyPubOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return o.ToIdentityNgsAccessPolicyPubPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicyPubOutput) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicyPub) *IdentityNgsAccessPolicyPub {
		return &v
	}).(IdentityNgsAccessPolicyPubPtrOutput)
}

func (o IdentityNgsAccessPolicyPubOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyPub] {
	return pulumix.Output[IdentityNgsAccessPolicyPub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyPubOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyPub) []string { return v.Allows }).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicyPubOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyPub) []string { return v.Denies }).(pulumi.StringArrayOutput)
}

type IdentityNgsAccessPolicyPubPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyPubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyPub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyPubPtrOutput) ToIdentityNgsAccessPolicyPubPtrOutput() IdentityNgsAccessPolicyPubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubPtrOutput) ToIdentityNgsAccessPolicyPubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyPubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyPubPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyPub] {
	return pulumix.Output[*IdentityNgsAccessPolicyPub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyPubPtrOutput) Elem() IdentityNgsAccessPolicyPubOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyPub) IdentityNgsAccessPolicyPub {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicyPub
		return ret
	}).(IdentityNgsAccessPolicyPubOutput)
}

func (o IdentityNgsAccessPolicyPubPtrOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyPub) []string {
		if v == nil {
			return nil
		}
		return v.Allows
	}).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicyPubPtrOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyPub) []string {
		if v == nil {
			return nil
		}
		return v.Denies
	}).(pulumi.StringArrayOutput)
}

type IdentityNgsAccessPolicyResp struct {
	Max *int    `pulumi:"max"`
	Ttl *string `pulumi:"ttl"`
}

// IdentityNgsAccessPolicyRespInput is an input type that accepts IdentityNgsAccessPolicyRespArgs and IdentityNgsAccessPolicyRespOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyRespInput` via:
//
//	IdentityNgsAccessPolicyRespArgs{...}
type IdentityNgsAccessPolicyRespInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyRespOutput() IdentityNgsAccessPolicyRespOutput
	ToIdentityNgsAccessPolicyRespOutputWithContext(context.Context) IdentityNgsAccessPolicyRespOutput
}

type IdentityNgsAccessPolicyRespArgs struct {
	Max pulumi.IntPtrInput    `pulumi:"max"`
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (IdentityNgsAccessPolicyRespArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespOutput() IdentityNgsAccessPolicyRespOutput {
	return i.ToIdentityNgsAccessPolicyRespOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyRespOutput)
}

func (i IdentityNgsAccessPolicyRespArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyResp] {
	return pulumix.Output[IdentityNgsAccessPolicyResp]{
		OutputState: i.ToIdentityNgsAccessPolicyRespOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return i.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicyRespArgs) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyRespOutput).ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicyRespPtrInput is an input type that accepts IdentityNgsAccessPolicyRespArgs, IdentityNgsAccessPolicyRespPtr and IdentityNgsAccessPolicyRespPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicyRespPtrInput` via:
//
//	        IdentityNgsAccessPolicyRespArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicyRespPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput
	ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Context) IdentityNgsAccessPolicyRespPtrOutput
}

type identityNgsAccessPolicyRespPtrType IdentityNgsAccessPolicyRespArgs

func IdentityNgsAccessPolicyRespPtr(v *IdentityNgsAccessPolicyRespArgs) IdentityNgsAccessPolicyRespPtrInput {
	return (*identityNgsAccessPolicyRespPtrType)(v)
}

func (*identityNgsAccessPolicyRespPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (i *identityNgsAccessPolicyRespPtrType) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return i.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicyRespPtrType) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (i *identityNgsAccessPolicyRespPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyResp] {
	return pulumix.Output[*IdentityNgsAccessPolicyResp]{
		OutputState: i.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicyRespOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyRespOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespOutput() IdentityNgsAccessPolicyRespOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return o.ToIdentityNgsAccessPolicyRespPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicyRespOutput) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicyResp) *IdentityNgsAccessPolicyResp {
		return &v
	}).(IdentityNgsAccessPolicyRespPtrOutput)
}

func (o IdentityNgsAccessPolicyRespOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicyResp] {
	return pulumix.Output[IdentityNgsAccessPolicyResp]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyRespOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyResp) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyRespOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicyResp) *string { return v.Ttl }).(pulumi.StringPtrOutput)
}

type IdentityNgsAccessPolicyRespPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicyRespPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicyResp)(nil)).Elem()
}

func (o IdentityNgsAccessPolicyRespPtrOutput) ToIdentityNgsAccessPolicyRespPtrOutput() IdentityNgsAccessPolicyRespPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespPtrOutput) ToIdentityNgsAccessPolicyRespPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicyRespPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicyRespPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicyResp] {
	return pulumix.Output[*IdentityNgsAccessPolicyResp]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicyRespPtrOutput) Elem() IdentityNgsAccessPolicyRespOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyResp) IdentityNgsAccessPolicyResp {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicyResp
		return ret
	}).(IdentityNgsAccessPolicyRespOutput)
}

func (o IdentityNgsAccessPolicyRespPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyResp) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o IdentityNgsAccessPolicyRespPtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicyResp) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type IdentityNgsAccessPolicySub struct {
	Allows []string `pulumi:"allows"`
	Denies []string `pulumi:"denies"`
}

// IdentityNgsAccessPolicySubInput is an input type that accepts IdentityNgsAccessPolicySubArgs and IdentityNgsAccessPolicySubOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicySubInput` via:
//
//	IdentityNgsAccessPolicySubArgs{...}
type IdentityNgsAccessPolicySubInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicySubOutput() IdentityNgsAccessPolicySubOutput
	ToIdentityNgsAccessPolicySubOutputWithContext(context.Context) IdentityNgsAccessPolicySubOutput
}

type IdentityNgsAccessPolicySubArgs struct {
	Allows pulumi.StringArrayInput `pulumi:"allows"`
	Denies pulumi.StringArrayInput `pulumi:"denies"`
}

func (IdentityNgsAccessPolicySubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubOutput() IdentityNgsAccessPolicySubOutput {
	return i.ToIdentityNgsAccessPolicySubOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicySubOutput)
}

func (i IdentityNgsAccessPolicySubArgs) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicySub] {
	return pulumix.Output[IdentityNgsAccessPolicySub]{
		OutputState: i.ToIdentityNgsAccessPolicySubOutputWithContext(ctx).OutputState,
	}
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return i.ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Background())
}

func (i IdentityNgsAccessPolicySubArgs) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicySubOutput).ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx)
}

// IdentityNgsAccessPolicySubPtrInput is an input type that accepts IdentityNgsAccessPolicySubArgs, IdentityNgsAccessPolicySubPtr and IdentityNgsAccessPolicySubPtrOutput values.
// You can construct a concrete instance of `IdentityNgsAccessPolicySubPtrInput` via:
//
//	        IdentityNgsAccessPolicySubArgs{...}
//
//	or:
//
//	        nil
type IdentityNgsAccessPolicySubPtrInput interface {
	pulumi.Input

	ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput
	ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Context) IdentityNgsAccessPolicySubPtrOutput
}

type identityNgsAccessPolicySubPtrType IdentityNgsAccessPolicySubArgs

func IdentityNgsAccessPolicySubPtr(v *IdentityNgsAccessPolicySubArgs) IdentityNgsAccessPolicySubPtrInput {
	return (*identityNgsAccessPolicySubPtrType)(v)
}

func (*identityNgsAccessPolicySubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (i *identityNgsAccessPolicySubPtrType) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return i.ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Background())
}

func (i *identityNgsAccessPolicySubPtrType) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNgsAccessPolicySubPtrOutput)
}

func (i *identityNgsAccessPolicySubPtrType) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicySub] {
	return pulumix.Output[*IdentityNgsAccessPolicySub]{
		OutputState: i.ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx).OutputState,
	}
}

type IdentityNgsAccessPolicySubOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicySubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubOutput() IdentityNgsAccessPolicySubOutput {
	return o
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubOutput {
	return o
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return o.ToIdentityNgsAccessPolicySubPtrOutputWithContext(context.Background())
}

func (o IdentityNgsAccessPolicySubOutput) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityNgsAccessPolicySub) *IdentityNgsAccessPolicySub {
		return &v
	}).(IdentityNgsAccessPolicySubPtrOutput)
}

func (o IdentityNgsAccessPolicySubOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityNgsAccessPolicySub] {
	return pulumix.Output[IdentityNgsAccessPolicySub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicySubOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicySub) []string { return v.Allows }).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicySubOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityNgsAccessPolicySub) []string { return v.Denies }).(pulumi.StringArrayOutput)
}

type IdentityNgsAccessPolicySubPtrOutput struct{ *pulumi.OutputState }

func (IdentityNgsAccessPolicySubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNgsAccessPolicySub)(nil)).Elem()
}

func (o IdentityNgsAccessPolicySubPtrOutput) ToIdentityNgsAccessPolicySubPtrOutput() IdentityNgsAccessPolicySubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicySubPtrOutput) ToIdentityNgsAccessPolicySubPtrOutputWithContext(ctx context.Context) IdentityNgsAccessPolicySubPtrOutput {
	return o
}

func (o IdentityNgsAccessPolicySubPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityNgsAccessPolicySub] {
	return pulumix.Output[*IdentityNgsAccessPolicySub]{
		OutputState: o.OutputState,
	}
}

func (o IdentityNgsAccessPolicySubPtrOutput) Elem() IdentityNgsAccessPolicySubOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicySub) IdentityNgsAccessPolicySub {
		if v != nil {
			return *v
		}
		var ret IdentityNgsAccessPolicySub
		return ret
	}).(IdentityNgsAccessPolicySubOutput)
}

func (o IdentityNgsAccessPolicySubPtrOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicySub) []string {
		if v == nil {
			return nil
		}
		return v.Allows
	}).(pulumi.StringArrayOutput)
}

func (o IdentityNgsAccessPolicySubPtrOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityNgsAccessPolicySub) []string {
		if v == nil {
			return nil
		}
		return v.Denies
	}).(pulumi.StringArrayOutput)
}

type OrgAuthConfig struct {
	DomainAutoMembers []string `pulumi:"domainAutoMembers"`
	SamlOnly          *bool    `pulumi:"samlOnly"`
}

// OrgAuthConfigInput is an input type that accepts OrgAuthConfigArgs and OrgAuthConfigOutput values.
// You can construct a concrete instance of `OrgAuthConfigInput` via:
//
//	OrgAuthConfigArgs{...}
type OrgAuthConfigInput interface {
	pulumi.Input

	ToOrgAuthConfigOutput() OrgAuthConfigOutput
	ToOrgAuthConfigOutputWithContext(context.Context) OrgAuthConfigOutput
}

type OrgAuthConfigArgs struct {
	DomainAutoMembers pulumi.StringArrayInput `pulumi:"domainAutoMembers"`
	SamlOnly          pulumi.BoolPtrInput     `pulumi:"samlOnly"`
}

func (OrgAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgAuthConfig)(nil)).Elem()
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigOutput() OrgAuthConfigOutput {
	return i.ToOrgAuthConfigOutputWithContext(context.Background())
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigOutputWithContext(ctx context.Context) OrgAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAuthConfigOutput)
}

func (i OrgAuthConfigArgs) ToOutput(ctx context.Context) pulumix.Output[OrgAuthConfig] {
	return pulumix.Output[OrgAuthConfig]{
		OutputState: i.ToOrgAuthConfigOutputWithContext(ctx).OutputState,
	}
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return i.ToOrgAuthConfigPtrOutputWithContext(context.Background())
}

func (i OrgAuthConfigArgs) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAuthConfigOutput).ToOrgAuthConfigPtrOutputWithContext(ctx)
}

// OrgAuthConfigPtrInput is an input type that accepts OrgAuthConfigArgs, OrgAuthConfigPtr and OrgAuthConfigPtrOutput values.
// You can construct a concrete instance of `OrgAuthConfigPtrInput` via:
//
//	        OrgAuthConfigArgs{...}
//
//	or:
//
//	        nil
type OrgAuthConfigPtrInput interface {
	pulumi.Input

	ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput
	ToOrgAuthConfigPtrOutputWithContext(context.Context) OrgAuthConfigPtrOutput
}

type orgAuthConfigPtrType OrgAuthConfigArgs

func OrgAuthConfigPtr(v *OrgAuthConfigArgs) OrgAuthConfigPtrInput {
	return (*orgAuthConfigPtrType)(v)
}

func (*orgAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgAuthConfig)(nil)).Elem()
}

func (i *orgAuthConfigPtrType) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return i.ToOrgAuthConfigPtrOutputWithContext(context.Background())
}

func (i *orgAuthConfigPtrType) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAuthConfigPtrOutput)
}

func (i *orgAuthConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgAuthConfig] {
	return pulumix.Output[*OrgAuthConfig]{
		OutputState: i.ToOrgAuthConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgAuthConfigOutput struct{ *pulumi.OutputState }

func (OrgAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgAuthConfig)(nil)).Elem()
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigOutput() OrgAuthConfigOutput {
	return o
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigOutputWithContext(ctx context.Context) OrgAuthConfigOutput {
	return o
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return o.ToOrgAuthConfigPtrOutputWithContext(context.Background())
}

func (o OrgAuthConfigOutput) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgAuthConfig) *OrgAuthConfig {
		return &v
	}).(OrgAuthConfigPtrOutput)
}

func (o OrgAuthConfigOutput) ToOutput(ctx context.Context) pulumix.Output[OrgAuthConfig] {
	return pulumix.Output[OrgAuthConfig]{
		OutputState: o.OutputState,
	}
}

func (o OrgAuthConfigOutput) DomainAutoMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrgAuthConfig) []string { return v.DomainAutoMembers }).(pulumi.StringArrayOutput)
}

func (o OrgAuthConfigOutput) SamlOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgAuthConfig) *bool { return v.SamlOnly }).(pulumi.BoolPtrOutput)
}

type OrgAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (OrgAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgAuthConfig)(nil)).Elem()
}

func (o OrgAuthConfigPtrOutput) ToOrgAuthConfigPtrOutput() OrgAuthConfigPtrOutput {
	return o
}

func (o OrgAuthConfigPtrOutput) ToOrgAuthConfigPtrOutputWithContext(ctx context.Context) OrgAuthConfigPtrOutput {
	return o
}

func (o OrgAuthConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgAuthConfig] {
	return pulumix.Output[*OrgAuthConfig]{
		OutputState: o.OutputState,
	}
}

func (o OrgAuthConfigPtrOutput) Elem() OrgAuthConfigOutput {
	return o.ApplyT(func(v *OrgAuthConfig) OrgAuthConfig {
		if v != nil {
			return *v
		}
		var ret OrgAuthConfig
		return ret
	}).(OrgAuthConfigOutput)
}

func (o OrgAuthConfigPtrOutput) DomainAutoMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrgAuthConfig) []string {
		if v == nil {
			return nil
		}
		return v.DomainAutoMembers
	}).(pulumi.StringArrayOutput)
}

func (o OrgAuthConfigPtrOutput) SamlOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgAuthConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SamlOnly
	}).(pulumi.BoolPtrOutput)
}

type OrgLoggingCloudWatchLogging struct {
	Credentials   string `pulumi:"credentials"`
	GroupName     string `pulumi:"groupName"`
	Region        string `pulumi:"region"`
	RetentionDays *int   `pulumi:"retentionDays"`
	StreamName    string `pulumi:"streamName"`
}

// OrgLoggingCloudWatchLoggingInput is an input type that accepts OrgLoggingCloudWatchLoggingArgs and OrgLoggingCloudWatchLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingCloudWatchLoggingInput` via:
//
//	OrgLoggingCloudWatchLoggingArgs{...}
type OrgLoggingCloudWatchLoggingInput interface {
	pulumi.Input

	ToOrgLoggingCloudWatchLoggingOutput() OrgLoggingCloudWatchLoggingOutput
	ToOrgLoggingCloudWatchLoggingOutputWithContext(context.Context) OrgLoggingCloudWatchLoggingOutput
}

type OrgLoggingCloudWatchLoggingArgs struct {
	Credentials   pulumi.StringInput `pulumi:"credentials"`
	GroupName     pulumi.StringInput `pulumi:"groupName"`
	Region        pulumi.StringInput `pulumi:"region"`
	RetentionDays pulumi.IntPtrInput `pulumi:"retentionDays"`
	StreamName    pulumi.StringInput `pulumi:"streamName"`
}

func (OrgLoggingCloudWatchLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (i OrgLoggingCloudWatchLoggingArgs) ToOrgLoggingCloudWatchLoggingOutput() OrgLoggingCloudWatchLoggingOutput {
	return i.ToOrgLoggingCloudWatchLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingCloudWatchLoggingArgs) ToOrgLoggingCloudWatchLoggingOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCloudWatchLoggingOutput)
}

func (i OrgLoggingCloudWatchLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCloudWatchLogging] {
	return pulumix.Output[OrgLoggingCloudWatchLogging]{
		OutputState: i.ToOrgLoggingCloudWatchLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingCloudWatchLoggingArrayInput is an input type that accepts OrgLoggingCloudWatchLoggingArray and OrgLoggingCloudWatchLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingCloudWatchLoggingArrayInput` via:
//
//	OrgLoggingCloudWatchLoggingArray{ OrgLoggingCloudWatchLoggingArgs{...} }
type OrgLoggingCloudWatchLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingCloudWatchLoggingArrayOutput() OrgLoggingCloudWatchLoggingArrayOutput
	ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(context.Context) OrgLoggingCloudWatchLoggingArrayOutput
}

type OrgLoggingCloudWatchLoggingArray []OrgLoggingCloudWatchLoggingInput

func (OrgLoggingCloudWatchLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (i OrgLoggingCloudWatchLoggingArray) ToOrgLoggingCloudWatchLoggingArrayOutput() OrgLoggingCloudWatchLoggingArrayOutput {
	return i.ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingCloudWatchLoggingArray) ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCloudWatchLoggingArrayOutput)
}

func (i OrgLoggingCloudWatchLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCloudWatchLogging] {
	return pulumix.Output[[]OrgLoggingCloudWatchLogging]{
		OutputState: i.ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingCloudWatchLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingCloudWatchLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (o OrgLoggingCloudWatchLoggingOutput) ToOrgLoggingCloudWatchLoggingOutput() OrgLoggingCloudWatchLoggingOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingOutput) ToOrgLoggingCloudWatchLoggingOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCloudWatchLogging] {
	return pulumix.Output[OrgLoggingCloudWatchLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCloudWatchLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.Region }).(pulumi.StringOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) *int { return v.RetentionDays }).(pulumi.IntPtrOutput)
}

func (o OrgLoggingCloudWatchLoggingOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCloudWatchLogging) string { return v.StreamName }).(pulumi.StringOutput)
}

type OrgLoggingCloudWatchLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingCloudWatchLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCloudWatchLogging)(nil)).Elem()
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) ToOrgLoggingCloudWatchLoggingArrayOutput() OrgLoggingCloudWatchLoggingArrayOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) ToOrgLoggingCloudWatchLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCloudWatchLoggingArrayOutput {
	return o
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCloudWatchLogging] {
	return pulumix.Output[[]OrgLoggingCloudWatchLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCloudWatchLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingCloudWatchLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingCloudWatchLogging {
		return vs[0].([]OrgLoggingCloudWatchLogging)[vs[1].(int)]
	}).(OrgLoggingCloudWatchLoggingOutput)
}

type OrgLoggingCoralogixLogging struct {
	App         string `pulumi:"app"`
	Cluster     string `pulumi:"cluster"`
	Credentials string `pulumi:"credentials"`
	Subsystem   string `pulumi:"subsystem"`
}

// OrgLoggingCoralogixLoggingInput is an input type that accepts OrgLoggingCoralogixLoggingArgs and OrgLoggingCoralogixLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingCoralogixLoggingInput` via:
//
//	OrgLoggingCoralogixLoggingArgs{...}
type OrgLoggingCoralogixLoggingInput interface {
	pulumi.Input

	ToOrgLoggingCoralogixLoggingOutput() OrgLoggingCoralogixLoggingOutput
	ToOrgLoggingCoralogixLoggingOutputWithContext(context.Context) OrgLoggingCoralogixLoggingOutput
}

type OrgLoggingCoralogixLoggingArgs struct {
	App         pulumi.StringInput `pulumi:"app"`
	Cluster     pulumi.StringInput `pulumi:"cluster"`
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Subsystem   pulumi.StringInput `pulumi:"subsystem"`
}

func (OrgLoggingCoralogixLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (i OrgLoggingCoralogixLoggingArgs) ToOrgLoggingCoralogixLoggingOutput() OrgLoggingCoralogixLoggingOutput {
	return i.ToOrgLoggingCoralogixLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingCoralogixLoggingArgs) ToOrgLoggingCoralogixLoggingOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCoralogixLoggingOutput)
}

func (i OrgLoggingCoralogixLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCoralogixLogging] {
	return pulumix.Output[OrgLoggingCoralogixLogging]{
		OutputState: i.ToOrgLoggingCoralogixLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingCoralogixLoggingArrayInput is an input type that accepts OrgLoggingCoralogixLoggingArray and OrgLoggingCoralogixLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingCoralogixLoggingArrayInput` via:
//
//	OrgLoggingCoralogixLoggingArray{ OrgLoggingCoralogixLoggingArgs{...} }
type OrgLoggingCoralogixLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingCoralogixLoggingArrayOutput() OrgLoggingCoralogixLoggingArrayOutput
	ToOrgLoggingCoralogixLoggingArrayOutputWithContext(context.Context) OrgLoggingCoralogixLoggingArrayOutput
}

type OrgLoggingCoralogixLoggingArray []OrgLoggingCoralogixLoggingInput

func (OrgLoggingCoralogixLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (i OrgLoggingCoralogixLoggingArray) ToOrgLoggingCoralogixLoggingArrayOutput() OrgLoggingCoralogixLoggingArrayOutput {
	return i.ToOrgLoggingCoralogixLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingCoralogixLoggingArray) ToOrgLoggingCoralogixLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingCoralogixLoggingArrayOutput)
}

func (i OrgLoggingCoralogixLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCoralogixLogging] {
	return pulumix.Output[[]OrgLoggingCoralogixLogging]{
		OutputState: i.ToOrgLoggingCoralogixLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingCoralogixLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingCoralogixLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (o OrgLoggingCoralogixLoggingOutput) ToOrgLoggingCoralogixLoggingOutput() OrgLoggingCoralogixLoggingOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingOutput) ToOrgLoggingCoralogixLoggingOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingCoralogixLogging] {
	return pulumix.Output[OrgLoggingCoralogixLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCoralogixLoggingOutput) App() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.App }).(pulumi.StringOutput)
}

func (o OrgLoggingCoralogixLoggingOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.Cluster }).(pulumi.StringOutput)
}

func (o OrgLoggingCoralogixLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingCoralogixLoggingOutput) Subsystem() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingCoralogixLogging) string { return v.Subsystem }).(pulumi.StringOutput)
}

type OrgLoggingCoralogixLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingCoralogixLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingCoralogixLogging)(nil)).Elem()
}

func (o OrgLoggingCoralogixLoggingArrayOutput) ToOrgLoggingCoralogixLoggingArrayOutput() OrgLoggingCoralogixLoggingArrayOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingArrayOutput) ToOrgLoggingCoralogixLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingCoralogixLoggingArrayOutput {
	return o
}

func (o OrgLoggingCoralogixLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingCoralogixLogging] {
	return pulumix.Output[[]OrgLoggingCoralogixLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingCoralogixLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingCoralogixLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingCoralogixLogging {
		return vs[0].([]OrgLoggingCoralogixLogging)[vs[1].(int)]
	}).(OrgLoggingCoralogixLoggingOutput)
}

type OrgLoggingDatadogLogging struct {
	Credentials string `pulumi:"credentials"`
	Host        string `pulumi:"host"`
}

// OrgLoggingDatadogLoggingInput is an input type that accepts OrgLoggingDatadogLoggingArgs and OrgLoggingDatadogLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingDatadogLoggingInput` via:
//
//	OrgLoggingDatadogLoggingArgs{...}
type OrgLoggingDatadogLoggingInput interface {
	pulumi.Input

	ToOrgLoggingDatadogLoggingOutput() OrgLoggingDatadogLoggingOutput
	ToOrgLoggingDatadogLoggingOutputWithContext(context.Context) OrgLoggingDatadogLoggingOutput
}

type OrgLoggingDatadogLoggingArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Host        pulumi.StringInput `pulumi:"host"`
}

func (OrgLoggingDatadogLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingDatadogLogging)(nil)).Elem()
}

func (i OrgLoggingDatadogLoggingArgs) ToOrgLoggingDatadogLoggingOutput() OrgLoggingDatadogLoggingOutput {
	return i.ToOrgLoggingDatadogLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingDatadogLoggingArgs) ToOrgLoggingDatadogLoggingOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingDatadogLoggingOutput)
}

func (i OrgLoggingDatadogLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingDatadogLogging] {
	return pulumix.Output[OrgLoggingDatadogLogging]{
		OutputState: i.ToOrgLoggingDatadogLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingDatadogLoggingArrayInput is an input type that accepts OrgLoggingDatadogLoggingArray and OrgLoggingDatadogLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingDatadogLoggingArrayInput` via:
//
//	OrgLoggingDatadogLoggingArray{ OrgLoggingDatadogLoggingArgs{...} }
type OrgLoggingDatadogLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingDatadogLoggingArrayOutput() OrgLoggingDatadogLoggingArrayOutput
	ToOrgLoggingDatadogLoggingArrayOutputWithContext(context.Context) OrgLoggingDatadogLoggingArrayOutput
}

type OrgLoggingDatadogLoggingArray []OrgLoggingDatadogLoggingInput

func (OrgLoggingDatadogLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingDatadogLogging)(nil)).Elem()
}

func (i OrgLoggingDatadogLoggingArray) ToOrgLoggingDatadogLoggingArrayOutput() OrgLoggingDatadogLoggingArrayOutput {
	return i.ToOrgLoggingDatadogLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingDatadogLoggingArray) ToOrgLoggingDatadogLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingDatadogLoggingArrayOutput)
}

func (i OrgLoggingDatadogLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingDatadogLogging] {
	return pulumix.Output[[]OrgLoggingDatadogLogging]{
		OutputState: i.ToOrgLoggingDatadogLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingDatadogLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingDatadogLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingDatadogLogging)(nil)).Elem()
}

func (o OrgLoggingDatadogLoggingOutput) ToOrgLoggingDatadogLoggingOutput() OrgLoggingDatadogLoggingOutput {
	return o
}

func (o OrgLoggingDatadogLoggingOutput) ToOrgLoggingDatadogLoggingOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingOutput {
	return o
}

func (o OrgLoggingDatadogLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingDatadogLogging] {
	return pulumix.Output[OrgLoggingDatadogLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingDatadogLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingDatadogLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingDatadogLoggingOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingDatadogLogging) string { return v.Host }).(pulumi.StringOutput)
}

type OrgLoggingDatadogLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingDatadogLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingDatadogLogging)(nil)).Elem()
}

func (o OrgLoggingDatadogLoggingArrayOutput) ToOrgLoggingDatadogLoggingArrayOutput() OrgLoggingDatadogLoggingArrayOutput {
	return o
}

func (o OrgLoggingDatadogLoggingArrayOutput) ToOrgLoggingDatadogLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingDatadogLoggingArrayOutput {
	return o
}

func (o OrgLoggingDatadogLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingDatadogLogging] {
	return pulumix.Output[[]OrgLoggingDatadogLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingDatadogLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingDatadogLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingDatadogLogging {
		return vs[0].([]OrgLoggingDatadogLogging)[vs[1].(int)]
	}).(OrgLoggingDatadogLoggingOutput)
}

type OrgLoggingElasticLogging struct {
	Aws          *OrgLoggingElasticLoggingAws          `pulumi:"aws"`
	ElasticCloud *OrgLoggingElasticLoggingElasticCloud `pulumi:"elasticCloud"`
	Generic      *OrgLoggingElasticLoggingGeneric      `pulumi:"generic"`
}

// OrgLoggingElasticLoggingInput is an input type that accepts OrgLoggingElasticLoggingArgs and OrgLoggingElasticLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingInput` via:
//
//	OrgLoggingElasticLoggingArgs{...}
type OrgLoggingElasticLoggingInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingOutput() OrgLoggingElasticLoggingOutput
	ToOrgLoggingElasticLoggingOutputWithContext(context.Context) OrgLoggingElasticLoggingOutput
}

type OrgLoggingElasticLoggingArgs struct {
	Aws          OrgLoggingElasticLoggingAwsPtrInput          `pulumi:"aws"`
	ElasticCloud OrgLoggingElasticLoggingElasticCloudPtrInput `pulumi:"elasticCloud"`
	Generic      OrgLoggingElasticLoggingGenericPtrInput      `pulumi:"generic"`
}

func (OrgLoggingElasticLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLogging)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingArgs) ToOrgLoggingElasticLoggingOutput() OrgLoggingElasticLoggingOutput {
	return i.ToOrgLoggingElasticLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingArgs) ToOrgLoggingElasticLoggingOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingOutput)
}

func (i OrgLoggingElasticLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLogging] {
	return pulumix.Output[OrgLoggingElasticLogging]{
		OutputState: i.ToOrgLoggingElasticLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingElasticLoggingArrayInput is an input type that accepts OrgLoggingElasticLoggingArray and OrgLoggingElasticLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingArrayInput` via:
//
//	OrgLoggingElasticLoggingArray{ OrgLoggingElasticLoggingArgs{...} }
type OrgLoggingElasticLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingArrayOutput() OrgLoggingElasticLoggingArrayOutput
	ToOrgLoggingElasticLoggingArrayOutputWithContext(context.Context) OrgLoggingElasticLoggingArrayOutput
}

type OrgLoggingElasticLoggingArray []OrgLoggingElasticLoggingInput

func (OrgLoggingElasticLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingElasticLogging)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingArray) ToOrgLoggingElasticLoggingArrayOutput() OrgLoggingElasticLoggingArrayOutput {
	return i.ToOrgLoggingElasticLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingArray) ToOrgLoggingElasticLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingArrayOutput)
}

func (i OrgLoggingElasticLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingElasticLogging] {
	return pulumix.Output[[]OrgLoggingElasticLogging]{
		OutputState: i.ToOrgLoggingElasticLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLogging)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingOutput) ToOrgLoggingElasticLoggingOutput() OrgLoggingElasticLoggingOutput {
	return o
}

func (o OrgLoggingElasticLoggingOutput) ToOrgLoggingElasticLoggingOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingOutput {
	return o
}

func (o OrgLoggingElasticLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLogging] {
	return pulumix.Output[OrgLoggingElasticLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingOutput) Aws() OrgLoggingElasticLoggingAwsPtrOutput {
	return o.ApplyT(func(v OrgLoggingElasticLogging) *OrgLoggingElasticLoggingAws { return v.Aws }).(OrgLoggingElasticLoggingAwsPtrOutput)
}

func (o OrgLoggingElasticLoggingOutput) ElasticCloud() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o.ApplyT(func(v OrgLoggingElasticLogging) *OrgLoggingElasticLoggingElasticCloud { return v.ElasticCloud }).(OrgLoggingElasticLoggingElasticCloudPtrOutput)
}

func (o OrgLoggingElasticLoggingOutput) Generic() OrgLoggingElasticLoggingGenericPtrOutput {
	return o.ApplyT(func(v OrgLoggingElasticLogging) *OrgLoggingElasticLoggingGeneric { return v.Generic }).(OrgLoggingElasticLoggingGenericPtrOutput)
}

type OrgLoggingElasticLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingElasticLogging)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingArrayOutput) ToOrgLoggingElasticLoggingArrayOutput() OrgLoggingElasticLoggingArrayOutput {
	return o
}

func (o OrgLoggingElasticLoggingArrayOutput) ToOrgLoggingElasticLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingArrayOutput {
	return o
}

func (o OrgLoggingElasticLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingElasticLogging] {
	return pulumix.Output[[]OrgLoggingElasticLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingElasticLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingElasticLogging {
		return vs[0].([]OrgLoggingElasticLogging)[vs[1].(int)]
	}).(OrgLoggingElasticLoggingOutput)
}

type OrgLoggingElasticLoggingAws struct {
	Credentials string `pulumi:"credentials"`
	Host        string `pulumi:"host"`
	Index       string `pulumi:"index"`
	Port        int    `pulumi:"port"`
	Region      string `pulumi:"region"`
	Type        string `pulumi:"type"`
}

// OrgLoggingElasticLoggingAwsInput is an input type that accepts OrgLoggingElasticLoggingAwsArgs and OrgLoggingElasticLoggingAwsOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingAwsInput` via:
//
//	OrgLoggingElasticLoggingAwsArgs{...}
type OrgLoggingElasticLoggingAwsInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingAwsOutput() OrgLoggingElasticLoggingAwsOutput
	ToOrgLoggingElasticLoggingAwsOutputWithContext(context.Context) OrgLoggingElasticLoggingAwsOutput
}

type OrgLoggingElasticLoggingAwsArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Host        pulumi.StringInput `pulumi:"host"`
	Index       pulumi.StringInput `pulumi:"index"`
	Port        pulumi.IntInput    `pulumi:"port"`
	Region      pulumi.StringInput `pulumi:"region"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (OrgLoggingElasticLoggingAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsOutput() OrgLoggingElasticLoggingAwsOutput {
	return i.ToOrgLoggingElasticLoggingAwsOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingAwsOutput)
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingAws] {
	return pulumix.Output[OrgLoggingElasticLoggingAws]{
		OutputState: i.ToOrgLoggingElasticLoggingAwsOutputWithContext(ctx).OutputState,
	}
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return i.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingAwsArgs) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingAwsOutput).ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx)
}

// OrgLoggingElasticLoggingAwsPtrInput is an input type that accepts OrgLoggingElasticLoggingAwsArgs, OrgLoggingElasticLoggingAwsPtr and OrgLoggingElasticLoggingAwsPtrOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingAwsPtrInput` via:
//
//	        OrgLoggingElasticLoggingAwsArgs{...}
//
//	or:
//
//	        nil
type OrgLoggingElasticLoggingAwsPtrInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput
	ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Context) OrgLoggingElasticLoggingAwsPtrOutput
}

type orgLoggingElasticLoggingAwsPtrType OrgLoggingElasticLoggingAwsArgs

func OrgLoggingElasticLoggingAwsPtr(v *OrgLoggingElasticLoggingAwsArgs) OrgLoggingElasticLoggingAwsPtrInput {
	return (*orgLoggingElasticLoggingAwsPtrType)(v)
}

func (*orgLoggingElasticLoggingAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (i *orgLoggingElasticLoggingAwsPtrType) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return i.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Background())
}

func (i *orgLoggingElasticLoggingAwsPtrType) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingAwsPtrOutput)
}

func (i *orgLoggingElasticLoggingAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingAws] {
	return pulumix.Output[*OrgLoggingElasticLoggingAws]{
		OutputState: i.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingAwsOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsOutput() OrgLoggingElasticLoggingAwsOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return o.ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(context.Background())
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLoggingElasticLoggingAws) *OrgLoggingElasticLoggingAws {
		return &v
	}).(OrgLoggingElasticLoggingAwsPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingAws] {
	return pulumix.Output[OrgLoggingElasticLoggingAws]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingAwsOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Host }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Index }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) int { return v.Port }).(pulumi.IntOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Region }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingAwsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingAws) string { return v.Type }).(pulumi.StringOutput)
}

type OrgLoggingElasticLoggingAwsPtrOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingAws)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) ToOrgLoggingElasticLoggingAwsPtrOutput() OrgLoggingElasticLoggingAwsPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) ToOrgLoggingElasticLoggingAwsPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingAwsPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingAws] {
	return pulumix.Output[*OrgLoggingElasticLoggingAws]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Elem() OrgLoggingElasticLoggingAwsOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) OrgLoggingElasticLoggingAws {
		if v != nil {
			return *v
		}
		var ret OrgLoggingElasticLoggingAws
		return ret
	}).(OrgLoggingElasticLoggingAwsOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingAwsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingAws) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OrgLoggingElasticLoggingElasticCloud struct {
	CloudId     string `pulumi:"cloudId"`
	Credentials string `pulumi:"credentials"`
	Index       string `pulumi:"index"`
	Type        string `pulumi:"type"`
}

// OrgLoggingElasticLoggingElasticCloudInput is an input type that accepts OrgLoggingElasticLoggingElasticCloudArgs and OrgLoggingElasticLoggingElasticCloudOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingElasticCloudInput` via:
//
//	OrgLoggingElasticLoggingElasticCloudArgs{...}
type OrgLoggingElasticLoggingElasticCloudInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingElasticCloudOutput() OrgLoggingElasticLoggingElasticCloudOutput
	ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(context.Context) OrgLoggingElasticLoggingElasticCloudOutput
}

type OrgLoggingElasticLoggingElasticCloudArgs struct {
	CloudId     pulumi.StringInput `pulumi:"cloudId"`
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Index       pulumi.StringInput `pulumi:"index"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (OrgLoggingElasticLoggingElasticCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudOutput() OrgLoggingElasticLoggingElasticCloudOutput {
	return i.ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingElasticCloudOutput)
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[OrgLoggingElasticLoggingElasticCloud]{
		OutputState: i.ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(ctx).OutputState,
	}
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return i.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingElasticCloudArgs) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingElasticCloudOutput).ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx)
}

// OrgLoggingElasticLoggingElasticCloudPtrInput is an input type that accepts OrgLoggingElasticLoggingElasticCloudArgs, OrgLoggingElasticLoggingElasticCloudPtr and OrgLoggingElasticLoggingElasticCloudPtrOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingElasticCloudPtrInput` via:
//
//	        OrgLoggingElasticLoggingElasticCloudArgs{...}
//
//	or:
//
//	        nil
type OrgLoggingElasticLoggingElasticCloudPtrInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput
	ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput
}

type orgLoggingElasticLoggingElasticCloudPtrType OrgLoggingElasticLoggingElasticCloudArgs

func OrgLoggingElasticLoggingElasticCloudPtr(v *OrgLoggingElasticLoggingElasticCloudArgs) OrgLoggingElasticLoggingElasticCloudPtrInput {
	return (*orgLoggingElasticLoggingElasticCloudPtrType)(v)
}

func (*orgLoggingElasticLoggingElasticCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (i *orgLoggingElasticLoggingElasticCloudPtrType) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return i.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Background())
}

func (i *orgLoggingElasticLoggingElasticCloudPtrType) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingElasticCloudPtrOutput)
}

func (i *orgLoggingElasticLoggingElasticCloudPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[*OrgLoggingElasticLoggingElasticCloud]{
		OutputState: i.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingElasticCloudOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingElasticCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudOutput() OrgLoggingElasticLoggingElasticCloudOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o.ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(context.Background())
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLoggingElasticLoggingElasticCloud) *OrgLoggingElasticLoggingElasticCloud {
		return &v
	}).(OrgLoggingElasticLoggingElasticCloudPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[OrgLoggingElasticLoggingElasticCloud]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.CloudId }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.Index }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingElasticCloud) string { return v.Type }).(pulumi.StringOutput)
}

type OrgLoggingElasticLoggingElasticCloudPtrOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingElasticCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingElasticCloud)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutput() OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) ToOrgLoggingElasticLoggingElasticCloudPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingElasticCloudPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingElasticCloud] {
	return pulumix.Output[*OrgLoggingElasticLoggingElasticCloud]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Elem() OrgLoggingElasticLoggingElasticCloudOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) OrgLoggingElasticLoggingElasticCloud {
		if v != nil {
			return *v
		}
		var ret OrgLoggingElasticLoggingElasticCloud
		return ret
	}).(OrgLoggingElasticLoggingElasticCloudOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.CloudId
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingElasticCloudPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingElasticCloud) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OrgLoggingElasticLoggingGeneric struct {
	Credentials string `pulumi:"credentials"`
	Host        string `pulumi:"host"`
	Index       string `pulumi:"index"`
	Path        string `pulumi:"path"`
	Port        int    `pulumi:"port"`
	Type        string `pulumi:"type"`
}

// OrgLoggingElasticLoggingGenericInput is an input type that accepts OrgLoggingElasticLoggingGenericArgs and OrgLoggingElasticLoggingGenericOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingGenericInput` via:
//
//	OrgLoggingElasticLoggingGenericArgs{...}
type OrgLoggingElasticLoggingGenericInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingGenericOutput() OrgLoggingElasticLoggingGenericOutput
	ToOrgLoggingElasticLoggingGenericOutputWithContext(context.Context) OrgLoggingElasticLoggingGenericOutput
}

type OrgLoggingElasticLoggingGenericArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Host        pulumi.StringInput `pulumi:"host"`
	Index       pulumi.StringInput `pulumi:"index"`
	Path        pulumi.StringInput `pulumi:"path"`
	Port        pulumi.IntInput    `pulumi:"port"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (OrgLoggingElasticLoggingGenericArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericOutput() OrgLoggingElasticLoggingGenericOutput {
	return i.ToOrgLoggingElasticLoggingGenericOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingGenericOutput)
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[OrgLoggingElasticLoggingGeneric]{
		OutputState: i.ToOrgLoggingElasticLoggingGenericOutputWithContext(ctx).OutputState,
	}
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return i.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Background())
}

func (i OrgLoggingElasticLoggingGenericArgs) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingGenericOutput).ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx)
}

// OrgLoggingElasticLoggingGenericPtrInput is an input type that accepts OrgLoggingElasticLoggingGenericArgs, OrgLoggingElasticLoggingGenericPtr and OrgLoggingElasticLoggingGenericPtrOutput values.
// You can construct a concrete instance of `OrgLoggingElasticLoggingGenericPtrInput` via:
//
//	        OrgLoggingElasticLoggingGenericArgs{...}
//
//	or:
//
//	        nil
type OrgLoggingElasticLoggingGenericPtrInput interface {
	pulumi.Input

	ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput
	ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Context) OrgLoggingElasticLoggingGenericPtrOutput
}

type orgLoggingElasticLoggingGenericPtrType OrgLoggingElasticLoggingGenericArgs

func OrgLoggingElasticLoggingGenericPtr(v *OrgLoggingElasticLoggingGenericArgs) OrgLoggingElasticLoggingGenericPtrInput {
	return (*orgLoggingElasticLoggingGenericPtrType)(v)
}

func (*orgLoggingElasticLoggingGenericPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (i *orgLoggingElasticLoggingGenericPtrType) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return i.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Background())
}

func (i *orgLoggingElasticLoggingGenericPtrType) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingElasticLoggingGenericPtrOutput)
}

func (i *orgLoggingElasticLoggingGenericPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[*OrgLoggingElasticLoggingGeneric]{
		OutputState: i.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingElasticLoggingGenericOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingGenericOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericOutput() OrgLoggingElasticLoggingGenericOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return o.ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(context.Background())
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLoggingElasticLoggingGeneric) *OrgLoggingElasticLoggingGeneric {
		return &v
	}).(OrgLoggingElasticLoggingGenericPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[OrgLoggingElasticLoggingGeneric]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingGenericOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Host }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Index }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Path }).(pulumi.StringOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) int { return v.Port }).(pulumi.IntOutput)
}

func (o OrgLoggingElasticLoggingGenericOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingElasticLoggingGeneric) string { return v.Type }).(pulumi.StringOutput)
}

type OrgLoggingElasticLoggingGenericPtrOutput struct{ *pulumi.OutputState }

func (OrgLoggingElasticLoggingGenericPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLoggingElasticLoggingGeneric)(nil)).Elem()
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) ToOrgLoggingElasticLoggingGenericPtrOutput() OrgLoggingElasticLoggingGenericPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) ToOrgLoggingElasticLoggingGenericPtrOutputWithContext(ctx context.Context) OrgLoggingElasticLoggingGenericPtrOutput {
	return o
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgLoggingElasticLoggingGeneric] {
	return pulumix.Output[*OrgLoggingElasticLoggingGeneric]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Elem() OrgLoggingElasticLoggingGenericOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) OrgLoggingElasticLoggingGeneric {
		if v != nil {
			return *v
		}
		var ret OrgLoggingElasticLoggingGeneric
		return ret
	}).(OrgLoggingElasticLoggingGenericOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o OrgLoggingElasticLoggingGenericPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLoggingElasticLoggingGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OrgLoggingFluentdLogging struct {
	Host string `pulumi:"host"`
	Port *int   `pulumi:"port"`
}

// OrgLoggingFluentdLoggingInput is an input type that accepts OrgLoggingFluentdLoggingArgs and OrgLoggingFluentdLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingFluentdLoggingInput` via:
//
//	OrgLoggingFluentdLoggingArgs{...}
type OrgLoggingFluentdLoggingInput interface {
	pulumi.Input

	ToOrgLoggingFluentdLoggingOutput() OrgLoggingFluentdLoggingOutput
	ToOrgLoggingFluentdLoggingOutputWithContext(context.Context) OrgLoggingFluentdLoggingOutput
}

type OrgLoggingFluentdLoggingArgs struct {
	Host pulumi.StringInput `pulumi:"host"`
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (OrgLoggingFluentdLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingFluentdLogging)(nil)).Elem()
}

func (i OrgLoggingFluentdLoggingArgs) ToOrgLoggingFluentdLoggingOutput() OrgLoggingFluentdLoggingOutput {
	return i.ToOrgLoggingFluentdLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingFluentdLoggingArgs) ToOrgLoggingFluentdLoggingOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingFluentdLoggingOutput)
}

func (i OrgLoggingFluentdLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingFluentdLogging] {
	return pulumix.Output[OrgLoggingFluentdLogging]{
		OutputState: i.ToOrgLoggingFluentdLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingFluentdLoggingArrayInput is an input type that accepts OrgLoggingFluentdLoggingArray and OrgLoggingFluentdLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingFluentdLoggingArrayInput` via:
//
//	OrgLoggingFluentdLoggingArray{ OrgLoggingFluentdLoggingArgs{...} }
type OrgLoggingFluentdLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingFluentdLoggingArrayOutput() OrgLoggingFluentdLoggingArrayOutput
	ToOrgLoggingFluentdLoggingArrayOutputWithContext(context.Context) OrgLoggingFluentdLoggingArrayOutput
}

type OrgLoggingFluentdLoggingArray []OrgLoggingFluentdLoggingInput

func (OrgLoggingFluentdLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingFluentdLogging)(nil)).Elem()
}

func (i OrgLoggingFluentdLoggingArray) ToOrgLoggingFluentdLoggingArrayOutput() OrgLoggingFluentdLoggingArrayOutput {
	return i.ToOrgLoggingFluentdLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingFluentdLoggingArray) ToOrgLoggingFluentdLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingFluentdLoggingArrayOutput)
}

func (i OrgLoggingFluentdLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingFluentdLogging] {
	return pulumix.Output[[]OrgLoggingFluentdLogging]{
		OutputState: i.ToOrgLoggingFluentdLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingFluentdLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingFluentdLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingFluentdLogging)(nil)).Elem()
}

func (o OrgLoggingFluentdLoggingOutput) ToOrgLoggingFluentdLoggingOutput() OrgLoggingFluentdLoggingOutput {
	return o
}

func (o OrgLoggingFluentdLoggingOutput) ToOrgLoggingFluentdLoggingOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingOutput {
	return o
}

func (o OrgLoggingFluentdLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingFluentdLogging] {
	return pulumix.Output[OrgLoggingFluentdLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingFluentdLoggingOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingFluentdLogging) string { return v.Host }).(pulumi.StringOutput)
}

func (o OrgLoggingFluentdLoggingOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgLoggingFluentdLogging) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type OrgLoggingFluentdLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingFluentdLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingFluentdLogging)(nil)).Elem()
}

func (o OrgLoggingFluentdLoggingArrayOutput) ToOrgLoggingFluentdLoggingArrayOutput() OrgLoggingFluentdLoggingArrayOutput {
	return o
}

func (o OrgLoggingFluentdLoggingArrayOutput) ToOrgLoggingFluentdLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingFluentdLoggingArrayOutput {
	return o
}

func (o OrgLoggingFluentdLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingFluentdLogging] {
	return pulumix.Output[[]OrgLoggingFluentdLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingFluentdLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingFluentdLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingFluentdLogging {
		return vs[0].([]OrgLoggingFluentdLogging)[vs[1].(int)]
	}).(OrgLoggingFluentdLoggingOutput)
}

type OrgLoggingLogzioLogging struct {
	Credentials  string `pulumi:"credentials"`
	ListenerHost string `pulumi:"listenerHost"`
}

// OrgLoggingLogzioLoggingInput is an input type that accepts OrgLoggingLogzioLoggingArgs and OrgLoggingLogzioLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingLogzioLoggingInput` via:
//
//	OrgLoggingLogzioLoggingArgs{...}
type OrgLoggingLogzioLoggingInput interface {
	pulumi.Input

	ToOrgLoggingLogzioLoggingOutput() OrgLoggingLogzioLoggingOutput
	ToOrgLoggingLogzioLoggingOutputWithContext(context.Context) OrgLoggingLogzioLoggingOutput
}

type OrgLoggingLogzioLoggingArgs struct {
	Credentials  pulumi.StringInput `pulumi:"credentials"`
	ListenerHost pulumi.StringInput `pulumi:"listenerHost"`
}

func (OrgLoggingLogzioLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingLogzioLogging)(nil)).Elem()
}

func (i OrgLoggingLogzioLoggingArgs) ToOrgLoggingLogzioLoggingOutput() OrgLoggingLogzioLoggingOutput {
	return i.ToOrgLoggingLogzioLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingLogzioLoggingArgs) ToOrgLoggingLogzioLoggingOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingLogzioLoggingOutput)
}

func (i OrgLoggingLogzioLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingLogzioLogging] {
	return pulumix.Output[OrgLoggingLogzioLogging]{
		OutputState: i.ToOrgLoggingLogzioLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingLogzioLoggingArrayInput is an input type that accepts OrgLoggingLogzioLoggingArray and OrgLoggingLogzioLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingLogzioLoggingArrayInput` via:
//
//	OrgLoggingLogzioLoggingArray{ OrgLoggingLogzioLoggingArgs{...} }
type OrgLoggingLogzioLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingLogzioLoggingArrayOutput() OrgLoggingLogzioLoggingArrayOutput
	ToOrgLoggingLogzioLoggingArrayOutputWithContext(context.Context) OrgLoggingLogzioLoggingArrayOutput
}

type OrgLoggingLogzioLoggingArray []OrgLoggingLogzioLoggingInput

func (OrgLoggingLogzioLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingLogzioLogging)(nil)).Elem()
}

func (i OrgLoggingLogzioLoggingArray) ToOrgLoggingLogzioLoggingArrayOutput() OrgLoggingLogzioLoggingArrayOutput {
	return i.ToOrgLoggingLogzioLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingLogzioLoggingArray) ToOrgLoggingLogzioLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingLogzioLoggingArrayOutput)
}

func (i OrgLoggingLogzioLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingLogzioLogging] {
	return pulumix.Output[[]OrgLoggingLogzioLogging]{
		OutputState: i.ToOrgLoggingLogzioLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingLogzioLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingLogzioLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingLogzioLogging)(nil)).Elem()
}

func (o OrgLoggingLogzioLoggingOutput) ToOrgLoggingLogzioLoggingOutput() OrgLoggingLogzioLoggingOutput {
	return o
}

func (o OrgLoggingLogzioLoggingOutput) ToOrgLoggingLogzioLoggingOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingOutput {
	return o
}

func (o OrgLoggingLogzioLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingLogzioLogging] {
	return pulumix.Output[OrgLoggingLogzioLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingLogzioLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingLogzioLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingLogzioLoggingOutput) ListenerHost() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingLogzioLogging) string { return v.ListenerHost }).(pulumi.StringOutput)
}

type OrgLoggingLogzioLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingLogzioLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingLogzioLogging)(nil)).Elem()
}

func (o OrgLoggingLogzioLoggingArrayOutput) ToOrgLoggingLogzioLoggingArrayOutput() OrgLoggingLogzioLoggingArrayOutput {
	return o
}

func (o OrgLoggingLogzioLoggingArrayOutput) ToOrgLoggingLogzioLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingLogzioLoggingArrayOutput {
	return o
}

func (o OrgLoggingLogzioLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingLogzioLogging] {
	return pulumix.Output[[]OrgLoggingLogzioLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingLogzioLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingLogzioLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingLogzioLogging {
		return vs[0].([]OrgLoggingLogzioLogging)[vs[1].(int)]
	}).(OrgLoggingLogzioLoggingOutput)
}

type OrgLoggingS3Logging struct {
	Bucket      string  `pulumi:"bucket"`
	Credentials string  `pulumi:"credentials"`
	Prefix      *string `pulumi:"prefix"`
	Region      string  `pulumi:"region"`
}

// OrgLoggingS3LoggingInput is an input type that accepts OrgLoggingS3LoggingArgs and OrgLoggingS3LoggingOutput values.
// You can construct a concrete instance of `OrgLoggingS3LoggingInput` via:
//
//	OrgLoggingS3LoggingArgs{...}
type OrgLoggingS3LoggingInput interface {
	pulumi.Input

	ToOrgLoggingS3LoggingOutput() OrgLoggingS3LoggingOutput
	ToOrgLoggingS3LoggingOutputWithContext(context.Context) OrgLoggingS3LoggingOutput
}

type OrgLoggingS3LoggingArgs struct {
	Bucket      pulumi.StringInput    `pulumi:"bucket"`
	Credentials pulumi.StringInput    `pulumi:"credentials"`
	Prefix      pulumi.StringPtrInput `pulumi:"prefix"`
	Region      pulumi.StringInput    `pulumi:"region"`
}

func (OrgLoggingS3LoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingS3Logging)(nil)).Elem()
}

func (i OrgLoggingS3LoggingArgs) ToOrgLoggingS3LoggingOutput() OrgLoggingS3LoggingOutput {
	return i.ToOrgLoggingS3LoggingOutputWithContext(context.Background())
}

func (i OrgLoggingS3LoggingArgs) ToOrgLoggingS3LoggingOutputWithContext(ctx context.Context) OrgLoggingS3LoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingS3LoggingOutput)
}

func (i OrgLoggingS3LoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingS3Logging] {
	return pulumix.Output[OrgLoggingS3Logging]{
		OutputState: i.ToOrgLoggingS3LoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingS3LoggingArrayInput is an input type that accepts OrgLoggingS3LoggingArray and OrgLoggingS3LoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingS3LoggingArrayInput` via:
//
//	OrgLoggingS3LoggingArray{ OrgLoggingS3LoggingArgs{...} }
type OrgLoggingS3LoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingS3LoggingArrayOutput() OrgLoggingS3LoggingArrayOutput
	ToOrgLoggingS3LoggingArrayOutputWithContext(context.Context) OrgLoggingS3LoggingArrayOutput
}

type OrgLoggingS3LoggingArray []OrgLoggingS3LoggingInput

func (OrgLoggingS3LoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingS3Logging)(nil)).Elem()
}

func (i OrgLoggingS3LoggingArray) ToOrgLoggingS3LoggingArrayOutput() OrgLoggingS3LoggingArrayOutput {
	return i.ToOrgLoggingS3LoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingS3LoggingArray) ToOrgLoggingS3LoggingArrayOutputWithContext(ctx context.Context) OrgLoggingS3LoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingS3LoggingArrayOutput)
}

func (i OrgLoggingS3LoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingS3Logging] {
	return pulumix.Output[[]OrgLoggingS3Logging]{
		OutputState: i.ToOrgLoggingS3LoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingS3LoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingS3LoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingS3Logging)(nil)).Elem()
}

func (o OrgLoggingS3LoggingOutput) ToOrgLoggingS3LoggingOutput() OrgLoggingS3LoggingOutput {
	return o
}

func (o OrgLoggingS3LoggingOutput) ToOrgLoggingS3LoggingOutputWithContext(ctx context.Context) OrgLoggingS3LoggingOutput {
	return o
}

func (o OrgLoggingS3LoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingS3Logging] {
	return pulumix.Output[OrgLoggingS3Logging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingS3LoggingOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o OrgLoggingS3LoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingS3LoggingOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o OrgLoggingS3LoggingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingS3Logging) string { return v.Region }).(pulumi.StringOutput)
}

type OrgLoggingS3LoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingS3LoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingS3Logging)(nil)).Elem()
}

func (o OrgLoggingS3LoggingArrayOutput) ToOrgLoggingS3LoggingArrayOutput() OrgLoggingS3LoggingArrayOutput {
	return o
}

func (o OrgLoggingS3LoggingArrayOutput) ToOrgLoggingS3LoggingArrayOutputWithContext(ctx context.Context) OrgLoggingS3LoggingArrayOutput {
	return o
}

func (o OrgLoggingS3LoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingS3Logging] {
	return pulumix.Output[[]OrgLoggingS3Logging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingS3LoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingS3LoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingS3Logging {
		return vs[0].([]OrgLoggingS3Logging)[vs[1].(int)]
	}).(OrgLoggingS3LoggingOutput)
}

type OrgLoggingStackdriverLogging struct {
	Credentials string `pulumi:"credentials"`
	Location    string `pulumi:"location"`
}

// OrgLoggingStackdriverLoggingInput is an input type that accepts OrgLoggingStackdriverLoggingArgs and OrgLoggingStackdriverLoggingOutput values.
// You can construct a concrete instance of `OrgLoggingStackdriverLoggingInput` via:
//
//	OrgLoggingStackdriverLoggingArgs{...}
type OrgLoggingStackdriverLoggingInput interface {
	pulumi.Input

	ToOrgLoggingStackdriverLoggingOutput() OrgLoggingStackdriverLoggingOutput
	ToOrgLoggingStackdriverLoggingOutputWithContext(context.Context) OrgLoggingStackdriverLoggingOutput
}

type OrgLoggingStackdriverLoggingArgs struct {
	Credentials pulumi.StringInput `pulumi:"credentials"`
	Location    pulumi.StringInput `pulumi:"location"`
}

func (OrgLoggingStackdriverLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (i OrgLoggingStackdriverLoggingArgs) ToOrgLoggingStackdriverLoggingOutput() OrgLoggingStackdriverLoggingOutput {
	return i.ToOrgLoggingStackdriverLoggingOutputWithContext(context.Background())
}

func (i OrgLoggingStackdriverLoggingArgs) ToOrgLoggingStackdriverLoggingOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingStackdriverLoggingOutput)
}

func (i OrgLoggingStackdriverLoggingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingStackdriverLogging] {
	return pulumix.Output[OrgLoggingStackdriverLogging]{
		OutputState: i.ToOrgLoggingStackdriverLoggingOutputWithContext(ctx).OutputState,
	}
}

// OrgLoggingStackdriverLoggingArrayInput is an input type that accepts OrgLoggingStackdriverLoggingArray and OrgLoggingStackdriverLoggingArrayOutput values.
// You can construct a concrete instance of `OrgLoggingStackdriverLoggingArrayInput` via:
//
//	OrgLoggingStackdriverLoggingArray{ OrgLoggingStackdriverLoggingArgs{...} }
type OrgLoggingStackdriverLoggingArrayInput interface {
	pulumi.Input

	ToOrgLoggingStackdriverLoggingArrayOutput() OrgLoggingStackdriverLoggingArrayOutput
	ToOrgLoggingStackdriverLoggingArrayOutputWithContext(context.Context) OrgLoggingStackdriverLoggingArrayOutput
}

type OrgLoggingStackdriverLoggingArray []OrgLoggingStackdriverLoggingInput

func (OrgLoggingStackdriverLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (i OrgLoggingStackdriverLoggingArray) ToOrgLoggingStackdriverLoggingArrayOutput() OrgLoggingStackdriverLoggingArrayOutput {
	return i.ToOrgLoggingStackdriverLoggingArrayOutputWithContext(context.Background())
}

func (i OrgLoggingStackdriverLoggingArray) ToOrgLoggingStackdriverLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLoggingStackdriverLoggingArrayOutput)
}

func (i OrgLoggingStackdriverLoggingArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingStackdriverLogging] {
	return pulumix.Output[[]OrgLoggingStackdriverLogging]{
		OutputState: i.ToOrgLoggingStackdriverLoggingArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgLoggingStackdriverLoggingOutput struct{ *pulumi.OutputState }

func (OrgLoggingStackdriverLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (o OrgLoggingStackdriverLoggingOutput) ToOrgLoggingStackdriverLoggingOutput() OrgLoggingStackdriverLoggingOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingOutput) ToOrgLoggingStackdriverLoggingOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgLoggingStackdriverLogging] {
	return pulumix.Output[OrgLoggingStackdriverLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingStackdriverLoggingOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingStackdriverLogging) string { return v.Credentials }).(pulumi.StringOutput)
}

func (o OrgLoggingStackdriverLoggingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLoggingStackdriverLogging) string { return v.Location }).(pulumi.StringOutput)
}

type OrgLoggingStackdriverLoggingArrayOutput struct{ *pulumi.OutputState }

func (OrgLoggingStackdriverLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgLoggingStackdriverLogging)(nil)).Elem()
}

func (o OrgLoggingStackdriverLoggingArrayOutput) ToOrgLoggingStackdriverLoggingArrayOutput() OrgLoggingStackdriverLoggingArrayOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingArrayOutput) ToOrgLoggingStackdriverLoggingArrayOutputWithContext(ctx context.Context) OrgLoggingStackdriverLoggingArrayOutput {
	return o
}

func (o OrgLoggingStackdriverLoggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgLoggingStackdriverLogging] {
	return pulumix.Output[[]OrgLoggingStackdriverLogging]{
		OutputState: o.OutputState,
	}
}

func (o OrgLoggingStackdriverLoggingArrayOutput) Index(i pulumi.IntInput) OrgLoggingStackdriverLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgLoggingStackdriverLogging {
		return vs[0].([]OrgLoggingStackdriverLogging)[vs[1].(int)]
	}).(OrgLoggingStackdriverLoggingOutput)
}

type OrgObservability struct {
	LogsRetentionDays    *int `pulumi:"logsRetentionDays"`
	MetricsRetentionDays *int `pulumi:"metricsRetentionDays"`
	TracesRetentionDays  *int `pulumi:"tracesRetentionDays"`
}

// OrgObservabilityInput is an input type that accepts OrgObservabilityArgs and OrgObservabilityOutput values.
// You can construct a concrete instance of `OrgObservabilityInput` via:
//
//	OrgObservabilityArgs{...}
type OrgObservabilityInput interface {
	pulumi.Input

	ToOrgObservabilityOutput() OrgObservabilityOutput
	ToOrgObservabilityOutputWithContext(context.Context) OrgObservabilityOutput
}

type OrgObservabilityArgs struct {
	LogsRetentionDays    pulumi.IntPtrInput `pulumi:"logsRetentionDays"`
	MetricsRetentionDays pulumi.IntPtrInput `pulumi:"metricsRetentionDays"`
	TracesRetentionDays  pulumi.IntPtrInput `pulumi:"tracesRetentionDays"`
}

func (OrgObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgObservability)(nil)).Elem()
}

func (i OrgObservabilityArgs) ToOrgObservabilityOutput() OrgObservabilityOutput {
	return i.ToOrgObservabilityOutputWithContext(context.Background())
}

func (i OrgObservabilityArgs) ToOrgObservabilityOutputWithContext(ctx context.Context) OrgObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgObservabilityOutput)
}

func (i OrgObservabilityArgs) ToOutput(ctx context.Context) pulumix.Output[OrgObservability] {
	return pulumix.Output[OrgObservability]{
		OutputState: i.ToOrgObservabilityOutputWithContext(ctx).OutputState,
	}
}

func (i OrgObservabilityArgs) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return i.ToOrgObservabilityPtrOutputWithContext(context.Background())
}

func (i OrgObservabilityArgs) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgObservabilityOutput).ToOrgObservabilityPtrOutputWithContext(ctx)
}

// OrgObservabilityPtrInput is an input type that accepts OrgObservabilityArgs, OrgObservabilityPtr and OrgObservabilityPtrOutput values.
// You can construct a concrete instance of `OrgObservabilityPtrInput` via:
//
//	        OrgObservabilityArgs{...}
//
//	or:
//
//	        nil
type OrgObservabilityPtrInput interface {
	pulumi.Input

	ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput
	ToOrgObservabilityPtrOutputWithContext(context.Context) OrgObservabilityPtrOutput
}

type orgObservabilityPtrType OrgObservabilityArgs

func OrgObservabilityPtr(v *OrgObservabilityArgs) OrgObservabilityPtrInput {
	return (*orgObservabilityPtrType)(v)
}

func (*orgObservabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgObservability)(nil)).Elem()
}

func (i *orgObservabilityPtrType) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return i.ToOrgObservabilityPtrOutputWithContext(context.Background())
}

func (i *orgObservabilityPtrType) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgObservabilityPtrOutput)
}

func (i *orgObservabilityPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgObservability] {
	return pulumix.Output[*OrgObservability]{
		OutputState: i.ToOrgObservabilityPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgObservabilityOutput struct{ *pulumi.OutputState }

func (OrgObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgObservability)(nil)).Elem()
}

func (o OrgObservabilityOutput) ToOrgObservabilityOutput() OrgObservabilityOutput {
	return o
}

func (o OrgObservabilityOutput) ToOrgObservabilityOutputWithContext(ctx context.Context) OrgObservabilityOutput {
	return o
}

func (o OrgObservabilityOutput) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return o.ToOrgObservabilityPtrOutputWithContext(context.Background())
}

func (o OrgObservabilityOutput) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgObservability) *OrgObservability {
		return &v
	}).(OrgObservabilityPtrOutput)
}

func (o OrgObservabilityOutput) ToOutput(ctx context.Context) pulumix.Output[OrgObservability] {
	return pulumix.Output[OrgObservability]{
		OutputState: o.OutputState,
	}
}

func (o OrgObservabilityOutput) LogsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgObservability) *int { return v.LogsRetentionDays }).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityOutput) MetricsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgObservability) *int { return v.MetricsRetentionDays }).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityOutput) TracesRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgObservability) *int { return v.TracesRetentionDays }).(pulumi.IntPtrOutput)
}

type OrgObservabilityPtrOutput struct{ *pulumi.OutputState }

func (OrgObservabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgObservability)(nil)).Elem()
}

func (o OrgObservabilityPtrOutput) ToOrgObservabilityPtrOutput() OrgObservabilityPtrOutput {
	return o
}

func (o OrgObservabilityPtrOutput) ToOrgObservabilityPtrOutputWithContext(ctx context.Context) OrgObservabilityPtrOutput {
	return o
}

func (o OrgObservabilityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgObservability] {
	return pulumix.Output[*OrgObservability]{
		OutputState: o.OutputState,
	}
}

func (o OrgObservabilityPtrOutput) Elem() OrgObservabilityOutput {
	return o.ApplyT(func(v *OrgObservability) OrgObservability {
		if v != nil {
			return *v
		}
		var ret OrgObservability
		return ret
	}).(OrgObservabilityOutput)
}

func (o OrgObservabilityPtrOutput) LogsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgObservability) *int {
		if v == nil {
			return nil
		}
		return v.LogsRetentionDays
	}).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityPtrOutput) MetricsRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgObservability) *int {
		if v == nil {
			return nil
		}
		return v.MetricsRetentionDays
	}).(pulumi.IntPtrOutput)
}

func (o OrgObservabilityPtrOutput) TracesRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgObservability) *int {
		if v == nil {
			return nil
		}
		return v.TracesRetentionDays
	}).(pulumi.IntPtrOutput)
}

type OrgStatus struct {
	AccountLink *string `pulumi:"accountLink"`
	Active      *bool   `pulumi:"active"`
}

// OrgStatusInput is an input type that accepts OrgStatusArgs and OrgStatusOutput values.
// You can construct a concrete instance of `OrgStatusInput` via:
//
//	OrgStatusArgs{...}
type OrgStatusInput interface {
	pulumi.Input

	ToOrgStatusOutput() OrgStatusOutput
	ToOrgStatusOutputWithContext(context.Context) OrgStatusOutput
}

type OrgStatusArgs struct {
	AccountLink pulumi.StringPtrInput `pulumi:"accountLink"`
	Active      pulumi.BoolPtrInput   `pulumi:"active"`
}

func (OrgStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgStatus)(nil)).Elem()
}

func (i OrgStatusArgs) ToOrgStatusOutput() OrgStatusOutput {
	return i.ToOrgStatusOutputWithContext(context.Background())
}

func (i OrgStatusArgs) ToOrgStatusOutputWithContext(ctx context.Context) OrgStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgStatusOutput)
}

func (i OrgStatusArgs) ToOutput(ctx context.Context) pulumix.Output[OrgStatus] {
	return pulumix.Output[OrgStatus]{
		OutputState: i.ToOrgStatusOutputWithContext(ctx).OutputState,
	}
}

// OrgStatusArrayInput is an input type that accepts OrgStatusArray and OrgStatusArrayOutput values.
// You can construct a concrete instance of `OrgStatusArrayInput` via:
//
//	OrgStatusArray{ OrgStatusArgs{...} }
type OrgStatusArrayInput interface {
	pulumi.Input

	ToOrgStatusArrayOutput() OrgStatusArrayOutput
	ToOrgStatusArrayOutputWithContext(context.Context) OrgStatusArrayOutput
}

type OrgStatusArray []OrgStatusInput

func (OrgStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgStatus)(nil)).Elem()
}

func (i OrgStatusArray) ToOrgStatusArrayOutput() OrgStatusArrayOutput {
	return i.ToOrgStatusArrayOutputWithContext(context.Background())
}

func (i OrgStatusArray) ToOrgStatusArrayOutputWithContext(ctx context.Context) OrgStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgStatusArrayOutput)
}

func (i OrgStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]OrgStatus] {
	return pulumix.Output[[]OrgStatus]{
		OutputState: i.ToOrgStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type OrgStatusOutput struct{ *pulumi.OutputState }

func (OrgStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgStatus)(nil)).Elem()
}

func (o OrgStatusOutput) ToOrgStatusOutput() OrgStatusOutput {
	return o
}

func (o OrgStatusOutput) ToOrgStatusOutputWithContext(ctx context.Context) OrgStatusOutput {
	return o
}

func (o OrgStatusOutput) ToOutput(ctx context.Context) pulumix.Output[OrgStatus] {
	return pulumix.Output[OrgStatus]{
		OutputState: o.OutputState,
	}
}

func (o OrgStatusOutput) AccountLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgStatus) *string { return v.AccountLink }).(pulumi.StringPtrOutput)
}

func (o OrgStatusOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgStatus) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type OrgStatusArrayOutput struct{ *pulumi.OutputState }

func (OrgStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgStatus)(nil)).Elem()
}

func (o OrgStatusArrayOutput) ToOrgStatusArrayOutput() OrgStatusArrayOutput {
	return o
}

func (o OrgStatusArrayOutput) ToOrgStatusArrayOutputWithContext(ctx context.Context) OrgStatusArrayOutput {
	return o
}

func (o OrgStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrgStatus] {
	return pulumix.Output[[]OrgStatus]{
		OutputState: o.OutputState,
	}
}

func (o OrgStatusArrayOutput) Index(i pulumi.IntInput) OrgStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgStatus {
		return vs[0].([]OrgStatus)[vs[1].(int)]
	}).(OrgStatusOutput)
}

type OrgTracingControlplaneTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Sampling   int               `pulumi:"sampling"`
}

// OrgTracingControlplaneTracingInput is an input type that accepts OrgTracingControlplaneTracingArgs and OrgTracingControlplaneTracingOutput values.
// You can construct a concrete instance of `OrgTracingControlplaneTracingInput` via:
//
//	OrgTracingControlplaneTracingArgs{...}
type OrgTracingControlplaneTracingInput interface {
	pulumi.Input

	ToOrgTracingControlplaneTracingOutput() OrgTracingControlplaneTracingOutput
	ToOrgTracingControlplaneTracingOutputWithContext(context.Context) OrgTracingControlplaneTracingOutput
}

type OrgTracingControlplaneTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Sampling   pulumi.IntInput       `pulumi:"sampling"`
}

func (OrgTracingControlplaneTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingControlplaneTracing)(nil)).Elem()
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingOutput() OrgTracingControlplaneTracingOutput {
	return i.ToOrgTracingControlplaneTracingOutputWithContext(context.Background())
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingControlplaneTracingOutput)
}

func (i OrgTracingControlplaneTracingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgTracingControlplaneTracing] {
	return pulumix.Output[OrgTracingControlplaneTracing]{
		OutputState: i.ToOrgTracingControlplaneTracingOutputWithContext(ctx).OutputState,
	}
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return i.ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i OrgTracingControlplaneTracingArgs) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingControlplaneTracingOutput).ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx)
}

// OrgTracingControlplaneTracingPtrInput is an input type that accepts OrgTracingControlplaneTracingArgs, OrgTracingControlplaneTracingPtr and OrgTracingControlplaneTracingPtrOutput values.
// You can construct a concrete instance of `OrgTracingControlplaneTracingPtrInput` via:
//
//	        OrgTracingControlplaneTracingArgs{...}
//
//	or:
//
//	        nil
type OrgTracingControlplaneTracingPtrInput interface {
	pulumi.Input

	ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput
	ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Context) OrgTracingControlplaneTracingPtrOutput
}

type orgTracingControlplaneTracingPtrType OrgTracingControlplaneTracingArgs

func OrgTracingControlplaneTracingPtr(v *OrgTracingControlplaneTracingArgs) OrgTracingControlplaneTracingPtrInput {
	return (*orgTracingControlplaneTracingPtrType)(v)
}

func (*orgTracingControlplaneTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingControlplaneTracing)(nil)).Elem()
}

func (i *orgTracingControlplaneTracingPtrType) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return i.ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i *orgTracingControlplaneTracingPtrType) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingControlplaneTracingPtrOutput)
}

func (i *orgTracingControlplaneTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingControlplaneTracing] {
	return pulumix.Output[*OrgTracingControlplaneTracing]{
		OutputState: i.ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgTracingControlplaneTracingOutput struct{ *pulumi.OutputState }

func (OrgTracingControlplaneTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingControlplaneTracing)(nil)).Elem()
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingOutput() OrgTracingControlplaneTracingOutput {
	return o
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingOutput {
	return o
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return o.ToOrgTracingControlplaneTracingPtrOutputWithContext(context.Background())
}

func (o OrgTracingControlplaneTracingOutput) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgTracingControlplaneTracing) *OrgTracingControlplaneTracing {
		return &v
	}).(OrgTracingControlplaneTracingPtrOutput)
}

func (o OrgTracingControlplaneTracingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgTracingControlplaneTracing] {
	return pulumix.Output[OrgTracingControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingControlplaneTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrgTracingControlplaneTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o OrgTracingControlplaneTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v OrgTracingControlplaneTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type OrgTracingControlplaneTracingPtrOutput struct{ *pulumi.OutputState }

func (OrgTracingControlplaneTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingControlplaneTracing)(nil)).Elem()
}

func (o OrgTracingControlplaneTracingPtrOutput) ToOrgTracingControlplaneTracingPtrOutput() OrgTracingControlplaneTracingPtrOutput {
	return o
}

func (o OrgTracingControlplaneTracingPtrOutput) ToOrgTracingControlplaneTracingPtrOutputWithContext(ctx context.Context) OrgTracingControlplaneTracingPtrOutput {
	return o
}

func (o OrgTracingControlplaneTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingControlplaneTracing] {
	return pulumix.Output[*OrgTracingControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingControlplaneTracingPtrOutput) Elem() OrgTracingControlplaneTracingOutput {
	return o.ApplyT(func(v *OrgTracingControlplaneTracing) OrgTracingControlplaneTracing {
		if v != nil {
			return *v
		}
		var ret OrgTracingControlplaneTracing
		return ret
	}).(OrgTracingControlplaneTracingOutput)
}

func (o OrgTracingControlplaneTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrgTracingControlplaneTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o OrgTracingControlplaneTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgTracingControlplaneTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type OrgTracingLightstepTracing struct {
	Credentials *string           `pulumi:"credentials"`
	CustomTags  map[string]string `pulumi:"customTags"`
	Endpoint    string            `pulumi:"endpoint"`
	Sampling    int               `pulumi:"sampling"`
}

// OrgTracingLightstepTracingInput is an input type that accepts OrgTracingLightstepTracingArgs and OrgTracingLightstepTracingOutput values.
// You can construct a concrete instance of `OrgTracingLightstepTracingInput` via:
//
//	OrgTracingLightstepTracingArgs{...}
type OrgTracingLightstepTracingInput interface {
	pulumi.Input

	ToOrgTracingLightstepTracingOutput() OrgTracingLightstepTracingOutput
	ToOrgTracingLightstepTracingOutputWithContext(context.Context) OrgTracingLightstepTracingOutput
}

type OrgTracingLightstepTracingArgs struct {
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	CustomTags  pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint    pulumi.StringInput    `pulumi:"endpoint"`
	Sampling    pulumi.IntInput       `pulumi:"sampling"`
}

func (OrgTracingLightstepTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingLightstepTracing)(nil)).Elem()
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingOutput() OrgTracingLightstepTracingOutput {
	return i.ToOrgTracingLightstepTracingOutputWithContext(context.Background())
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingOutputWithContext(ctx context.Context) OrgTracingLightstepTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingLightstepTracingOutput)
}

func (i OrgTracingLightstepTracingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgTracingLightstepTracing] {
	return pulumix.Output[OrgTracingLightstepTracing]{
		OutputState: i.ToOrgTracingLightstepTracingOutputWithContext(ctx).OutputState,
	}
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return i.ToOrgTracingLightstepTracingPtrOutputWithContext(context.Background())
}

func (i OrgTracingLightstepTracingArgs) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingLightstepTracingOutput).ToOrgTracingLightstepTracingPtrOutputWithContext(ctx)
}

// OrgTracingLightstepTracingPtrInput is an input type that accepts OrgTracingLightstepTracingArgs, OrgTracingLightstepTracingPtr and OrgTracingLightstepTracingPtrOutput values.
// You can construct a concrete instance of `OrgTracingLightstepTracingPtrInput` via:
//
//	        OrgTracingLightstepTracingArgs{...}
//
//	or:
//
//	        nil
type OrgTracingLightstepTracingPtrInput interface {
	pulumi.Input

	ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput
	ToOrgTracingLightstepTracingPtrOutputWithContext(context.Context) OrgTracingLightstepTracingPtrOutput
}

type orgTracingLightstepTracingPtrType OrgTracingLightstepTracingArgs

func OrgTracingLightstepTracingPtr(v *OrgTracingLightstepTracingArgs) OrgTracingLightstepTracingPtrInput {
	return (*orgTracingLightstepTracingPtrType)(v)
}

func (*orgTracingLightstepTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingLightstepTracing)(nil)).Elem()
}

func (i *orgTracingLightstepTracingPtrType) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return i.ToOrgTracingLightstepTracingPtrOutputWithContext(context.Background())
}

func (i *orgTracingLightstepTracingPtrType) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingLightstepTracingPtrOutput)
}

func (i *orgTracingLightstepTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingLightstepTracing] {
	return pulumix.Output[*OrgTracingLightstepTracing]{
		OutputState: i.ToOrgTracingLightstepTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgTracingLightstepTracingOutput struct{ *pulumi.OutputState }

func (OrgTracingLightstepTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingLightstepTracing)(nil)).Elem()
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingOutput() OrgTracingLightstepTracingOutput {
	return o
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingOutputWithContext(ctx context.Context) OrgTracingLightstepTracingOutput {
	return o
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return o.ToOrgTracingLightstepTracingPtrOutputWithContext(context.Background())
}

func (o OrgTracingLightstepTracingOutput) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgTracingLightstepTracing) *OrgTracingLightstepTracing {
		return &v
	}).(OrgTracingLightstepTracingPtrOutput)
}

func (o OrgTracingLightstepTracingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgTracingLightstepTracing] {
	return pulumix.Output[OrgTracingLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingLightstepTracingOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgTracingLightstepTracing) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

func (o OrgTracingLightstepTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrgTracingLightstepTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o OrgTracingLightstepTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OrgTracingLightstepTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o OrgTracingLightstepTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v OrgTracingLightstepTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type OrgTracingLightstepTracingPtrOutput struct{ *pulumi.OutputState }

func (OrgTracingLightstepTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingLightstepTracing)(nil)).Elem()
}

func (o OrgTracingLightstepTracingPtrOutput) ToOrgTracingLightstepTracingPtrOutput() OrgTracingLightstepTracingPtrOutput {
	return o
}

func (o OrgTracingLightstepTracingPtrOutput) ToOrgTracingLightstepTracingPtrOutputWithContext(ctx context.Context) OrgTracingLightstepTracingPtrOutput {
	return o
}

func (o OrgTracingLightstepTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingLightstepTracing] {
	return pulumix.Output[*OrgTracingLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingLightstepTracingPtrOutput) Elem() OrgTracingLightstepTracingOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) OrgTracingLightstepTracing {
		if v != nil {
			return *v
		}
		var ret OrgTracingLightstepTracing
		return ret
	}).(OrgTracingLightstepTracingOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o OrgTracingLightstepTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgTracingLightstepTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type OrgTracingOtelTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Endpoint   string            `pulumi:"endpoint"`
	Sampling   int               `pulumi:"sampling"`
}

// OrgTracingOtelTracingInput is an input type that accepts OrgTracingOtelTracingArgs and OrgTracingOtelTracingOutput values.
// You can construct a concrete instance of `OrgTracingOtelTracingInput` via:
//
//	OrgTracingOtelTracingArgs{...}
type OrgTracingOtelTracingInput interface {
	pulumi.Input

	ToOrgTracingOtelTracingOutput() OrgTracingOtelTracingOutput
	ToOrgTracingOtelTracingOutputWithContext(context.Context) OrgTracingOtelTracingOutput
}

type OrgTracingOtelTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint   pulumi.StringInput    `pulumi:"endpoint"`
	Sampling   pulumi.IntInput       `pulumi:"sampling"`
}

func (OrgTracingOtelTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingOtelTracing)(nil)).Elem()
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingOutput() OrgTracingOtelTracingOutput {
	return i.ToOrgTracingOtelTracingOutputWithContext(context.Background())
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingOutputWithContext(ctx context.Context) OrgTracingOtelTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingOtelTracingOutput)
}

func (i OrgTracingOtelTracingArgs) ToOutput(ctx context.Context) pulumix.Output[OrgTracingOtelTracing] {
	return pulumix.Output[OrgTracingOtelTracing]{
		OutputState: i.ToOrgTracingOtelTracingOutputWithContext(ctx).OutputState,
	}
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return i.ToOrgTracingOtelTracingPtrOutputWithContext(context.Background())
}

func (i OrgTracingOtelTracingArgs) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingOtelTracingOutput).ToOrgTracingOtelTracingPtrOutputWithContext(ctx)
}

// OrgTracingOtelTracingPtrInput is an input type that accepts OrgTracingOtelTracingArgs, OrgTracingOtelTracingPtr and OrgTracingOtelTracingPtrOutput values.
// You can construct a concrete instance of `OrgTracingOtelTracingPtrInput` via:
//
//	        OrgTracingOtelTracingArgs{...}
//
//	or:
//
//	        nil
type OrgTracingOtelTracingPtrInput interface {
	pulumi.Input

	ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput
	ToOrgTracingOtelTracingPtrOutputWithContext(context.Context) OrgTracingOtelTracingPtrOutput
}

type orgTracingOtelTracingPtrType OrgTracingOtelTracingArgs

func OrgTracingOtelTracingPtr(v *OrgTracingOtelTracingArgs) OrgTracingOtelTracingPtrInput {
	return (*orgTracingOtelTracingPtrType)(v)
}

func (*orgTracingOtelTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingOtelTracing)(nil)).Elem()
}

func (i *orgTracingOtelTracingPtrType) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return i.ToOrgTracingOtelTracingPtrOutputWithContext(context.Background())
}

func (i *orgTracingOtelTracingPtrType) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgTracingOtelTracingPtrOutput)
}

func (i *orgTracingOtelTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingOtelTracing] {
	return pulumix.Output[*OrgTracingOtelTracing]{
		OutputState: i.ToOrgTracingOtelTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type OrgTracingOtelTracingOutput struct{ *pulumi.OutputState }

func (OrgTracingOtelTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgTracingOtelTracing)(nil)).Elem()
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingOutput() OrgTracingOtelTracingOutput {
	return o
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingOutputWithContext(ctx context.Context) OrgTracingOtelTracingOutput {
	return o
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return o.ToOrgTracingOtelTracingPtrOutputWithContext(context.Background())
}

func (o OrgTracingOtelTracingOutput) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgTracingOtelTracing) *OrgTracingOtelTracing {
		return &v
	}).(OrgTracingOtelTracingPtrOutput)
}

func (o OrgTracingOtelTracingOutput) ToOutput(ctx context.Context) pulumix.Output[OrgTracingOtelTracing] {
	return pulumix.Output[OrgTracingOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingOtelTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrgTracingOtelTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o OrgTracingOtelTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OrgTracingOtelTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o OrgTracingOtelTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v OrgTracingOtelTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type OrgTracingOtelTracingPtrOutput struct{ *pulumi.OutputState }

func (OrgTracingOtelTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgTracingOtelTracing)(nil)).Elem()
}

func (o OrgTracingOtelTracingPtrOutput) ToOrgTracingOtelTracingPtrOutput() OrgTracingOtelTracingPtrOutput {
	return o
}

func (o OrgTracingOtelTracingPtrOutput) ToOrgTracingOtelTracingPtrOutputWithContext(ctx context.Context) OrgTracingOtelTracingPtrOutput {
	return o
}

func (o OrgTracingOtelTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrgTracingOtelTracing] {
	return pulumix.Output[*OrgTracingOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o OrgTracingOtelTracingPtrOutput) Elem() OrgTracingOtelTracingOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) OrgTracingOtelTracing {
		if v != nil {
			return *v
		}
		var ret OrgTracingOtelTracing
		return ret
	}).(OrgTracingOtelTracingOutput)
}

func (o OrgTracingOtelTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o OrgTracingOtelTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o OrgTracingOtelTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgTracingOtelTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type PolicyBinding struct {
	Permissions    []string `pulumi:"permissions"`
	PrincipalLinks []string `pulumi:"principalLinks"`
}

// PolicyBindingInput is an input type that accepts PolicyBindingArgs and PolicyBindingOutput values.
// You can construct a concrete instance of `PolicyBindingInput` via:
//
//	PolicyBindingArgs{...}
type PolicyBindingInput interface {
	pulumi.Input

	ToPolicyBindingOutput() PolicyBindingOutput
	ToPolicyBindingOutputWithContext(context.Context) PolicyBindingOutput
}

type PolicyBindingArgs struct {
	Permissions    pulumi.StringArrayInput `pulumi:"permissions"`
	PrincipalLinks pulumi.StringArrayInput `pulumi:"principalLinks"`
}

func (PolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBinding)(nil)).Elem()
}

func (i PolicyBindingArgs) ToPolicyBindingOutput() PolicyBindingOutput {
	return i.ToPolicyBindingOutputWithContext(context.Background())
}

func (i PolicyBindingArgs) ToPolicyBindingOutputWithContext(ctx context.Context) PolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingOutput)
}

func (i PolicyBindingArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyBinding] {
	return pulumix.Output[PolicyBinding]{
		OutputState: i.ToPolicyBindingOutputWithContext(ctx).OutputState,
	}
}

// PolicyBindingArrayInput is an input type that accepts PolicyBindingArray and PolicyBindingArrayOutput values.
// You can construct a concrete instance of `PolicyBindingArrayInput` via:
//
//	PolicyBindingArray{ PolicyBindingArgs{...} }
type PolicyBindingArrayInput interface {
	pulumi.Input

	ToPolicyBindingArrayOutput() PolicyBindingArrayOutput
	ToPolicyBindingArrayOutputWithContext(context.Context) PolicyBindingArrayOutput
}

type PolicyBindingArray []PolicyBindingInput

func (PolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBinding)(nil)).Elem()
}

func (i PolicyBindingArray) ToPolicyBindingArrayOutput() PolicyBindingArrayOutput {
	return i.ToPolicyBindingArrayOutputWithContext(context.Background())
}

func (i PolicyBindingArray) ToPolicyBindingArrayOutputWithContext(ctx context.Context) PolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingArrayOutput)
}

func (i PolicyBindingArray) ToOutput(ctx context.Context) pulumix.Output[[]PolicyBinding] {
	return pulumix.Output[[]PolicyBinding]{
		OutputState: i.ToPolicyBindingArrayOutputWithContext(ctx).OutputState,
	}
}

type PolicyBindingOutput struct{ *pulumi.OutputState }

func (PolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBinding)(nil)).Elem()
}

func (o PolicyBindingOutput) ToPolicyBindingOutput() PolicyBindingOutput {
	return o
}

func (o PolicyBindingOutput) ToPolicyBindingOutputWithContext(ctx context.Context) PolicyBindingOutput {
	return o
}

func (o PolicyBindingOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyBinding] {
	return pulumix.Output[PolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o PolicyBindingOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyBinding) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

func (o PolicyBindingOutput) PrincipalLinks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyBinding) []string { return v.PrincipalLinks }).(pulumi.StringArrayOutput)
}

type PolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (PolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBinding)(nil)).Elem()
}

func (o PolicyBindingArrayOutput) ToPolicyBindingArrayOutput() PolicyBindingArrayOutput {
	return o
}

func (o PolicyBindingArrayOutput) ToPolicyBindingArrayOutputWithContext(ctx context.Context) PolicyBindingArrayOutput {
	return o
}

func (o PolicyBindingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PolicyBinding] {
	return pulumix.Output[[]PolicyBinding]{
		OutputState: o.OutputState,
	}
}

func (o PolicyBindingArrayOutput) Index(i pulumi.IntInput) PolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBinding {
		return vs[0].([]PolicyBinding)[vs[1].(int)]
	}).(PolicyBindingOutput)
}

type PolicyTargetQuery struct {
	Fetch *string                `pulumi:"fetch"`
	Spec  *PolicyTargetQuerySpec `pulumi:"spec"`
}

// PolicyTargetQueryInput is an input type that accepts PolicyTargetQueryArgs and PolicyTargetQueryOutput values.
// You can construct a concrete instance of `PolicyTargetQueryInput` via:
//
//	PolicyTargetQueryArgs{...}
type PolicyTargetQueryInput interface {
	pulumi.Input

	ToPolicyTargetQueryOutput() PolicyTargetQueryOutput
	ToPolicyTargetQueryOutputWithContext(context.Context) PolicyTargetQueryOutput
}

type PolicyTargetQueryArgs struct {
	Fetch pulumi.StringPtrInput         `pulumi:"fetch"`
	Spec  PolicyTargetQuerySpecPtrInput `pulumi:"spec"`
}

func (PolicyTargetQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuery)(nil)).Elem()
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryOutput() PolicyTargetQueryOutput {
	return i.ToPolicyTargetQueryOutputWithContext(context.Background())
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryOutputWithContext(ctx context.Context) PolicyTargetQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQueryOutput)
}

func (i PolicyTargetQueryArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuery] {
	return pulumix.Output[PolicyTargetQuery]{
		OutputState: i.ToPolicyTargetQueryOutputWithContext(ctx).OutputState,
	}
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return i.ToPolicyTargetQueryPtrOutputWithContext(context.Background())
}

func (i PolicyTargetQueryArgs) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQueryOutput).ToPolicyTargetQueryPtrOutputWithContext(ctx)
}

// PolicyTargetQueryPtrInput is an input type that accepts PolicyTargetQueryArgs, PolicyTargetQueryPtr and PolicyTargetQueryPtrOutput values.
// You can construct a concrete instance of `PolicyTargetQueryPtrInput` via:
//
//	        PolicyTargetQueryArgs{...}
//
//	or:
//
//	        nil
type PolicyTargetQueryPtrInput interface {
	pulumi.Input

	ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput
	ToPolicyTargetQueryPtrOutputWithContext(context.Context) PolicyTargetQueryPtrOutput
}

type policyTargetQueryPtrType PolicyTargetQueryArgs

func PolicyTargetQueryPtr(v *PolicyTargetQueryArgs) PolicyTargetQueryPtrInput {
	return (*policyTargetQueryPtrType)(v)
}

func (*policyTargetQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuery)(nil)).Elem()
}

func (i *policyTargetQueryPtrType) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return i.ToPolicyTargetQueryPtrOutputWithContext(context.Background())
}

func (i *policyTargetQueryPtrType) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQueryPtrOutput)
}

func (i *policyTargetQueryPtrType) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuery] {
	return pulumix.Output[*PolicyTargetQuery]{
		OutputState: i.ToPolicyTargetQueryPtrOutputWithContext(ctx).OutputState,
	}
}

type PolicyTargetQueryOutput struct{ *pulumi.OutputState }

func (PolicyTargetQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuery)(nil)).Elem()
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryOutput() PolicyTargetQueryOutput {
	return o
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryOutputWithContext(ctx context.Context) PolicyTargetQueryOutput {
	return o
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return o.ToPolicyTargetQueryPtrOutputWithContext(context.Background())
}

func (o PolicyTargetQueryOutput) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyTargetQuery) *PolicyTargetQuery {
		return &v
	}).(PolicyTargetQueryPtrOutput)
}

func (o PolicyTargetQueryOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuery] {
	return pulumix.Output[PolicyTargetQuery]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQueryOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuery) *string { return v.Fetch }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQueryOutput) Spec() PolicyTargetQuerySpecPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuery) *PolicyTargetQuerySpec { return v.Spec }).(PolicyTargetQuerySpecPtrOutput)
}

type PolicyTargetQueryPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuery)(nil)).Elem()
}

func (o PolicyTargetQueryPtrOutput) ToPolicyTargetQueryPtrOutput() PolicyTargetQueryPtrOutput {
	return o
}

func (o PolicyTargetQueryPtrOutput) ToPolicyTargetQueryPtrOutputWithContext(ctx context.Context) PolicyTargetQueryPtrOutput {
	return o
}

func (o PolicyTargetQueryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuery] {
	return pulumix.Output[*PolicyTargetQuery]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQueryPtrOutput) Elem() PolicyTargetQueryOutput {
	return o.ApplyT(func(v *PolicyTargetQuery) PolicyTargetQuery {
		if v != nil {
			return *v
		}
		var ret PolicyTargetQuery
		return ret
	}).(PolicyTargetQueryOutput)
}

func (o PolicyTargetQueryPtrOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetQuery) *string {
		if v == nil {
			return nil
		}
		return v.Fetch
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQueryPtrOutput) Spec() PolicyTargetQuerySpecPtrOutput {
	return o.ApplyT(func(v *PolicyTargetQuery) *PolicyTargetQuerySpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(PolicyTargetQuerySpecPtrOutput)
}

type PolicyTargetQuerySpec struct {
	Match *string                     `pulumi:"match"`
	Terms []PolicyTargetQuerySpecTerm `pulumi:"terms"`
}

// PolicyTargetQuerySpecInput is an input type that accepts PolicyTargetQuerySpecArgs and PolicyTargetQuerySpecOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecInput` via:
//
//	PolicyTargetQuerySpecArgs{...}
type PolicyTargetQuerySpecInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecOutput() PolicyTargetQuerySpecOutput
	ToPolicyTargetQuerySpecOutputWithContext(context.Context) PolicyTargetQuerySpecOutput
}

type PolicyTargetQuerySpecArgs struct {
	Match pulumi.StringPtrInput               `pulumi:"match"`
	Terms PolicyTargetQuerySpecTermArrayInput `pulumi:"terms"`
}

func (PolicyTargetQuerySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpec)(nil)).Elem()
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecOutput() PolicyTargetQuerySpecOutput {
	return i.ToPolicyTargetQuerySpecOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecOutputWithContext(ctx context.Context) PolicyTargetQuerySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecOutput)
}

func (i PolicyTargetQuerySpecArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpec] {
	return pulumix.Output[PolicyTargetQuerySpec]{
		OutputState: i.ToPolicyTargetQuerySpecOutputWithContext(ctx).OutputState,
	}
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return i.ToPolicyTargetQuerySpecPtrOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecArgs) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecOutput).ToPolicyTargetQuerySpecPtrOutputWithContext(ctx)
}

// PolicyTargetQuerySpecPtrInput is an input type that accepts PolicyTargetQuerySpecArgs, PolicyTargetQuerySpecPtr and PolicyTargetQuerySpecPtrOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecPtrInput` via:
//
//	        PolicyTargetQuerySpecArgs{...}
//
//	or:
//
//	        nil
type PolicyTargetQuerySpecPtrInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput
	ToPolicyTargetQuerySpecPtrOutputWithContext(context.Context) PolicyTargetQuerySpecPtrOutput
}

type policyTargetQuerySpecPtrType PolicyTargetQuerySpecArgs

func PolicyTargetQuerySpecPtr(v *PolicyTargetQuerySpecArgs) PolicyTargetQuerySpecPtrInput {
	return (*policyTargetQuerySpecPtrType)(v)
}

func (*policyTargetQuerySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuerySpec)(nil)).Elem()
}

func (i *policyTargetQuerySpecPtrType) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return i.ToPolicyTargetQuerySpecPtrOutputWithContext(context.Background())
}

func (i *policyTargetQuerySpecPtrType) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecPtrOutput)
}

func (i *policyTargetQuerySpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuerySpec] {
	return pulumix.Output[*PolicyTargetQuerySpec]{
		OutputState: i.ToPolicyTargetQuerySpecPtrOutputWithContext(ctx).OutputState,
	}
}

type PolicyTargetQuerySpecOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpec)(nil)).Elem()
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecOutput() PolicyTargetQuerySpecOutput {
	return o
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecOutputWithContext(ctx context.Context) PolicyTargetQuerySpecOutput {
	return o
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return o.ToPolicyTargetQuerySpecPtrOutputWithContext(context.Background())
}

func (o PolicyTargetQuerySpecOutput) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyTargetQuerySpec) *PolicyTargetQuerySpec {
		return &v
	}).(PolicyTargetQuerySpecPtrOutput)
}

func (o PolicyTargetQuerySpecOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpec] {
	return pulumix.Output[PolicyTargetQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpec) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecOutput) Terms() PolicyTargetQuerySpecTermArrayOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpec) []PolicyTargetQuerySpecTerm { return v.Terms }).(PolicyTargetQuerySpecTermArrayOutput)
}

type PolicyTargetQuerySpecPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetQuerySpec)(nil)).Elem()
}

func (o PolicyTargetQuerySpecPtrOutput) ToPolicyTargetQuerySpecPtrOutput() PolicyTargetQuerySpecPtrOutput {
	return o
}

func (o PolicyTargetQuerySpecPtrOutput) ToPolicyTargetQuerySpecPtrOutputWithContext(ctx context.Context) PolicyTargetQuerySpecPtrOutput {
	return o
}

func (o PolicyTargetQuerySpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetQuerySpec] {
	return pulumix.Output[*PolicyTargetQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecPtrOutput) Elem() PolicyTargetQuerySpecOutput {
	return o.ApplyT(func(v *PolicyTargetQuerySpec) PolicyTargetQuerySpec {
		if v != nil {
			return *v
		}
		var ret PolicyTargetQuerySpec
		return ret
	}).(PolicyTargetQuerySpecOutput)
}

func (o PolicyTargetQuerySpecPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetQuerySpec) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecPtrOutput) Terms() PolicyTargetQuerySpecTermArrayOutput {
	return o.ApplyT(func(v *PolicyTargetQuerySpec) []PolicyTargetQuerySpecTerm {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(PolicyTargetQuerySpecTermArrayOutput)
}

type PolicyTargetQuerySpecTerm struct {
	Op       *string `pulumi:"op"`
	Property *string `pulumi:"property"`
	Tag      *string `pulumi:"tag"`
	Value    *string `pulumi:"value"`
}

// PolicyTargetQuerySpecTermInput is an input type that accepts PolicyTargetQuerySpecTermArgs and PolicyTargetQuerySpecTermOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecTermInput` via:
//
//	PolicyTargetQuerySpecTermArgs{...}
type PolicyTargetQuerySpecTermInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecTermOutput() PolicyTargetQuerySpecTermOutput
	ToPolicyTargetQuerySpecTermOutputWithContext(context.Context) PolicyTargetQuerySpecTermOutput
}

type PolicyTargetQuerySpecTermArgs struct {
	Op       pulumi.StringPtrInput `pulumi:"op"`
	Property pulumi.StringPtrInput `pulumi:"property"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (PolicyTargetQuerySpecTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (i PolicyTargetQuerySpecTermArgs) ToPolicyTargetQuerySpecTermOutput() PolicyTargetQuerySpecTermOutput {
	return i.ToPolicyTargetQuerySpecTermOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecTermArgs) ToPolicyTargetQuerySpecTermOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecTermOutput)
}

func (i PolicyTargetQuerySpecTermArgs) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpecTerm] {
	return pulumix.Output[PolicyTargetQuerySpecTerm]{
		OutputState: i.ToPolicyTargetQuerySpecTermOutputWithContext(ctx).OutputState,
	}
}

// PolicyTargetQuerySpecTermArrayInput is an input type that accepts PolicyTargetQuerySpecTermArray and PolicyTargetQuerySpecTermArrayOutput values.
// You can construct a concrete instance of `PolicyTargetQuerySpecTermArrayInput` via:
//
//	PolicyTargetQuerySpecTermArray{ PolicyTargetQuerySpecTermArgs{...} }
type PolicyTargetQuerySpecTermArrayInput interface {
	pulumi.Input

	ToPolicyTargetQuerySpecTermArrayOutput() PolicyTargetQuerySpecTermArrayOutput
	ToPolicyTargetQuerySpecTermArrayOutputWithContext(context.Context) PolicyTargetQuerySpecTermArrayOutput
}

type PolicyTargetQuerySpecTermArray []PolicyTargetQuerySpecTermInput

func (PolicyTargetQuerySpecTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (i PolicyTargetQuerySpecTermArray) ToPolicyTargetQuerySpecTermArrayOutput() PolicyTargetQuerySpecTermArrayOutput {
	return i.ToPolicyTargetQuerySpecTermArrayOutputWithContext(context.Background())
}

func (i PolicyTargetQuerySpecTermArray) ToPolicyTargetQuerySpecTermArrayOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetQuerySpecTermArrayOutput)
}

func (i PolicyTargetQuerySpecTermArray) ToOutput(ctx context.Context) pulumix.Output[[]PolicyTargetQuerySpecTerm] {
	return pulumix.Output[[]PolicyTargetQuerySpecTerm]{
		OutputState: i.ToPolicyTargetQuerySpecTermArrayOutputWithContext(ctx).OutputState,
	}
}

type PolicyTargetQuerySpecTermOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (o PolicyTargetQuerySpecTermOutput) ToPolicyTargetQuerySpecTermOutput() PolicyTargetQuerySpecTermOutput {
	return o
}

func (o PolicyTargetQuerySpecTermOutput) ToPolicyTargetQuerySpecTermOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermOutput {
	return o
}

func (o PolicyTargetQuerySpecTermOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetQuerySpecTerm] {
	return pulumix.Output[PolicyTargetQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecTermOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecTermOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecTermOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o PolicyTargetQuerySpecTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetQuerySpecTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PolicyTargetQuerySpecTermArrayOutput struct{ *pulumi.OutputState }

func (PolicyTargetQuerySpecTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetQuerySpecTerm)(nil)).Elem()
}

func (o PolicyTargetQuerySpecTermArrayOutput) ToPolicyTargetQuerySpecTermArrayOutput() PolicyTargetQuerySpecTermArrayOutput {
	return o
}

func (o PolicyTargetQuerySpecTermArrayOutput) ToPolicyTargetQuerySpecTermArrayOutputWithContext(ctx context.Context) PolicyTargetQuerySpecTermArrayOutput {
	return o
}

func (o PolicyTargetQuerySpecTermArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PolicyTargetQuerySpecTerm] {
	return pulumix.Output[[]PolicyTargetQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o PolicyTargetQuerySpecTermArrayOutput) Index(i pulumi.IntInput) PolicyTargetQuerySpecTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTargetQuerySpecTerm {
		return vs[0].([]PolicyTargetQuerySpecTerm)[vs[1].(int)]
	}).(PolicyTargetQuerySpecTermOutput)
}

type SecretAws struct {
	AccessKey  string  `pulumi:"accessKey"`
	ExternalId *string `pulumi:"externalId"`
	RoleArn    *string `pulumi:"roleArn"`
	SecretKey  string  `pulumi:"secretKey"`
}

// SecretAwsInput is an input type that accepts SecretAwsArgs and SecretAwsOutput values.
// You can construct a concrete instance of `SecretAwsInput` via:
//
//	SecretAwsArgs{...}
type SecretAwsInput interface {
	pulumi.Input

	ToSecretAwsOutput() SecretAwsOutput
	ToSecretAwsOutputWithContext(context.Context) SecretAwsOutput
}

type SecretAwsArgs struct {
	AccessKey  pulumi.StringInput    `pulumi:"accessKey"`
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn    pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey  pulumi.StringInput    `pulumi:"secretKey"`
}

func (SecretAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAws)(nil)).Elem()
}

func (i SecretAwsArgs) ToSecretAwsOutput() SecretAwsOutput {
	return i.ToSecretAwsOutputWithContext(context.Background())
}

func (i SecretAwsArgs) ToSecretAwsOutputWithContext(ctx context.Context) SecretAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAwsOutput)
}

func (i SecretAwsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretAws] {
	return pulumix.Output[SecretAws]{
		OutputState: i.ToSecretAwsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretAwsArgs) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return i.ToSecretAwsPtrOutputWithContext(context.Background())
}

func (i SecretAwsArgs) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAwsOutput).ToSecretAwsPtrOutputWithContext(ctx)
}

// SecretAwsPtrInput is an input type that accepts SecretAwsArgs, SecretAwsPtr and SecretAwsPtrOutput values.
// You can construct a concrete instance of `SecretAwsPtrInput` via:
//
//	        SecretAwsArgs{...}
//
//	or:
//
//	        nil
type SecretAwsPtrInput interface {
	pulumi.Input

	ToSecretAwsPtrOutput() SecretAwsPtrOutput
	ToSecretAwsPtrOutputWithContext(context.Context) SecretAwsPtrOutput
}

type secretAwsPtrType SecretAwsArgs

func SecretAwsPtr(v *SecretAwsArgs) SecretAwsPtrInput {
	return (*secretAwsPtrType)(v)
}

func (*secretAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAws)(nil)).Elem()
}

func (i *secretAwsPtrType) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return i.ToSecretAwsPtrOutputWithContext(context.Background())
}

func (i *secretAwsPtrType) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAwsPtrOutput)
}

func (i *secretAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretAws] {
	return pulumix.Output[*SecretAws]{
		OutputState: i.ToSecretAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretAwsOutput struct{ *pulumi.OutputState }

func (SecretAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAws)(nil)).Elem()
}

func (o SecretAwsOutput) ToSecretAwsOutput() SecretAwsOutput {
	return o
}

func (o SecretAwsOutput) ToSecretAwsOutputWithContext(ctx context.Context) SecretAwsOutput {
	return o
}

func (o SecretAwsOutput) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return o.ToSecretAwsPtrOutputWithContext(context.Background())
}

func (o SecretAwsOutput) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretAws) *SecretAws {
		return &v
	}).(SecretAwsPtrOutput)
}

func (o SecretAwsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretAws] {
	return pulumix.Output[SecretAws]{
		OutputState: o.OutputState,
	}
}

func (o SecretAwsOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAws) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o SecretAwsOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretAws) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o SecretAwsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretAws) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o SecretAwsOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAws) string { return v.SecretKey }).(pulumi.StringOutput)
}

type SecretAwsPtrOutput struct{ *pulumi.OutputState }

func (SecretAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAws)(nil)).Elem()
}

func (o SecretAwsPtrOutput) ToSecretAwsPtrOutput() SecretAwsPtrOutput {
	return o
}

func (o SecretAwsPtrOutput) ToSecretAwsPtrOutputWithContext(ctx context.Context) SecretAwsPtrOutput {
	return o
}

func (o SecretAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretAws] {
	return pulumix.Output[*SecretAws]{
		OutputState: o.OutputState,
	}
}

func (o SecretAwsPtrOutput) Elem() SecretAwsOutput {
	return o.ApplyT(func(v *SecretAws) SecretAws {
		if v != nil {
			return *v
		}
		var ret SecretAws
		return ret
	}).(SecretAwsOutput)
}

func (o SecretAwsPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o SecretAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o SecretAwsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretAwsPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAws) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type SecretAzureConnector struct {
	Code string `pulumi:"code"`
	Url  string `pulumi:"url"`
}

// SecretAzureConnectorInput is an input type that accepts SecretAzureConnectorArgs and SecretAzureConnectorOutput values.
// You can construct a concrete instance of `SecretAzureConnectorInput` via:
//
//	SecretAzureConnectorArgs{...}
type SecretAzureConnectorInput interface {
	pulumi.Input

	ToSecretAzureConnectorOutput() SecretAzureConnectorOutput
	ToSecretAzureConnectorOutputWithContext(context.Context) SecretAzureConnectorOutput
}

type SecretAzureConnectorArgs struct {
	Code pulumi.StringInput `pulumi:"code"`
	Url  pulumi.StringInput `pulumi:"url"`
}

func (SecretAzureConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAzureConnector)(nil)).Elem()
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorOutput() SecretAzureConnectorOutput {
	return i.ToSecretAzureConnectorOutputWithContext(context.Background())
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorOutputWithContext(ctx context.Context) SecretAzureConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureConnectorOutput)
}

func (i SecretAzureConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[SecretAzureConnector] {
	return pulumix.Output[SecretAzureConnector]{
		OutputState: i.ToSecretAzureConnectorOutputWithContext(ctx).OutputState,
	}
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return i.ToSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (i SecretAzureConnectorArgs) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureConnectorOutput).ToSecretAzureConnectorPtrOutputWithContext(ctx)
}

// SecretAzureConnectorPtrInput is an input type that accepts SecretAzureConnectorArgs, SecretAzureConnectorPtr and SecretAzureConnectorPtrOutput values.
// You can construct a concrete instance of `SecretAzureConnectorPtrInput` via:
//
//	        SecretAzureConnectorArgs{...}
//
//	or:
//
//	        nil
type SecretAzureConnectorPtrInput interface {
	pulumi.Input

	ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput
	ToSecretAzureConnectorPtrOutputWithContext(context.Context) SecretAzureConnectorPtrOutput
}

type secretAzureConnectorPtrType SecretAzureConnectorArgs

func SecretAzureConnectorPtr(v *SecretAzureConnectorArgs) SecretAzureConnectorPtrInput {
	return (*secretAzureConnectorPtrType)(v)
}

func (*secretAzureConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAzureConnector)(nil)).Elem()
}

func (i *secretAzureConnectorPtrType) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return i.ToSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (i *secretAzureConnectorPtrType) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureConnectorPtrOutput)
}

func (i *secretAzureConnectorPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretAzureConnector] {
	return pulumix.Output[*SecretAzureConnector]{
		OutputState: i.ToSecretAzureConnectorPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretAzureConnectorOutput struct{ *pulumi.OutputState }

func (SecretAzureConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAzureConnector)(nil)).Elem()
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorOutput() SecretAzureConnectorOutput {
	return o
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorOutputWithContext(ctx context.Context) SecretAzureConnectorOutput {
	return o
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return o.ToSecretAzureConnectorPtrOutputWithContext(context.Background())
}

func (o SecretAzureConnectorOutput) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretAzureConnector) *SecretAzureConnector {
		return &v
	}).(SecretAzureConnectorPtrOutput)
}

func (o SecretAzureConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[SecretAzureConnector] {
	return pulumix.Output[SecretAzureConnector]{
		OutputState: o.OutputState,
	}
}

func (o SecretAzureConnectorOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAzureConnector) string { return v.Code }).(pulumi.StringOutput)
}

func (o SecretAzureConnectorOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAzureConnector) string { return v.Url }).(pulumi.StringOutput)
}

type SecretAzureConnectorPtrOutput struct{ *pulumi.OutputState }

func (SecretAzureConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAzureConnector)(nil)).Elem()
}

func (o SecretAzureConnectorPtrOutput) ToSecretAzureConnectorPtrOutput() SecretAzureConnectorPtrOutput {
	return o
}

func (o SecretAzureConnectorPtrOutput) ToSecretAzureConnectorPtrOutputWithContext(ctx context.Context) SecretAzureConnectorPtrOutput {
	return o
}

func (o SecretAzureConnectorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretAzureConnector] {
	return pulumix.Output[*SecretAzureConnector]{
		OutputState: o.OutputState,
	}
}

func (o SecretAzureConnectorPtrOutput) Elem() SecretAzureConnectorOutput {
	return o.ApplyT(func(v *SecretAzureConnector) SecretAzureConnector {
		if v != nil {
			return *v
		}
		var ret SecretAzureConnector
		return ret
	}).(SecretAzureConnectorOutput)
}

func (o SecretAzureConnectorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAzureConnector) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

func (o SecretAzureConnectorPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAzureConnector) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type SecretEcr struct {
	AccessKey  string   `pulumi:"accessKey"`
	ExternalId *string  `pulumi:"externalId"`
	Repos      []string `pulumi:"repos"`
	RoleArn    *string  `pulumi:"roleArn"`
	SecretKey  string   `pulumi:"secretKey"`
}

// SecretEcrInput is an input type that accepts SecretEcrArgs and SecretEcrOutput values.
// You can construct a concrete instance of `SecretEcrInput` via:
//
//	SecretEcrArgs{...}
type SecretEcrInput interface {
	pulumi.Input

	ToSecretEcrOutput() SecretEcrOutput
	ToSecretEcrOutputWithContext(context.Context) SecretEcrOutput
}

type SecretEcrArgs struct {
	AccessKey  pulumi.StringInput      `pulumi:"accessKey"`
	ExternalId pulumi.StringPtrInput   `pulumi:"externalId"`
	Repos      pulumi.StringArrayInput `pulumi:"repos"`
	RoleArn    pulumi.StringPtrInput   `pulumi:"roleArn"`
	SecretKey  pulumi.StringInput      `pulumi:"secretKey"`
}

func (SecretEcrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretEcr)(nil)).Elem()
}

func (i SecretEcrArgs) ToSecretEcrOutput() SecretEcrOutput {
	return i.ToSecretEcrOutputWithContext(context.Background())
}

func (i SecretEcrArgs) ToSecretEcrOutputWithContext(ctx context.Context) SecretEcrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEcrOutput)
}

func (i SecretEcrArgs) ToOutput(ctx context.Context) pulumix.Output[SecretEcr] {
	return pulumix.Output[SecretEcr]{
		OutputState: i.ToSecretEcrOutputWithContext(ctx).OutputState,
	}
}

func (i SecretEcrArgs) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return i.ToSecretEcrPtrOutputWithContext(context.Background())
}

func (i SecretEcrArgs) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEcrOutput).ToSecretEcrPtrOutputWithContext(ctx)
}

// SecretEcrPtrInput is an input type that accepts SecretEcrArgs, SecretEcrPtr and SecretEcrPtrOutput values.
// You can construct a concrete instance of `SecretEcrPtrInput` via:
//
//	        SecretEcrArgs{...}
//
//	or:
//
//	        nil
type SecretEcrPtrInput interface {
	pulumi.Input

	ToSecretEcrPtrOutput() SecretEcrPtrOutput
	ToSecretEcrPtrOutputWithContext(context.Context) SecretEcrPtrOutput
}

type secretEcrPtrType SecretEcrArgs

func SecretEcrPtr(v *SecretEcrArgs) SecretEcrPtrInput {
	return (*secretEcrPtrType)(v)
}

func (*secretEcrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretEcr)(nil)).Elem()
}

func (i *secretEcrPtrType) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return i.ToSecretEcrPtrOutputWithContext(context.Background())
}

func (i *secretEcrPtrType) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEcrPtrOutput)
}

func (i *secretEcrPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretEcr] {
	return pulumix.Output[*SecretEcr]{
		OutputState: i.ToSecretEcrPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretEcrOutput struct{ *pulumi.OutputState }

func (SecretEcrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretEcr)(nil)).Elem()
}

func (o SecretEcrOutput) ToSecretEcrOutput() SecretEcrOutput {
	return o
}

func (o SecretEcrOutput) ToSecretEcrOutputWithContext(ctx context.Context) SecretEcrOutput {
	return o
}

func (o SecretEcrOutput) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return o.ToSecretEcrPtrOutputWithContext(context.Background())
}

func (o SecretEcrOutput) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretEcr) *SecretEcr {
		return &v
	}).(SecretEcrPtrOutput)
}

func (o SecretEcrOutput) ToOutput(ctx context.Context) pulumix.Output[SecretEcr] {
	return pulumix.Output[SecretEcr]{
		OutputState: o.OutputState,
	}
}

func (o SecretEcrOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretEcr) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o SecretEcrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretEcr) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o SecretEcrOutput) Repos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretEcr) []string { return v.Repos }).(pulumi.StringArrayOutput)
}

func (o SecretEcrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretEcr) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o SecretEcrOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretEcr) string { return v.SecretKey }).(pulumi.StringOutput)
}

type SecretEcrPtrOutput struct{ *pulumi.OutputState }

func (SecretEcrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretEcr)(nil)).Elem()
}

func (o SecretEcrPtrOutput) ToSecretEcrPtrOutput() SecretEcrPtrOutput {
	return o
}

func (o SecretEcrPtrOutput) ToSecretEcrPtrOutputWithContext(ctx context.Context) SecretEcrPtrOutput {
	return o
}

func (o SecretEcrPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretEcr] {
	return pulumix.Output[*SecretEcr]{
		OutputState: o.OutputState,
	}
}

func (o SecretEcrPtrOutput) Elem() SecretEcrOutput {
	return o.ApplyT(func(v *SecretEcr) SecretEcr {
		if v != nil {
			return *v
		}
		var ret SecretEcr
		return ret
	}).(SecretEcrOutput)
}

func (o SecretEcrPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o SecretEcrPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o SecretEcrPtrOutput) Repos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretEcr) []string {
		if v == nil {
			return nil
		}
		return v.Repos
	}).(pulumi.StringArrayOutput)
}

func (o SecretEcrPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretEcrPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretEcr) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type SecretKeypair struct {
	Passphrase *string `pulumi:"passphrase"`
	PublicKey  *string `pulumi:"publicKey"`
	SecretKey  string  `pulumi:"secretKey"`
}

// SecretKeypairInput is an input type that accepts SecretKeypairArgs and SecretKeypairOutput values.
// You can construct a concrete instance of `SecretKeypairInput` via:
//
//	SecretKeypairArgs{...}
type SecretKeypairInput interface {
	pulumi.Input

	ToSecretKeypairOutput() SecretKeypairOutput
	ToSecretKeypairOutputWithContext(context.Context) SecretKeypairOutput
}

type SecretKeypairArgs struct {
	Passphrase pulumi.StringPtrInput `pulumi:"passphrase"`
	PublicKey  pulumi.StringPtrInput `pulumi:"publicKey"`
	SecretKey  pulumi.StringInput    `pulumi:"secretKey"`
}

func (SecretKeypairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretKeypair)(nil)).Elem()
}

func (i SecretKeypairArgs) ToSecretKeypairOutput() SecretKeypairOutput {
	return i.ToSecretKeypairOutputWithContext(context.Background())
}

func (i SecretKeypairArgs) ToSecretKeypairOutputWithContext(ctx context.Context) SecretKeypairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretKeypairOutput)
}

func (i SecretKeypairArgs) ToOutput(ctx context.Context) pulumix.Output[SecretKeypair] {
	return pulumix.Output[SecretKeypair]{
		OutputState: i.ToSecretKeypairOutputWithContext(ctx).OutputState,
	}
}

func (i SecretKeypairArgs) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return i.ToSecretKeypairPtrOutputWithContext(context.Background())
}

func (i SecretKeypairArgs) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretKeypairOutput).ToSecretKeypairPtrOutputWithContext(ctx)
}

// SecretKeypairPtrInput is an input type that accepts SecretKeypairArgs, SecretKeypairPtr and SecretKeypairPtrOutput values.
// You can construct a concrete instance of `SecretKeypairPtrInput` via:
//
//	        SecretKeypairArgs{...}
//
//	or:
//
//	        nil
type SecretKeypairPtrInput interface {
	pulumi.Input

	ToSecretKeypairPtrOutput() SecretKeypairPtrOutput
	ToSecretKeypairPtrOutputWithContext(context.Context) SecretKeypairPtrOutput
}

type secretKeypairPtrType SecretKeypairArgs

func SecretKeypairPtr(v *SecretKeypairArgs) SecretKeypairPtrInput {
	return (*secretKeypairPtrType)(v)
}

func (*secretKeypairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretKeypair)(nil)).Elem()
}

func (i *secretKeypairPtrType) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return i.ToSecretKeypairPtrOutputWithContext(context.Background())
}

func (i *secretKeypairPtrType) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretKeypairPtrOutput)
}

func (i *secretKeypairPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretKeypair] {
	return pulumix.Output[*SecretKeypair]{
		OutputState: i.ToSecretKeypairPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretKeypairOutput struct{ *pulumi.OutputState }

func (SecretKeypairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretKeypair)(nil)).Elem()
}

func (o SecretKeypairOutput) ToSecretKeypairOutput() SecretKeypairOutput {
	return o
}

func (o SecretKeypairOutput) ToSecretKeypairOutputWithContext(ctx context.Context) SecretKeypairOutput {
	return o
}

func (o SecretKeypairOutput) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return o.ToSecretKeypairPtrOutputWithContext(context.Background())
}

func (o SecretKeypairOutput) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretKeypair) *SecretKeypair {
		return &v
	}).(SecretKeypairPtrOutput)
}

func (o SecretKeypairOutput) ToOutput(ctx context.Context) pulumix.Output[SecretKeypair] {
	return pulumix.Output[SecretKeypair]{
		OutputState: o.OutputState,
	}
}

func (o SecretKeypairOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretKeypair) *string { return v.Passphrase }).(pulumi.StringPtrOutput)
}

func (o SecretKeypairOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretKeypair) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o SecretKeypairOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretKeypair) string { return v.SecretKey }).(pulumi.StringOutput)
}

type SecretKeypairPtrOutput struct{ *pulumi.OutputState }

func (SecretKeypairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretKeypair)(nil)).Elem()
}

func (o SecretKeypairPtrOutput) ToSecretKeypairPtrOutput() SecretKeypairPtrOutput {
	return o
}

func (o SecretKeypairPtrOutput) ToSecretKeypairPtrOutputWithContext(ctx context.Context) SecretKeypairPtrOutput {
	return o
}

func (o SecretKeypairPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretKeypair] {
	return pulumix.Output[*SecretKeypair]{
		OutputState: o.OutputState,
	}
}

func (o SecretKeypairPtrOutput) Elem() SecretKeypairOutput {
	return o.ApplyT(func(v *SecretKeypair) SecretKeypair {
		if v != nil {
			return *v
		}
		var ret SecretKeypair
		return ret
	}).(SecretKeypairOutput)
}

func (o SecretKeypairPtrOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretKeypair) *string {
		if v == nil {
			return nil
		}
		return v.Passphrase
	}).(pulumi.StringPtrOutput)
}

func (o SecretKeypairPtrOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretKeypair) *string {
		if v == nil {
			return nil
		}
		return v.PublicKey
	}).(pulumi.StringPtrOutput)
}

func (o SecretKeypairPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretKeypair) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type SecretNatsAccount struct {
	AccountId  string `pulumi:"accountId"`
	PrivateKey string `pulumi:"privateKey"`
}

// SecretNatsAccountInput is an input type that accepts SecretNatsAccountArgs and SecretNatsAccountOutput values.
// You can construct a concrete instance of `SecretNatsAccountInput` via:
//
//	SecretNatsAccountArgs{...}
type SecretNatsAccountInput interface {
	pulumi.Input

	ToSecretNatsAccountOutput() SecretNatsAccountOutput
	ToSecretNatsAccountOutputWithContext(context.Context) SecretNatsAccountOutput
}

type SecretNatsAccountArgs struct {
	AccountId  pulumi.StringInput `pulumi:"accountId"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (SecretNatsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretNatsAccount)(nil)).Elem()
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountOutput() SecretNatsAccountOutput {
	return i.ToSecretNatsAccountOutputWithContext(context.Background())
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountOutputWithContext(ctx context.Context) SecretNatsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretNatsAccountOutput)
}

func (i SecretNatsAccountArgs) ToOutput(ctx context.Context) pulumix.Output[SecretNatsAccount] {
	return pulumix.Output[SecretNatsAccount]{
		OutputState: i.ToSecretNatsAccountOutputWithContext(ctx).OutputState,
	}
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return i.ToSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (i SecretNatsAccountArgs) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretNatsAccountOutput).ToSecretNatsAccountPtrOutputWithContext(ctx)
}

// SecretNatsAccountPtrInput is an input type that accepts SecretNatsAccountArgs, SecretNatsAccountPtr and SecretNatsAccountPtrOutput values.
// You can construct a concrete instance of `SecretNatsAccountPtrInput` via:
//
//	        SecretNatsAccountArgs{...}
//
//	or:
//
//	        nil
type SecretNatsAccountPtrInput interface {
	pulumi.Input

	ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput
	ToSecretNatsAccountPtrOutputWithContext(context.Context) SecretNatsAccountPtrOutput
}

type secretNatsAccountPtrType SecretNatsAccountArgs

func SecretNatsAccountPtr(v *SecretNatsAccountArgs) SecretNatsAccountPtrInput {
	return (*secretNatsAccountPtrType)(v)
}

func (*secretNatsAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretNatsAccount)(nil)).Elem()
}

func (i *secretNatsAccountPtrType) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return i.ToSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (i *secretNatsAccountPtrType) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretNatsAccountPtrOutput)
}

func (i *secretNatsAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretNatsAccount] {
	return pulumix.Output[*SecretNatsAccount]{
		OutputState: i.ToSecretNatsAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretNatsAccountOutput struct{ *pulumi.OutputState }

func (SecretNatsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretNatsAccount)(nil)).Elem()
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountOutput() SecretNatsAccountOutput {
	return o
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountOutputWithContext(ctx context.Context) SecretNatsAccountOutput {
	return o
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return o.ToSecretNatsAccountPtrOutputWithContext(context.Background())
}

func (o SecretNatsAccountOutput) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretNatsAccount) *SecretNatsAccount {
		return &v
	}).(SecretNatsAccountPtrOutput)
}

func (o SecretNatsAccountOutput) ToOutput(ctx context.Context) pulumix.Output[SecretNatsAccount] {
	return pulumix.Output[SecretNatsAccount]{
		OutputState: o.OutputState,
	}
}

func (o SecretNatsAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretNatsAccount) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o SecretNatsAccountOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretNatsAccount) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type SecretNatsAccountPtrOutput struct{ *pulumi.OutputState }

func (SecretNatsAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretNatsAccount)(nil)).Elem()
}

func (o SecretNatsAccountPtrOutput) ToSecretNatsAccountPtrOutput() SecretNatsAccountPtrOutput {
	return o
}

func (o SecretNatsAccountPtrOutput) ToSecretNatsAccountPtrOutputWithContext(ctx context.Context) SecretNatsAccountPtrOutput {
	return o
}

func (o SecretNatsAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretNatsAccount] {
	return pulumix.Output[*SecretNatsAccount]{
		OutputState: o.OutputState,
	}
}

func (o SecretNatsAccountPtrOutput) Elem() SecretNatsAccountOutput {
	return o.ApplyT(func(v *SecretNatsAccount) SecretNatsAccount {
		if v != nil {
			return *v
		}
		var ret SecretNatsAccount
		return ret
	}).(SecretNatsAccountOutput)
}

func (o SecretNatsAccountPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretNatsAccount) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

func (o SecretNatsAccountPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretNatsAccount) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type SecretOpaque struct {
	Encoding *string `pulumi:"encoding"`
	Payload  string  `pulumi:"payload"`
}

// SecretOpaqueInput is an input type that accepts SecretOpaqueArgs and SecretOpaqueOutput values.
// You can construct a concrete instance of `SecretOpaqueInput` via:
//
//	SecretOpaqueArgs{...}
type SecretOpaqueInput interface {
	pulumi.Input

	ToSecretOpaqueOutput() SecretOpaqueOutput
	ToSecretOpaqueOutputWithContext(context.Context) SecretOpaqueOutput
}

type SecretOpaqueArgs struct {
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	Payload  pulumi.StringInput    `pulumi:"payload"`
}

func (SecretOpaqueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretOpaque)(nil)).Elem()
}

func (i SecretOpaqueArgs) ToSecretOpaqueOutput() SecretOpaqueOutput {
	return i.ToSecretOpaqueOutputWithContext(context.Background())
}

func (i SecretOpaqueArgs) ToSecretOpaqueOutputWithContext(ctx context.Context) SecretOpaqueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOpaqueOutput)
}

func (i SecretOpaqueArgs) ToOutput(ctx context.Context) pulumix.Output[SecretOpaque] {
	return pulumix.Output[SecretOpaque]{
		OutputState: i.ToSecretOpaqueOutputWithContext(ctx).OutputState,
	}
}

func (i SecretOpaqueArgs) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return i.ToSecretOpaquePtrOutputWithContext(context.Background())
}

func (i SecretOpaqueArgs) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOpaqueOutput).ToSecretOpaquePtrOutputWithContext(ctx)
}

// SecretOpaquePtrInput is an input type that accepts SecretOpaqueArgs, SecretOpaquePtr and SecretOpaquePtrOutput values.
// You can construct a concrete instance of `SecretOpaquePtrInput` via:
//
//	        SecretOpaqueArgs{...}
//
//	or:
//
//	        nil
type SecretOpaquePtrInput interface {
	pulumi.Input

	ToSecretOpaquePtrOutput() SecretOpaquePtrOutput
	ToSecretOpaquePtrOutputWithContext(context.Context) SecretOpaquePtrOutput
}

type secretOpaquePtrType SecretOpaqueArgs

func SecretOpaquePtr(v *SecretOpaqueArgs) SecretOpaquePtrInput {
	return (*secretOpaquePtrType)(v)
}

func (*secretOpaquePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretOpaque)(nil)).Elem()
}

func (i *secretOpaquePtrType) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return i.ToSecretOpaquePtrOutputWithContext(context.Background())
}

func (i *secretOpaquePtrType) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOpaquePtrOutput)
}

func (i *secretOpaquePtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretOpaque] {
	return pulumix.Output[*SecretOpaque]{
		OutputState: i.ToSecretOpaquePtrOutputWithContext(ctx).OutputState,
	}
}

type SecretOpaqueOutput struct{ *pulumi.OutputState }

func (SecretOpaqueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretOpaque)(nil)).Elem()
}

func (o SecretOpaqueOutput) ToSecretOpaqueOutput() SecretOpaqueOutput {
	return o
}

func (o SecretOpaqueOutput) ToSecretOpaqueOutputWithContext(ctx context.Context) SecretOpaqueOutput {
	return o
}

func (o SecretOpaqueOutput) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return o.ToSecretOpaquePtrOutputWithContext(context.Background())
}

func (o SecretOpaqueOutput) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretOpaque) *SecretOpaque {
		return &v
	}).(SecretOpaquePtrOutput)
}

func (o SecretOpaqueOutput) ToOutput(ctx context.Context) pulumix.Output[SecretOpaque] {
	return pulumix.Output[SecretOpaque]{
		OutputState: o.OutputState,
	}
}

func (o SecretOpaqueOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretOpaque) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o SecretOpaqueOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v SecretOpaque) string { return v.Payload }).(pulumi.StringOutput)
}

type SecretOpaquePtrOutput struct{ *pulumi.OutputState }

func (SecretOpaquePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretOpaque)(nil)).Elem()
}

func (o SecretOpaquePtrOutput) ToSecretOpaquePtrOutput() SecretOpaquePtrOutput {
	return o
}

func (o SecretOpaquePtrOutput) ToSecretOpaquePtrOutputWithContext(ctx context.Context) SecretOpaquePtrOutput {
	return o
}

func (o SecretOpaquePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretOpaque] {
	return pulumix.Output[*SecretOpaque]{
		OutputState: o.OutputState,
	}
}

func (o SecretOpaquePtrOutput) Elem() SecretOpaqueOutput {
	return o.ApplyT(func(v *SecretOpaque) SecretOpaque {
		if v != nil {
			return *v
		}
		var ret SecretOpaque
		return ret
	}).(SecretOpaqueOutput)
}

func (o SecretOpaquePtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretOpaque) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

func (o SecretOpaquePtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretOpaque) *string {
		if v == nil {
			return nil
		}
		return &v.Payload
	}).(pulumi.StringPtrOutput)
}

type SecretTls struct {
	Cert  string  `pulumi:"cert"`
	Chain *string `pulumi:"chain"`
	Key   string  `pulumi:"key"`
}

// SecretTlsInput is an input type that accepts SecretTlsArgs and SecretTlsOutput values.
// You can construct a concrete instance of `SecretTlsInput` via:
//
//	SecretTlsArgs{...}
type SecretTlsInput interface {
	pulumi.Input

	ToSecretTlsOutput() SecretTlsOutput
	ToSecretTlsOutputWithContext(context.Context) SecretTlsOutput
}

type SecretTlsArgs struct {
	Cert  pulumi.StringInput    `pulumi:"cert"`
	Chain pulumi.StringPtrInput `pulumi:"chain"`
	Key   pulumi.StringInput    `pulumi:"key"`
}

func (SecretTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTls)(nil)).Elem()
}

func (i SecretTlsArgs) ToSecretTlsOutput() SecretTlsOutput {
	return i.ToSecretTlsOutputWithContext(context.Background())
}

func (i SecretTlsArgs) ToSecretTlsOutputWithContext(ctx context.Context) SecretTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTlsOutput)
}

func (i SecretTlsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretTls] {
	return pulumix.Output[SecretTls]{
		OutputState: i.ToSecretTlsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretTlsArgs) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return i.ToSecretTlsPtrOutputWithContext(context.Background())
}

func (i SecretTlsArgs) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTlsOutput).ToSecretTlsPtrOutputWithContext(ctx)
}

// SecretTlsPtrInput is an input type that accepts SecretTlsArgs, SecretTlsPtr and SecretTlsPtrOutput values.
// You can construct a concrete instance of `SecretTlsPtrInput` via:
//
//	        SecretTlsArgs{...}
//
//	or:
//
//	        nil
type SecretTlsPtrInput interface {
	pulumi.Input

	ToSecretTlsPtrOutput() SecretTlsPtrOutput
	ToSecretTlsPtrOutputWithContext(context.Context) SecretTlsPtrOutput
}

type secretTlsPtrType SecretTlsArgs

func SecretTlsPtr(v *SecretTlsArgs) SecretTlsPtrInput {
	return (*secretTlsPtrType)(v)
}

func (*secretTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretTls)(nil)).Elem()
}

func (i *secretTlsPtrType) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return i.ToSecretTlsPtrOutputWithContext(context.Background())
}

func (i *secretTlsPtrType) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTlsPtrOutput)
}

func (i *secretTlsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretTls] {
	return pulumix.Output[*SecretTls]{
		OutputState: i.ToSecretTlsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretTlsOutput struct{ *pulumi.OutputState }

func (SecretTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTls)(nil)).Elem()
}

func (o SecretTlsOutput) ToSecretTlsOutput() SecretTlsOutput {
	return o
}

func (o SecretTlsOutput) ToSecretTlsOutputWithContext(ctx context.Context) SecretTlsOutput {
	return o
}

func (o SecretTlsOutput) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return o.ToSecretTlsPtrOutputWithContext(context.Background())
}

func (o SecretTlsOutput) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretTls) *SecretTls {
		return &v
	}).(SecretTlsPtrOutput)
}

func (o SecretTlsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretTls] {
	return pulumix.Output[SecretTls]{
		OutputState: o.OutputState,
	}
}

func (o SecretTlsOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v SecretTls) string { return v.Cert }).(pulumi.StringOutput)
}

func (o SecretTlsOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretTls) *string { return v.Chain }).(pulumi.StringPtrOutput)
}

func (o SecretTlsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretTls) string { return v.Key }).(pulumi.StringOutput)
}

type SecretTlsPtrOutput struct{ *pulumi.OutputState }

func (SecretTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretTls)(nil)).Elem()
}

func (o SecretTlsPtrOutput) ToSecretTlsPtrOutput() SecretTlsPtrOutput {
	return o
}

func (o SecretTlsPtrOutput) ToSecretTlsPtrOutputWithContext(ctx context.Context) SecretTlsPtrOutput {
	return o
}

func (o SecretTlsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretTls] {
	return pulumix.Output[*SecretTls]{
		OutputState: o.OutputState,
	}
}

func (o SecretTlsPtrOutput) Elem() SecretTlsOutput {
	return o.ApplyT(func(v *SecretTls) SecretTls {
		if v != nil {
			return *v
		}
		var ret SecretTls
		return ret
	}).(SecretTlsOutput)
}

func (o SecretTlsPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretTls) *string {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o SecretTlsPtrOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretTls) *string {
		if v == nil {
			return nil
		}
		return v.Chain
	}).(pulumi.StringPtrOutput)
}

func (o SecretTlsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretTls) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretUserpass struct {
	Encoding *string `pulumi:"encoding"`
	Password string  `pulumi:"password"`
	Username string  `pulumi:"username"`
}

// SecretUserpassInput is an input type that accepts SecretUserpassArgs and SecretUserpassOutput values.
// You can construct a concrete instance of `SecretUserpassInput` via:
//
//	SecretUserpassArgs{...}
type SecretUserpassInput interface {
	pulumi.Input

	ToSecretUserpassOutput() SecretUserpassOutput
	ToSecretUserpassOutputWithContext(context.Context) SecretUserpassOutput
}

type SecretUserpassArgs struct {
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	Password pulumi.StringInput    `pulumi:"password"`
	Username pulumi.StringInput    `pulumi:"username"`
}

func (SecretUserpassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretUserpass)(nil)).Elem()
}

func (i SecretUserpassArgs) ToSecretUserpassOutput() SecretUserpassOutput {
	return i.ToSecretUserpassOutputWithContext(context.Background())
}

func (i SecretUserpassArgs) ToSecretUserpassOutputWithContext(ctx context.Context) SecretUserpassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretUserpassOutput)
}

func (i SecretUserpassArgs) ToOutput(ctx context.Context) pulumix.Output[SecretUserpass] {
	return pulumix.Output[SecretUserpass]{
		OutputState: i.ToSecretUserpassOutputWithContext(ctx).OutputState,
	}
}

func (i SecretUserpassArgs) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return i.ToSecretUserpassPtrOutputWithContext(context.Background())
}

func (i SecretUserpassArgs) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretUserpassOutput).ToSecretUserpassPtrOutputWithContext(ctx)
}

// SecretUserpassPtrInput is an input type that accepts SecretUserpassArgs, SecretUserpassPtr and SecretUserpassPtrOutput values.
// You can construct a concrete instance of `SecretUserpassPtrInput` via:
//
//	        SecretUserpassArgs{...}
//
//	or:
//
//	        nil
type SecretUserpassPtrInput interface {
	pulumi.Input

	ToSecretUserpassPtrOutput() SecretUserpassPtrOutput
	ToSecretUserpassPtrOutputWithContext(context.Context) SecretUserpassPtrOutput
}

type secretUserpassPtrType SecretUserpassArgs

func SecretUserpassPtr(v *SecretUserpassArgs) SecretUserpassPtrInput {
	return (*secretUserpassPtrType)(v)
}

func (*secretUserpassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretUserpass)(nil)).Elem()
}

func (i *secretUserpassPtrType) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return i.ToSecretUserpassPtrOutputWithContext(context.Background())
}

func (i *secretUserpassPtrType) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretUserpassPtrOutput)
}

func (i *secretUserpassPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretUserpass] {
	return pulumix.Output[*SecretUserpass]{
		OutputState: i.ToSecretUserpassPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretUserpassOutput struct{ *pulumi.OutputState }

func (SecretUserpassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretUserpass)(nil)).Elem()
}

func (o SecretUserpassOutput) ToSecretUserpassOutput() SecretUserpassOutput {
	return o
}

func (o SecretUserpassOutput) ToSecretUserpassOutputWithContext(ctx context.Context) SecretUserpassOutput {
	return o
}

func (o SecretUserpassOutput) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return o.ToSecretUserpassPtrOutputWithContext(context.Background())
}

func (o SecretUserpassOutput) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretUserpass) *SecretUserpass {
		return &v
	}).(SecretUserpassPtrOutput)
}

func (o SecretUserpassOutput) ToOutput(ctx context.Context) pulumix.Output[SecretUserpass] {
	return pulumix.Output[SecretUserpass]{
		OutputState: o.OutputState,
	}
}

func (o SecretUserpassOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretUserpass) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o SecretUserpassOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretUserpass) string { return v.Password }).(pulumi.StringOutput)
}

func (o SecretUserpassOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretUserpass) string { return v.Username }).(pulumi.StringOutput)
}

type SecretUserpassPtrOutput struct{ *pulumi.OutputState }

func (SecretUserpassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretUserpass)(nil)).Elem()
}

func (o SecretUserpassPtrOutput) ToSecretUserpassPtrOutput() SecretUserpassPtrOutput {
	return o
}

func (o SecretUserpassPtrOutput) ToSecretUserpassPtrOutputWithContext(ctx context.Context) SecretUserpassPtrOutput {
	return o
}

func (o SecretUserpassPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretUserpass] {
	return pulumix.Output[*SecretUserpass]{
		OutputState: o.OutputState,
	}
}

func (o SecretUserpassPtrOutput) Elem() SecretUserpassOutput {
	return o.ApplyT(func(v *SecretUserpass) SecretUserpass {
		if v != nil {
			return *v
		}
		var ret SecretUserpass
		return ret
	}).(SecretUserpassOutput)
}

func (o SecretUserpassPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretUserpass) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

func (o SecretUserpassPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretUserpass) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o SecretUserpassPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretUserpass) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type VolumeSetAutoscaling struct {
	MaxCapacity       int     `pulumi:"maxCapacity"`
	MinFreePercentage int     `pulumi:"minFreePercentage"`
	ScalingFactor     float64 `pulumi:"scalingFactor"`
}

// VolumeSetAutoscalingInput is an input type that accepts VolumeSetAutoscalingArgs and VolumeSetAutoscalingOutput values.
// You can construct a concrete instance of `VolumeSetAutoscalingInput` via:
//
//	VolumeSetAutoscalingArgs{...}
type VolumeSetAutoscalingInput interface {
	pulumi.Input

	ToVolumeSetAutoscalingOutput() VolumeSetAutoscalingOutput
	ToVolumeSetAutoscalingOutputWithContext(context.Context) VolumeSetAutoscalingOutput
}

type VolumeSetAutoscalingArgs struct {
	MaxCapacity       pulumi.IntInput     `pulumi:"maxCapacity"`
	MinFreePercentage pulumi.IntInput     `pulumi:"minFreePercentage"`
	ScalingFactor     pulumi.Float64Input `pulumi:"scalingFactor"`
}

func (VolumeSetAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetAutoscaling)(nil)).Elem()
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingOutput() VolumeSetAutoscalingOutput {
	return i.ToVolumeSetAutoscalingOutputWithContext(context.Background())
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingOutputWithContext(ctx context.Context) VolumeSetAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetAutoscalingOutput)
}

func (i VolumeSetAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[VolumeSetAutoscaling] {
	return pulumix.Output[VolumeSetAutoscaling]{
		OutputState: i.ToVolumeSetAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return i.ToVolumeSetAutoscalingPtrOutputWithContext(context.Background())
}

func (i VolumeSetAutoscalingArgs) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetAutoscalingOutput).ToVolumeSetAutoscalingPtrOutputWithContext(ctx)
}

// VolumeSetAutoscalingPtrInput is an input type that accepts VolumeSetAutoscalingArgs, VolumeSetAutoscalingPtr and VolumeSetAutoscalingPtrOutput values.
// You can construct a concrete instance of `VolumeSetAutoscalingPtrInput` via:
//
//	        VolumeSetAutoscalingArgs{...}
//
//	or:
//
//	        nil
type VolumeSetAutoscalingPtrInput interface {
	pulumi.Input

	ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput
	ToVolumeSetAutoscalingPtrOutputWithContext(context.Context) VolumeSetAutoscalingPtrOutput
}

type volumeSetAutoscalingPtrType VolumeSetAutoscalingArgs

func VolumeSetAutoscalingPtr(v *VolumeSetAutoscalingArgs) VolumeSetAutoscalingPtrInput {
	return (*volumeSetAutoscalingPtrType)(v)
}

func (*volumeSetAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetAutoscaling)(nil)).Elem()
}

func (i *volumeSetAutoscalingPtrType) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return i.ToVolumeSetAutoscalingPtrOutputWithContext(context.Background())
}

func (i *volumeSetAutoscalingPtrType) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetAutoscalingPtrOutput)
}

func (i *volumeSetAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetAutoscaling] {
	return pulumix.Output[*VolumeSetAutoscaling]{
		OutputState: i.ToVolumeSetAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type VolumeSetAutoscalingOutput struct{ *pulumi.OutputState }

func (VolumeSetAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetAutoscaling)(nil)).Elem()
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingOutput() VolumeSetAutoscalingOutput {
	return o
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingOutputWithContext(ctx context.Context) VolumeSetAutoscalingOutput {
	return o
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return o.ToVolumeSetAutoscalingPtrOutputWithContext(context.Background())
}

func (o VolumeSetAutoscalingOutput) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeSetAutoscaling) *VolumeSetAutoscaling {
		return &v
	}).(VolumeSetAutoscalingPtrOutput)
}

func (o VolumeSetAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[VolumeSetAutoscaling] {
	return pulumix.Output[VolumeSetAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetAutoscalingOutput) MaxCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeSetAutoscaling) int { return v.MaxCapacity }).(pulumi.IntOutput)
}

func (o VolumeSetAutoscalingOutput) MinFreePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeSetAutoscaling) int { return v.MinFreePercentage }).(pulumi.IntOutput)
}

func (o VolumeSetAutoscalingOutput) ScalingFactor() pulumi.Float64Output {
	return o.ApplyT(func(v VolumeSetAutoscaling) float64 { return v.ScalingFactor }).(pulumi.Float64Output)
}

type VolumeSetAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (VolumeSetAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetAutoscaling)(nil)).Elem()
}

func (o VolumeSetAutoscalingPtrOutput) ToVolumeSetAutoscalingPtrOutput() VolumeSetAutoscalingPtrOutput {
	return o
}

func (o VolumeSetAutoscalingPtrOutput) ToVolumeSetAutoscalingPtrOutputWithContext(ctx context.Context) VolumeSetAutoscalingPtrOutput {
	return o
}

func (o VolumeSetAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetAutoscaling] {
	return pulumix.Output[*VolumeSetAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetAutoscalingPtrOutput) Elem() VolumeSetAutoscalingOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) VolumeSetAutoscaling {
		if v != nil {
			return *v
		}
		var ret VolumeSetAutoscaling
		return ret
	}).(VolumeSetAutoscalingOutput)
}

func (o VolumeSetAutoscalingPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

func (o VolumeSetAutoscalingPtrOutput) MinFreePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinFreePercentage
	}).(pulumi.IntPtrOutput)
}

func (o VolumeSetAutoscalingPtrOutput) ScalingFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VolumeSetAutoscaling) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScalingFactor
	}).(pulumi.Float64PtrOutput)
}

type VolumeSetSnapshots struct {
	CreateFinalSnapshot *bool   `pulumi:"createFinalSnapshot"`
	RetentionDuration   *string `pulumi:"retentionDuration"`
	Schedule            *string `pulumi:"schedule"`
}

// VolumeSetSnapshotsInput is an input type that accepts VolumeSetSnapshotsArgs and VolumeSetSnapshotsOutput values.
// You can construct a concrete instance of `VolumeSetSnapshotsInput` via:
//
//	VolumeSetSnapshotsArgs{...}
type VolumeSetSnapshotsInput interface {
	pulumi.Input

	ToVolumeSetSnapshotsOutput() VolumeSetSnapshotsOutput
	ToVolumeSetSnapshotsOutputWithContext(context.Context) VolumeSetSnapshotsOutput
}

type VolumeSetSnapshotsArgs struct {
	CreateFinalSnapshot pulumi.BoolPtrInput   `pulumi:"createFinalSnapshot"`
	RetentionDuration   pulumi.StringPtrInput `pulumi:"retentionDuration"`
	Schedule            pulumi.StringPtrInput `pulumi:"schedule"`
}

func (VolumeSetSnapshotsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetSnapshots)(nil)).Elem()
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsOutput() VolumeSetSnapshotsOutput {
	return i.ToVolumeSetSnapshotsOutputWithContext(context.Background())
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsOutputWithContext(ctx context.Context) VolumeSetSnapshotsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetSnapshotsOutput)
}

func (i VolumeSetSnapshotsArgs) ToOutput(ctx context.Context) pulumix.Output[VolumeSetSnapshots] {
	return pulumix.Output[VolumeSetSnapshots]{
		OutputState: i.ToVolumeSetSnapshotsOutputWithContext(ctx).OutputState,
	}
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return i.ToVolumeSetSnapshotsPtrOutputWithContext(context.Background())
}

func (i VolumeSetSnapshotsArgs) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetSnapshotsOutput).ToVolumeSetSnapshotsPtrOutputWithContext(ctx)
}

// VolumeSetSnapshotsPtrInput is an input type that accepts VolumeSetSnapshotsArgs, VolumeSetSnapshotsPtr and VolumeSetSnapshotsPtrOutput values.
// You can construct a concrete instance of `VolumeSetSnapshotsPtrInput` via:
//
//	        VolumeSetSnapshotsArgs{...}
//
//	or:
//
//	        nil
type VolumeSetSnapshotsPtrInput interface {
	pulumi.Input

	ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput
	ToVolumeSetSnapshotsPtrOutputWithContext(context.Context) VolumeSetSnapshotsPtrOutput
}

type volumeSetSnapshotsPtrType VolumeSetSnapshotsArgs

func VolumeSetSnapshotsPtr(v *VolumeSetSnapshotsArgs) VolumeSetSnapshotsPtrInput {
	return (*volumeSetSnapshotsPtrType)(v)
}

func (*volumeSetSnapshotsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetSnapshots)(nil)).Elem()
}

func (i *volumeSetSnapshotsPtrType) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return i.ToVolumeSetSnapshotsPtrOutputWithContext(context.Background())
}

func (i *volumeSetSnapshotsPtrType) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetSnapshotsPtrOutput)
}

func (i *volumeSetSnapshotsPtrType) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetSnapshots] {
	return pulumix.Output[*VolumeSetSnapshots]{
		OutputState: i.ToVolumeSetSnapshotsPtrOutputWithContext(ctx).OutputState,
	}
}

type VolumeSetSnapshotsOutput struct{ *pulumi.OutputState }

func (VolumeSetSnapshotsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetSnapshots)(nil)).Elem()
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsOutput() VolumeSetSnapshotsOutput {
	return o
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsOutputWithContext(ctx context.Context) VolumeSetSnapshotsOutput {
	return o
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return o.ToVolumeSetSnapshotsPtrOutputWithContext(context.Background())
}

func (o VolumeSetSnapshotsOutput) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeSetSnapshots) *VolumeSetSnapshots {
		return &v
	}).(VolumeSetSnapshotsPtrOutput)
}

func (o VolumeSetSnapshotsOutput) ToOutput(ctx context.Context) pulumix.Output[VolumeSetSnapshots] {
	return pulumix.Output[VolumeSetSnapshots]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetSnapshotsOutput) CreateFinalSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeSetSnapshots) *bool { return v.CreateFinalSnapshot }).(pulumi.BoolPtrOutput)
}

func (o VolumeSetSnapshotsOutput) RetentionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetSnapshots) *string { return v.RetentionDuration }).(pulumi.StringPtrOutput)
}

func (o VolumeSetSnapshotsOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetSnapshots) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

type VolumeSetSnapshotsPtrOutput struct{ *pulumi.OutputState }

func (VolumeSetSnapshotsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeSetSnapshots)(nil)).Elem()
}

func (o VolumeSetSnapshotsPtrOutput) ToVolumeSetSnapshotsPtrOutput() VolumeSetSnapshotsPtrOutput {
	return o
}

func (o VolumeSetSnapshotsPtrOutput) ToVolumeSetSnapshotsPtrOutputWithContext(ctx context.Context) VolumeSetSnapshotsPtrOutput {
	return o
}

func (o VolumeSetSnapshotsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VolumeSetSnapshots] {
	return pulumix.Output[*VolumeSetSnapshots]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetSnapshotsPtrOutput) Elem() VolumeSetSnapshotsOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) VolumeSetSnapshots {
		if v != nil {
			return *v
		}
		var ret VolumeSetSnapshots
		return ret
	}).(VolumeSetSnapshotsOutput)
}

func (o VolumeSetSnapshotsPtrOutput) CreateFinalSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) *bool {
		if v == nil {
			return nil
		}
		return v.CreateFinalSnapshot
	}).(pulumi.BoolPtrOutput)
}

func (o VolumeSetSnapshotsPtrOutput) RetentionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) *string {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(pulumi.StringPtrOutput)
}

func (o VolumeSetSnapshotsPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeSetSnapshots) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

type VolumeSetStatus struct {
	BindingId      *string  `pulumi:"bindingId"`
	Locations      []string `pulumi:"locations"`
	ParentId       *string  `pulumi:"parentId"`
	UsedByWorkload *string  `pulumi:"usedByWorkload"`
}

// VolumeSetStatusInput is an input type that accepts VolumeSetStatusArgs and VolumeSetStatusOutput values.
// You can construct a concrete instance of `VolumeSetStatusInput` via:
//
//	VolumeSetStatusArgs{...}
type VolumeSetStatusInput interface {
	pulumi.Input

	ToVolumeSetStatusOutput() VolumeSetStatusOutput
	ToVolumeSetStatusOutputWithContext(context.Context) VolumeSetStatusOutput
}

type VolumeSetStatusArgs struct {
	BindingId      pulumi.StringPtrInput   `pulumi:"bindingId"`
	Locations      pulumi.StringArrayInput `pulumi:"locations"`
	ParentId       pulumi.StringPtrInput   `pulumi:"parentId"`
	UsedByWorkload pulumi.StringPtrInput   `pulumi:"usedByWorkload"`
}

func (VolumeSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetStatus)(nil)).Elem()
}

func (i VolumeSetStatusArgs) ToVolumeSetStatusOutput() VolumeSetStatusOutput {
	return i.ToVolumeSetStatusOutputWithContext(context.Background())
}

func (i VolumeSetStatusArgs) ToVolumeSetStatusOutputWithContext(ctx context.Context) VolumeSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetStatusOutput)
}

func (i VolumeSetStatusArgs) ToOutput(ctx context.Context) pulumix.Output[VolumeSetStatus] {
	return pulumix.Output[VolumeSetStatus]{
		OutputState: i.ToVolumeSetStatusOutputWithContext(ctx).OutputState,
	}
}

// VolumeSetStatusArrayInput is an input type that accepts VolumeSetStatusArray and VolumeSetStatusArrayOutput values.
// You can construct a concrete instance of `VolumeSetStatusArrayInput` via:
//
//	VolumeSetStatusArray{ VolumeSetStatusArgs{...} }
type VolumeSetStatusArrayInput interface {
	pulumi.Input

	ToVolumeSetStatusArrayOutput() VolumeSetStatusArrayOutput
	ToVolumeSetStatusArrayOutputWithContext(context.Context) VolumeSetStatusArrayOutput
}

type VolumeSetStatusArray []VolumeSetStatusInput

func (VolumeSetStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeSetStatus)(nil)).Elem()
}

func (i VolumeSetStatusArray) ToVolumeSetStatusArrayOutput() VolumeSetStatusArrayOutput {
	return i.ToVolumeSetStatusArrayOutputWithContext(context.Background())
}

func (i VolumeSetStatusArray) ToVolumeSetStatusArrayOutputWithContext(ctx context.Context) VolumeSetStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSetStatusArrayOutput)
}

func (i VolumeSetStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]VolumeSetStatus] {
	return pulumix.Output[[]VolumeSetStatus]{
		OutputState: i.ToVolumeSetStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type VolumeSetStatusOutput struct{ *pulumi.OutputState }

func (VolumeSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSetStatus)(nil)).Elem()
}

func (o VolumeSetStatusOutput) ToVolumeSetStatusOutput() VolumeSetStatusOutput {
	return o
}

func (o VolumeSetStatusOutput) ToVolumeSetStatusOutputWithContext(ctx context.Context) VolumeSetStatusOutput {
	return o
}

func (o VolumeSetStatusOutput) ToOutput(ctx context.Context) pulumix.Output[VolumeSetStatus] {
	return pulumix.Output[VolumeSetStatus]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetStatusOutput) BindingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetStatus) *string { return v.BindingId }).(pulumi.StringPtrOutput)
}

func (o VolumeSetStatusOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeSetStatus) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

func (o VolumeSetStatusOutput) ParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetStatus) *string { return v.ParentId }).(pulumi.StringPtrOutput)
}

func (o VolumeSetStatusOutput) UsedByWorkload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeSetStatus) *string { return v.UsedByWorkload }).(pulumi.StringPtrOutput)
}

type VolumeSetStatusArrayOutput struct{ *pulumi.OutputState }

func (VolumeSetStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeSetStatus)(nil)).Elem()
}

func (o VolumeSetStatusArrayOutput) ToVolumeSetStatusArrayOutput() VolumeSetStatusArrayOutput {
	return o
}

func (o VolumeSetStatusArrayOutput) ToVolumeSetStatusArrayOutputWithContext(ctx context.Context) VolumeSetStatusArrayOutput {
	return o
}

func (o VolumeSetStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VolumeSetStatus] {
	return pulumix.Output[[]VolumeSetStatus]{
		OutputState: o.OutputState,
	}
}

func (o VolumeSetStatusArrayOutput) Index(i pulumi.IntInput) VolumeSetStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeSetStatus {
		return vs[0].([]VolumeSetStatus)[vs[1].(int)]
	}).(VolumeSetStatusOutput)
}

type WorkloadContainer struct {
	Args          []string                        `pulumi:"args"`
	Command       *string                         `pulumi:"command"`
	Cpu           *string                         `pulumi:"cpu"`
	Env           map[string]string               `pulumi:"env"`
	GpuNvidia     *WorkloadContainerGpuNvidia     `pulumi:"gpuNvidia"`
	Image         string                          `pulumi:"image"`
	InheritEnv    *bool                           `pulumi:"inheritEnv"`
	Lifecycle     *WorkloadContainerLifecycle     `pulumi:"lifecycle"`
	LivenessProbe *WorkloadContainerLivenessProbe `pulumi:"livenessProbe"`
	Memory        *string                         `pulumi:"memory"`
	Metrics       *WorkloadContainerMetrics       `pulumi:"metrics"`
	MinCpu        *string                         `pulumi:"minCpu"`
	MinMemory     *string                         `pulumi:"minMemory"`
	Name          string                          `pulumi:"name"`
	// Deprecated: The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead.
	Port             *int                             `pulumi:"port"`
	Ports            []WorkloadContainerPort          `pulumi:"ports"`
	ReadinessProbe   *WorkloadContainerReadinessProbe `pulumi:"readinessProbe"`
	Volumes          []WorkloadContainerVolume        `pulumi:"volumes"`
	WorkingDirectory *string                          `pulumi:"workingDirectory"`
}

// WorkloadContainerInput is an input type that accepts WorkloadContainerArgs and WorkloadContainerOutput values.
// You can construct a concrete instance of `WorkloadContainerInput` via:
//
//	WorkloadContainerArgs{...}
type WorkloadContainerInput interface {
	pulumi.Input

	ToWorkloadContainerOutput() WorkloadContainerOutput
	ToWorkloadContainerOutputWithContext(context.Context) WorkloadContainerOutput
}

type WorkloadContainerArgs struct {
	Args          pulumi.StringArrayInput                `pulumi:"args"`
	Command       pulumi.StringPtrInput                  `pulumi:"command"`
	Cpu           pulumi.StringPtrInput                  `pulumi:"cpu"`
	Env           pulumi.StringMapInput                  `pulumi:"env"`
	GpuNvidia     WorkloadContainerGpuNvidiaPtrInput     `pulumi:"gpuNvidia"`
	Image         pulumi.StringInput                     `pulumi:"image"`
	InheritEnv    pulumi.BoolPtrInput                    `pulumi:"inheritEnv"`
	Lifecycle     WorkloadContainerLifecyclePtrInput     `pulumi:"lifecycle"`
	LivenessProbe WorkloadContainerLivenessProbePtrInput `pulumi:"livenessProbe"`
	Memory        pulumi.StringPtrInput                  `pulumi:"memory"`
	Metrics       WorkloadContainerMetricsPtrInput       `pulumi:"metrics"`
	MinCpu        pulumi.StringPtrInput                  `pulumi:"minCpu"`
	MinMemory     pulumi.StringPtrInput                  `pulumi:"minMemory"`
	Name          pulumi.StringInput                     `pulumi:"name"`
	// Deprecated: The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead.
	Port             pulumi.IntPtrInput                      `pulumi:"port"`
	Ports            WorkloadContainerPortArrayInput         `pulumi:"ports"`
	ReadinessProbe   WorkloadContainerReadinessProbePtrInput `pulumi:"readinessProbe"`
	Volumes          WorkloadContainerVolumeArrayInput       `pulumi:"volumes"`
	WorkingDirectory pulumi.StringPtrInput                   `pulumi:"workingDirectory"`
}

func (WorkloadContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainer)(nil)).Elem()
}

func (i WorkloadContainerArgs) ToWorkloadContainerOutput() WorkloadContainerOutput {
	return i.ToWorkloadContainerOutputWithContext(context.Background())
}

func (i WorkloadContainerArgs) ToWorkloadContainerOutputWithContext(ctx context.Context) WorkloadContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerOutput)
}

func (i WorkloadContainerArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainer] {
	return pulumix.Output[WorkloadContainer]{
		OutputState: i.ToWorkloadContainerOutputWithContext(ctx).OutputState,
	}
}

// WorkloadContainerArrayInput is an input type that accepts WorkloadContainerArray and WorkloadContainerArrayOutput values.
// You can construct a concrete instance of `WorkloadContainerArrayInput` via:
//
//	WorkloadContainerArray{ WorkloadContainerArgs{...} }
type WorkloadContainerArrayInput interface {
	pulumi.Input

	ToWorkloadContainerArrayOutput() WorkloadContainerArrayOutput
	ToWorkloadContainerArrayOutputWithContext(context.Context) WorkloadContainerArrayOutput
}

type WorkloadContainerArray []WorkloadContainerInput

func (WorkloadContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainer)(nil)).Elem()
}

func (i WorkloadContainerArray) ToWorkloadContainerArrayOutput() WorkloadContainerArrayOutput {
	return i.ToWorkloadContainerArrayOutputWithContext(context.Background())
}

func (i WorkloadContainerArray) ToWorkloadContainerArrayOutputWithContext(ctx context.Context) WorkloadContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerArrayOutput)
}

func (i WorkloadContainerArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainer] {
	return pulumix.Output[[]WorkloadContainer]{
		OutputState: i.ToWorkloadContainerArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerOutput struct{ *pulumi.OutputState }

func (WorkloadContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainer)(nil)).Elem()
}

func (o WorkloadContainerOutput) ToWorkloadContainerOutput() WorkloadContainerOutput {
	return o
}

func (o WorkloadContainerOutput) ToWorkloadContainerOutputWithContext(ctx context.Context) WorkloadContainerOutput {
	return o
}

func (o WorkloadContainerOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainer] {
	return pulumix.Output[WorkloadContainer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainer) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o WorkloadContainerOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.Command }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadContainer) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

func (o WorkloadContainerOutput) GpuNvidia() WorkloadContainerGpuNvidiaPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerGpuNvidia { return v.GpuNvidia }).(WorkloadContainerGpuNvidiaPtrOutput)
}

func (o WorkloadContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainer) string { return v.Image }).(pulumi.StringOutput)
}

func (o WorkloadContainerOutput) InheritEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *bool { return v.InheritEnv }).(pulumi.BoolPtrOutput)
}

func (o WorkloadContainerOutput) Lifecycle() WorkloadContainerLifecyclePtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerLifecycle { return v.Lifecycle }).(WorkloadContainerLifecyclePtrOutput)
}

func (o WorkloadContainerOutput) LivenessProbe() WorkloadContainerLivenessProbePtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerLivenessProbe { return v.LivenessProbe }).(WorkloadContainerLivenessProbePtrOutput)
}

func (o WorkloadContainerOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Metrics() WorkloadContainerMetricsPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerMetrics { return v.Metrics }).(WorkloadContainerMetricsPtrOutput)
}

func (o WorkloadContainerOutput) MinCpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.MinCpu }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) MinMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.MinMemory }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainer) string { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead.
func (o WorkloadContainerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerOutput) Ports() WorkloadContainerPortArrayOutput {
	return o.ApplyT(func(v WorkloadContainer) []WorkloadContainerPort { return v.Ports }).(WorkloadContainerPortArrayOutput)
}

func (o WorkloadContainerOutput) ReadinessProbe() WorkloadContainerReadinessProbePtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *WorkloadContainerReadinessProbe { return v.ReadinessProbe }).(WorkloadContainerReadinessProbePtrOutput)
}

func (o WorkloadContainerOutput) Volumes() WorkloadContainerVolumeArrayOutput {
	return o.ApplyT(func(v WorkloadContainer) []WorkloadContainerVolume { return v.Volumes }).(WorkloadContainerVolumeArrayOutput)
}

func (o WorkloadContainerOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainer) *string { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type WorkloadContainerArrayOutput struct{ *pulumi.OutputState }

func (WorkloadContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainer)(nil)).Elem()
}

func (o WorkloadContainerArrayOutput) ToWorkloadContainerArrayOutput() WorkloadContainerArrayOutput {
	return o
}

func (o WorkloadContainerArrayOutput) ToWorkloadContainerArrayOutputWithContext(ctx context.Context) WorkloadContainerArrayOutput {
	return o
}

func (o WorkloadContainerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainer] {
	return pulumix.Output[[]WorkloadContainer]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerArrayOutput) Index(i pulumi.IntInput) WorkloadContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadContainer {
		return vs[0].([]WorkloadContainer)[vs[1].(int)]
	}).(WorkloadContainerOutput)
}

type WorkloadContainerGpuNvidia struct {
	Model    string `pulumi:"model"`
	Quantity int    `pulumi:"quantity"`
}

// WorkloadContainerGpuNvidiaInput is an input type that accepts WorkloadContainerGpuNvidiaArgs and WorkloadContainerGpuNvidiaOutput values.
// You can construct a concrete instance of `WorkloadContainerGpuNvidiaInput` via:
//
//	WorkloadContainerGpuNvidiaArgs{...}
type WorkloadContainerGpuNvidiaInput interface {
	pulumi.Input

	ToWorkloadContainerGpuNvidiaOutput() WorkloadContainerGpuNvidiaOutput
	ToWorkloadContainerGpuNvidiaOutputWithContext(context.Context) WorkloadContainerGpuNvidiaOutput
}

type WorkloadContainerGpuNvidiaArgs struct {
	Model    pulumi.StringInput `pulumi:"model"`
	Quantity pulumi.IntInput    `pulumi:"quantity"`
}

func (WorkloadContainerGpuNvidiaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaOutput() WorkloadContainerGpuNvidiaOutput {
	return i.ToWorkloadContainerGpuNvidiaOutputWithContext(context.Background())
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerGpuNvidiaOutput)
}

func (i WorkloadContainerGpuNvidiaArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerGpuNvidia] {
	return pulumix.Output[WorkloadContainerGpuNvidia]{
		OutputState: i.ToWorkloadContainerGpuNvidiaOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return i.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerGpuNvidiaArgs) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerGpuNvidiaOutput).ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx)
}

// WorkloadContainerGpuNvidiaPtrInput is an input type that accepts WorkloadContainerGpuNvidiaArgs, WorkloadContainerGpuNvidiaPtr and WorkloadContainerGpuNvidiaPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerGpuNvidiaPtrInput` via:
//
//	        WorkloadContainerGpuNvidiaArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerGpuNvidiaPtrInput interface {
	pulumi.Input

	ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput
	ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Context) WorkloadContainerGpuNvidiaPtrOutput
}

type workloadContainerGpuNvidiaPtrType WorkloadContainerGpuNvidiaArgs

func WorkloadContainerGpuNvidiaPtr(v *WorkloadContainerGpuNvidiaArgs) WorkloadContainerGpuNvidiaPtrInput {
	return (*workloadContainerGpuNvidiaPtrType)(v)
}

func (*workloadContainerGpuNvidiaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (i *workloadContainerGpuNvidiaPtrType) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return i.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Background())
}

func (i *workloadContainerGpuNvidiaPtrType) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerGpuNvidiaPtrOutput)
}

func (i *workloadContainerGpuNvidiaPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerGpuNvidia] {
	return pulumix.Output[*WorkloadContainerGpuNvidia]{
		OutputState: i.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerGpuNvidiaOutput struct{ *pulumi.OutputState }

func (WorkloadContainerGpuNvidiaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaOutput() WorkloadContainerGpuNvidiaOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return o.ToWorkloadContainerGpuNvidiaPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerGpuNvidiaOutput) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerGpuNvidia) *WorkloadContainerGpuNvidia {
		return &v
	}).(WorkloadContainerGpuNvidiaPtrOutput)
}

func (o WorkloadContainerGpuNvidiaOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerGpuNvidia] {
	return pulumix.Output[WorkloadContainerGpuNvidia]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerGpuNvidiaOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerGpuNvidia) string { return v.Model }).(pulumi.StringOutput)
}

func (o WorkloadContainerGpuNvidiaOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadContainerGpuNvidia) int { return v.Quantity }).(pulumi.IntOutput)
}

type WorkloadContainerGpuNvidiaPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerGpuNvidiaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerGpuNvidia)(nil)).Elem()
}

func (o WorkloadContainerGpuNvidiaPtrOutput) ToWorkloadContainerGpuNvidiaPtrOutput() WorkloadContainerGpuNvidiaPtrOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaPtrOutput) ToWorkloadContainerGpuNvidiaPtrOutputWithContext(ctx context.Context) WorkloadContainerGpuNvidiaPtrOutput {
	return o
}

func (o WorkloadContainerGpuNvidiaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerGpuNvidia] {
	return pulumix.Output[*WorkloadContainerGpuNvidia]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerGpuNvidiaPtrOutput) Elem() WorkloadContainerGpuNvidiaOutput {
	return o.ApplyT(func(v *WorkloadContainerGpuNvidia) WorkloadContainerGpuNvidia {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerGpuNvidia
		return ret
	}).(WorkloadContainerGpuNvidiaOutput)
}

func (o WorkloadContainerGpuNvidiaPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerGpuNvidia) *string {
		if v == nil {
			return nil
		}
		return &v.Model
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerGpuNvidiaPtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerGpuNvidia) *int {
		if v == nil {
			return nil
		}
		return &v.Quantity
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerLifecycle struct {
	PostStart *WorkloadContainerLifecyclePostStart `pulumi:"postStart"`
	PreStop   *WorkloadContainerLifecyclePreStop   `pulumi:"preStop"`
}

// WorkloadContainerLifecycleInput is an input type that accepts WorkloadContainerLifecycleArgs and WorkloadContainerLifecycleOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecycleInput` via:
//
//	WorkloadContainerLifecycleArgs{...}
type WorkloadContainerLifecycleInput interface {
	pulumi.Input

	ToWorkloadContainerLifecycleOutput() WorkloadContainerLifecycleOutput
	ToWorkloadContainerLifecycleOutputWithContext(context.Context) WorkloadContainerLifecycleOutput
}

type WorkloadContainerLifecycleArgs struct {
	PostStart WorkloadContainerLifecyclePostStartPtrInput `pulumi:"postStart"`
	PreStop   WorkloadContainerLifecyclePreStopPtrInput   `pulumi:"preStop"`
}

func (WorkloadContainerLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecycle)(nil)).Elem()
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecycleOutput() WorkloadContainerLifecycleOutput {
	return i.ToWorkloadContainerLifecycleOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecycleOutputWithContext(ctx context.Context) WorkloadContainerLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecycleOutput)
}

func (i WorkloadContainerLifecycleArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecycle] {
	return pulumix.Output[WorkloadContainerLifecycle]{
		OutputState: i.ToWorkloadContainerLifecycleOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return i.ToWorkloadContainerLifecyclePtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecycleArgs) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecycleOutput).ToWorkloadContainerLifecyclePtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePtrInput is an input type that accepts WorkloadContainerLifecycleArgs, WorkloadContainerLifecyclePtr and WorkloadContainerLifecyclePtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePtrInput` via:
//
//	        WorkloadContainerLifecycleArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput
	ToWorkloadContainerLifecyclePtrOutputWithContext(context.Context) WorkloadContainerLifecyclePtrOutput
}

type workloadContainerLifecyclePtrType WorkloadContainerLifecycleArgs

func WorkloadContainerLifecyclePtr(v *WorkloadContainerLifecycleArgs) WorkloadContainerLifecyclePtrInput {
	return (*workloadContainerLifecyclePtrType)(v)
}

func (*workloadContainerLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecycle)(nil)).Elem()
}

func (i *workloadContainerLifecyclePtrType) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return i.ToWorkloadContainerLifecyclePtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePtrType) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePtrOutput)
}

func (i *workloadContainerLifecyclePtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecycle] {
	return pulumix.Output[*WorkloadContainerLifecycle]{
		OutputState: i.ToWorkloadContainerLifecyclePtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecycleOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecycle)(nil)).Elem()
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecycleOutput() WorkloadContainerLifecycleOutput {
	return o
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecycleOutputWithContext(ctx context.Context) WorkloadContainerLifecycleOutput {
	return o
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return o.ToWorkloadContainerLifecyclePtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecycleOutput) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecycle) *WorkloadContainerLifecycle {
		return &v
	}).(WorkloadContainerLifecyclePtrOutput)
}

func (o WorkloadContainerLifecycleOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecycle] {
	return pulumix.Output[WorkloadContainerLifecycle]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecycleOutput) PostStart() WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLifecycle) *WorkloadContainerLifecyclePostStart { return v.PostStart }).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (o WorkloadContainerLifecycleOutput) PreStop() WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLifecycle) *WorkloadContainerLifecyclePreStop { return v.PreStop }).(WorkloadContainerLifecyclePreStopPtrOutput)
}

type WorkloadContainerLifecyclePtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecycle)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePtrOutput) ToWorkloadContainerLifecyclePtrOutput() WorkloadContainerLifecyclePtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePtrOutput) ToWorkloadContainerLifecyclePtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecycle] {
	return pulumix.Output[*WorkloadContainerLifecycle]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePtrOutput) Elem() WorkloadContainerLifecycleOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecycle) WorkloadContainerLifecycle {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecycle
		return ret
	}).(WorkloadContainerLifecycleOutput)
}

func (o WorkloadContainerLifecyclePtrOutput) PostStart() WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecycle) *WorkloadContainerLifecyclePostStart {
		if v == nil {
			return nil
		}
		return v.PostStart
	}).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (o WorkloadContainerLifecyclePtrOutput) PreStop() WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecycle) *WorkloadContainerLifecyclePreStop {
		if v == nil {
			return nil
		}
		return v.PreStop
	}).(WorkloadContainerLifecyclePreStopPtrOutput)
}

type WorkloadContainerLifecyclePostStart struct {
	Exec WorkloadContainerLifecyclePostStartExec `pulumi:"exec"`
}

// WorkloadContainerLifecyclePostStartInput is an input type that accepts WorkloadContainerLifecyclePostStartArgs and WorkloadContainerLifecyclePostStartOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartInput` via:
//
//	WorkloadContainerLifecyclePostStartArgs{...}
type WorkloadContainerLifecyclePostStartInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartOutput() WorkloadContainerLifecyclePostStartOutput
	ToWorkloadContainerLifecyclePostStartOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartOutput
}

type WorkloadContainerLifecyclePostStartArgs struct {
	Exec WorkloadContainerLifecyclePostStartExecInput `pulumi:"exec"`
}

func (WorkloadContainerLifecyclePostStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartOutput() WorkloadContainerLifecyclePostStartOutput {
	return i.ToWorkloadContainerLifecyclePostStartOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartOutput)
}

func (i WorkloadContainerLifecyclePostStartArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[WorkloadContainerLifecyclePostStart]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartArgs) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartOutput).ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePostStartPtrInput is an input type that accepts WorkloadContainerLifecyclePostStartArgs, WorkloadContainerLifecyclePostStartPtr and WorkloadContainerLifecyclePostStartPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartPtrInput` via:
//
//	        WorkloadContainerLifecyclePostStartArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePostStartPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput
	ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartPtrOutput
}

type workloadContainerLifecyclePostStartPtrType WorkloadContainerLifecyclePostStartArgs

func WorkloadContainerLifecyclePostStartPtr(v *WorkloadContainerLifecyclePostStartArgs) WorkloadContainerLifecyclePostStartPtrInput {
	return (*workloadContainerLifecyclePostStartPtrType)(v)
}

func (*workloadContainerLifecyclePostStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (i *workloadContainerLifecyclePostStartPtrType) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePostStartPtrType) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (i *workloadContainerLifecyclePostStartPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStart]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePostStartOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartOutput() WorkloadContainerLifecyclePostStartOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePostStartOutput) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePostStart) *WorkloadContainerLifecyclePostStart {
		return &v
	}).(WorkloadContainerLifecyclePostStartPtrOutput)
}

func (o WorkloadContainerLifecyclePostStartOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[WorkloadContainerLifecyclePostStart]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartOutput) Exec() WorkloadContainerLifecyclePostStartExecOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePostStart) WorkloadContainerLifecyclePostStartExec { return v.Exec }).(WorkloadContainerLifecyclePostStartExecOutput)
}

type WorkloadContainerLifecyclePostStartPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStart)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) ToWorkloadContainerLifecyclePostStartPtrOutput() WorkloadContainerLifecyclePostStartPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) ToWorkloadContainerLifecyclePostStartPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStart] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStart]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) Elem() WorkloadContainerLifecyclePostStartOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStart) WorkloadContainerLifecyclePostStart {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePostStart
		return ret
	}).(WorkloadContainerLifecyclePostStartOutput)
}

func (o WorkloadContainerLifecyclePostStartPtrOutput) Exec() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStart) *WorkloadContainerLifecyclePostStartExec {
		if v == nil {
			return nil
		}
		return &v.Exec
	}).(WorkloadContainerLifecyclePostStartExecPtrOutput)
}

type WorkloadContainerLifecyclePostStartExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerLifecyclePostStartExecInput is an input type that accepts WorkloadContainerLifecyclePostStartExecArgs and WorkloadContainerLifecyclePostStartExecOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartExecInput` via:
//
//	WorkloadContainerLifecyclePostStartExecArgs{...}
type WorkloadContainerLifecyclePostStartExecInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartExecOutput() WorkloadContainerLifecyclePostStartExecOutput
	ToWorkloadContainerLifecyclePostStartExecOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartExecOutput
}

type WorkloadContainerLifecyclePostStartExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerLifecyclePostStartExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecOutput() WorkloadContainerLifecyclePostStartExecOutput {
	return i.ToWorkloadContainerLifecyclePostStartExecOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartExecOutput)
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[WorkloadContainerLifecyclePostStartExec]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePostStartExecArgs) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartExecOutput).ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePostStartExecPtrInput is an input type that accepts WorkloadContainerLifecyclePostStartExecArgs, WorkloadContainerLifecyclePostStartExecPtr and WorkloadContainerLifecyclePostStartExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePostStartExecPtrInput` via:
//
//	        WorkloadContainerLifecyclePostStartExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePostStartExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput
	ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput
}

type workloadContainerLifecyclePostStartExecPtrType WorkloadContainerLifecyclePostStartExecArgs

func WorkloadContainerLifecyclePostStartExecPtr(v *WorkloadContainerLifecyclePostStartExecArgs) WorkloadContainerLifecyclePostStartExecPtrInput {
	return (*workloadContainerLifecyclePostStartExecPtrType)(v)
}

func (*workloadContainerLifecyclePostStartExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (i *workloadContainerLifecyclePostStartExecPtrType) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePostStartExecPtrType) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePostStartExecPtrOutput)
}

func (i *workloadContainerLifecyclePostStartExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStartExec]{
		OutputState: i.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePostStartExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecOutput() WorkloadContainerLifecyclePostStartExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o.ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePostStartExec) *WorkloadContainerLifecyclePostStartExec {
		return &v
	}).(WorkloadContainerLifecyclePostStartExecPtrOutput)
}

func (o WorkloadContainerLifecyclePostStartExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[WorkloadContainerLifecyclePostStartExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePostStartExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerLifecyclePostStartExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePostStartExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePostStartExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutput() WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) ToWorkloadContainerLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePostStartExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePostStartExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePostStartExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) Elem() WorkloadContainerLifecyclePostStartExecOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStartExec) WorkloadContainerLifecyclePostStartExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePostStartExec
		return ret
	}).(WorkloadContainerLifecyclePostStartExecOutput)
}

func (o WorkloadContainerLifecyclePostStartExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePostStartExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerLifecyclePreStop struct {
	Exec WorkloadContainerLifecyclePreStopExec `pulumi:"exec"`
}

// WorkloadContainerLifecyclePreStopInput is an input type that accepts WorkloadContainerLifecyclePreStopArgs and WorkloadContainerLifecyclePreStopOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopInput` via:
//
//	WorkloadContainerLifecyclePreStopArgs{...}
type WorkloadContainerLifecyclePreStopInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopOutput() WorkloadContainerLifecyclePreStopOutput
	ToWorkloadContainerLifecyclePreStopOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopOutput
}

type WorkloadContainerLifecyclePreStopArgs struct {
	Exec WorkloadContainerLifecyclePreStopExecInput `pulumi:"exec"`
}

func (WorkloadContainerLifecyclePreStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopOutput() WorkloadContainerLifecyclePreStopOutput {
	return i.ToWorkloadContainerLifecyclePreStopOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopOutput)
}

func (i WorkloadContainerLifecyclePreStopArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[WorkloadContainerLifecyclePreStop]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopArgs) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopOutput).ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePreStopPtrInput is an input type that accepts WorkloadContainerLifecyclePreStopArgs, WorkloadContainerLifecyclePreStopPtr and WorkloadContainerLifecyclePreStopPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopPtrInput` via:
//
//	        WorkloadContainerLifecyclePreStopArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePreStopPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput
	ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopPtrOutput
}

type workloadContainerLifecyclePreStopPtrType WorkloadContainerLifecyclePreStopArgs

func WorkloadContainerLifecyclePreStopPtr(v *WorkloadContainerLifecyclePreStopArgs) WorkloadContainerLifecyclePreStopPtrInput {
	return (*workloadContainerLifecyclePreStopPtrType)(v)
}

func (*workloadContainerLifecyclePreStopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (i *workloadContainerLifecyclePreStopPtrType) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePreStopPtrType) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopPtrOutput)
}

func (i *workloadContainerLifecyclePreStopPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStop]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePreStopOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopOutput() WorkloadContainerLifecyclePreStopOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePreStopOutput) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePreStop) *WorkloadContainerLifecyclePreStop {
		return &v
	}).(WorkloadContainerLifecyclePreStopPtrOutput)
}

func (o WorkloadContainerLifecyclePreStopOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[WorkloadContainerLifecyclePreStop]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopOutput) Exec() WorkloadContainerLifecyclePreStopExecOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePreStop) WorkloadContainerLifecyclePreStopExec { return v.Exec }).(WorkloadContainerLifecyclePreStopExecOutput)
}

type WorkloadContainerLifecyclePreStopPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStop)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) ToWorkloadContainerLifecyclePreStopPtrOutput() WorkloadContainerLifecyclePreStopPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) ToWorkloadContainerLifecyclePreStopPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStop] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStop]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) Elem() WorkloadContainerLifecyclePreStopOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStop) WorkloadContainerLifecyclePreStop {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePreStop
		return ret
	}).(WorkloadContainerLifecyclePreStopOutput)
}

func (o WorkloadContainerLifecyclePreStopPtrOutput) Exec() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStop) *WorkloadContainerLifecyclePreStopExec {
		if v == nil {
			return nil
		}
		return &v.Exec
	}).(WorkloadContainerLifecyclePreStopExecPtrOutput)
}

type WorkloadContainerLifecyclePreStopExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerLifecyclePreStopExecInput is an input type that accepts WorkloadContainerLifecyclePreStopExecArgs and WorkloadContainerLifecyclePreStopExecOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopExecInput` via:
//
//	WorkloadContainerLifecyclePreStopExecArgs{...}
type WorkloadContainerLifecyclePreStopExecInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopExecOutput() WorkloadContainerLifecyclePreStopExecOutput
	ToWorkloadContainerLifecyclePreStopExecOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopExecOutput
}

type WorkloadContainerLifecyclePreStopExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerLifecyclePreStopExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecOutput() WorkloadContainerLifecyclePreStopExecOutput {
	return i.ToWorkloadContainerLifecyclePreStopExecOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopExecOutput)
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[WorkloadContainerLifecyclePreStopExec]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLifecyclePreStopExecArgs) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopExecOutput).ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx)
}

// WorkloadContainerLifecyclePreStopExecPtrInput is an input type that accepts WorkloadContainerLifecyclePreStopExecArgs, WorkloadContainerLifecyclePreStopExecPtr and WorkloadContainerLifecyclePreStopExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLifecyclePreStopExecPtrInput` via:
//
//	        WorkloadContainerLifecyclePreStopExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLifecyclePreStopExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput
	ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput
}

type workloadContainerLifecyclePreStopExecPtrType WorkloadContainerLifecyclePreStopExecArgs

func WorkloadContainerLifecyclePreStopExecPtr(v *WorkloadContainerLifecyclePreStopExecArgs) WorkloadContainerLifecyclePreStopExecPtrInput {
	return (*workloadContainerLifecyclePreStopExecPtrType)(v)
}

func (*workloadContainerLifecyclePreStopExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (i *workloadContainerLifecyclePreStopExecPtrType) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return i.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLifecyclePreStopExecPtrType) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLifecyclePreStopExecPtrOutput)
}

func (i *workloadContainerLifecyclePreStopExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStopExec]{
		OutputState: i.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLifecyclePreStopExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecOutput() WorkloadContainerLifecyclePreStopExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o.ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLifecyclePreStopExec) *WorkloadContainerLifecyclePreStopExec {
		return &v
	}).(WorkloadContainerLifecyclePreStopExecPtrOutput)
}

func (o WorkloadContainerLifecyclePreStopExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[WorkloadContainerLifecyclePreStopExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerLifecyclePreStopExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerLifecyclePreStopExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLifecyclePreStopExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLifecyclePreStopExec)(nil)).Elem()
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutput() WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) ToWorkloadContainerLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLifecyclePreStopExecPtrOutput {
	return o
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLifecyclePreStopExec] {
	return pulumix.Output[*WorkloadContainerLifecyclePreStopExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) Elem() WorkloadContainerLifecyclePreStopExecOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStopExec) WorkloadContainerLifecyclePreStopExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLifecyclePreStopExec
		return ret
	}).(WorkloadContainerLifecyclePreStopExecOutput)
}

func (o WorkloadContainerLifecyclePreStopExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerLifecyclePreStopExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerLivenessProbe struct {
	Exec                *WorkloadContainerLivenessProbeExec      `pulumi:"exec"`
	FailureThreshold    *int                                     `pulumi:"failureThreshold"`
	Grpc                *WorkloadContainerLivenessProbeGrpc      `pulumi:"grpc"`
	HttpGet             *WorkloadContainerLivenessProbeHttpGet   `pulumi:"httpGet"`
	InitialDelaySeconds *int                                     `pulumi:"initialDelaySeconds"`
	PeriodSeconds       *int                                     `pulumi:"periodSeconds"`
	SuccessThreshold    *int                                     `pulumi:"successThreshold"`
	TcpSocket           *WorkloadContainerLivenessProbeTcpSocket `pulumi:"tcpSocket"`
	TimeoutSeconds      *int                                     `pulumi:"timeoutSeconds"`
}

// WorkloadContainerLivenessProbeInput is an input type that accepts WorkloadContainerLivenessProbeArgs and WorkloadContainerLivenessProbeOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeInput` via:
//
//	WorkloadContainerLivenessProbeArgs{...}
type WorkloadContainerLivenessProbeInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeOutput() WorkloadContainerLivenessProbeOutput
	ToWorkloadContainerLivenessProbeOutputWithContext(context.Context) WorkloadContainerLivenessProbeOutput
}

type WorkloadContainerLivenessProbeArgs struct {
	Exec                WorkloadContainerLivenessProbeExecPtrInput      `pulumi:"exec"`
	FailureThreshold    pulumi.IntPtrInput                              `pulumi:"failureThreshold"`
	Grpc                WorkloadContainerLivenessProbeGrpcPtrInput      `pulumi:"grpc"`
	HttpGet             WorkloadContainerLivenessProbeHttpGetPtrInput   `pulumi:"httpGet"`
	InitialDelaySeconds pulumi.IntPtrInput                              `pulumi:"initialDelaySeconds"`
	PeriodSeconds       pulumi.IntPtrInput                              `pulumi:"periodSeconds"`
	SuccessThreshold    pulumi.IntPtrInput                              `pulumi:"successThreshold"`
	TcpSocket           WorkloadContainerLivenessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	TimeoutSeconds      pulumi.IntPtrInput                              `pulumi:"timeoutSeconds"`
}

func (WorkloadContainerLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbeOutput() WorkloadContainerLivenessProbeOutput {
	return i.ToWorkloadContainerLivenessProbeOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbeOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeOutput)
}

func (i WorkloadContainerLivenessProbeArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbe] {
	return pulumix.Output[WorkloadContainerLivenessProbe]{
		OutputState: i.ToWorkloadContainerLivenessProbeOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return i.ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeArgs) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeOutput).ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbePtrInput is an input type that accepts WorkloadContainerLivenessProbeArgs, WorkloadContainerLivenessProbePtr and WorkloadContainerLivenessProbePtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbePtrInput` via:
//
//	        WorkloadContainerLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbePtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput
	ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Context) WorkloadContainerLivenessProbePtrOutput
}

type workloadContainerLivenessProbePtrType WorkloadContainerLivenessProbeArgs

func WorkloadContainerLivenessProbePtr(v *WorkloadContainerLivenessProbeArgs) WorkloadContainerLivenessProbePtrInput {
	return (*workloadContainerLivenessProbePtrType)(v)
}

func (*workloadContainerLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (i *workloadContainerLivenessProbePtrType) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return i.ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbePtrType) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbePtrOutput)
}

func (i *workloadContainerLivenessProbePtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbe] {
	return pulumix.Output[*WorkloadContainerLivenessProbe]{
		OutputState: i.ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbeOutput() WorkloadContainerLivenessProbeOutput {
	return o
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbeOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeOutput {
	return o
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return o.ToWorkloadContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeOutput) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbe {
		return &v
	}).(WorkloadContainerLivenessProbePtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbe] {
	return pulumix.Output[WorkloadContainerLivenessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeOutput) Exec() WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeExec { return v.Exec }).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) Grpc() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeGrpc { return v.Grpc }).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) HttpGet() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeHttpGet { return v.HttpGet }).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) TcpSocket() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeTcpSocket { return v.TcpSocket }).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbe)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbePtrOutput) ToWorkloadContainerLivenessProbePtrOutput() WorkloadContainerLivenessProbePtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbePtrOutput) ToWorkloadContainerLivenessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbePtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbe] {
	return pulumix.Output[*WorkloadContainerLivenessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbePtrOutput) Elem() WorkloadContainerLivenessProbeOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) WorkloadContainerLivenessProbe {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbe
		return ret
	}).(WorkloadContainerLivenessProbeOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) Exec() WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) Grpc() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) HttpGet() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) TcpSocket() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *WorkloadContainerLivenessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerLivenessProbeExecInput is an input type that accepts WorkloadContainerLivenessProbeExecArgs and WorkloadContainerLivenessProbeExecOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeExecInput` via:
//
//	WorkloadContainerLivenessProbeExecArgs{...}
type WorkloadContainerLivenessProbeExecInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeExecOutput() WorkloadContainerLivenessProbeExecOutput
	ToWorkloadContainerLivenessProbeExecOutputWithContext(context.Context) WorkloadContainerLivenessProbeExecOutput
}

type WorkloadContainerLivenessProbeExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerLivenessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecOutput() WorkloadContainerLivenessProbeExecOutput {
	return i.ToWorkloadContainerLivenessProbeExecOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeExecOutput)
}

func (i WorkloadContainerLivenessProbeExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[WorkloadContainerLivenessProbeExec]{
		OutputState: i.ToWorkloadContainerLivenessProbeExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return i.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeExecArgs) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeExecOutput).ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeExecPtrInput is an input type that accepts WorkloadContainerLivenessProbeExecArgs, WorkloadContainerLivenessProbeExecPtr and WorkloadContainerLivenessProbeExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeExecPtrInput` via:
//
//	        WorkloadContainerLivenessProbeExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput
	ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeExecPtrOutput
}

type workloadContainerLivenessProbeExecPtrType WorkloadContainerLivenessProbeExecArgs

func WorkloadContainerLivenessProbeExecPtr(v *WorkloadContainerLivenessProbeExecArgs) WorkloadContainerLivenessProbeExecPtrInput {
	return (*workloadContainerLivenessProbeExecPtrType)(v)
}

func (*workloadContainerLivenessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeExecPtrType) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return i.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeExecPtrType) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (i *workloadContainerLivenessProbeExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[*WorkloadContainerLivenessProbeExec]{
		OutputState: i.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecOutput() WorkloadContainerLivenessProbeExecOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeExecOutput) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeExec) *WorkloadContainerLivenessProbeExec {
		return &v
	}).(WorkloadContainerLivenessProbeExecPtrOutput)
}

func (o WorkloadContainerLivenessProbeExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[WorkloadContainerLivenessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerLivenessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) ToWorkloadContainerLivenessProbeExecPtrOutput() WorkloadContainerLivenessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) ToWorkloadContainerLivenessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeExec] {
	return pulumix.Output[*WorkloadContainerLivenessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) Elem() WorkloadContainerLivenessProbeExecOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeExec) WorkloadContainerLivenessProbeExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeExec
		return ret
	}).(WorkloadContainerLivenessProbeExecOutput)
}

func (o WorkloadContainerLivenessProbeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerLivenessProbeGrpc struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerLivenessProbeGrpcInput is an input type that accepts WorkloadContainerLivenessProbeGrpcArgs and WorkloadContainerLivenessProbeGrpcOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeGrpcInput` via:
//
//	WorkloadContainerLivenessProbeGrpcArgs{...}
type WorkloadContainerLivenessProbeGrpcInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeGrpcOutput() WorkloadContainerLivenessProbeGrpcOutput
	ToWorkloadContainerLivenessProbeGrpcOutputWithContext(context.Context) WorkloadContainerLivenessProbeGrpcOutput
}

type WorkloadContainerLivenessProbeGrpcArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerLivenessProbeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcOutput() WorkloadContainerLivenessProbeGrpcOutput {
	return i.ToWorkloadContainerLivenessProbeGrpcOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeGrpcOutput)
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[WorkloadContainerLivenessProbeGrpc]{
		OutputState: i.ToWorkloadContainerLivenessProbeGrpcOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeGrpcArgs) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeGrpcOutput).ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeGrpcPtrInput is an input type that accepts WorkloadContainerLivenessProbeGrpcArgs, WorkloadContainerLivenessProbeGrpcPtr and WorkloadContainerLivenessProbeGrpcPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeGrpcPtrInput` via:
//
//	        WorkloadContainerLivenessProbeGrpcArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeGrpcPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput
	ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput
}

type workloadContainerLivenessProbeGrpcPtrType WorkloadContainerLivenessProbeGrpcArgs

func WorkloadContainerLivenessProbeGrpcPtr(v *WorkloadContainerLivenessProbeGrpcArgs) WorkloadContainerLivenessProbeGrpcPtrInput {
	return (*workloadContainerLivenessProbeGrpcPtrType)(v)
}

func (*workloadContainerLivenessProbeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeGrpcPtrType) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeGrpcPtrType) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (i *workloadContainerLivenessProbeGrpcPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerLivenessProbeGrpc]{
		OutputState: i.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeGrpcOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcOutput() WorkloadContainerLivenessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeGrpc) *WorkloadContainerLivenessProbeGrpc {
		return &v
	}).(WorkloadContainerLivenessProbeGrpcPtrOutput)
}

func (o WorkloadContainerLivenessProbeGrpcOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[WorkloadContainerLivenessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeGrpcOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeGrpc) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeGrpcPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutput() WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) ToWorkloadContainerLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerLivenessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) Elem() WorkloadContainerLivenessProbeGrpcOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeGrpc) WorkloadContainerLivenessProbeGrpc {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeGrpc
		return ret
	}).(WorkloadContainerLivenessProbeGrpcOutput)
}

func (o WorkloadContainerLivenessProbeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeGrpc) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeHttpGet struct {
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	Path        *string           `pulumi:"path"`
	Port        *int              `pulumi:"port"`
	Scheme      *string           `pulumi:"scheme"`
}

// WorkloadContainerLivenessProbeHttpGetInput is an input type that accepts WorkloadContainerLivenessProbeHttpGetArgs and WorkloadContainerLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeHttpGetInput` via:
//
//	WorkloadContainerLivenessProbeHttpGetArgs{...}
type WorkloadContainerLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeHttpGetOutput() WorkloadContainerLivenessProbeHttpGetOutput
	ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(context.Context) WorkloadContainerLivenessProbeHttpGetOutput
}

type WorkloadContainerLivenessProbeHttpGetArgs struct {
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	Path        pulumi.StringPtrInput `pulumi:"path"`
	Port        pulumi.IntPtrInput    `pulumi:"port"`
	Scheme      pulumi.StringPtrInput `pulumi:"scheme"`
}

func (WorkloadContainerLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetOutput() WorkloadContainerLivenessProbeHttpGetOutput {
	return i.ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeHttpGetOutput)
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerLivenessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeHttpGetArgs) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeHttpGetOutput).ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeHttpGetPtrInput is an input type that accepts WorkloadContainerLivenessProbeHttpGetArgs, WorkloadContainerLivenessProbeHttpGetPtr and WorkloadContainerLivenessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeHttpGetPtrInput` via:
//
//	        WorkloadContainerLivenessProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput
	ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput
}

type workloadContainerLivenessProbeHttpGetPtrType WorkloadContainerLivenessProbeHttpGetArgs

func WorkloadContainerLivenessProbeHttpGetPtr(v *WorkloadContainerLivenessProbeHttpGetArgs) WorkloadContainerLivenessProbeHttpGetPtrInput {
	return (*workloadContainerLivenessProbeHttpGetPtrType)(v)
}

func (*workloadContainerLivenessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeHttpGetPtrType) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeHttpGetPtrType) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (i *workloadContainerLivenessProbeHttpGetPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerLivenessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetOutput() WorkloadContainerLivenessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeHttpGet) *WorkloadContainerLivenessProbeHttpGet {
		return &v
	}).(WorkloadContainerLivenessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerLivenessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type WorkloadContainerLivenessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutput() WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) ToWorkloadContainerLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerLivenessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Elem() WorkloadContainerLivenessProbeHttpGetOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) WorkloadContainerLivenessProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeHttpGet
		return ret
	}).(WorkloadContainerLivenessProbeHttpGetOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(pulumi.StringMapOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerLivenessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type WorkloadContainerLivenessProbeTcpSocket struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerLivenessProbeTcpSocketInput is an input type that accepts WorkloadContainerLivenessProbeTcpSocketArgs and WorkloadContainerLivenessProbeTcpSocketOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeTcpSocketInput` via:
//
//	WorkloadContainerLivenessProbeTcpSocketArgs{...}
type WorkloadContainerLivenessProbeTcpSocketInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeTcpSocketOutput() WorkloadContainerLivenessProbeTcpSocketOutput
	ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(context.Context) WorkloadContainerLivenessProbeTcpSocketOutput
}

type WorkloadContainerLivenessProbeTcpSocketArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerLivenessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketOutput() WorkloadContainerLivenessProbeTcpSocketOutput {
	return i.ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeTcpSocketOutput)
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerLivenessProbeTcpSocketArgs) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeTcpSocketOutput).ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx)
}

// WorkloadContainerLivenessProbeTcpSocketPtrInput is an input type that accepts WorkloadContainerLivenessProbeTcpSocketArgs, WorkloadContainerLivenessProbeTcpSocketPtr and WorkloadContainerLivenessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerLivenessProbeTcpSocketPtrInput` via:
//
//	        WorkloadContainerLivenessProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerLivenessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput
	ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput
}

type workloadContainerLivenessProbeTcpSocketPtrType WorkloadContainerLivenessProbeTcpSocketArgs

func WorkloadContainerLivenessProbeTcpSocketPtr(v *WorkloadContainerLivenessProbeTcpSocketArgs) WorkloadContainerLivenessProbeTcpSocketPtrInput {
	return (*workloadContainerLivenessProbeTcpSocketPtrType)(v)
}

func (*workloadContainerLivenessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (i *workloadContainerLivenessProbeTcpSocketPtrType) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *workloadContainerLivenessProbeTcpSocketPtrType) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (i *workloadContainerLivenessProbeTcpSocketPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerLivenessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketOutput() WorkloadContainerLivenessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerLivenessProbeTcpSocket) *WorkloadContainerLivenessProbeTcpSocket {
		return &v
	}).(WorkloadContainerLivenessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeTcpSocketOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerLivenessProbeTcpSocket) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerLivenessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerLivenessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerLivenessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutput() WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) ToWorkloadContainerLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerLivenessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) Elem() WorkloadContainerLivenessProbeTcpSocketOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeTcpSocket) WorkloadContainerLivenessProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerLivenessProbeTcpSocket
		return ret
	}).(WorkloadContainerLivenessProbeTcpSocketOutput)
}

func (o WorkloadContainerLivenessProbeTcpSocketPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerLivenessProbeTcpSocket) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerMetrics struct {
	Path string `pulumi:"path"`
	Port int    `pulumi:"port"`
}

// WorkloadContainerMetricsInput is an input type that accepts WorkloadContainerMetricsArgs and WorkloadContainerMetricsOutput values.
// You can construct a concrete instance of `WorkloadContainerMetricsInput` via:
//
//	WorkloadContainerMetricsArgs{...}
type WorkloadContainerMetricsInput interface {
	pulumi.Input

	ToWorkloadContainerMetricsOutput() WorkloadContainerMetricsOutput
	ToWorkloadContainerMetricsOutputWithContext(context.Context) WorkloadContainerMetricsOutput
}

type WorkloadContainerMetricsArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
	Port pulumi.IntInput    `pulumi:"port"`
}

func (WorkloadContainerMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerMetrics)(nil)).Elem()
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsOutput() WorkloadContainerMetricsOutput {
	return i.ToWorkloadContainerMetricsOutputWithContext(context.Background())
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsOutputWithContext(ctx context.Context) WorkloadContainerMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerMetricsOutput)
}

func (i WorkloadContainerMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerMetrics] {
	return pulumix.Output[WorkloadContainerMetrics]{
		OutputState: i.ToWorkloadContainerMetricsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return i.ToWorkloadContainerMetricsPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerMetricsArgs) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerMetricsOutput).ToWorkloadContainerMetricsPtrOutputWithContext(ctx)
}

// WorkloadContainerMetricsPtrInput is an input type that accepts WorkloadContainerMetricsArgs, WorkloadContainerMetricsPtr and WorkloadContainerMetricsPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerMetricsPtrInput` via:
//
//	        WorkloadContainerMetricsArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerMetricsPtrInput interface {
	pulumi.Input

	ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput
	ToWorkloadContainerMetricsPtrOutputWithContext(context.Context) WorkloadContainerMetricsPtrOutput
}

type workloadContainerMetricsPtrType WorkloadContainerMetricsArgs

func WorkloadContainerMetricsPtr(v *WorkloadContainerMetricsArgs) WorkloadContainerMetricsPtrInput {
	return (*workloadContainerMetricsPtrType)(v)
}

func (*workloadContainerMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerMetrics)(nil)).Elem()
}

func (i *workloadContainerMetricsPtrType) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return i.ToWorkloadContainerMetricsPtrOutputWithContext(context.Background())
}

func (i *workloadContainerMetricsPtrType) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerMetricsPtrOutput)
}

func (i *workloadContainerMetricsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerMetrics] {
	return pulumix.Output[*WorkloadContainerMetrics]{
		OutputState: i.ToWorkloadContainerMetricsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerMetricsOutput struct{ *pulumi.OutputState }

func (WorkloadContainerMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerMetrics)(nil)).Elem()
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsOutput() WorkloadContainerMetricsOutput {
	return o
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsOutputWithContext(ctx context.Context) WorkloadContainerMetricsOutput {
	return o
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return o.ToWorkloadContainerMetricsPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerMetricsOutput) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerMetrics) *WorkloadContainerMetrics {
		return &v
	}).(WorkloadContainerMetricsPtrOutput)
}

func (o WorkloadContainerMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerMetrics] {
	return pulumix.Output[WorkloadContainerMetrics]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerMetricsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerMetrics) string { return v.Path }).(pulumi.StringOutput)
}

func (o WorkloadContainerMetricsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadContainerMetrics) int { return v.Port }).(pulumi.IntOutput)
}

type WorkloadContainerMetricsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerMetrics)(nil)).Elem()
}

func (o WorkloadContainerMetricsPtrOutput) ToWorkloadContainerMetricsPtrOutput() WorkloadContainerMetricsPtrOutput {
	return o
}

func (o WorkloadContainerMetricsPtrOutput) ToWorkloadContainerMetricsPtrOutputWithContext(ctx context.Context) WorkloadContainerMetricsPtrOutput {
	return o
}

func (o WorkloadContainerMetricsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerMetrics] {
	return pulumix.Output[*WorkloadContainerMetrics]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerMetricsPtrOutput) Elem() WorkloadContainerMetricsOutput {
	return o.ApplyT(func(v *WorkloadContainerMetrics) WorkloadContainerMetrics {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerMetrics
		return ret
	}).(WorkloadContainerMetricsOutput)
}

func (o WorkloadContainerMetricsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerMetrics) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerMetricsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerMetrics) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerPort struct {
	Number   int     `pulumi:"number"`
	Protocol *string `pulumi:"protocol"`
}

// WorkloadContainerPortInput is an input type that accepts WorkloadContainerPortArgs and WorkloadContainerPortOutput values.
// You can construct a concrete instance of `WorkloadContainerPortInput` via:
//
//	WorkloadContainerPortArgs{...}
type WorkloadContainerPortInput interface {
	pulumi.Input

	ToWorkloadContainerPortOutput() WorkloadContainerPortOutput
	ToWorkloadContainerPortOutputWithContext(context.Context) WorkloadContainerPortOutput
}

type WorkloadContainerPortArgs struct {
	Number   pulumi.IntInput       `pulumi:"number"`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WorkloadContainerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerPort)(nil)).Elem()
}

func (i WorkloadContainerPortArgs) ToWorkloadContainerPortOutput() WorkloadContainerPortOutput {
	return i.ToWorkloadContainerPortOutputWithContext(context.Background())
}

func (i WorkloadContainerPortArgs) ToWorkloadContainerPortOutputWithContext(ctx context.Context) WorkloadContainerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerPortOutput)
}

func (i WorkloadContainerPortArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerPort] {
	return pulumix.Output[WorkloadContainerPort]{
		OutputState: i.ToWorkloadContainerPortOutputWithContext(ctx).OutputState,
	}
}

// WorkloadContainerPortArrayInput is an input type that accepts WorkloadContainerPortArray and WorkloadContainerPortArrayOutput values.
// You can construct a concrete instance of `WorkloadContainerPortArrayInput` via:
//
//	WorkloadContainerPortArray{ WorkloadContainerPortArgs{...} }
type WorkloadContainerPortArrayInput interface {
	pulumi.Input

	ToWorkloadContainerPortArrayOutput() WorkloadContainerPortArrayOutput
	ToWorkloadContainerPortArrayOutputWithContext(context.Context) WorkloadContainerPortArrayOutput
}

type WorkloadContainerPortArray []WorkloadContainerPortInput

func (WorkloadContainerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerPort)(nil)).Elem()
}

func (i WorkloadContainerPortArray) ToWorkloadContainerPortArrayOutput() WorkloadContainerPortArrayOutput {
	return i.ToWorkloadContainerPortArrayOutputWithContext(context.Background())
}

func (i WorkloadContainerPortArray) ToWorkloadContainerPortArrayOutputWithContext(ctx context.Context) WorkloadContainerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerPortArrayOutput)
}

func (i WorkloadContainerPortArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerPort] {
	return pulumix.Output[[]WorkloadContainerPort]{
		OutputState: i.ToWorkloadContainerPortArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerPortOutput struct{ *pulumi.OutputState }

func (WorkloadContainerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerPort)(nil)).Elem()
}

func (o WorkloadContainerPortOutput) ToWorkloadContainerPortOutput() WorkloadContainerPortOutput {
	return o
}

func (o WorkloadContainerPortOutput) ToWorkloadContainerPortOutputWithContext(ctx context.Context) WorkloadContainerPortOutput {
	return o
}

func (o WorkloadContainerPortOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerPort] {
	return pulumix.Output[WorkloadContainerPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerPortOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadContainerPort) int { return v.Number }).(pulumi.IntOutput)
}

func (o WorkloadContainerPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WorkloadContainerPortArrayOutput struct{ *pulumi.OutputState }

func (WorkloadContainerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerPort)(nil)).Elem()
}

func (o WorkloadContainerPortArrayOutput) ToWorkloadContainerPortArrayOutput() WorkloadContainerPortArrayOutput {
	return o
}

func (o WorkloadContainerPortArrayOutput) ToWorkloadContainerPortArrayOutputWithContext(ctx context.Context) WorkloadContainerPortArrayOutput {
	return o
}

func (o WorkloadContainerPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerPort] {
	return pulumix.Output[[]WorkloadContainerPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerPortArrayOutput) Index(i pulumi.IntInput) WorkloadContainerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadContainerPort {
		return vs[0].([]WorkloadContainerPort)[vs[1].(int)]
	}).(WorkloadContainerPortOutput)
}

type WorkloadContainerReadinessProbe struct {
	Exec                *WorkloadContainerReadinessProbeExec      `pulumi:"exec"`
	FailureThreshold    *int                                      `pulumi:"failureThreshold"`
	Grpc                *WorkloadContainerReadinessProbeGrpc      `pulumi:"grpc"`
	HttpGet             *WorkloadContainerReadinessProbeHttpGet   `pulumi:"httpGet"`
	InitialDelaySeconds *int                                      `pulumi:"initialDelaySeconds"`
	PeriodSeconds       *int                                      `pulumi:"periodSeconds"`
	SuccessThreshold    *int                                      `pulumi:"successThreshold"`
	TcpSocket           *WorkloadContainerReadinessProbeTcpSocket `pulumi:"tcpSocket"`
	TimeoutSeconds      *int                                      `pulumi:"timeoutSeconds"`
}

// WorkloadContainerReadinessProbeInput is an input type that accepts WorkloadContainerReadinessProbeArgs and WorkloadContainerReadinessProbeOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeInput` via:
//
//	WorkloadContainerReadinessProbeArgs{...}
type WorkloadContainerReadinessProbeInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeOutput() WorkloadContainerReadinessProbeOutput
	ToWorkloadContainerReadinessProbeOutputWithContext(context.Context) WorkloadContainerReadinessProbeOutput
}

type WorkloadContainerReadinessProbeArgs struct {
	Exec                WorkloadContainerReadinessProbeExecPtrInput      `pulumi:"exec"`
	FailureThreshold    pulumi.IntPtrInput                               `pulumi:"failureThreshold"`
	Grpc                WorkloadContainerReadinessProbeGrpcPtrInput      `pulumi:"grpc"`
	HttpGet             WorkloadContainerReadinessProbeHttpGetPtrInput   `pulumi:"httpGet"`
	InitialDelaySeconds pulumi.IntPtrInput                               `pulumi:"initialDelaySeconds"`
	PeriodSeconds       pulumi.IntPtrInput                               `pulumi:"periodSeconds"`
	SuccessThreshold    pulumi.IntPtrInput                               `pulumi:"successThreshold"`
	TcpSocket           WorkloadContainerReadinessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	TimeoutSeconds      pulumi.IntPtrInput                               `pulumi:"timeoutSeconds"`
}

func (WorkloadContainerReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbeOutput() WorkloadContainerReadinessProbeOutput {
	return i.ToWorkloadContainerReadinessProbeOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbeOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeOutput)
}

func (i WorkloadContainerReadinessProbeArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbe] {
	return pulumix.Output[WorkloadContainerReadinessProbe]{
		OutputState: i.ToWorkloadContainerReadinessProbeOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return i.ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeArgs) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeOutput).ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbePtrInput is an input type that accepts WorkloadContainerReadinessProbeArgs, WorkloadContainerReadinessProbePtr and WorkloadContainerReadinessProbePtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbePtrInput` via:
//
//	        WorkloadContainerReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbePtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput
	ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Context) WorkloadContainerReadinessProbePtrOutput
}

type workloadContainerReadinessProbePtrType WorkloadContainerReadinessProbeArgs

func WorkloadContainerReadinessProbePtr(v *WorkloadContainerReadinessProbeArgs) WorkloadContainerReadinessProbePtrInput {
	return (*workloadContainerReadinessProbePtrType)(v)
}

func (*workloadContainerReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (i *workloadContainerReadinessProbePtrType) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return i.ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbePtrType) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbePtrOutput)
}

func (i *workloadContainerReadinessProbePtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbe] {
	return pulumix.Output[*WorkloadContainerReadinessProbe]{
		OutputState: i.ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbeOutput() WorkloadContainerReadinessProbeOutput {
	return o
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbeOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeOutput {
	return o
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return o.ToWorkloadContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeOutput) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbe {
		return &v
	}).(WorkloadContainerReadinessProbePtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbe] {
	return pulumix.Output[WorkloadContainerReadinessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeOutput) Exec() WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeExec { return v.Exec }).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) Grpc() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeGrpc { return v.Grpc }).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) HttpGet() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeHttpGet { return v.HttpGet }).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) TcpSocket() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeTcpSocket { return v.TcpSocket }).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbe)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbePtrOutput) ToWorkloadContainerReadinessProbePtrOutput() WorkloadContainerReadinessProbePtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbePtrOutput) ToWorkloadContainerReadinessProbePtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbePtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbe] {
	return pulumix.Output[*WorkloadContainerReadinessProbe]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbePtrOutput) Elem() WorkloadContainerReadinessProbeOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) WorkloadContainerReadinessProbe {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbe
		return ret
	}).(WorkloadContainerReadinessProbeOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) Exec() WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) Grpc() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) HttpGet() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) TcpSocket() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *WorkloadContainerReadinessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeExec struct {
	Commands []string `pulumi:"commands"`
}

// WorkloadContainerReadinessProbeExecInput is an input type that accepts WorkloadContainerReadinessProbeExecArgs and WorkloadContainerReadinessProbeExecOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeExecInput` via:
//
//	WorkloadContainerReadinessProbeExecArgs{...}
type WorkloadContainerReadinessProbeExecInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeExecOutput() WorkloadContainerReadinessProbeExecOutput
	ToWorkloadContainerReadinessProbeExecOutputWithContext(context.Context) WorkloadContainerReadinessProbeExecOutput
}

type WorkloadContainerReadinessProbeExecArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (WorkloadContainerReadinessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecOutput() WorkloadContainerReadinessProbeExecOutput {
	return i.ToWorkloadContainerReadinessProbeExecOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeExecOutput)
}

func (i WorkloadContainerReadinessProbeExecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[WorkloadContainerReadinessProbeExec]{
		OutputState: i.ToWorkloadContainerReadinessProbeExecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return i.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeExecArgs) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeExecOutput).ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeExecPtrInput is an input type that accepts WorkloadContainerReadinessProbeExecArgs, WorkloadContainerReadinessProbeExecPtr and WorkloadContainerReadinessProbeExecPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeExecPtrInput` via:
//
//	        WorkloadContainerReadinessProbeExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeExecPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput
	ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeExecPtrOutput
}

type workloadContainerReadinessProbeExecPtrType WorkloadContainerReadinessProbeExecArgs

func WorkloadContainerReadinessProbeExecPtr(v *WorkloadContainerReadinessProbeExecArgs) WorkloadContainerReadinessProbeExecPtrInput {
	return (*workloadContainerReadinessProbeExecPtrType)(v)
}

func (*workloadContainerReadinessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeExecPtrType) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return i.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeExecPtrType) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (i *workloadContainerReadinessProbeExecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[*WorkloadContainerReadinessProbeExec]{
		OutputState: i.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeExecOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecOutput() WorkloadContainerReadinessProbeExecOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeExecOutput) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeExec) *WorkloadContainerReadinessProbeExec {
		return &v
	}).(WorkloadContainerReadinessProbeExecPtrOutput)
}

func (o WorkloadContainerReadinessProbeExecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[WorkloadContainerReadinessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type WorkloadContainerReadinessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeExec)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) ToWorkloadContainerReadinessProbeExecPtrOutput() WorkloadContainerReadinessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) ToWorkloadContainerReadinessProbeExecPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeExecPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeExec] {
	return pulumix.Output[*WorkloadContainerReadinessProbeExec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) Elem() WorkloadContainerReadinessProbeExecOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeExec) WorkloadContainerReadinessProbeExec {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeExec
		return ret
	}).(WorkloadContainerReadinessProbeExecOutput)
}

func (o WorkloadContainerReadinessProbeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type WorkloadContainerReadinessProbeGrpc struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerReadinessProbeGrpcInput is an input type that accepts WorkloadContainerReadinessProbeGrpcArgs and WorkloadContainerReadinessProbeGrpcOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeGrpcInput` via:
//
//	WorkloadContainerReadinessProbeGrpcArgs{...}
type WorkloadContainerReadinessProbeGrpcInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeGrpcOutput() WorkloadContainerReadinessProbeGrpcOutput
	ToWorkloadContainerReadinessProbeGrpcOutputWithContext(context.Context) WorkloadContainerReadinessProbeGrpcOutput
}

type WorkloadContainerReadinessProbeGrpcArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerReadinessProbeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcOutput() WorkloadContainerReadinessProbeGrpcOutput {
	return i.ToWorkloadContainerReadinessProbeGrpcOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeGrpcOutput)
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[WorkloadContainerReadinessProbeGrpc]{
		OutputState: i.ToWorkloadContainerReadinessProbeGrpcOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeGrpcArgs) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeGrpcOutput).ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeGrpcPtrInput is an input type that accepts WorkloadContainerReadinessProbeGrpcArgs, WorkloadContainerReadinessProbeGrpcPtr and WorkloadContainerReadinessProbeGrpcPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeGrpcPtrInput` via:
//
//	        WorkloadContainerReadinessProbeGrpcArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeGrpcPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput
	ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput
}

type workloadContainerReadinessProbeGrpcPtrType WorkloadContainerReadinessProbeGrpcArgs

func WorkloadContainerReadinessProbeGrpcPtr(v *WorkloadContainerReadinessProbeGrpcArgs) WorkloadContainerReadinessProbeGrpcPtrInput {
	return (*workloadContainerReadinessProbeGrpcPtrType)(v)
}

func (*workloadContainerReadinessProbeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeGrpcPtrType) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return i.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeGrpcPtrType) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (i *workloadContainerReadinessProbeGrpcPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerReadinessProbeGrpc]{
		OutputState: i.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeGrpcOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcOutput() WorkloadContainerReadinessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeGrpc) *WorkloadContainerReadinessProbeGrpc {
		return &v
	}).(WorkloadContainerReadinessProbeGrpcPtrOutput)
}

func (o WorkloadContainerReadinessProbeGrpcOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[WorkloadContainerReadinessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeGrpcOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeGrpc) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeGrpcPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeGrpc)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutput() WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) ToWorkloadContainerReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeGrpcPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeGrpc] {
	return pulumix.Output[*WorkloadContainerReadinessProbeGrpc]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) Elem() WorkloadContainerReadinessProbeGrpcOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeGrpc) WorkloadContainerReadinessProbeGrpc {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeGrpc
		return ret
	}).(WorkloadContainerReadinessProbeGrpcOutput)
}

func (o WorkloadContainerReadinessProbeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeGrpc) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeHttpGet struct {
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	Path        *string           `pulumi:"path"`
	Port        *int              `pulumi:"port"`
	Scheme      *string           `pulumi:"scheme"`
}

// WorkloadContainerReadinessProbeHttpGetInput is an input type that accepts WorkloadContainerReadinessProbeHttpGetArgs and WorkloadContainerReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeHttpGetInput` via:
//
//	WorkloadContainerReadinessProbeHttpGetArgs{...}
type WorkloadContainerReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeHttpGetOutput() WorkloadContainerReadinessProbeHttpGetOutput
	ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(context.Context) WorkloadContainerReadinessProbeHttpGetOutput
}

type WorkloadContainerReadinessProbeHttpGetArgs struct {
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	Path        pulumi.StringPtrInput `pulumi:"path"`
	Port        pulumi.IntPtrInput    `pulumi:"port"`
	Scheme      pulumi.StringPtrInput `pulumi:"scheme"`
}

func (WorkloadContainerReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetOutput() WorkloadContainerReadinessProbeHttpGetOutput {
	return i.ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeHttpGetOutput)
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerReadinessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeHttpGetArgs) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeHttpGetOutput).ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeHttpGetPtrInput is an input type that accepts WorkloadContainerReadinessProbeHttpGetArgs, WorkloadContainerReadinessProbeHttpGetPtr and WorkloadContainerReadinessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeHttpGetPtrInput` via:
//
//	        WorkloadContainerReadinessProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput
	ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput
}

type workloadContainerReadinessProbeHttpGetPtrType WorkloadContainerReadinessProbeHttpGetArgs

func WorkloadContainerReadinessProbeHttpGetPtr(v *WorkloadContainerReadinessProbeHttpGetArgs) WorkloadContainerReadinessProbeHttpGetPtrInput {
	return (*workloadContainerReadinessProbeHttpGetPtrType)(v)
}

func (*workloadContainerReadinessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeHttpGetPtrType) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return i.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeHttpGetPtrType) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (i *workloadContainerReadinessProbeHttpGetPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerReadinessProbeHttpGet]{
		OutputState: i.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetOutput() WorkloadContainerReadinessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeHttpGet) *WorkloadContainerReadinessProbeHttpGet {
		return &v
	}).(WorkloadContainerReadinessProbeHttpGetPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[WorkloadContainerReadinessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type WorkloadContainerReadinessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutput() WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) ToWorkloadContainerReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeHttpGet] {
	return pulumix.Output[*WorkloadContainerReadinessProbeHttpGet]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Elem() WorkloadContainerReadinessProbeHttpGetOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) WorkloadContainerReadinessProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeHttpGet
		return ret
	}).(WorkloadContainerReadinessProbeHttpGetOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(pulumi.StringMapOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadContainerReadinessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type WorkloadContainerReadinessProbeTcpSocket struct {
	Port *int `pulumi:"port"`
}

// WorkloadContainerReadinessProbeTcpSocketInput is an input type that accepts WorkloadContainerReadinessProbeTcpSocketArgs and WorkloadContainerReadinessProbeTcpSocketOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeTcpSocketInput` via:
//
//	WorkloadContainerReadinessProbeTcpSocketArgs{...}
type WorkloadContainerReadinessProbeTcpSocketInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeTcpSocketOutput() WorkloadContainerReadinessProbeTcpSocketOutput
	ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(context.Context) WorkloadContainerReadinessProbeTcpSocketOutput
}

type WorkloadContainerReadinessProbeTcpSocketArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (WorkloadContainerReadinessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketOutput() WorkloadContainerReadinessProbeTcpSocketOutput {
	return i.ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeTcpSocketOutput)
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i WorkloadContainerReadinessProbeTcpSocketArgs) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeTcpSocketOutput).ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx)
}

// WorkloadContainerReadinessProbeTcpSocketPtrInput is an input type that accepts WorkloadContainerReadinessProbeTcpSocketArgs, WorkloadContainerReadinessProbeTcpSocketPtr and WorkloadContainerReadinessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `WorkloadContainerReadinessProbeTcpSocketPtrInput` via:
//
//	        WorkloadContainerReadinessProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type WorkloadContainerReadinessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput
	ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput
}

type workloadContainerReadinessProbeTcpSocketPtrType WorkloadContainerReadinessProbeTcpSocketArgs

func WorkloadContainerReadinessProbeTcpSocketPtr(v *WorkloadContainerReadinessProbeTcpSocketArgs) WorkloadContainerReadinessProbeTcpSocketPtrInput {
	return (*workloadContainerReadinessProbeTcpSocketPtrType)(v)
}

func (*workloadContainerReadinessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (i *workloadContainerReadinessProbeTcpSocketPtrType) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return i.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *workloadContainerReadinessProbeTcpSocketPtrType) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (i *workloadContainerReadinessProbeTcpSocketPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: i.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerReadinessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketOutput() WorkloadContainerReadinessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadContainerReadinessProbeTcpSocket) *WorkloadContainerReadinessProbeTcpSocket {
		return &v
	}).(WorkloadContainerReadinessProbeTcpSocketPtrOutput)
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeTcpSocketOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadContainerReadinessProbeTcpSocket) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadContainerReadinessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (WorkloadContainerReadinessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadContainerReadinessProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutput() WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) ToWorkloadContainerReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadContainerReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket] {
	return pulumix.Output[*WorkloadContainerReadinessProbeTcpSocket]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) Elem() WorkloadContainerReadinessProbeTcpSocketOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeTcpSocket) WorkloadContainerReadinessProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret WorkloadContainerReadinessProbeTcpSocket
		return ret
	}).(WorkloadContainerReadinessProbeTcpSocketOutput)
}

func (o WorkloadContainerReadinessProbeTcpSocketPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadContainerReadinessProbeTcpSocket) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkloadContainerVolume struct {
	Path           string  `pulumi:"path"`
	RecoveryPolicy *string `pulumi:"recoveryPolicy"`
	Uri            string  `pulumi:"uri"`
}

// WorkloadContainerVolumeInput is an input type that accepts WorkloadContainerVolumeArgs and WorkloadContainerVolumeOutput values.
// You can construct a concrete instance of `WorkloadContainerVolumeInput` via:
//
//	WorkloadContainerVolumeArgs{...}
type WorkloadContainerVolumeInput interface {
	pulumi.Input

	ToWorkloadContainerVolumeOutput() WorkloadContainerVolumeOutput
	ToWorkloadContainerVolumeOutputWithContext(context.Context) WorkloadContainerVolumeOutput
}

type WorkloadContainerVolumeArgs struct {
	Path           pulumi.StringInput    `pulumi:"path"`
	RecoveryPolicy pulumi.StringPtrInput `pulumi:"recoveryPolicy"`
	Uri            pulumi.StringInput    `pulumi:"uri"`
}

func (WorkloadContainerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerVolume)(nil)).Elem()
}

func (i WorkloadContainerVolumeArgs) ToWorkloadContainerVolumeOutput() WorkloadContainerVolumeOutput {
	return i.ToWorkloadContainerVolumeOutputWithContext(context.Background())
}

func (i WorkloadContainerVolumeArgs) ToWorkloadContainerVolumeOutputWithContext(ctx context.Context) WorkloadContainerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerVolumeOutput)
}

func (i WorkloadContainerVolumeArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerVolume] {
	return pulumix.Output[WorkloadContainerVolume]{
		OutputState: i.ToWorkloadContainerVolumeOutputWithContext(ctx).OutputState,
	}
}

// WorkloadContainerVolumeArrayInput is an input type that accepts WorkloadContainerVolumeArray and WorkloadContainerVolumeArrayOutput values.
// You can construct a concrete instance of `WorkloadContainerVolumeArrayInput` via:
//
//	WorkloadContainerVolumeArray{ WorkloadContainerVolumeArgs{...} }
type WorkloadContainerVolumeArrayInput interface {
	pulumi.Input

	ToWorkloadContainerVolumeArrayOutput() WorkloadContainerVolumeArrayOutput
	ToWorkloadContainerVolumeArrayOutputWithContext(context.Context) WorkloadContainerVolumeArrayOutput
}

type WorkloadContainerVolumeArray []WorkloadContainerVolumeInput

func (WorkloadContainerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerVolume)(nil)).Elem()
}

func (i WorkloadContainerVolumeArray) ToWorkloadContainerVolumeArrayOutput() WorkloadContainerVolumeArrayOutput {
	return i.ToWorkloadContainerVolumeArrayOutputWithContext(context.Background())
}

func (i WorkloadContainerVolumeArray) ToWorkloadContainerVolumeArrayOutputWithContext(ctx context.Context) WorkloadContainerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadContainerVolumeArrayOutput)
}

func (i WorkloadContainerVolumeArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerVolume] {
	return pulumix.Output[[]WorkloadContainerVolume]{
		OutputState: i.ToWorkloadContainerVolumeArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadContainerVolumeOutput struct{ *pulumi.OutputState }

func (WorkloadContainerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadContainerVolume)(nil)).Elem()
}

func (o WorkloadContainerVolumeOutput) ToWorkloadContainerVolumeOutput() WorkloadContainerVolumeOutput {
	return o
}

func (o WorkloadContainerVolumeOutput) ToWorkloadContainerVolumeOutputWithContext(ctx context.Context) WorkloadContainerVolumeOutput {
	return o
}

func (o WorkloadContainerVolumeOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadContainerVolume] {
	return pulumix.Output[WorkloadContainerVolume]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerVolume) string { return v.Path }).(pulumi.StringOutput)
}

func (o WorkloadContainerVolumeOutput) RecoveryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadContainerVolume) *string { return v.RecoveryPolicy }).(pulumi.StringPtrOutput)
}

func (o WorkloadContainerVolumeOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadContainerVolume) string { return v.Uri }).(pulumi.StringOutput)
}

type WorkloadContainerVolumeArrayOutput struct{ *pulumi.OutputState }

func (WorkloadContainerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadContainerVolume)(nil)).Elem()
}

func (o WorkloadContainerVolumeArrayOutput) ToWorkloadContainerVolumeArrayOutput() WorkloadContainerVolumeArrayOutput {
	return o
}

func (o WorkloadContainerVolumeArrayOutput) ToWorkloadContainerVolumeArrayOutputWithContext(ctx context.Context) WorkloadContainerVolumeArrayOutput {
	return o
}

func (o WorkloadContainerVolumeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadContainerVolume] {
	return pulumix.Output[[]WorkloadContainerVolume]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadContainerVolumeArrayOutput) Index(i pulumi.IntInput) WorkloadContainerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadContainerVolume {
		return vs[0].([]WorkloadContainerVolume)[vs[1].(int)]
	}).(WorkloadContainerVolumeOutput)
}

type WorkloadFirewallSpec struct {
	External *WorkloadFirewallSpecExternal `pulumi:"external"`
	Internal *WorkloadFirewallSpecInternal `pulumi:"internal"`
}

// WorkloadFirewallSpecInput is an input type that accepts WorkloadFirewallSpecArgs and WorkloadFirewallSpecOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecInput` via:
//
//	WorkloadFirewallSpecArgs{...}
type WorkloadFirewallSpecInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecOutput() WorkloadFirewallSpecOutput
	ToWorkloadFirewallSpecOutputWithContext(context.Context) WorkloadFirewallSpecOutput
}

type WorkloadFirewallSpecArgs struct {
	External WorkloadFirewallSpecExternalPtrInput `pulumi:"external"`
	Internal WorkloadFirewallSpecInternalPtrInput `pulumi:"internal"`
}

func (WorkloadFirewallSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpec)(nil)).Elem()
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecOutput() WorkloadFirewallSpecOutput {
	return i.ToWorkloadFirewallSpecOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecOutputWithContext(ctx context.Context) WorkloadFirewallSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecOutput)
}

func (i WorkloadFirewallSpecArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpec] {
	return pulumix.Output[WorkloadFirewallSpec]{
		OutputState: i.ToWorkloadFirewallSpecOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return i.ToWorkloadFirewallSpecPtrOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecArgs) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecOutput).ToWorkloadFirewallSpecPtrOutputWithContext(ctx)
}

// WorkloadFirewallSpecPtrInput is an input type that accepts WorkloadFirewallSpecArgs, WorkloadFirewallSpecPtr and WorkloadFirewallSpecPtrOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecPtrInput` via:
//
//	        WorkloadFirewallSpecArgs{...}
//
//	or:
//
//	        nil
type WorkloadFirewallSpecPtrInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput
	ToWorkloadFirewallSpecPtrOutputWithContext(context.Context) WorkloadFirewallSpecPtrOutput
}

type workloadFirewallSpecPtrType WorkloadFirewallSpecArgs

func WorkloadFirewallSpecPtr(v *WorkloadFirewallSpecArgs) WorkloadFirewallSpecPtrInput {
	return (*workloadFirewallSpecPtrType)(v)
}

func (*workloadFirewallSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpec)(nil)).Elem()
}

func (i *workloadFirewallSpecPtrType) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return i.ToWorkloadFirewallSpecPtrOutputWithContext(context.Background())
}

func (i *workloadFirewallSpecPtrType) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecPtrOutput)
}

func (i *workloadFirewallSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpec] {
	return pulumix.Output[*WorkloadFirewallSpec]{
		OutputState: i.ToWorkloadFirewallSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpec)(nil)).Elem()
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecOutput() WorkloadFirewallSpecOutput {
	return o
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecOutputWithContext(ctx context.Context) WorkloadFirewallSpecOutput {
	return o
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return o.ToWorkloadFirewallSpecPtrOutputWithContext(context.Background())
}

func (o WorkloadFirewallSpecOutput) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadFirewallSpec) *WorkloadFirewallSpec {
		return &v
	}).(WorkloadFirewallSpecPtrOutput)
}

func (o WorkloadFirewallSpecOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpec] {
	return pulumix.Output[WorkloadFirewallSpec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecOutput) External() WorkloadFirewallSpecExternalPtrOutput {
	return o.ApplyT(func(v WorkloadFirewallSpec) *WorkloadFirewallSpecExternal { return v.External }).(WorkloadFirewallSpecExternalPtrOutput)
}

func (o WorkloadFirewallSpecOutput) Internal() WorkloadFirewallSpecInternalPtrOutput {
	return o.ApplyT(func(v WorkloadFirewallSpec) *WorkloadFirewallSpecInternal { return v.Internal }).(WorkloadFirewallSpecInternalPtrOutput)
}

type WorkloadFirewallSpecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpec)(nil)).Elem()
}

func (o WorkloadFirewallSpecPtrOutput) ToWorkloadFirewallSpecPtrOutput() WorkloadFirewallSpecPtrOutput {
	return o
}

func (o WorkloadFirewallSpecPtrOutput) ToWorkloadFirewallSpecPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecPtrOutput {
	return o
}

func (o WorkloadFirewallSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpec] {
	return pulumix.Output[*WorkloadFirewallSpec]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecPtrOutput) Elem() WorkloadFirewallSpecOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpec) WorkloadFirewallSpec {
		if v != nil {
			return *v
		}
		var ret WorkloadFirewallSpec
		return ret
	}).(WorkloadFirewallSpecOutput)
}

func (o WorkloadFirewallSpecPtrOutput) External() WorkloadFirewallSpecExternalPtrOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpec) *WorkloadFirewallSpecExternal {
		if v == nil {
			return nil
		}
		return v.External
	}).(WorkloadFirewallSpecExternalPtrOutput)
}

func (o WorkloadFirewallSpecPtrOutput) Internal() WorkloadFirewallSpecInternalPtrOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpec) *WorkloadFirewallSpecInternal {
		if v == nil {
			return nil
		}
		return v.Internal
	}).(WorkloadFirewallSpecInternalPtrOutput)
}

type WorkloadFirewallSpecExternal struct {
	InboundAllowCidrs      []string                                        `pulumi:"inboundAllowCidrs"`
	OutboundAllowCidrs     []string                                        `pulumi:"outboundAllowCidrs"`
	OutboundAllowHostnames []string                                        `pulumi:"outboundAllowHostnames"`
	OutboundAllowPorts     []WorkloadFirewallSpecExternalOutboundAllowPort `pulumi:"outboundAllowPorts"`
}

// WorkloadFirewallSpecExternalInput is an input type that accepts WorkloadFirewallSpecExternalArgs and WorkloadFirewallSpecExternalOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalInput` via:
//
//	WorkloadFirewallSpecExternalArgs{...}
type WorkloadFirewallSpecExternalInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalOutput() WorkloadFirewallSpecExternalOutput
	ToWorkloadFirewallSpecExternalOutputWithContext(context.Context) WorkloadFirewallSpecExternalOutput
}

type WorkloadFirewallSpecExternalArgs struct {
	InboundAllowCidrs      pulumi.StringArrayInput                                 `pulumi:"inboundAllowCidrs"`
	OutboundAllowCidrs     pulumi.StringArrayInput                                 `pulumi:"outboundAllowCidrs"`
	OutboundAllowHostnames pulumi.StringArrayInput                                 `pulumi:"outboundAllowHostnames"`
	OutboundAllowPorts     WorkloadFirewallSpecExternalOutboundAllowPortArrayInput `pulumi:"outboundAllowPorts"`
}

func (WorkloadFirewallSpecExternalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalOutput() WorkloadFirewallSpecExternalOutput {
	return i.ToWorkloadFirewallSpecExternalOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutput)
}

func (i WorkloadFirewallSpecExternalArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternal] {
	return pulumix.Output[WorkloadFirewallSpecExternal]{
		OutputState: i.ToWorkloadFirewallSpecExternalOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return i.ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalArgs) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutput).ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx)
}

// WorkloadFirewallSpecExternalPtrInput is an input type that accepts WorkloadFirewallSpecExternalArgs, WorkloadFirewallSpecExternalPtr and WorkloadFirewallSpecExternalPtrOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalPtrInput` via:
//
//	        WorkloadFirewallSpecExternalArgs{...}
//
//	or:
//
//	        nil
type WorkloadFirewallSpecExternalPtrInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput
	ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Context) WorkloadFirewallSpecExternalPtrOutput
}

type workloadFirewallSpecExternalPtrType WorkloadFirewallSpecExternalArgs

func WorkloadFirewallSpecExternalPtr(v *WorkloadFirewallSpecExternalArgs) WorkloadFirewallSpecExternalPtrInput {
	return (*workloadFirewallSpecExternalPtrType)(v)
}

func (*workloadFirewallSpecExternalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (i *workloadFirewallSpecExternalPtrType) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return i.ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Background())
}

func (i *workloadFirewallSpecExternalPtrType) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalPtrOutput)
}

func (i *workloadFirewallSpecExternalPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecExternal] {
	return pulumix.Output[*WorkloadFirewallSpecExternal]{
		OutputState: i.ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecExternalOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalOutput() WorkloadFirewallSpecExternalOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return o.ToWorkloadFirewallSpecExternalPtrOutputWithContext(context.Background())
}

func (o WorkloadFirewallSpecExternalOutput) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadFirewallSpecExternal) *WorkloadFirewallSpecExternal {
		return &v
	}).(WorkloadFirewallSpecExternalPtrOutput)
}

func (o WorkloadFirewallSpecExternalOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternal] {
	return pulumix.Output[WorkloadFirewallSpecExternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalOutput) InboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []string { return v.InboundAllowCidrs }).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalOutput) OutboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []string { return v.OutboundAllowCidrs }).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalOutput) OutboundAllowHostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []string { return v.OutboundAllowHostnames }).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalOutput) OutboundAllowPorts() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternal) []WorkloadFirewallSpecExternalOutboundAllowPort {
		return v.OutboundAllowPorts
	}).(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput)
}

type WorkloadFirewallSpecExternalPtrOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecExternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalPtrOutput) ToWorkloadFirewallSpecExternalPtrOutput() WorkloadFirewallSpecExternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecExternalPtrOutput) ToWorkloadFirewallSpecExternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecExternalPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecExternal] {
	return pulumix.Output[*WorkloadFirewallSpecExternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalPtrOutput) Elem() WorkloadFirewallSpecExternalOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) WorkloadFirewallSpecExternal {
		if v != nil {
			return *v
		}
		var ret WorkloadFirewallSpecExternal
		return ret
	}).(WorkloadFirewallSpecExternalOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) InboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []string {
		if v == nil {
			return nil
		}
		return v.InboundAllowCidrs
	}).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) OutboundAllowCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []string {
		if v == nil {
			return nil
		}
		return v.OutboundAllowCidrs
	}).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) OutboundAllowHostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []string {
		if v == nil {
			return nil
		}
		return v.OutboundAllowHostnames
	}).(pulumi.StringArrayOutput)
}

func (o WorkloadFirewallSpecExternalPtrOutput) OutboundAllowPorts() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecExternal) []WorkloadFirewallSpecExternalOutboundAllowPort {
		if v == nil {
			return nil
		}
		return v.OutboundAllowPorts
	}).(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput)
}

type WorkloadFirewallSpecExternalOutboundAllowPort struct {
	Number   int    `pulumi:"number"`
	Protocol string `pulumi:"protocol"`
}

// WorkloadFirewallSpecExternalOutboundAllowPortInput is an input type that accepts WorkloadFirewallSpecExternalOutboundAllowPortArgs and WorkloadFirewallSpecExternalOutboundAllowPortOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalOutboundAllowPortInput` via:
//
//	WorkloadFirewallSpecExternalOutboundAllowPortArgs{...}
type WorkloadFirewallSpecExternalOutboundAllowPortInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalOutboundAllowPortOutput() WorkloadFirewallSpecExternalOutboundAllowPortOutput
	ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(context.Context) WorkloadFirewallSpecExternalOutboundAllowPortOutput
}

type WorkloadFirewallSpecExternalOutboundAllowPortArgs struct {
	Number   pulumi.IntInput    `pulumi:"number"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (WorkloadFirewallSpecExternalOutboundAllowPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArgs) ToWorkloadFirewallSpecExternalOutboundAllowPortOutput() WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return i.ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArgs) ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutboundAllowPortOutput)
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: i.ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(ctx).OutputState,
	}
}

// WorkloadFirewallSpecExternalOutboundAllowPortArrayInput is an input type that accepts WorkloadFirewallSpecExternalOutboundAllowPortArray and WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecExternalOutboundAllowPortArrayInput` via:
//
//	WorkloadFirewallSpecExternalOutboundAllowPortArray{ WorkloadFirewallSpecExternalOutboundAllowPortArgs{...} }
type WorkloadFirewallSpecExternalOutboundAllowPortArrayInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutput() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput
	ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(context.Context) WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput
}

type WorkloadFirewallSpecExternalOutboundAllowPortArray []WorkloadFirewallSpecExternalOutboundAllowPortInput

func (WorkloadFirewallSpecExternalOutboundAllowPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArray) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutput() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return i.ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArray) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput)
}

func (i WorkloadFirewallSpecExternalOutboundAllowPortArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: i.ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecExternalOutboundAllowPortOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalOutboundAllowPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortOutput() WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternalOutboundAllowPort) int { return v.Number }).(pulumi.IntOutput)
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecExternalOutboundAllowPort) string { return v.Protocol }).(pulumi.StringOutput)
}

type WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadFirewallSpecExternalOutboundAllowPort)(nil)).Elem()
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutput() WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ToWorkloadFirewallSpecExternalOutboundAllowPortArrayOutputWithContext(ctx context.Context) WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput {
	return o
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort] {
	return pulumix.Output[[]WorkloadFirewallSpecExternalOutboundAllowPort]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput) Index(i pulumi.IntInput) WorkloadFirewallSpecExternalOutboundAllowPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadFirewallSpecExternalOutboundAllowPort {
		return vs[0].([]WorkloadFirewallSpecExternalOutboundAllowPort)[vs[1].(int)]
	}).(WorkloadFirewallSpecExternalOutboundAllowPortOutput)
}

type WorkloadFirewallSpecInternal struct {
	InboundAllowType      *string  `pulumi:"inboundAllowType"`
	InboundAllowWorkloads []string `pulumi:"inboundAllowWorkloads"`
}

// WorkloadFirewallSpecInternalInput is an input type that accepts WorkloadFirewallSpecInternalArgs and WorkloadFirewallSpecInternalOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecInternalInput` via:
//
//	WorkloadFirewallSpecInternalArgs{...}
type WorkloadFirewallSpecInternalInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecInternalOutput() WorkloadFirewallSpecInternalOutput
	ToWorkloadFirewallSpecInternalOutputWithContext(context.Context) WorkloadFirewallSpecInternalOutput
}

type WorkloadFirewallSpecInternalArgs struct {
	InboundAllowType      pulumi.StringPtrInput   `pulumi:"inboundAllowType"`
	InboundAllowWorkloads pulumi.StringArrayInput `pulumi:"inboundAllowWorkloads"`
}

func (WorkloadFirewallSpecInternalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalOutput() WorkloadFirewallSpecInternalOutput {
	return i.ToWorkloadFirewallSpecInternalOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecInternalOutput)
}

func (i WorkloadFirewallSpecInternalArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecInternal] {
	return pulumix.Output[WorkloadFirewallSpecInternal]{
		OutputState: i.ToWorkloadFirewallSpecInternalOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return i.ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Background())
}

func (i WorkloadFirewallSpecInternalArgs) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecInternalOutput).ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx)
}

// WorkloadFirewallSpecInternalPtrInput is an input type that accepts WorkloadFirewallSpecInternalArgs, WorkloadFirewallSpecInternalPtr and WorkloadFirewallSpecInternalPtrOutput values.
// You can construct a concrete instance of `WorkloadFirewallSpecInternalPtrInput` via:
//
//	        WorkloadFirewallSpecInternalArgs{...}
//
//	or:
//
//	        nil
type WorkloadFirewallSpecInternalPtrInput interface {
	pulumi.Input

	ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput
	ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Context) WorkloadFirewallSpecInternalPtrOutput
}

type workloadFirewallSpecInternalPtrType WorkloadFirewallSpecInternalArgs

func WorkloadFirewallSpecInternalPtr(v *WorkloadFirewallSpecInternalArgs) WorkloadFirewallSpecInternalPtrInput {
	return (*workloadFirewallSpecInternalPtrType)(v)
}

func (*workloadFirewallSpecInternalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (i *workloadFirewallSpecInternalPtrType) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return i.ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Background())
}

func (i *workloadFirewallSpecInternalPtrType) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadFirewallSpecInternalPtrOutput)
}

func (i *workloadFirewallSpecInternalPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecInternal] {
	return pulumix.Output[*WorkloadFirewallSpecInternal]{
		OutputState: i.ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadFirewallSpecInternalOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecInternalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalOutput() WorkloadFirewallSpecInternalOutput {
	return o
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalOutput {
	return o
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return o.ToWorkloadFirewallSpecInternalPtrOutputWithContext(context.Background())
}

func (o WorkloadFirewallSpecInternalOutput) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadFirewallSpecInternal) *WorkloadFirewallSpecInternal {
		return &v
	}).(WorkloadFirewallSpecInternalPtrOutput)
}

func (o WorkloadFirewallSpecInternalOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadFirewallSpecInternal] {
	return pulumix.Output[WorkloadFirewallSpecInternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecInternalOutput) InboundAllowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecInternal) *string { return v.InboundAllowType }).(pulumi.StringPtrOutput)
}

func (o WorkloadFirewallSpecInternalOutput) InboundAllowWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadFirewallSpecInternal) []string { return v.InboundAllowWorkloads }).(pulumi.StringArrayOutput)
}

type WorkloadFirewallSpecInternalPtrOutput struct{ *pulumi.OutputState }

func (WorkloadFirewallSpecInternalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadFirewallSpecInternal)(nil)).Elem()
}

func (o WorkloadFirewallSpecInternalPtrOutput) ToWorkloadFirewallSpecInternalPtrOutput() WorkloadFirewallSpecInternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecInternalPtrOutput) ToWorkloadFirewallSpecInternalPtrOutputWithContext(ctx context.Context) WorkloadFirewallSpecInternalPtrOutput {
	return o
}

func (o WorkloadFirewallSpecInternalPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadFirewallSpecInternal] {
	return pulumix.Output[*WorkloadFirewallSpecInternal]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadFirewallSpecInternalPtrOutput) Elem() WorkloadFirewallSpecInternalOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecInternal) WorkloadFirewallSpecInternal {
		if v != nil {
			return *v
		}
		var ret WorkloadFirewallSpecInternal
		return ret
	}).(WorkloadFirewallSpecInternalOutput)
}

func (o WorkloadFirewallSpecInternalPtrOutput) InboundAllowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecInternal) *string {
		if v == nil {
			return nil
		}
		return v.InboundAllowType
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadFirewallSpecInternalPtrOutput) InboundAllowWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadFirewallSpecInternal) []string {
		if v == nil {
			return nil
		}
		return v.InboundAllowWorkloads
	}).(pulumi.StringArrayOutput)
}

type WorkloadJob struct {
	ActiveDeadlineSeconds *int    `pulumi:"activeDeadlineSeconds"`
	ConcurrencyPolicy     *string `pulumi:"concurrencyPolicy"`
	HistoryLimit          *int    `pulumi:"historyLimit"`
	RestartPolicy         *string `pulumi:"restartPolicy"`
	Schedule              string  `pulumi:"schedule"`
}

// WorkloadJobInput is an input type that accepts WorkloadJobArgs and WorkloadJobOutput values.
// You can construct a concrete instance of `WorkloadJobInput` via:
//
//	WorkloadJobArgs{...}
type WorkloadJobInput interface {
	pulumi.Input

	ToWorkloadJobOutput() WorkloadJobOutput
	ToWorkloadJobOutputWithContext(context.Context) WorkloadJobOutput
}

type WorkloadJobArgs struct {
	ActiveDeadlineSeconds pulumi.IntPtrInput    `pulumi:"activeDeadlineSeconds"`
	ConcurrencyPolicy     pulumi.StringPtrInput `pulumi:"concurrencyPolicy"`
	HistoryLimit          pulumi.IntPtrInput    `pulumi:"historyLimit"`
	RestartPolicy         pulumi.StringPtrInput `pulumi:"restartPolicy"`
	Schedule              pulumi.StringInput    `pulumi:"schedule"`
}

func (WorkloadJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadJob)(nil)).Elem()
}

func (i WorkloadJobArgs) ToWorkloadJobOutput() WorkloadJobOutput {
	return i.ToWorkloadJobOutputWithContext(context.Background())
}

func (i WorkloadJobArgs) ToWorkloadJobOutputWithContext(ctx context.Context) WorkloadJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadJobOutput)
}

func (i WorkloadJobArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadJob] {
	return pulumix.Output[WorkloadJob]{
		OutputState: i.ToWorkloadJobOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadJobArgs) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return i.ToWorkloadJobPtrOutputWithContext(context.Background())
}

func (i WorkloadJobArgs) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadJobOutput).ToWorkloadJobPtrOutputWithContext(ctx)
}

// WorkloadJobPtrInput is an input type that accepts WorkloadJobArgs, WorkloadJobPtr and WorkloadJobPtrOutput values.
// You can construct a concrete instance of `WorkloadJobPtrInput` via:
//
//	        WorkloadJobArgs{...}
//
//	or:
//
//	        nil
type WorkloadJobPtrInput interface {
	pulumi.Input

	ToWorkloadJobPtrOutput() WorkloadJobPtrOutput
	ToWorkloadJobPtrOutputWithContext(context.Context) WorkloadJobPtrOutput
}

type workloadJobPtrType WorkloadJobArgs

func WorkloadJobPtr(v *WorkloadJobArgs) WorkloadJobPtrInput {
	return (*workloadJobPtrType)(v)
}

func (*workloadJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadJob)(nil)).Elem()
}

func (i *workloadJobPtrType) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return i.ToWorkloadJobPtrOutputWithContext(context.Background())
}

func (i *workloadJobPtrType) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadJobPtrOutput)
}

func (i *workloadJobPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadJob] {
	return pulumix.Output[*WorkloadJob]{
		OutputState: i.ToWorkloadJobPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadJobOutput struct{ *pulumi.OutputState }

func (WorkloadJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadJob)(nil)).Elem()
}

func (o WorkloadJobOutput) ToWorkloadJobOutput() WorkloadJobOutput {
	return o
}

func (o WorkloadJobOutput) ToWorkloadJobOutputWithContext(ctx context.Context) WorkloadJobOutput {
	return o
}

func (o WorkloadJobOutput) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return o.ToWorkloadJobPtrOutputWithContext(context.Background())
}

func (o WorkloadJobOutput) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadJob) *WorkloadJob {
		return &v
	}).(WorkloadJobPtrOutput)
}

func (o WorkloadJobOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadJob] {
	return pulumix.Output[WorkloadJob]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadJobOutput) ActiveDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *int { return v.ActiveDeadlineSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadJobOutput) ConcurrencyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *string { return v.ConcurrencyPolicy }).(pulumi.StringPtrOutput)
}

func (o WorkloadJobOutput) HistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *int { return v.HistoryLimit }).(pulumi.IntPtrOutput)
}

func (o WorkloadJobOutput) RestartPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadJob) *string { return v.RestartPolicy }).(pulumi.StringPtrOutput)
}

func (o WorkloadJobOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadJob) string { return v.Schedule }).(pulumi.StringOutput)
}

type WorkloadJobPtrOutput struct{ *pulumi.OutputState }

func (WorkloadJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadJob)(nil)).Elem()
}

func (o WorkloadJobPtrOutput) ToWorkloadJobPtrOutput() WorkloadJobPtrOutput {
	return o
}

func (o WorkloadJobPtrOutput) ToWorkloadJobPtrOutputWithContext(ctx context.Context) WorkloadJobPtrOutput {
	return o
}

func (o WorkloadJobPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadJob] {
	return pulumix.Output[*WorkloadJob]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadJobPtrOutput) Elem() WorkloadJobOutput {
	return o.ApplyT(func(v *WorkloadJob) WorkloadJob {
		if v != nil {
			return *v
		}
		var ret WorkloadJob
		return ret
	}).(WorkloadJobOutput)
}

func (o WorkloadJobPtrOutput) ActiveDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *int {
		if v == nil {
			return nil
		}
		return v.ActiveDeadlineSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadJobPtrOutput) ConcurrencyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *string {
		if v == nil {
			return nil
		}
		return v.ConcurrencyPolicy
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadJobPtrOutput) HistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *int {
		if v == nil {
			return nil
		}
		return v.HistoryLimit
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadJobPtrOutput) RestartPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *string {
		if v == nil {
			return nil
		}
		return v.RestartPolicy
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadJobPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadJob) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

type WorkloadLocalOption struct {
	Autoscaling    *WorkloadLocalOptionAutoscaling `pulumi:"autoscaling"`
	CapacityAi     *bool                           `pulumi:"capacityAi"`
	Debug          *bool                           `pulumi:"debug"`
	Location       string                          `pulumi:"location"`
	Suspend        *bool                           `pulumi:"suspend"`
	TimeoutSeconds *int                            `pulumi:"timeoutSeconds"`
}

// WorkloadLocalOptionInput is an input type that accepts WorkloadLocalOptionArgs and WorkloadLocalOptionOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionInput` via:
//
//	WorkloadLocalOptionArgs{...}
type WorkloadLocalOptionInput interface {
	pulumi.Input

	ToWorkloadLocalOptionOutput() WorkloadLocalOptionOutput
	ToWorkloadLocalOptionOutputWithContext(context.Context) WorkloadLocalOptionOutput
}

type WorkloadLocalOptionArgs struct {
	Autoscaling    WorkloadLocalOptionAutoscalingPtrInput `pulumi:"autoscaling"`
	CapacityAi     pulumi.BoolPtrInput                    `pulumi:"capacityAi"`
	Debug          pulumi.BoolPtrInput                    `pulumi:"debug"`
	Location       pulumi.StringInput                     `pulumi:"location"`
	Suspend        pulumi.BoolPtrInput                    `pulumi:"suspend"`
	TimeoutSeconds pulumi.IntPtrInput                     `pulumi:"timeoutSeconds"`
}

func (WorkloadLocalOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOption)(nil)).Elem()
}

func (i WorkloadLocalOptionArgs) ToWorkloadLocalOptionOutput() WorkloadLocalOptionOutput {
	return i.ToWorkloadLocalOptionOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionArgs) ToWorkloadLocalOptionOutputWithContext(ctx context.Context) WorkloadLocalOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionOutput)
}

func (i WorkloadLocalOptionArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOption] {
	return pulumix.Output[WorkloadLocalOption]{
		OutputState: i.ToWorkloadLocalOptionOutputWithContext(ctx).OutputState,
	}
}

// WorkloadLocalOptionArrayInput is an input type that accepts WorkloadLocalOptionArray and WorkloadLocalOptionArrayOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionArrayInput` via:
//
//	WorkloadLocalOptionArray{ WorkloadLocalOptionArgs{...} }
type WorkloadLocalOptionArrayInput interface {
	pulumi.Input

	ToWorkloadLocalOptionArrayOutput() WorkloadLocalOptionArrayOutput
	ToWorkloadLocalOptionArrayOutputWithContext(context.Context) WorkloadLocalOptionArrayOutput
}

type WorkloadLocalOptionArray []WorkloadLocalOptionInput

func (WorkloadLocalOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadLocalOption)(nil)).Elem()
}

func (i WorkloadLocalOptionArray) ToWorkloadLocalOptionArrayOutput() WorkloadLocalOptionArrayOutput {
	return i.ToWorkloadLocalOptionArrayOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionArray) ToWorkloadLocalOptionArrayOutputWithContext(ctx context.Context) WorkloadLocalOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionArrayOutput)
}

func (i WorkloadLocalOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadLocalOption] {
	return pulumix.Output[[]WorkloadLocalOption]{
		OutputState: i.ToWorkloadLocalOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLocalOptionOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOption)(nil)).Elem()
}

func (o WorkloadLocalOptionOutput) ToWorkloadLocalOptionOutput() WorkloadLocalOptionOutput {
	return o
}

func (o WorkloadLocalOptionOutput) ToWorkloadLocalOptionOutputWithContext(ctx context.Context) WorkloadLocalOptionOutput {
	return o
}

func (o WorkloadLocalOptionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOption] {
	return pulumix.Output[WorkloadLocalOption]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionOutput) Autoscaling() WorkloadLocalOptionAutoscalingPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *WorkloadLocalOptionAutoscaling { return v.Autoscaling }).(WorkloadLocalOptionAutoscalingPtrOutput)
}

func (o WorkloadLocalOptionOutput) CapacityAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *bool { return v.CapacityAi }).(pulumi.BoolPtrOutput)
}

func (o WorkloadLocalOptionOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

func (o WorkloadLocalOptionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadLocalOption) string { return v.Location }).(pulumi.StringOutput)
}

func (o WorkloadLocalOptionOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

func (o WorkloadLocalOptionOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOption) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadLocalOptionArrayOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadLocalOption)(nil)).Elem()
}

func (o WorkloadLocalOptionArrayOutput) ToWorkloadLocalOptionArrayOutput() WorkloadLocalOptionArrayOutput {
	return o
}

func (o WorkloadLocalOptionArrayOutput) ToWorkloadLocalOptionArrayOutputWithContext(ctx context.Context) WorkloadLocalOptionArrayOutput {
	return o
}

func (o WorkloadLocalOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadLocalOption] {
	return pulumix.Output[[]WorkloadLocalOption]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionArrayOutput) Index(i pulumi.IntInput) WorkloadLocalOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadLocalOption {
		return vs[0].([]WorkloadLocalOption)[vs[1].(int)]
	}).(WorkloadLocalOptionOutput)
}

type WorkloadLocalOptionAutoscaling struct {
	MaxConcurrency   *int    `pulumi:"maxConcurrency"`
	MaxScale         *int    `pulumi:"maxScale"`
	Metric           *string `pulumi:"metric"`
	MetricPercentile *string `pulumi:"metricPercentile"`
	MinScale         *int    `pulumi:"minScale"`
	ScaleToZeroDelay *int    `pulumi:"scaleToZeroDelay"`
	Target           *int    `pulumi:"target"`
}

// WorkloadLocalOptionAutoscalingInput is an input type that accepts WorkloadLocalOptionAutoscalingArgs and WorkloadLocalOptionAutoscalingOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionAutoscalingInput` via:
//
//	WorkloadLocalOptionAutoscalingArgs{...}
type WorkloadLocalOptionAutoscalingInput interface {
	pulumi.Input

	ToWorkloadLocalOptionAutoscalingOutput() WorkloadLocalOptionAutoscalingOutput
	ToWorkloadLocalOptionAutoscalingOutputWithContext(context.Context) WorkloadLocalOptionAutoscalingOutput
}

type WorkloadLocalOptionAutoscalingArgs struct {
	MaxConcurrency   pulumi.IntPtrInput    `pulumi:"maxConcurrency"`
	MaxScale         pulumi.IntPtrInput    `pulumi:"maxScale"`
	Metric           pulumi.StringPtrInput `pulumi:"metric"`
	MetricPercentile pulumi.StringPtrInput `pulumi:"metricPercentile"`
	MinScale         pulumi.IntPtrInput    `pulumi:"minScale"`
	ScaleToZeroDelay pulumi.IntPtrInput    `pulumi:"scaleToZeroDelay"`
	Target           pulumi.IntPtrInput    `pulumi:"target"`
}

func (WorkloadLocalOptionAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingOutput() WorkloadLocalOptionAutoscalingOutput {
	return i.ToWorkloadLocalOptionAutoscalingOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionAutoscalingOutput)
}

func (i WorkloadLocalOptionAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[WorkloadLocalOptionAutoscaling]{
		OutputState: i.ToWorkloadLocalOptionAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return i.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Background())
}

func (i WorkloadLocalOptionAutoscalingArgs) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionAutoscalingOutput).ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx)
}

// WorkloadLocalOptionAutoscalingPtrInput is an input type that accepts WorkloadLocalOptionAutoscalingArgs, WorkloadLocalOptionAutoscalingPtr and WorkloadLocalOptionAutoscalingPtrOutput values.
// You can construct a concrete instance of `WorkloadLocalOptionAutoscalingPtrInput` via:
//
//	        WorkloadLocalOptionAutoscalingArgs{...}
//
//	or:
//
//	        nil
type WorkloadLocalOptionAutoscalingPtrInput interface {
	pulumi.Input

	ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput
	ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Context) WorkloadLocalOptionAutoscalingPtrOutput
}

type workloadLocalOptionAutoscalingPtrType WorkloadLocalOptionAutoscalingArgs

func WorkloadLocalOptionAutoscalingPtr(v *WorkloadLocalOptionAutoscalingArgs) WorkloadLocalOptionAutoscalingPtrInput {
	return (*workloadLocalOptionAutoscalingPtrType)(v)
}

func (*workloadLocalOptionAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (i *workloadLocalOptionAutoscalingPtrType) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return i.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Background())
}

func (i *workloadLocalOptionAutoscalingPtrType) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLocalOptionAutoscalingPtrOutput)
}

func (i *workloadLocalOptionAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[*WorkloadLocalOptionAutoscaling]{
		OutputState: i.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadLocalOptionAutoscalingOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingOutput() WorkloadLocalOptionAutoscalingOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return o.ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(context.Background())
}

func (o WorkloadLocalOptionAutoscalingOutput) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadLocalOptionAutoscaling) *WorkloadLocalOptionAutoscaling {
		return &v
	}).(WorkloadLocalOptionAutoscalingPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[WorkloadLocalOptionAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionAutoscalingOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.MaxConcurrency }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.MaxScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *string { return v.MetricPercentile }).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.MinScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.ScaleToZeroDelay }).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLocalOptionAutoscaling) *int { return v.Target }).(pulumi.IntPtrOutput)
}

type WorkloadLocalOptionAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (WorkloadLocalOptionAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLocalOptionAutoscaling)(nil)).Elem()
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ToWorkloadLocalOptionAutoscalingPtrOutput() WorkloadLocalOptionAutoscalingPtrOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ToWorkloadLocalOptionAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadLocalOptionAutoscalingPtrOutput {
	return o
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadLocalOptionAutoscaling] {
	return pulumix.Output[*WorkloadLocalOptionAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) Elem() WorkloadLocalOptionAutoscalingOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) WorkloadLocalOptionAutoscaling {
		if v != nil {
			return *v
		}
		var ret WorkloadLocalOptionAutoscaling
		return ret
	}).(WorkloadLocalOptionAutoscalingOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrency
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MetricPercentile
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MinScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.ScaleToZeroDelay
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadLocalOptionAutoscalingPtrOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLocalOptionAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.IntPtrOutput)
}

type WorkloadOptions struct {
	Autoscaling    *WorkloadOptionsAutoscaling `pulumi:"autoscaling"`
	CapacityAi     *bool                       `pulumi:"capacityAi"`
	Debug          *bool                       `pulumi:"debug"`
	Suspend        *bool                       `pulumi:"suspend"`
	TimeoutSeconds *int                        `pulumi:"timeoutSeconds"`
}

// WorkloadOptionsInput is an input type that accepts WorkloadOptionsArgs and WorkloadOptionsOutput values.
// You can construct a concrete instance of `WorkloadOptionsInput` via:
//
//	WorkloadOptionsArgs{...}
type WorkloadOptionsInput interface {
	pulumi.Input

	ToWorkloadOptionsOutput() WorkloadOptionsOutput
	ToWorkloadOptionsOutputWithContext(context.Context) WorkloadOptionsOutput
}

type WorkloadOptionsArgs struct {
	Autoscaling    WorkloadOptionsAutoscalingPtrInput `pulumi:"autoscaling"`
	CapacityAi     pulumi.BoolPtrInput                `pulumi:"capacityAi"`
	Debug          pulumi.BoolPtrInput                `pulumi:"debug"`
	Suspend        pulumi.BoolPtrInput                `pulumi:"suspend"`
	TimeoutSeconds pulumi.IntPtrInput                 `pulumi:"timeoutSeconds"`
}

func (WorkloadOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptions)(nil)).Elem()
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsOutput() WorkloadOptionsOutput {
	return i.ToWorkloadOptionsOutputWithContext(context.Background())
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsOutputWithContext(ctx context.Context) WorkloadOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsOutput)
}

func (i WorkloadOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptions] {
	return pulumix.Output[WorkloadOptions]{
		OutputState: i.ToWorkloadOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return i.ToWorkloadOptionsPtrOutputWithContext(context.Background())
}

func (i WorkloadOptionsArgs) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsOutput).ToWorkloadOptionsPtrOutputWithContext(ctx)
}

// WorkloadOptionsPtrInput is an input type that accepts WorkloadOptionsArgs, WorkloadOptionsPtr and WorkloadOptionsPtrOutput values.
// You can construct a concrete instance of `WorkloadOptionsPtrInput` via:
//
//	        WorkloadOptionsArgs{...}
//
//	or:
//
//	        nil
type WorkloadOptionsPtrInput interface {
	pulumi.Input

	ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput
	ToWorkloadOptionsPtrOutputWithContext(context.Context) WorkloadOptionsPtrOutput
}

type workloadOptionsPtrType WorkloadOptionsArgs

func WorkloadOptionsPtr(v *WorkloadOptionsArgs) WorkloadOptionsPtrInput {
	return (*workloadOptionsPtrType)(v)
}

func (*workloadOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptions)(nil)).Elem()
}

func (i *workloadOptionsPtrType) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return i.ToWorkloadOptionsPtrOutputWithContext(context.Background())
}

func (i *workloadOptionsPtrType) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsPtrOutput)
}

func (i *workloadOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptions] {
	return pulumix.Output[*WorkloadOptions]{
		OutputState: i.ToWorkloadOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadOptionsOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptions)(nil)).Elem()
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsOutput() WorkloadOptionsOutput {
	return o
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsOutputWithContext(ctx context.Context) WorkloadOptionsOutput {
	return o
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return o.ToWorkloadOptionsPtrOutputWithContext(context.Background())
}

func (o WorkloadOptionsOutput) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadOptions) *WorkloadOptions {
		return &v
	}).(WorkloadOptionsPtrOutput)
}

func (o WorkloadOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptions] {
	return pulumix.Output[WorkloadOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsOutput) Autoscaling() WorkloadOptionsAutoscalingPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *WorkloadOptionsAutoscaling { return v.Autoscaling }).(WorkloadOptionsAutoscalingPtrOutput)
}

func (o WorkloadOptionsOutput) CapacityAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *bool { return v.CapacityAi }).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptions) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadOptionsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptions)(nil)).Elem()
}

func (o WorkloadOptionsPtrOutput) ToWorkloadOptionsPtrOutput() WorkloadOptionsPtrOutput {
	return o
}

func (o WorkloadOptionsPtrOutput) ToWorkloadOptionsPtrOutputWithContext(ctx context.Context) WorkloadOptionsPtrOutput {
	return o
}

func (o WorkloadOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptions] {
	return pulumix.Output[*WorkloadOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsPtrOutput) Elem() WorkloadOptionsOutput {
	return o.ApplyT(func(v *WorkloadOptions) WorkloadOptions {
		if v != nil {
			return *v
		}
		var ret WorkloadOptions
		return ret
	}).(WorkloadOptionsOutput)
}

func (o WorkloadOptionsPtrOutput) Autoscaling() WorkloadOptionsAutoscalingPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *WorkloadOptionsAutoscaling {
		if v == nil {
			return nil
		}
		return v.Autoscaling
	}).(WorkloadOptionsAutoscalingPtrOutput)
}

func (o WorkloadOptionsPtrOutput) CapacityAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *bool {
		if v == nil {
			return nil
		}
		return v.CapacityAi
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Debug
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadOptionsPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptions) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type WorkloadOptionsAutoscaling struct {
	MaxConcurrency   *int    `pulumi:"maxConcurrency"`
	MaxScale         *int    `pulumi:"maxScale"`
	Metric           *string `pulumi:"metric"`
	MetricPercentile *string `pulumi:"metricPercentile"`
	MinScale         *int    `pulumi:"minScale"`
	ScaleToZeroDelay *int    `pulumi:"scaleToZeroDelay"`
	Target           *int    `pulumi:"target"`
}

// WorkloadOptionsAutoscalingInput is an input type that accepts WorkloadOptionsAutoscalingArgs and WorkloadOptionsAutoscalingOutput values.
// You can construct a concrete instance of `WorkloadOptionsAutoscalingInput` via:
//
//	WorkloadOptionsAutoscalingArgs{...}
type WorkloadOptionsAutoscalingInput interface {
	pulumi.Input

	ToWorkloadOptionsAutoscalingOutput() WorkloadOptionsAutoscalingOutput
	ToWorkloadOptionsAutoscalingOutputWithContext(context.Context) WorkloadOptionsAutoscalingOutput
}

type WorkloadOptionsAutoscalingArgs struct {
	MaxConcurrency   pulumi.IntPtrInput    `pulumi:"maxConcurrency"`
	MaxScale         pulumi.IntPtrInput    `pulumi:"maxScale"`
	Metric           pulumi.StringPtrInput `pulumi:"metric"`
	MetricPercentile pulumi.StringPtrInput `pulumi:"metricPercentile"`
	MinScale         pulumi.IntPtrInput    `pulumi:"minScale"`
	ScaleToZeroDelay pulumi.IntPtrInput    `pulumi:"scaleToZeroDelay"`
	Target           pulumi.IntPtrInput    `pulumi:"target"`
}

func (WorkloadOptionsAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingOutput() WorkloadOptionsAutoscalingOutput {
	return i.ToWorkloadOptionsAutoscalingOutputWithContext(context.Background())
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsAutoscalingOutput)
}

func (i WorkloadOptionsAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptionsAutoscaling] {
	return pulumix.Output[WorkloadOptionsAutoscaling]{
		OutputState: i.ToWorkloadOptionsAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return i.ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Background())
}

func (i WorkloadOptionsAutoscalingArgs) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsAutoscalingOutput).ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx)
}

// WorkloadOptionsAutoscalingPtrInput is an input type that accepts WorkloadOptionsAutoscalingArgs, WorkloadOptionsAutoscalingPtr and WorkloadOptionsAutoscalingPtrOutput values.
// You can construct a concrete instance of `WorkloadOptionsAutoscalingPtrInput` via:
//
//	        WorkloadOptionsAutoscalingArgs{...}
//
//	or:
//
//	        nil
type WorkloadOptionsAutoscalingPtrInput interface {
	pulumi.Input

	ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput
	ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Context) WorkloadOptionsAutoscalingPtrOutput
}

type workloadOptionsAutoscalingPtrType WorkloadOptionsAutoscalingArgs

func WorkloadOptionsAutoscalingPtr(v *WorkloadOptionsAutoscalingArgs) WorkloadOptionsAutoscalingPtrInput {
	return (*workloadOptionsAutoscalingPtrType)(v)
}

func (*workloadOptionsAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (i *workloadOptionsAutoscalingPtrType) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return i.ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Background())
}

func (i *workloadOptionsAutoscalingPtrType) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOptionsAutoscalingPtrOutput)
}

func (i *workloadOptionsAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptionsAutoscaling] {
	return pulumix.Output[*WorkloadOptionsAutoscaling]{
		OutputState: i.ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadOptionsAutoscalingOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingOutput() WorkloadOptionsAutoscalingOutput {
	return o
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingOutput {
	return o
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return o.ToWorkloadOptionsAutoscalingPtrOutputWithContext(context.Background())
}

func (o WorkloadOptionsAutoscalingOutput) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadOptionsAutoscaling) *WorkloadOptionsAutoscaling {
		return &v
	}).(WorkloadOptionsAutoscalingPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadOptionsAutoscaling] {
	return pulumix.Output[WorkloadOptionsAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsAutoscalingOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.MaxConcurrency }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.MaxScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *string { return v.MetricPercentile }).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.MinScale }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.ScaleToZeroDelay }).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadOptionsAutoscaling) *int { return v.Target }).(pulumi.IntPtrOutput)
}

type WorkloadOptionsAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (WorkloadOptionsAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadOptionsAutoscaling)(nil)).Elem()
}

func (o WorkloadOptionsAutoscalingPtrOutput) ToWorkloadOptionsAutoscalingPtrOutput() WorkloadOptionsAutoscalingPtrOutput {
	return o
}

func (o WorkloadOptionsAutoscalingPtrOutput) ToWorkloadOptionsAutoscalingPtrOutputWithContext(ctx context.Context) WorkloadOptionsAutoscalingPtrOutput {
	return o
}

func (o WorkloadOptionsAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadOptionsAutoscaling] {
	return pulumix.Output[*WorkloadOptionsAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadOptionsAutoscalingPtrOutput) Elem() WorkloadOptionsAutoscalingOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) WorkloadOptionsAutoscaling {
		if v != nil {
			return *v
		}
		var ret WorkloadOptionsAutoscaling
		return ret
	}).(WorkloadOptionsAutoscalingOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrency
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MaxScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MetricPercentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MetricPercentile
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) MinScale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MinScale
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) ScaleToZeroDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.ScaleToZeroDelay
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadOptionsAutoscalingPtrOutput) Target() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadOptionsAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.IntPtrOutput)
}

type WorkloadRolloutOptions struct {
	MaxSurgeReplicas       *string `pulumi:"maxSurgeReplicas"`
	MaxUnavailableReplicas *string `pulumi:"maxUnavailableReplicas"`
	MinReadySeconds        *int    `pulumi:"minReadySeconds"`
	ScalingPolicy          *string `pulumi:"scalingPolicy"`
}

// WorkloadRolloutOptionsInput is an input type that accepts WorkloadRolloutOptionsArgs and WorkloadRolloutOptionsOutput values.
// You can construct a concrete instance of `WorkloadRolloutOptionsInput` via:
//
//	WorkloadRolloutOptionsArgs{...}
type WorkloadRolloutOptionsInput interface {
	pulumi.Input

	ToWorkloadRolloutOptionsOutput() WorkloadRolloutOptionsOutput
	ToWorkloadRolloutOptionsOutputWithContext(context.Context) WorkloadRolloutOptionsOutput
}

type WorkloadRolloutOptionsArgs struct {
	MaxSurgeReplicas       pulumi.StringPtrInput `pulumi:"maxSurgeReplicas"`
	MaxUnavailableReplicas pulumi.StringPtrInput `pulumi:"maxUnavailableReplicas"`
	MinReadySeconds        pulumi.IntPtrInput    `pulumi:"minReadySeconds"`
	ScalingPolicy          pulumi.StringPtrInput `pulumi:"scalingPolicy"`
}

func (WorkloadRolloutOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadRolloutOptions)(nil)).Elem()
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsOutput() WorkloadRolloutOptionsOutput {
	return i.ToWorkloadRolloutOptionsOutputWithContext(context.Background())
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsOutputWithContext(ctx context.Context) WorkloadRolloutOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadRolloutOptionsOutput)
}

func (i WorkloadRolloutOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadRolloutOptions] {
	return pulumix.Output[WorkloadRolloutOptions]{
		OutputState: i.ToWorkloadRolloutOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return i.ToWorkloadRolloutOptionsPtrOutputWithContext(context.Background())
}

func (i WorkloadRolloutOptionsArgs) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadRolloutOptionsOutput).ToWorkloadRolloutOptionsPtrOutputWithContext(ctx)
}

// WorkloadRolloutOptionsPtrInput is an input type that accepts WorkloadRolloutOptionsArgs, WorkloadRolloutOptionsPtr and WorkloadRolloutOptionsPtrOutput values.
// You can construct a concrete instance of `WorkloadRolloutOptionsPtrInput` via:
//
//	        WorkloadRolloutOptionsArgs{...}
//
//	or:
//
//	        nil
type WorkloadRolloutOptionsPtrInput interface {
	pulumi.Input

	ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput
	ToWorkloadRolloutOptionsPtrOutputWithContext(context.Context) WorkloadRolloutOptionsPtrOutput
}

type workloadRolloutOptionsPtrType WorkloadRolloutOptionsArgs

func WorkloadRolloutOptionsPtr(v *WorkloadRolloutOptionsArgs) WorkloadRolloutOptionsPtrInput {
	return (*workloadRolloutOptionsPtrType)(v)
}

func (*workloadRolloutOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadRolloutOptions)(nil)).Elem()
}

func (i *workloadRolloutOptionsPtrType) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return i.ToWorkloadRolloutOptionsPtrOutputWithContext(context.Background())
}

func (i *workloadRolloutOptionsPtrType) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadRolloutOptionsPtrOutput)
}

func (i *workloadRolloutOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadRolloutOptions] {
	return pulumix.Output[*WorkloadRolloutOptions]{
		OutputState: i.ToWorkloadRolloutOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadRolloutOptionsOutput struct{ *pulumi.OutputState }

func (WorkloadRolloutOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadRolloutOptions)(nil)).Elem()
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsOutput() WorkloadRolloutOptionsOutput {
	return o
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsOutputWithContext(ctx context.Context) WorkloadRolloutOptionsOutput {
	return o
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return o.ToWorkloadRolloutOptionsPtrOutputWithContext(context.Background())
}

func (o WorkloadRolloutOptionsOutput) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadRolloutOptions) *WorkloadRolloutOptions {
		return &v
	}).(WorkloadRolloutOptionsPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadRolloutOptions] {
	return pulumix.Output[WorkloadRolloutOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadRolloutOptionsOutput) MaxSurgeReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *string { return v.MaxSurgeReplicas }).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) MaxUnavailableReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *string { return v.MaxUnavailableReplicas }).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *int { return v.MinReadySeconds }).(pulumi.IntPtrOutput)
}

func (o WorkloadRolloutOptionsOutput) ScalingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadRolloutOptions) *string { return v.ScalingPolicy }).(pulumi.StringPtrOutput)
}

type WorkloadRolloutOptionsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadRolloutOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadRolloutOptions)(nil)).Elem()
}

func (o WorkloadRolloutOptionsPtrOutput) ToWorkloadRolloutOptionsPtrOutput() WorkloadRolloutOptionsPtrOutput {
	return o
}

func (o WorkloadRolloutOptionsPtrOutput) ToWorkloadRolloutOptionsPtrOutputWithContext(ctx context.Context) WorkloadRolloutOptionsPtrOutput {
	return o
}

func (o WorkloadRolloutOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadRolloutOptions] {
	return pulumix.Output[*WorkloadRolloutOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadRolloutOptionsPtrOutput) Elem() WorkloadRolloutOptionsOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) WorkloadRolloutOptions {
		if v != nil {
			return *v
		}
		var ret WorkloadRolloutOptions
		return ret
	}).(WorkloadRolloutOptionsOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) MaxSurgeReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxSurgeReplicas
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) MaxUnavailableReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxUnavailableReplicas
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *int {
		if v == nil {
			return nil
		}
		return v.MinReadySeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadRolloutOptionsPtrOutput) ScalingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadRolloutOptions) *string {
		if v == nil {
			return nil
		}
		return v.ScalingPolicy
	}).(pulumi.StringPtrOutput)
}

type WorkloadSecurityOptions struct {
	FileSystemGroupId int `pulumi:"fileSystemGroupId"`
}

// WorkloadSecurityOptionsInput is an input type that accepts WorkloadSecurityOptionsArgs and WorkloadSecurityOptionsOutput values.
// You can construct a concrete instance of `WorkloadSecurityOptionsInput` via:
//
//	WorkloadSecurityOptionsArgs{...}
type WorkloadSecurityOptionsInput interface {
	pulumi.Input

	ToWorkloadSecurityOptionsOutput() WorkloadSecurityOptionsOutput
	ToWorkloadSecurityOptionsOutputWithContext(context.Context) WorkloadSecurityOptionsOutput
}

type WorkloadSecurityOptionsArgs struct {
	FileSystemGroupId pulumi.IntInput `pulumi:"fileSystemGroupId"`
}

func (WorkloadSecurityOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSecurityOptions)(nil)).Elem()
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsOutput() WorkloadSecurityOptionsOutput {
	return i.ToWorkloadSecurityOptionsOutputWithContext(context.Background())
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsOutputWithContext(ctx context.Context) WorkloadSecurityOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSecurityOptionsOutput)
}

func (i WorkloadSecurityOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadSecurityOptions] {
	return pulumix.Output[WorkloadSecurityOptions]{
		OutputState: i.ToWorkloadSecurityOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return i.ToWorkloadSecurityOptionsPtrOutputWithContext(context.Background())
}

func (i WorkloadSecurityOptionsArgs) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSecurityOptionsOutput).ToWorkloadSecurityOptionsPtrOutputWithContext(ctx)
}

// WorkloadSecurityOptionsPtrInput is an input type that accepts WorkloadSecurityOptionsArgs, WorkloadSecurityOptionsPtr and WorkloadSecurityOptionsPtrOutput values.
// You can construct a concrete instance of `WorkloadSecurityOptionsPtrInput` via:
//
//	        WorkloadSecurityOptionsArgs{...}
//
//	or:
//
//	        nil
type WorkloadSecurityOptionsPtrInput interface {
	pulumi.Input

	ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput
	ToWorkloadSecurityOptionsPtrOutputWithContext(context.Context) WorkloadSecurityOptionsPtrOutput
}

type workloadSecurityOptionsPtrType WorkloadSecurityOptionsArgs

func WorkloadSecurityOptionsPtr(v *WorkloadSecurityOptionsArgs) WorkloadSecurityOptionsPtrInput {
	return (*workloadSecurityOptionsPtrType)(v)
}

func (*workloadSecurityOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSecurityOptions)(nil)).Elem()
}

func (i *workloadSecurityOptionsPtrType) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return i.ToWorkloadSecurityOptionsPtrOutputWithContext(context.Background())
}

func (i *workloadSecurityOptionsPtrType) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSecurityOptionsPtrOutput)
}

func (i *workloadSecurityOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSecurityOptions] {
	return pulumix.Output[*WorkloadSecurityOptions]{
		OutputState: i.ToWorkloadSecurityOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadSecurityOptionsOutput struct{ *pulumi.OutputState }

func (WorkloadSecurityOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSecurityOptions)(nil)).Elem()
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsOutput() WorkloadSecurityOptionsOutput {
	return o
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsOutputWithContext(ctx context.Context) WorkloadSecurityOptionsOutput {
	return o
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return o.ToWorkloadSecurityOptionsPtrOutputWithContext(context.Background())
}

func (o WorkloadSecurityOptionsOutput) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadSecurityOptions) *WorkloadSecurityOptions {
		return &v
	}).(WorkloadSecurityOptionsPtrOutput)
}

func (o WorkloadSecurityOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadSecurityOptions] {
	return pulumix.Output[WorkloadSecurityOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSecurityOptionsOutput) FileSystemGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadSecurityOptions) int { return v.FileSystemGroupId }).(pulumi.IntOutput)
}

type WorkloadSecurityOptionsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadSecurityOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSecurityOptions)(nil)).Elem()
}

func (o WorkloadSecurityOptionsPtrOutput) ToWorkloadSecurityOptionsPtrOutput() WorkloadSecurityOptionsPtrOutput {
	return o
}

func (o WorkloadSecurityOptionsPtrOutput) ToWorkloadSecurityOptionsPtrOutputWithContext(ctx context.Context) WorkloadSecurityOptionsPtrOutput {
	return o
}

func (o WorkloadSecurityOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSecurityOptions] {
	return pulumix.Output[*WorkloadSecurityOptions]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSecurityOptionsPtrOutput) Elem() WorkloadSecurityOptionsOutput {
	return o.ApplyT(func(v *WorkloadSecurityOptions) WorkloadSecurityOptions {
		if v != nil {
			return *v
		}
		var ret WorkloadSecurityOptions
		return ret
	}).(WorkloadSecurityOptionsOutput)
}

func (o WorkloadSecurityOptionsPtrOutput) FileSystemGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadSecurityOptions) *int {
		if v == nil {
			return nil
		}
		return &v.FileSystemGroupId
	}).(pulumi.IntPtrOutput)
}

type WorkloadSidecar struct {
	Envoy string `pulumi:"envoy"`
}

// WorkloadSidecarInput is an input type that accepts WorkloadSidecarArgs and WorkloadSidecarOutput values.
// You can construct a concrete instance of `WorkloadSidecarInput` via:
//
//	WorkloadSidecarArgs{...}
type WorkloadSidecarInput interface {
	pulumi.Input

	ToWorkloadSidecarOutput() WorkloadSidecarOutput
	ToWorkloadSidecarOutputWithContext(context.Context) WorkloadSidecarOutput
}

type WorkloadSidecarArgs struct {
	Envoy pulumi.StringInput `pulumi:"envoy"`
}

func (WorkloadSidecarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSidecar)(nil)).Elem()
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarOutput() WorkloadSidecarOutput {
	return i.ToWorkloadSidecarOutputWithContext(context.Background())
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarOutputWithContext(ctx context.Context) WorkloadSidecarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSidecarOutput)
}

func (i WorkloadSidecarArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadSidecar] {
	return pulumix.Output[WorkloadSidecar]{
		OutputState: i.ToWorkloadSidecarOutputWithContext(ctx).OutputState,
	}
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return i.ToWorkloadSidecarPtrOutputWithContext(context.Background())
}

func (i WorkloadSidecarArgs) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSidecarOutput).ToWorkloadSidecarPtrOutputWithContext(ctx)
}

// WorkloadSidecarPtrInput is an input type that accepts WorkloadSidecarArgs, WorkloadSidecarPtr and WorkloadSidecarPtrOutput values.
// You can construct a concrete instance of `WorkloadSidecarPtrInput` via:
//
//	        WorkloadSidecarArgs{...}
//
//	or:
//
//	        nil
type WorkloadSidecarPtrInput interface {
	pulumi.Input

	ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput
	ToWorkloadSidecarPtrOutputWithContext(context.Context) WorkloadSidecarPtrOutput
}

type workloadSidecarPtrType WorkloadSidecarArgs

func WorkloadSidecarPtr(v *WorkloadSidecarArgs) WorkloadSidecarPtrInput {
	return (*workloadSidecarPtrType)(v)
}

func (*workloadSidecarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSidecar)(nil)).Elem()
}

func (i *workloadSidecarPtrType) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return i.ToWorkloadSidecarPtrOutputWithContext(context.Background())
}

func (i *workloadSidecarPtrType) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadSidecarPtrOutput)
}

func (i *workloadSidecarPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSidecar] {
	return pulumix.Output[*WorkloadSidecar]{
		OutputState: i.ToWorkloadSidecarPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkloadSidecarOutput struct{ *pulumi.OutputState }

func (WorkloadSidecarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadSidecar)(nil)).Elem()
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarOutput() WorkloadSidecarOutput {
	return o
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarOutputWithContext(ctx context.Context) WorkloadSidecarOutput {
	return o
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return o.ToWorkloadSidecarPtrOutputWithContext(context.Background())
}

func (o WorkloadSidecarOutput) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadSidecar) *WorkloadSidecar {
		return &v
	}).(WorkloadSidecarPtrOutput)
}

func (o WorkloadSidecarOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadSidecar] {
	return pulumix.Output[WorkloadSidecar]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSidecarOutput) Envoy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadSidecar) string { return v.Envoy }).(pulumi.StringOutput)
}

type WorkloadSidecarPtrOutput struct{ *pulumi.OutputState }

func (WorkloadSidecarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadSidecar)(nil)).Elem()
}

func (o WorkloadSidecarPtrOutput) ToWorkloadSidecarPtrOutput() WorkloadSidecarPtrOutput {
	return o
}

func (o WorkloadSidecarPtrOutput) ToWorkloadSidecarPtrOutputWithContext(ctx context.Context) WorkloadSidecarPtrOutput {
	return o
}

func (o WorkloadSidecarPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkloadSidecar] {
	return pulumix.Output[*WorkloadSidecar]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadSidecarPtrOutput) Elem() WorkloadSidecarOutput {
	return o.ApplyT(func(v *WorkloadSidecar) WorkloadSidecar {
		if v != nil {
			return *v
		}
		var ret WorkloadSidecar
		return ret
	}).(WorkloadSidecarOutput)
}

func (o WorkloadSidecarPtrOutput) Envoy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadSidecar) *string {
		if v == nil {
			return nil
		}
		return &v.Envoy
	}).(pulumi.StringPtrOutput)
}

type WorkloadStatus struct {
	CanonicalEndpoint   *string                       `pulumi:"canonicalEndpoint"`
	CurrentReplicaCount *int                          `pulumi:"currentReplicaCount"`
	Endpoint            *string                       `pulumi:"endpoint"`
	HealthChecks        []WorkloadStatusHealthCheck   `pulumi:"healthChecks"`
	InternalName        *string                       `pulumi:"internalName"`
	ParentId            *string                       `pulumi:"parentId"`
	ResolvedImages      []WorkloadStatusResolvedImage `pulumi:"resolvedImages"`
}

// WorkloadStatusInput is an input type that accepts WorkloadStatusArgs and WorkloadStatusOutput values.
// You can construct a concrete instance of `WorkloadStatusInput` via:
//
//	WorkloadStatusArgs{...}
type WorkloadStatusInput interface {
	pulumi.Input

	ToWorkloadStatusOutput() WorkloadStatusOutput
	ToWorkloadStatusOutputWithContext(context.Context) WorkloadStatusOutput
}

type WorkloadStatusArgs struct {
	CanonicalEndpoint   pulumi.StringPtrInput                 `pulumi:"canonicalEndpoint"`
	CurrentReplicaCount pulumi.IntPtrInput                    `pulumi:"currentReplicaCount"`
	Endpoint            pulumi.StringPtrInput                 `pulumi:"endpoint"`
	HealthChecks        WorkloadStatusHealthCheckArrayInput   `pulumi:"healthChecks"`
	InternalName        pulumi.StringPtrInput                 `pulumi:"internalName"`
	ParentId            pulumi.StringPtrInput                 `pulumi:"parentId"`
	ResolvedImages      WorkloadStatusResolvedImageArrayInput `pulumi:"resolvedImages"`
}

func (WorkloadStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatus)(nil)).Elem()
}

func (i WorkloadStatusArgs) ToWorkloadStatusOutput() WorkloadStatusOutput {
	return i.ToWorkloadStatusOutputWithContext(context.Background())
}

func (i WorkloadStatusArgs) ToWorkloadStatusOutputWithContext(ctx context.Context) WorkloadStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusOutput)
}

func (i WorkloadStatusArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatus] {
	return pulumix.Output[WorkloadStatus]{
		OutputState: i.ToWorkloadStatusOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusArrayInput is an input type that accepts WorkloadStatusArray and WorkloadStatusArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusArrayInput` via:
//
//	WorkloadStatusArray{ WorkloadStatusArgs{...} }
type WorkloadStatusArrayInput interface {
	pulumi.Input

	ToWorkloadStatusArrayOutput() WorkloadStatusArrayOutput
	ToWorkloadStatusArrayOutputWithContext(context.Context) WorkloadStatusArrayOutput
}

type WorkloadStatusArray []WorkloadStatusInput

func (WorkloadStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatus)(nil)).Elem()
}

func (i WorkloadStatusArray) ToWorkloadStatusArrayOutput() WorkloadStatusArrayOutput {
	return i.ToWorkloadStatusArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusArray) ToWorkloadStatusArrayOutputWithContext(ctx context.Context) WorkloadStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusArrayOutput)
}

func (i WorkloadStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatus] {
	return pulumix.Output[[]WorkloadStatus]{
		OutputState: i.ToWorkloadStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusOutput struct{ *pulumi.OutputState }

func (WorkloadStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatus)(nil)).Elem()
}

func (o WorkloadStatusOutput) ToWorkloadStatusOutput() WorkloadStatusOutput {
	return o
}

func (o WorkloadStatusOutput) ToWorkloadStatusOutputWithContext(ctx context.Context) WorkloadStatusOutput {
	return o
}

func (o WorkloadStatusOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatus] {
	return pulumix.Output[WorkloadStatus]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusOutput) CanonicalEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.CanonicalEndpoint }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) CurrentReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *int { return v.CurrentReplicaCount }).(pulumi.IntPtrOutput)
}

func (o WorkloadStatusOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) HealthChecks() WorkloadStatusHealthCheckArrayOutput {
	return o.ApplyT(func(v WorkloadStatus) []WorkloadStatusHealthCheck { return v.HealthChecks }).(WorkloadStatusHealthCheckArrayOutput)
}

func (o WorkloadStatusOutput) InternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.InternalName }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) ParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatus) *string { return v.ParentId }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusOutput) ResolvedImages() WorkloadStatusResolvedImageArrayOutput {
	return o.ApplyT(func(v WorkloadStatus) []WorkloadStatusResolvedImage { return v.ResolvedImages }).(WorkloadStatusResolvedImageArrayOutput)
}

type WorkloadStatusArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatus)(nil)).Elem()
}

func (o WorkloadStatusArrayOutput) ToWorkloadStatusArrayOutput() WorkloadStatusArrayOutput {
	return o
}

func (o WorkloadStatusArrayOutput) ToWorkloadStatusArrayOutputWithContext(ctx context.Context) WorkloadStatusArrayOutput {
	return o
}

func (o WorkloadStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatus] {
	return pulumix.Output[[]WorkloadStatus]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusArrayOutput) Index(i pulumi.IntInput) WorkloadStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatus {
		return vs[0].([]WorkloadStatus)[vs[1].(int)]
	}).(WorkloadStatusOutput)
}

type WorkloadStatusHealthCheck struct {
	Active      bool    `pulumi:"active"`
	Code        *int    `pulumi:"code"`
	Failures    *int    `pulumi:"failures"`
	LastChecked *string `pulumi:"lastChecked"`
	Message     *string `pulumi:"message"`
	Success     *bool   `pulumi:"success"`
	Successes   *int    `pulumi:"successes"`
}

// WorkloadStatusHealthCheckInput is an input type that accepts WorkloadStatusHealthCheckArgs and WorkloadStatusHealthCheckOutput values.
// You can construct a concrete instance of `WorkloadStatusHealthCheckInput` via:
//
//	WorkloadStatusHealthCheckArgs{...}
type WorkloadStatusHealthCheckInput interface {
	pulumi.Input

	ToWorkloadStatusHealthCheckOutput() WorkloadStatusHealthCheckOutput
	ToWorkloadStatusHealthCheckOutputWithContext(context.Context) WorkloadStatusHealthCheckOutput
}

type WorkloadStatusHealthCheckArgs struct {
	Active      pulumi.BoolInput      `pulumi:"active"`
	Code        pulumi.IntPtrInput    `pulumi:"code"`
	Failures    pulumi.IntPtrInput    `pulumi:"failures"`
	LastChecked pulumi.StringPtrInput `pulumi:"lastChecked"`
	Message     pulumi.StringPtrInput `pulumi:"message"`
	Success     pulumi.BoolPtrInput   `pulumi:"success"`
	Successes   pulumi.IntPtrInput    `pulumi:"successes"`
}

func (WorkloadStatusHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusHealthCheck)(nil)).Elem()
}

func (i WorkloadStatusHealthCheckArgs) ToWorkloadStatusHealthCheckOutput() WorkloadStatusHealthCheckOutput {
	return i.ToWorkloadStatusHealthCheckOutputWithContext(context.Background())
}

func (i WorkloadStatusHealthCheckArgs) ToWorkloadStatusHealthCheckOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusHealthCheckOutput)
}

func (i WorkloadStatusHealthCheckArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusHealthCheck] {
	return pulumix.Output[WorkloadStatusHealthCheck]{
		OutputState: i.ToWorkloadStatusHealthCheckOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusHealthCheckArrayInput is an input type that accepts WorkloadStatusHealthCheckArray and WorkloadStatusHealthCheckArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusHealthCheckArrayInput` via:
//
//	WorkloadStatusHealthCheckArray{ WorkloadStatusHealthCheckArgs{...} }
type WorkloadStatusHealthCheckArrayInput interface {
	pulumi.Input

	ToWorkloadStatusHealthCheckArrayOutput() WorkloadStatusHealthCheckArrayOutput
	ToWorkloadStatusHealthCheckArrayOutputWithContext(context.Context) WorkloadStatusHealthCheckArrayOutput
}

type WorkloadStatusHealthCheckArray []WorkloadStatusHealthCheckInput

func (WorkloadStatusHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusHealthCheck)(nil)).Elem()
}

func (i WorkloadStatusHealthCheckArray) ToWorkloadStatusHealthCheckArrayOutput() WorkloadStatusHealthCheckArrayOutput {
	return i.ToWorkloadStatusHealthCheckArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusHealthCheckArray) ToWorkloadStatusHealthCheckArrayOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusHealthCheckArrayOutput)
}

func (i WorkloadStatusHealthCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusHealthCheck] {
	return pulumix.Output[[]WorkloadStatusHealthCheck]{
		OutputState: i.ToWorkloadStatusHealthCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusHealthCheckOutput struct{ *pulumi.OutputState }

func (WorkloadStatusHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusHealthCheck)(nil)).Elem()
}

func (o WorkloadStatusHealthCheckOutput) ToWorkloadStatusHealthCheckOutput() WorkloadStatusHealthCheckOutput {
	return o
}

func (o WorkloadStatusHealthCheckOutput) ToWorkloadStatusHealthCheckOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckOutput {
	return o
}

func (o WorkloadStatusHealthCheckOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusHealthCheck] {
	return pulumix.Output[WorkloadStatusHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusHealthCheckOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) bool { return v.Active }).(pulumi.BoolOutput)
}

func (o WorkloadStatusHealthCheckOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *int { return v.Code }).(pulumi.IntPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Failures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *int { return v.Failures }).(pulumi.IntPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) LastChecked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *string { return v.LastChecked }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Success() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *bool { return v.Success }).(pulumi.BoolPtrOutput)
}

func (o WorkloadStatusHealthCheckOutput) Successes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusHealthCheck) *int { return v.Successes }).(pulumi.IntPtrOutput)
}

type WorkloadStatusHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusHealthCheck)(nil)).Elem()
}

func (o WorkloadStatusHealthCheckArrayOutput) ToWorkloadStatusHealthCheckArrayOutput() WorkloadStatusHealthCheckArrayOutput {
	return o
}

func (o WorkloadStatusHealthCheckArrayOutput) ToWorkloadStatusHealthCheckArrayOutputWithContext(ctx context.Context) WorkloadStatusHealthCheckArrayOutput {
	return o
}

func (o WorkloadStatusHealthCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusHealthCheck] {
	return pulumix.Output[[]WorkloadStatusHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusHealthCheckArrayOutput) Index(i pulumi.IntInput) WorkloadStatusHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusHealthCheck {
		return vs[0].([]WorkloadStatusHealthCheck)[vs[1].(int)]
	}).(WorkloadStatusHealthCheckOutput)
}

type WorkloadStatusResolvedImage struct {
	Images             []WorkloadStatusResolvedImageImage `pulumi:"images"`
	ResolvedAt         *string                            `pulumi:"resolvedAt"`
	ResolvedForVersion *int                               `pulumi:"resolvedForVersion"`
}

// WorkloadStatusResolvedImageInput is an input type that accepts WorkloadStatusResolvedImageArgs and WorkloadStatusResolvedImageOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageInput` via:
//
//	WorkloadStatusResolvedImageArgs{...}
type WorkloadStatusResolvedImageInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageOutput() WorkloadStatusResolvedImageOutput
	ToWorkloadStatusResolvedImageOutputWithContext(context.Context) WorkloadStatusResolvedImageOutput
}

type WorkloadStatusResolvedImageArgs struct {
	Images             WorkloadStatusResolvedImageImageArrayInput `pulumi:"images"`
	ResolvedAt         pulumi.StringPtrInput                      `pulumi:"resolvedAt"`
	ResolvedForVersion pulumi.IntPtrInput                         `pulumi:"resolvedForVersion"`
}

func (WorkloadStatusResolvedImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageArgs) ToWorkloadStatusResolvedImageOutput() WorkloadStatusResolvedImageOutput {
	return i.ToWorkloadStatusResolvedImageOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageArgs) ToWorkloadStatusResolvedImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageOutput)
}

func (i WorkloadStatusResolvedImageArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImage] {
	return pulumix.Output[WorkloadStatusResolvedImage]{
		OutputState: i.ToWorkloadStatusResolvedImageOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusResolvedImageArrayInput is an input type that accepts WorkloadStatusResolvedImageArray and WorkloadStatusResolvedImageArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageArrayInput` via:
//
//	WorkloadStatusResolvedImageArray{ WorkloadStatusResolvedImageArgs{...} }
type WorkloadStatusResolvedImageArrayInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageArrayOutput() WorkloadStatusResolvedImageArrayOutput
	ToWorkloadStatusResolvedImageArrayOutputWithContext(context.Context) WorkloadStatusResolvedImageArrayOutput
}

type WorkloadStatusResolvedImageArray []WorkloadStatusResolvedImageInput

func (WorkloadStatusResolvedImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageArray) ToWorkloadStatusResolvedImageArrayOutput() WorkloadStatusResolvedImageArrayOutput {
	return i.ToWorkloadStatusResolvedImageArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageArray) ToWorkloadStatusResolvedImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageArrayOutput)
}

func (i WorkloadStatusResolvedImageArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImage]{
		OutputState: i.ToWorkloadStatusResolvedImageArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusResolvedImageOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageOutput) ToWorkloadStatusResolvedImageOutput() WorkloadStatusResolvedImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageOutput) ToWorkloadStatusResolvedImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImage] {
	return pulumix.Output[WorkloadStatusResolvedImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageOutput) Images() WorkloadStatusResolvedImageImageArrayOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImage) []WorkloadStatusResolvedImageImage { return v.Images }).(WorkloadStatusResolvedImageImageArrayOutput)
}

func (o WorkloadStatusResolvedImageOutput) ResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImage) *string { return v.ResolvedAt }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageOutput) ResolvedForVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImage) *int { return v.ResolvedForVersion }).(pulumi.IntPtrOutput)
}

type WorkloadStatusResolvedImageArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageArrayOutput) ToWorkloadStatusResolvedImageArrayOutput() WorkloadStatusResolvedImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageArrayOutput) ToWorkloadStatusResolvedImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageArrayOutput) Index(i pulumi.IntInput) WorkloadStatusResolvedImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusResolvedImage {
		return vs[0].([]WorkloadStatusResolvedImage)[vs[1].(int)]
	}).(WorkloadStatusResolvedImageOutput)
}

type WorkloadStatusResolvedImageImage struct {
	Digest    *string                                    `pulumi:"digest"`
	Manifests []WorkloadStatusResolvedImageImageManifest `pulumi:"manifests"`
}

// WorkloadStatusResolvedImageImageInput is an input type that accepts WorkloadStatusResolvedImageImageArgs and WorkloadStatusResolvedImageImageOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageInput` via:
//
//	WorkloadStatusResolvedImageImageArgs{...}
type WorkloadStatusResolvedImageImageInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageOutput() WorkloadStatusResolvedImageImageOutput
	ToWorkloadStatusResolvedImageImageOutputWithContext(context.Context) WorkloadStatusResolvedImageImageOutput
}

type WorkloadStatusResolvedImageImageArgs struct {
	Digest    pulumi.StringPtrInput                              `pulumi:"digest"`
	Manifests WorkloadStatusResolvedImageImageManifestArrayInput `pulumi:"manifests"`
}

func (WorkloadStatusResolvedImageImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageArgs) ToWorkloadStatusResolvedImageImageOutput() WorkloadStatusResolvedImageImageOutput {
	return i.ToWorkloadStatusResolvedImageImageOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageArgs) ToWorkloadStatusResolvedImageImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageOutput)
}

func (i WorkloadStatusResolvedImageImageArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImage] {
	return pulumix.Output[WorkloadStatusResolvedImageImage]{
		OutputState: i.ToWorkloadStatusResolvedImageImageOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusResolvedImageImageArrayInput is an input type that accepts WorkloadStatusResolvedImageImageArray and WorkloadStatusResolvedImageImageArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageArrayInput` via:
//
//	WorkloadStatusResolvedImageImageArray{ WorkloadStatusResolvedImageImageArgs{...} }
type WorkloadStatusResolvedImageImageArrayInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageArrayOutput() WorkloadStatusResolvedImageImageArrayOutput
	ToWorkloadStatusResolvedImageImageArrayOutputWithContext(context.Context) WorkloadStatusResolvedImageImageArrayOutput
}

type WorkloadStatusResolvedImageImageArray []WorkloadStatusResolvedImageImageInput

func (WorkloadStatusResolvedImageImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageArray) ToWorkloadStatusResolvedImageImageArrayOutput() WorkloadStatusResolvedImageImageArrayOutput {
	return i.ToWorkloadStatusResolvedImageImageArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageArray) ToWorkloadStatusResolvedImageImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageArrayOutput)
}

func (i WorkloadStatusResolvedImageImageArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImage]{
		OutputState: i.ToWorkloadStatusResolvedImageImageArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusResolvedImageImageOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageOutput) ToWorkloadStatusResolvedImageImageOutput() WorkloadStatusResolvedImageImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageOutput) ToWorkloadStatusResolvedImageImageOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImage] {
	return pulumix.Output[WorkloadStatusResolvedImageImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImage) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageOutput) Manifests() WorkloadStatusResolvedImageImageManifestArrayOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImage) []WorkloadStatusResolvedImageImageManifest {
		return v.Manifests
	}).(WorkloadStatusResolvedImageImageManifestArrayOutput)
}

type WorkloadStatusResolvedImageImageArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImage)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageArrayOutput) ToWorkloadStatusResolvedImageImageArrayOutput() WorkloadStatusResolvedImageImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageArrayOutput) ToWorkloadStatusResolvedImageImageArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImage] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImage]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageArrayOutput) Index(i pulumi.IntInput) WorkloadStatusResolvedImageImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusResolvedImageImage {
		return vs[0].([]WorkloadStatusResolvedImageImage)[vs[1].(int)]
	}).(WorkloadStatusResolvedImageImageOutput)
}

type WorkloadStatusResolvedImageImageManifest struct {
	Digest    *string           `pulumi:"digest"`
	Image     *string           `pulumi:"image"`
	MediaType *string           `pulumi:"mediaType"`
	Platform  map[string]string `pulumi:"platform"`
}

// WorkloadStatusResolvedImageImageManifestInput is an input type that accepts WorkloadStatusResolvedImageImageManifestArgs and WorkloadStatusResolvedImageImageManifestOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageManifestInput` via:
//
//	WorkloadStatusResolvedImageImageManifestArgs{...}
type WorkloadStatusResolvedImageImageManifestInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageManifestOutput() WorkloadStatusResolvedImageImageManifestOutput
	ToWorkloadStatusResolvedImageImageManifestOutputWithContext(context.Context) WorkloadStatusResolvedImageImageManifestOutput
}

type WorkloadStatusResolvedImageImageManifestArgs struct {
	Digest    pulumi.StringPtrInput `pulumi:"digest"`
	Image     pulumi.StringPtrInput `pulumi:"image"`
	MediaType pulumi.StringPtrInput `pulumi:"mediaType"`
	Platform  pulumi.StringMapInput `pulumi:"platform"`
}

func (WorkloadStatusResolvedImageImageManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageManifestArgs) ToWorkloadStatusResolvedImageImageManifestOutput() WorkloadStatusResolvedImageImageManifestOutput {
	return i.ToWorkloadStatusResolvedImageImageManifestOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageManifestArgs) ToWorkloadStatusResolvedImageImageManifestOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageManifestOutput)
}

func (i WorkloadStatusResolvedImageImageManifestArgs) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[WorkloadStatusResolvedImageImageManifest]{
		OutputState: i.ToWorkloadStatusResolvedImageImageManifestOutputWithContext(ctx).OutputState,
	}
}

// WorkloadStatusResolvedImageImageManifestArrayInput is an input type that accepts WorkloadStatusResolvedImageImageManifestArray and WorkloadStatusResolvedImageImageManifestArrayOutput values.
// You can construct a concrete instance of `WorkloadStatusResolvedImageImageManifestArrayInput` via:
//
//	WorkloadStatusResolvedImageImageManifestArray{ WorkloadStatusResolvedImageImageManifestArgs{...} }
type WorkloadStatusResolvedImageImageManifestArrayInput interface {
	pulumi.Input

	ToWorkloadStatusResolvedImageImageManifestArrayOutput() WorkloadStatusResolvedImageImageManifestArrayOutput
	ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(context.Context) WorkloadStatusResolvedImageImageManifestArrayOutput
}

type WorkloadStatusResolvedImageImageManifestArray []WorkloadStatusResolvedImageImageManifestInput

func (WorkloadStatusResolvedImageImageManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (i WorkloadStatusResolvedImageImageManifestArray) ToWorkloadStatusResolvedImageImageManifestArrayOutput() WorkloadStatusResolvedImageImageManifestArrayOutput {
	return i.ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(context.Background())
}

func (i WorkloadStatusResolvedImageImageManifestArray) ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStatusResolvedImageImageManifestArrayOutput)
}

func (i WorkloadStatusResolvedImageImageManifestArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImageManifest]{
		OutputState: i.ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkloadStatusResolvedImageImageManifestOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageManifestOutput) ToWorkloadStatusResolvedImageImageManifestOutput() WorkloadStatusResolvedImageImageManifestOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestOutput) ToWorkloadStatusResolvedImageImageManifestOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[WorkloadStatusResolvedImageImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageManifestOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageManifestOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageManifestOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

func (o WorkloadStatusResolvedImageImageManifestOutput) Platform() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadStatusResolvedImageImageManifest) map[string]string { return v.Platform }).(pulumi.StringMapOutput)
}

type WorkloadStatusResolvedImageImageManifestArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStatusResolvedImageImageManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStatusResolvedImageImageManifest)(nil)).Elem()
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) ToWorkloadStatusResolvedImageImageManifestArrayOutput() WorkloadStatusResolvedImageImageManifestArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) ToWorkloadStatusResolvedImageImageManifestArrayOutputWithContext(ctx context.Context) WorkloadStatusResolvedImageImageManifestArrayOutput {
	return o
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkloadStatusResolvedImageImageManifest] {
	return pulumix.Output[[]WorkloadStatusResolvedImageImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o WorkloadStatusResolvedImageImageManifestArrayOutput) Index(i pulumi.IntInput) WorkloadStatusResolvedImageImageManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStatusResolvedImageImageManifest {
		return vs[0].([]WorkloadStatusResolvedImageImageManifest)[vs[1].(int)]
	}).(WorkloadStatusResolvedImageImageManifestOutput)
}

type GetGvcControlplaneTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Sampling   int               `pulumi:"sampling"`
}

// GetGvcControlplaneTracingInput is an input type that accepts GetGvcControlplaneTracingArgs and GetGvcControlplaneTracingOutput values.
// You can construct a concrete instance of `GetGvcControlplaneTracingInput` via:
//
//	GetGvcControlplaneTracingArgs{...}
type GetGvcControlplaneTracingInput interface {
	pulumi.Input

	ToGetGvcControlplaneTracingOutput() GetGvcControlplaneTracingOutput
	ToGetGvcControlplaneTracingOutputWithContext(context.Context) GetGvcControlplaneTracingOutput
}

type GetGvcControlplaneTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Sampling   pulumi.IntInput       `pulumi:"sampling"`
}

func (GetGvcControlplaneTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcControlplaneTracing)(nil)).Elem()
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingOutput() GetGvcControlplaneTracingOutput {
	return i.ToGetGvcControlplaneTracingOutputWithContext(context.Background())
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingOutputWithContext(ctx context.Context) GetGvcControlplaneTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcControlplaneTracingOutput)
}

func (i GetGvcControlplaneTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcControlplaneTracing] {
	return pulumix.Output[GetGvcControlplaneTracing]{
		OutputState: i.ToGetGvcControlplaneTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return i.ToGetGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i GetGvcControlplaneTracingArgs) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcControlplaneTracingOutput).ToGetGvcControlplaneTracingPtrOutputWithContext(ctx)
}

// GetGvcControlplaneTracingPtrInput is an input type that accepts GetGvcControlplaneTracingArgs, GetGvcControlplaneTracingPtr and GetGvcControlplaneTracingPtrOutput values.
// You can construct a concrete instance of `GetGvcControlplaneTracingPtrInput` via:
//
//	        GetGvcControlplaneTracingArgs{...}
//
//	or:
//
//	        nil
type GetGvcControlplaneTracingPtrInput interface {
	pulumi.Input

	ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput
	ToGetGvcControlplaneTracingPtrOutputWithContext(context.Context) GetGvcControlplaneTracingPtrOutput
}

type getGvcControlplaneTracingPtrType GetGvcControlplaneTracingArgs

func GetGvcControlplaneTracingPtr(v *GetGvcControlplaneTracingArgs) GetGvcControlplaneTracingPtrInput {
	return (*getGvcControlplaneTracingPtrType)(v)
}

func (*getGvcControlplaneTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcControlplaneTracing)(nil)).Elem()
}

func (i *getGvcControlplaneTracingPtrType) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return i.ToGetGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (i *getGvcControlplaneTracingPtrType) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcControlplaneTracingPtrOutput)
}

func (i *getGvcControlplaneTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcControlplaneTracing] {
	return pulumix.Output[*GetGvcControlplaneTracing]{
		OutputState: i.ToGetGvcControlplaneTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcControlplaneTracingOutput struct{ *pulumi.OutputState }

func (GetGvcControlplaneTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcControlplaneTracing)(nil)).Elem()
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingOutput() GetGvcControlplaneTracingOutput {
	return o
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingOutputWithContext(ctx context.Context) GetGvcControlplaneTracingOutput {
	return o
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return o.ToGetGvcControlplaneTracingPtrOutputWithContext(context.Background())
}

func (o GetGvcControlplaneTracingOutput) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcControlplaneTracing) *GetGvcControlplaneTracing {
		return &v
	}).(GetGvcControlplaneTracingPtrOutput)
}

func (o GetGvcControlplaneTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcControlplaneTracing] {
	return pulumix.Output[GetGvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcControlplaneTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGvcControlplaneTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GetGvcControlplaneTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v GetGvcControlplaneTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type GetGvcControlplaneTracingPtrOutput struct{ *pulumi.OutputState }

func (GetGvcControlplaneTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcControlplaneTracing)(nil)).Elem()
}

func (o GetGvcControlplaneTracingPtrOutput) ToGetGvcControlplaneTracingPtrOutput() GetGvcControlplaneTracingPtrOutput {
	return o
}

func (o GetGvcControlplaneTracingPtrOutput) ToGetGvcControlplaneTracingPtrOutputWithContext(ctx context.Context) GetGvcControlplaneTracingPtrOutput {
	return o
}

func (o GetGvcControlplaneTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcControlplaneTracing] {
	return pulumix.Output[*GetGvcControlplaneTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcControlplaneTracingPtrOutput) Elem() GetGvcControlplaneTracingOutput {
	return o.ApplyT(func(v *GetGvcControlplaneTracing) GetGvcControlplaneTracing {
		if v != nil {
			return *v
		}
		var ret GetGvcControlplaneTracing
		return ret
	}).(GetGvcControlplaneTracingOutput)
}

func (o GetGvcControlplaneTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetGvcControlplaneTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GetGvcControlplaneTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetGvcControlplaneTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type GetGvcLightstepTracing struct {
	Credentials *string           `pulumi:"credentials"`
	CustomTags  map[string]string `pulumi:"customTags"`
	Endpoint    string            `pulumi:"endpoint"`
	Sampling    int               `pulumi:"sampling"`
}

// GetGvcLightstepTracingInput is an input type that accepts GetGvcLightstepTracingArgs and GetGvcLightstepTracingOutput values.
// You can construct a concrete instance of `GetGvcLightstepTracingInput` via:
//
//	GetGvcLightstepTracingArgs{...}
type GetGvcLightstepTracingInput interface {
	pulumi.Input

	ToGetGvcLightstepTracingOutput() GetGvcLightstepTracingOutput
	ToGetGvcLightstepTracingOutputWithContext(context.Context) GetGvcLightstepTracingOutput
}

type GetGvcLightstepTracingArgs struct {
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	CustomTags  pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint    pulumi.StringInput    `pulumi:"endpoint"`
	Sampling    pulumi.IntInput       `pulumi:"sampling"`
}

func (GetGvcLightstepTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLightstepTracing)(nil)).Elem()
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingOutput() GetGvcLightstepTracingOutput {
	return i.ToGetGvcLightstepTracingOutputWithContext(context.Background())
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingOutputWithContext(ctx context.Context) GetGvcLightstepTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLightstepTracingOutput)
}

func (i GetGvcLightstepTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcLightstepTracing] {
	return pulumix.Output[GetGvcLightstepTracing]{
		OutputState: i.ToGetGvcLightstepTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return i.ToGetGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i GetGvcLightstepTracingArgs) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLightstepTracingOutput).ToGetGvcLightstepTracingPtrOutputWithContext(ctx)
}

// GetGvcLightstepTracingPtrInput is an input type that accepts GetGvcLightstepTracingArgs, GetGvcLightstepTracingPtr and GetGvcLightstepTracingPtrOutput values.
// You can construct a concrete instance of `GetGvcLightstepTracingPtrInput` via:
//
//	        GetGvcLightstepTracingArgs{...}
//
//	or:
//
//	        nil
type GetGvcLightstepTracingPtrInput interface {
	pulumi.Input

	ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput
	ToGetGvcLightstepTracingPtrOutputWithContext(context.Context) GetGvcLightstepTracingPtrOutput
}

type getGvcLightstepTracingPtrType GetGvcLightstepTracingArgs

func GetGvcLightstepTracingPtr(v *GetGvcLightstepTracingArgs) GetGvcLightstepTracingPtrInput {
	return (*getGvcLightstepTracingPtrType)(v)
}

func (*getGvcLightstepTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLightstepTracing)(nil)).Elem()
}

func (i *getGvcLightstepTracingPtrType) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return i.ToGetGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (i *getGvcLightstepTracingPtrType) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLightstepTracingPtrOutput)
}

func (i *getGvcLightstepTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLightstepTracing] {
	return pulumix.Output[*GetGvcLightstepTracing]{
		OutputState: i.ToGetGvcLightstepTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcLightstepTracingOutput struct{ *pulumi.OutputState }

func (GetGvcLightstepTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLightstepTracing)(nil)).Elem()
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingOutput() GetGvcLightstepTracingOutput {
	return o
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingOutputWithContext(ctx context.Context) GetGvcLightstepTracingOutput {
	return o
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return o.ToGetGvcLightstepTracingPtrOutputWithContext(context.Background())
}

func (o GetGvcLightstepTracingOutput) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcLightstepTracing) *GetGvcLightstepTracing {
		return &v
	}).(GetGvcLightstepTracingPtrOutput)
}

func (o GetGvcLightstepTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcLightstepTracing] {
	return pulumix.Output[GetGvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLightstepTracingOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGvcLightstepTracing) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

func (o GetGvcLightstepTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGvcLightstepTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GetGvcLightstepTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetGvcLightstepTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GetGvcLightstepTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v GetGvcLightstepTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type GetGvcLightstepTracingPtrOutput struct{ *pulumi.OutputState }

func (GetGvcLightstepTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLightstepTracing)(nil)).Elem()
}

func (o GetGvcLightstepTracingPtrOutput) ToGetGvcLightstepTracingPtrOutput() GetGvcLightstepTracingPtrOutput {
	return o
}

func (o GetGvcLightstepTracingPtrOutput) ToGetGvcLightstepTracingPtrOutputWithContext(ctx context.Context) GetGvcLightstepTracingPtrOutput {
	return o
}

func (o GetGvcLightstepTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLightstepTracing] {
	return pulumix.Output[*GetGvcLightstepTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLightstepTracingPtrOutput) Elem() GetGvcLightstepTracingOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) GetGvcLightstepTracing {
		if v != nil {
			return *v
		}
		var ret GetGvcLightstepTracing
		return ret
	}).(GetGvcLightstepTracingOutput)
}

func (o GetGvcLightstepTracingPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

func (o GetGvcLightstepTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GetGvcLightstepTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GetGvcLightstepTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetGvcLightstepTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type GetGvcLoadBalancer struct {
	Dedicated      bool `pulumi:"dedicated"`
	TrustedProxies *int `pulumi:"trustedProxies"`
}

// GetGvcLoadBalancerInput is an input type that accepts GetGvcLoadBalancerArgs and GetGvcLoadBalancerOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerInput` via:
//
//	GetGvcLoadBalancerArgs{...}
type GetGvcLoadBalancerInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerOutput() GetGvcLoadBalancerOutput
	ToGetGvcLoadBalancerOutputWithContext(context.Context) GetGvcLoadBalancerOutput
}

type GetGvcLoadBalancerArgs struct {
	Dedicated      pulumi.BoolInput   `pulumi:"dedicated"`
	TrustedProxies pulumi.IntPtrInput `pulumi:"trustedProxies"`
}

func (GetGvcLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancer)(nil)).Elem()
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerOutput() GetGvcLoadBalancerOutput {
	return i.ToGetGvcLoadBalancerOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerOutputWithContext(ctx context.Context) GetGvcLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerOutput)
}

func (i GetGvcLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancer] {
	return pulumix.Output[GetGvcLoadBalancer]{
		OutputState: i.ToGetGvcLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return i.ToGetGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i GetGvcLoadBalancerArgs) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerOutput).ToGetGvcLoadBalancerPtrOutputWithContext(ctx)
}

// GetGvcLoadBalancerPtrInput is an input type that accepts GetGvcLoadBalancerArgs, GetGvcLoadBalancerPtr and GetGvcLoadBalancerPtrOutput values.
// You can construct a concrete instance of `GetGvcLoadBalancerPtrInput` via:
//
//	        GetGvcLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type GetGvcLoadBalancerPtrInput interface {
	pulumi.Input

	ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput
	ToGetGvcLoadBalancerPtrOutputWithContext(context.Context) GetGvcLoadBalancerPtrOutput
}

type getGvcLoadBalancerPtrType GetGvcLoadBalancerArgs

func GetGvcLoadBalancerPtr(v *GetGvcLoadBalancerArgs) GetGvcLoadBalancerPtrInput {
	return (*getGvcLoadBalancerPtrType)(v)
}

func (*getGvcLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancer)(nil)).Elem()
}

func (i *getGvcLoadBalancerPtrType) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return i.ToGetGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *getGvcLoadBalancerPtrType) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcLoadBalancerPtrOutput)
}

func (i *getGvcLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancer] {
	return pulumix.Output[*GetGvcLoadBalancer]{
		OutputState: i.ToGetGvcLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcLoadBalancerOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcLoadBalancer)(nil)).Elem()
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerOutput() GetGvcLoadBalancerOutput {
	return o
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerOutputWithContext(ctx context.Context) GetGvcLoadBalancerOutput {
	return o
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return o.ToGetGvcLoadBalancerPtrOutputWithContext(context.Background())
}

func (o GetGvcLoadBalancerOutput) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcLoadBalancer) *GetGvcLoadBalancer {
		return &v
	}).(GetGvcLoadBalancerPtrOutput)
}

func (o GetGvcLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcLoadBalancer] {
	return pulumix.Output[GetGvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerOutput) Dedicated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGvcLoadBalancer) bool { return v.Dedicated }).(pulumi.BoolOutput)
}

func (o GetGvcLoadBalancerOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGvcLoadBalancer) *int { return v.TrustedProxies }).(pulumi.IntPtrOutput)
}

type GetGvcLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (GetGvcLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcLoadBalancer)(nil)).Elem()
}

func (o GetGvcLoadBalancerPtrOutput) ToGetGvcLoadBalancerPtrOutput() GetGvcLoadBalancerPtrOutput {
	return o
}

func (o GetGvcLoadBalancerPtrOutput) ToGetGvcLoadBalancerPtrOutputWithContext(ctx context.Context) GetGvcLoadBalancerPtrOutput {
	return o
}

func (o GetGvcLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcLoadBalancer] {
	return pulumix.Output[*GetGvcLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcLoadBalancerPtrOutput) Elem() GetGvcLoadBalancerOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancer) GetGvcLoadBalancer {
		if v != nil {
			return *v
		}
		var ret GetGvcLoadBalancer
		return ret
	}).(GetGvcLoadBalancerOutput)
}

func (o GetGvcLoadBalancerPtrOutput) Dedicated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return &v.Dedicated
	}).(pulumi.BoolPtrOutput)
}

func (o GetGvcLoadBalancerPtrOutput) TrustedProxies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetGvcLoadBalancer) *int {
		if v == nil {
			return nil
		}
		return v.TrustedProxies
	}).(pulumi.IntPtrOutput)
}

type GetGvcOtelTracing struct {
	CustomTags map[string]string `pulumi:"customTags"`
	Endpoint   string            `pulumi:"endpoint"`
	Sampling   int               `pulumi:"sampling"`
}

// GetGvcOtelTracingInput is an input type that accepts GetGvcOtelTracingArgs and GetGvcOtelTracingOutput values.
// You can construct a concrete instance of `GetGvcOtelTracingInput` via:
//
//	GetGvcOtelTracingArgs{...}
type GetGvcOtelTracingInput interface {
	pulumi.Input

	ToGetGvcOtelTracingOutput() GetGvcOtelTracingOutput
	ToGetGvcOtelTracingOutputWithContext(context.Context) GetGvcOtelTracingOutput
}

type GetGvcOtelTracingArgs struct {
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	Endpoint   pulumi.StringInput    `pulumi:"endpoint"`
	Sampling   pulumi.IntInput       `pulumi:"sampling"`
}

func (GetGvcOtelTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcOtelTracing)(nil)).Elem()
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingOutput() GetGvcOtelTracingOutput {
	return i.ToGetGvcOtelTracingOutputWithContext(context.Background())
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingOutputWithContext(ctx context.Context) GetGvcOtelTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcOtelTracingOutput)
}

func (i GetGvcOtelTracingArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcOtelTracing] {
	return pulumix.Output[GetGvcOtelTracing]{
		OutputState: i.ToGetGvcOtelTracingOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return i.ToGetGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i GetGvcOtelTracingArgs) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcOtelTracingOutput).ToGetGvcOtelTracingPtrOutputWithContext(ctx)
}

// GetGvcOtelTracingPtrInput is an input type that accepts GetGvcOtelTracingArgs, GetGvcOtelTracingPtr and GetGvcOtelTracingPtrOutput values.
// You can construct a concrete instance of `GetGvcOtelTracingPtrInput` via:
//
//	        GetGvcOtelTracingArgs{...}
//
//	or:
//
//	        nil
type GetGvcOtelTracingPtrInput interface {
	pulumi.Input

	ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput
	ToGetGvcOtelTracingPtrOutputWithContext(context.Context) GetGvcOtelTracingPtrOutput
}

type getGvcOtelTracingPtrType GetGvcOtelTracingArgs

func GetGvcOtelTracingPtr(v *GetGvcOtelTracingArgs) GetGvcOtelTracingPtrInput {
	return (*getGvcOtelTracingPtrType)(v)
}

func (*getGvcOtelTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcOtelTracing)(nil)).Elem()
}

func (i *getGvcOtelTracingPtrType) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return i.ToGetGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (i *getGvcOtelTracingPtrType) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcOtelTracingPtrOutput)
}

func (i *getGvcOtelTracingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcOtelTracing] {
	return pulumix.Output[*GetGvcOtelTracing]{
		OutputState: i.ToGetGvcOtelTracingPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcOtelTracingOutput struct{ *pulumi.OutputState }

func (GetGvcOtelTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcOtelTracing)(nil)).Elem()
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingOutput() GetGvcOtelTracingOutput {
	return o
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingOutputWithContext(ctx context.Context) GetGvcOtelTracingOutput {
	return o
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return o.ToGetGvcOtelTracingPtrOutputWithContext(context.Background())
}

func (o GetGvcOtelTracingOutput) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcOtelTracing) *GetGvcOtelTracing {
		return &v
	}).(GetGvcOtelTracingPtrOutput)
}

func (o GetGvcOtelTracingOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcOtelTracing] {
	return pulumix.Output[GetGvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcOtelTracingOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGvcOtelTracing) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

func (o GetGvcOtelTracingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetGvcOtelTracing) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GetGvcOtelTracingOutput) Sampling() pulumi.IntOutput {
	return o.ApplyT(func(v GetGvcOtelTracing) int { return v.Sampling }).(pulumi.IntOutput)
}

type GetGvcOtelTracingPtrOutput struct{ *pulumi.OutputState }

func (GetGvcOtelTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcOtelTracing)(nil)).Elem()
}

func (o GetGvcOtelTracingPtrOutput) ToGetGvcOtelTracingPtrOutput() GetGvcOtelTracingPtrOutput {
	return o
}

func (o GetGvcOtelTracingPtrOutput) ToGetGvcOtelTracingPtrOutputWithContext(ctx context.Context) GetGvcOtelTracingPtrOutput {
	return o
}

func (o GetGvcOtelTracingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcOtelTracing] {
	return pulumix.Output[*GetGvcOtelTracing]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcOtelTracingPtrOutput) Elem() GetGvcOtelTracingOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) GetGvcOtelTracing {
		if v != nil {
			return *v
		}
		var ret GetGvcOtelTracing
		return ret
	}).(GetGvcOtelTracingOutput)
}

func (o GetGvcOtelTracingPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

func (o GetGvcOtelTracingPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o GetGvcOtelTracingPtrOutput) Sampling() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetGvcOtelTracing) *int {
		if v == nil {
			return nil
		}
		return &v.Sampling
	}).(pulumi.IntPtrOutput)
}

type GetGvcSidecar struct {
	Envoy string `pulumi:"envoy"`
}

// GetGvcSidecarInput is an input type that accepts GetGvcSidecarArgs and GetGvcSidecarOutput values.
// You can construct a concrete instance of `GetGvcSidecarInput` via:
//
//	GetGvcSidecarArgs{...}
type GetGvcSidecarInput interface {
	pulumi.Input

	ToGetGvcSidecarOutput() GetGvcSidecarOutput
	ToGetGvcSidecarOutputWithContext(context.Context) GetGvcSidecarOutput
}

type GetGvcSidecarArgs struct {
	Envoy pulumi.StringInput `pulumi:"envoy"`
}

func (GetGvcSidecarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcSidecar)(nil)).Elem()
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarOutput() GetGvcSidecarOutput {
	return i.ToGetGvcSidecarOutputWithContext(context.Background())
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarOutputWithContext(ctx context.Context) GetGvcSidecarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcSidecarOutput)
}

func (i GetGvcSidecarArgs) ToOutput(ctx context.Context) pulumix.Output[GetGvcSidecar] {
	return pulumix.Output[GetGvcSidecar]{
		OutputState: i.ToGetGvcSidecarOutputWithContext(ctx).OutputState,
	}
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return i.ToGetGvcSidecarPtrOutputWithContext(context.Background())
}

func (i GetGvcSidecarArgs) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcSidecarOutput).ToGetGvcSidecarPtrOutputWithContext(ctx)
}

// GetGvcSidecarPtrInput is an input type that accepts GetGvcSidecarArgs, GetGvcSidecarPtr and GetGvcSidecarPtrOutput values.
// You can construct a concrete instance of `GetGvcSidecarPtrInput` via:
//
//	        GetGvcSidecarArgs{...}
//
//	or:
//
//	        nil
type GetGvcSidecarPtrInput interface {
	pulumi.Input

	ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput
	ToGetGvcSidecarPtrOutputWithContext(context.Context) GetGvcSidecarPtrOutput
}

type getGvcSidecarPtrType GetGvcSidecarArgs

func GetGvcSidecarPtr(v *GetGvcSidecarArgs) GetGvcSidecarPtrInput {
	return (*getGvcSidecarPtrType)(v)
}

func (*getGvcSidecarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcSidecar)(nil)).Elem()
}

func (i *getGvcSidecarPtrType) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return i.ToGetGvcSidecarPtrOutputWithContext(context.Background())
}

func (i *getGvcSidecarPtrType) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGvcSidecarPtrOutput)
}

func (i *getGvcSidecarPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetGvcSidecar] {
	return pulumix.Output[*GetGvcSidecar]{
		OutputState: i.ToGetGvcSidecarPtrOutputWithContext(ctx).OutputState,
	}
}

type GetGvcSidecarOutput struct{ *pulumi.OutputState }

func (GetGvcSidecarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGvcSidecar)(nil)).Elem()
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarOutput() GetGvcSidecarOutput {
	return o
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarOutputWithContext(ctx context.Context) GetGvcSidecarOutput {
	return o
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return o.ToGetGvcSidecarPtrOutputWithContext(context.Background())
}

func (o GetGvcSidecarOutput) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGvcSidecar) *GetGvcSidecar {
		return &v
	}).(GetGvcSidecarPtrOutput)
}

func (o GetGvcSidecarOutput) ToOutput(ctx context.Context) pulumix.Output[GetGvcSidecar] {
	return pulumix.Output[GetGvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcSidecarOutput) Envoy() pulumi.StringOutput {
	return o.ApplyT(func(v GetGvcSidecar) string { return v.Envoy }).(pulumi.StringOutput)
}

type GetGvcSidecarPtrOutput struct{ *pulumi.OutputState }

func (GetGvcSidecarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGvcSidecar)(nil)).Elem()
}

func (o GetGvcSidecarPtrOutput) ToGetGvcSidecarPtrOutput() GetGvcSidecarPtrOutput {
	return o
}

func (o GetGvcSidecarPtrOutput) ToGetGvcSidecarPtrOutputWithContext(ctx context.Context) GetGvcSidecarPtrOutput {
	return o
}

func (o GetGvcSidecarPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetGvcSidecar] {
	return pulumix.Output[*GetGvcSidecar]{
		OutputState: o.OutputState,
	}
}

func (o GetGvcSidecarPtrOutput) Elem() GetGvcSidecarOutput {
	return o.ApplyT(func(v *GetGvcSidecar) GetGvcSidecar {
		if v != nil {
			return *v
		}
		var ret GetGvcSidecar
		return ret
	}).(GetGvcSidecarOutput)
}

func (o GetGvcSidecarPtrOutput) Envoy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGvcSidecar) *string {
		if v == nil {
			return nil
		}
		return &v.Envoy
	}).(pulumi.StringPtrOutput)
}

type GetImageManifest struct {
	Configs       []GetImageManifestConfig `pulumi:"configs"`
	Layers        []GetImageManifestLayer  `pulumi:"layers"`
	MediaType     string                   `pulumi:"mediaType"`
	SchemaVersion int                      `pulumi:"schemaVersion"`
}

// GetImageManifestInput is an input type that accepts GetImageManifestArgs and GetImageManifestOutput values.
// You can construct a concrete instance of `GetImageManifestInput` via:
//
//	GetImageManifestArgs{...}
type GetImageManifestInput interface {
	pulumi.Input

	ToGetImageManifestOutput() GetImageManifestOutput
	ToGetImageManifestOutputWithContext(context.Context) GetImageManifestOutput
}

type GetImageManifestArgs struct {
	Configs       GetImageManifestConfigArrayInput `pulumi:"configs"`
	Layers        GetImageManifestLayerArrayInput  `pulumi:"layers"`
	MediaType     pulumi.StringInput               `pulumi:"mediaType"`
	SchemaVersion pulumi.IntInput                  `pulumi:"schemaVersion"`
}

func (GetImageManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifest)(nil)).Elem()
}

func (i GetImageManifestArgs) ToGetImageManifestOutput() GetImageManifestOutput {
	return i.ToGetImageManifestOutputWithContext(context.Background())
}

func (i GetImageManifestArgs) ToGetImageManifestOutputWithContext(ctx context.Context) GetImageManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestOutput)
}

func (i GetImageManifestArgs) ToOutput(ctx context.Context) pulumix.Output[GetImageManifest] {
	return pulumix.Output[GetImageManifest]{
		OutputState: i.ToGetImageManifestOutputWithContext(ctx).OutputState,
	}
}

// GetImageManifestArrayInput is an input type that accepts GetImageManifestArray and GetImageManifestArrayOutput values.
// You can construct a concrete instance of `GetImageManifestArrayInput` via:
//
//	GetImageManifestArray{ GetImageManifestArgs{...} }
type GetImageManifestArrayInput interface {
	pulumi.Input

	ToGetImageManifestArrayOutput() GetImageManifestArrayOutput
	ToGetImageManifestArrayOutputWithContext(context.Context) GetImageManifestArrayOutput
}

type GetImageManifestArray []GetImageManifestInput

func (GetImageManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifest)(nil)).Elem()
}

func (i GetImageManifestArray) ToGetImageManifestArrayOutput() GetImageManifestArrayOutput {
	return i.ToGetImageManifestArrayOutputWithContext(context.Background())
}

func (i GetImageManifestArray) ToGetImageManifestArrayOutputWithContext(ctx context.Context) GetImageManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestArrayOutput)
}

func (i GetImageManifestArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifest] {
	return pulumix.Output[[]GetImageManifest]{
		OutputState: i.ToGetImageManifestArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImageManifestOutput struct{ *pulumi.OutputState }

func (GetImageManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifest)(nil)).Elem()
}

func (o GetImageManifestOutput) ToGetImageManifestOutput() GetImageManifestOutput {
	return o
}

func (o GetImageManifestOutput) ToGetImageManifestOutputWithContext(ctx context.Context) GetImageManifestOutput {
	return o
}

func (o GetImageManifestOutput) ToOutput(ctx context.Context) pulumix.Output[GetImageManifest] {
	return pulumix.Output[GetImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestOutput) Configs() GetImageManifestConfigArrayOutput {
	return o.ApplyT(func(v GetImageManifest) []GetImageManifestConfig { return v.Configs }).(GetImageManifestConfigArrayOutput)
}

func (o GetImageManifestOutput) Layers() GetImageManifestLayerArrayOutput {
	return o.ApplyT(func(v GetImageManifest) []GetImageManifestLayer { return v.Layers }).(GetImageManifestLayerArrayOutput)
}

func (o GetImageManifestOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifest) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImageManifestOutput) SchemaVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageManifest) int { return v.SchemaVersion }).(pulumi.IntOutput)
}

type GetImageManifestArrayOutput struct{ *pulumi.OutputState }

func (GetImageManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifest)(nil)).Elem()
}

func (o GetImageManifestArrayOutput) ToGetImageManifestArrayOutput() GetImageManifestArrayOutput {
	return o
}

func (o GetImageManifestArrayOutput) ToGetImageManifestArrayOutputWithContext(ctx context.Context) GetImageManifestArrayOutput {
	return o
}

func (o GetImageManifestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifest] {
	return pulumix.Output[[]GetImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestArrayOutput) Index(i pulumi.IntInput) GetImageManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageManifest {
		return vs[0].([]GetImageManifest)[vs[1].(int)]
	}).(GetImageManifestOutput)
}

type GetImageManifestConfig struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImageManifestConfigInput is an input type that accepts GetImageManifestConfigArgs and GetImageManifestConfigOutput values.
// You can construct a concrete instance of `GetImageManifestConfigInput` via:
//
//	GetImageManifestConfigArgs{...}
type GetImageManifestConfigInput interface {
	pulumi.Input

	ToGetImageManifestConfigOutput() GetImageManifestConfigOutput
	ToGetImageManifestConfigOutputWithContext(context.Context) GetImageManifestConfigOutput
}

type GetImageManifestConfigArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImageManifestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestConfig)(nil)).Elem()
}

func (i GetImageManifestConfigArgs) ToGetImageManifestConfigOutput() GetImageManifestConfigOutput {
	return i.ToGetImageManifestConfigOutputWithContext(context.Background())
}

func (i GetImageManifestConfigArgs) ToGetImageManifestConfigOutputWithContext(ctx context.Context) GetImageManifestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestConfigOutput)
}

func (i GetImageManifestConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestConfig] {
	return pulumix.Output[GetImageManifestConfig]{
		OutputState: i.ToGetImageManifestConfigOutputWithContext(ctx).OutputState,
	}
}

// GetImageManifestConfigArrayInput is an input type that accepts GetImageManifestConfigArray and GetImageManifestConfigArrayOutput values.
// You can construct a concrete instance of `GetImageManifestConfigArrayInput` via:
//
//	GetImageManifestConfigArray{ GetImageManifestConfigArgs{...} }
type GetImageManifestConfigArrayInput interface {
	pulumi.Input

	ToGetImageManifestConfigArrayOutput() GetImageManifestConfigArrayOutput
	ToGetImageManifestConfigArrayOutputWithContext(context.Context) GetImageManifestConfigArrayOutput
}

type GetImageManifestConfigArray []GetImageManifestConfigInput

func (GetImageManifestConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestConfig)(nil)).Elem()
}

func (i GetImageManifestConfigArray) ToGetImageManifestConfigArrayOutput() GetImageManifestConfigArrayOutput {
	return i.ToGetImageManifestConfigArrayOutputWithContext(context.Background())
}

func (i GetImageManifestConfigArray) ToGetImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImageManifestConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestConfigArrayOutput)
}

func (i GetImageManifestConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestConfig] {
	return pulumix.Output[[]GetImageManifestConfig]{
		OutputState: i.ToGetImageManifestConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImageManifestConfigOutput struct{ *pulumi.OutputState }

func (GetImageManifestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestConfig)(nil)).Elem()
}

func (o GetImageManifestConfigOutput) ToGetImageManifestConfigOutput() GetImageManifestConfigOutput {
	return o
}

func (o GetImageManifestConfigOutput) ToGetImageManifestConfigOutputWithContext(ctx context.Context) GetImageManifestConfigOutput {
	return o
}

func (o GetImageManifestConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestConfig] {
	return pulumix.Output[GetImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestConfigOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestConfig) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImageManifestConfigOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestConfig) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImageManifestConfigOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageManifestConfig) int { return v.Size }).(pulumi.IntOutput)
}

type GetImageManifestConfigArrayOutput struct{ *pulumi.OutputState }

func (GetImageManifestConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestConfig)(nil)).Elem()
}

func (o GetImageManifestConfigArrayOutput) ToGetImageManifestConfigArrayOutput() GetImageManifestConfigArrayOutput {
	return o
}

func (o GetImageManifestConfigArrayOutput) ToGetImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImageManifestConfigArrayOutput {
	return o
}

func (o GetImageManifestConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestConfig] {
	return pulumix.Output[[]GetImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestConfigArrayOutput) Index(i pulumi.IntInput) GetImageManifestConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageManifestConfig {
		return vs[0].([]GetImageManifestConfig)[vs[1].(int)]
	}).(GetImageManifestConfigOutput)
}

type GetImageManifestLayer struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImageManifestLayerInput is an input type that accepts GetImageManifestLayerArgs and GetImageManifestLayerOutput values.
// You can construct a concrete instance of `GetImageManifestLayerInput` via:
//
//	GetImageManifestLayerArgs{...}
type GetImageManifestLayerInput interface {
	pulumi.Input

	ToGetImageManifestLayerOutput() GetImageManifestLayerOutput
	ToGetImageManifestLayerOutputWithContext(context.Context) GetImageManifestLayerOutput
}

type GetImageManifestLayerArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImageManifestLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestLayer)(nil)).Elem()
}

func (i GetImageManifestLayerArgs) ToGetImageManifestLayerOutput() GetImageManifestLayerOutput {
	return i.ToGetImageManifestLayerOutputWithContext(context.Background())
}

func (i GetImageManifestLayerArgs) ToGetImageManifestLayerOutputWithContext(ctx context.Context) GetImageManifestLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestLayerOutput)
}

func (i GetImageManifestLayerArgs) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestLayer] {
	return pulumix.Output[GetImageManifestLayer]{
		OutputState: i.ToGetImageManifestLayerOutputWithContext(ctx).OutputState,
	}
}

// GetImageManifestLayerArrayInput is an input type that accepts GetImageManifestLayerArray and GetImageManifestLayerArrayOutput values.
// You can construct a concrete instance of `GetImageManifestLayerArrayInput` via:
//
//	GetImageManifestLayerArray{ GetImageManifestLayerArgs{...} }
type GetImageManifestLayerArrayInput interface {
	pulumi.Input

	ToGetImageManifestLayerArrayOutput() GetImageManifestLayerArrayOutput
	ToGetImageManifestLayerArrayOutputWithContext(context.Context) GetImageManifestLayerArrayOutput
}

type GetImageManifestLayerArray []GetImageManifestLayerInput

func (GetImageManifestLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestLayer)(nil)).Elem()
}

func (i GetImageManifestLayerArray) ToGetImageManifestLayerArrayOutput() GetImageManifestLayerArrayOutput {
	return i.ToGetImageManifestLayerArrayOutputWithContext(context.Background())
}

func (i GetImageManifestLayerArray) ToGetImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImageManifestLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageManifestLayerArrayOutput)
}

func (i GetImageManifestLayerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestLayer] {
	return pulumix.Output[[]GetImageManifestLayer]{
		OutputState: i.ToGetImageManifestLayerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImageManifestLayerOutput struct{ *pulumi.OutputState }

func (GetImageManifestLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestLayer)(nil)).Elem()
}

func (o GetImageManifestLayerOutput) ToGetImageManifestLayerOutput() GetImageManifestLayerOutput {
	return o
}

func (o GetImageManifestLayerOutput) ToGetImageManifestLayerOutputWithContext(ctx context.Context) GetImageManifestLayerOutput {
	return o
}

func (o GetImageManifestLayerOutput) ToOutput(ctx context.Context) pulumix.Output[GetImageManifestLayer] {
	return pulumix.Output[GetImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestLayerOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestLayer) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImageManifestLayerOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestLayer) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImageManifestLayerOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageManifestLayer) int { return v.Size }).(pulumi.IntOutput)
}

type GetImageManifestLayerArrayOutput struct{ *pulumi.OutputState }

func (GetImageManifestLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageManifestLayer)(nil)).Elem()
}

func (o GetImageManifestLayerArrayOutput) ToGetImageManifestLayerArrayOutput() GetImageManifestLayerArrayOutput {
	return o
}

func (o GetImageManifestLayerArrayOutput) ToGetImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImageManifestLayerArrayOutput {
	return o
}

func (o GetImageManifestLayerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImageManifestLayer] {
	return pulumix.Output[[]GetImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImageManifestLayerArrayOutput) Index(i pulumi.IntInput) GetImageManifestLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageManifestLayer {
		return vs[0].([]GetImageManifestLayer)[vs[1].(int)]
	}).(GetImageManifestLayerOutput)
}

type GetImagesImage struct {
	CplnId     string                   `pulumi:"cplnId"`
	Digest     string                   `pulumi:"digest"`
	Manifests  []GetImagesImageManifest `pulumi:"manifests"`
	Name       string                   `pulumi:"name"`
	Repository string                   `pulumi:"repository"`
	SelfLink   string                   `pulumi:"selfLink"`
	Tag        string                   `pulumi:"tag"`
	Tags       map[string]string        `pulumi:"tags"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//	GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	CplnId     pulumi.StringInput               `pulumi:"cplnId"`
	Digest     pulumi.StringInput               `pulumi:"digest"`
	Manifests  GetImagesImageManifestArrayInput `pulumi:"manifests"`
	Name       pulumi.StringInput               `pulumi:"name"`
	Repository pulumi.StringInput               `pulumi:"repository"`
	SelfLink   pulumi.StringInput               `pulumi:"selfLink"`
	Tag        pulumi.StringInput               `pulumi:"tag"`
	Tags       pulumi.StringMapInput            `pulumi:"tags"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

func (i GetImagesImageArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImage] {
	return pulumix.Output[GetImagesImage]{
		OutputState: i.ToGetImagesImageOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//	GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

func (i GetImagesImageArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImage] {
	return pulumix.Output[[]GetImagesImage]{
		OutputState: i.ToGetImagesImageArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImage] {
	return pulumix.Output[GetImagesImage]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CplnId }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Manifests() GetImagesImageManifestArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImageManifest { return v.Manifests }).(GetImagesImageManifestArrayOutput)
}

func (o GetImagesImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Repository }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Tag }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetImagesImage) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImage] {
	return pulumix.Output[[]GetImagesImage]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetImagesImageManifest struct {
	Configs       []GetImagesImageManifestConfig `pulumi:"configs"`
	Layers        []GetImagesImageManifestLayer  `pulumi:"layers"`
	MediaType     string                         `pulumi:"mediaType"`
	SchemaVersion int                            `pulumi:"schemaVersion"`
}

// GetImagesImageManifestInput is an input type that accepts GetImagesImageManifestArgs and GetImagesImageManifestOutput values.
// You can construct a concrete instance of `GetImagesImageManifestInput` via:
//
//	GetImagesImageManifestArgs{...}
type GetImagesImageManifestInput interface {
	pulumi.Input

	ToGetImagesImageManifestOutput() GetImagesImageManifestOutput
	ToGetImagesImageManifestOutputWithContext(context.Context) GetImagesImageManifestOutput
}

type GetImagesImageManifestArgs struct {
	Configs       GetImagesImageManifestConfigArrayInput `pulumi:"configs"`
	Layers        GetImagesImageManifestLayerArrayInput  `pulumi:"layers"`
	MediaType     pulumi.StringInput                     `pulumi:"mediaType"`
	SchemaVersion pulumi.IntInput                        `pulumi:"schemaVersion"`
}

func (GetImagesImageManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifest)(nil)).Elem()
}

func (i GetImagesImageManifestArgs) ToGetImagesImageManifestOutput() GetImagesImageManifestOutput {
	return i.ToGetImagesImageManifestOutputWithContext(context.Background())
}

func (i GetImagesImageManifestArgs) ToGetImagesImageManifestOutputWithContext(ctx context.Context) GetImagesImageManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestOutput)
}

func (i GetImagesImageManifestArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifest] {
	return pulumix.Output[GetImagesImageManifest]{
		OutputState: i.ToGetImagesImageManifestOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageManifestArrayInput is an input type that accepts GetImagesImageManifestArray and GetImagesImageManifestArrayOutput values.
// You can construct a concrete instance of `GetImagesImageManifestArrayInput` via:
//
//	GetImagesImageManifestArray{ GetImagesImageManifestArgs{...} }
type GetImagesImageManifestArrayInput interface {
	pulumi.Input

	ToGetImagesImageManifestArrayOutput() GetImagesImageManifestArrayOutput
	ToGetImagesImageManifestArrayOutputWithContext(context.Context) GetImagesImageManifestArrayOutput
}

type GetImagesImageManifestArray []GetImagesImageManifestInput

func (GetImagesImageManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifest)(nil)).Elem()
}

func (i GetImagesImageManifestArray) ToGetImagesImageManifestArrayOutput() GetImagesImageManifestArrayOutput {
	return i.ToGetImagesImageManifestArrayOutputWithContext(context.Background())
}

func (i GetImagesImageManifestArray) ToGetImagesImageManifestArrayOutputWithContext(ctx context.Context) GetImagesImageManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestArrayOutput)
}

func (i GetImagesImageManifestArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifest] {
	return pulumix.Output[[]GetImagesImageManifest]{
		OutputState: i.ToGetImagesImageManifestArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageManifestOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifest)(nil)).Elem()
}

func (o GetImagesImageManifestOutput) ToGetImagesImageManifestOutput() GetImagesImageManifestOutput {
	return o
}

func (o GetImagesImageManifestOutput) ToGetImagesImageManifestOutputWithContext(ctx context.Context) GetImagesImageManifestOutput {
	return o
}

func (o GetImagesImageManifestOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifest] {
	return pulumix.Output[GetImagesImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestOutput) Configs() GetImagesImageManifestConfigArrayOutput {
	return o.ApplyT(func(v GetImagesImageManifest) []GetImagesImageManifestConfig { return v.Configs }).(GetImagesImageManifestConfigArrayOutput)
}

func (o GetImagesImageManifestOutput) Layers() GetImagesImageManifestLayerArrayOutput {
	return o.ApplyT(func(v GetImagesImageManifest) []GetImagesImageManifestLayer { return v.Layers }).(GetImagesImageManifestLayerArrayOutput)
}

func (o GetImagesImageManifestOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifest) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestOutput) SchemaVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageManifest) int { return v.SchemaVersion }).(pulumi.IntOutput)
}

type GetImagesImageManifestArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifest)(nil)).Elem()
}

func (o GetImagesImageManifestArrayOutput) ToGetImagesImageManifestArrayOutput() GetImagesImageManifestArrayOutput {
	return o
}

func (o GetImagesImageManifestArrayOutput) ToGetImagesImageManifestArrayOutputWithContext(ctx context.Context) GetImagesImageManifestArrayOutput {
	return o
}

func (o GetImagesImageManifestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifest] {
	return pulumix.Output[[]GetImagesImageManifest]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestArrayOutput) Index(i pulumi.IntInput) GetImagesImageManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageManifest {
		return vs[0].([]GetImagesImageManifest)[vs[1].(int)]
	}).(GetImagesImageManifestOutput)
}

type GetImagesImageManifestConfig struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImagesImageManifestConfigInput is an input type that accepts GetImagesImageManifestConfigArgs and GetImagesImageManifestConfigOutput values.
// You can construct a concrete instance of `GetImagesImageManifestConfigInput` via:
//
//	GetImagesImageManifestConfigArgs{...}
type GetImagesImageManifestConfigInput interface {
	pulumi.Input

	ToGetImagesImageManifestConfigOutput() GetImagesImageManifestConfigOutput
	ToGetImagesImageManifestConfigOutputWithContext(context.Context) GetImagesImageManifestConfigOutput
}

type GetImagesImageManifestConfigArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImagesImageManifestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestConfig)(nil)).Elem()
}

func (i GetImagesImageManifestConfigArgs) ToGetImagesImageManifestConfigOutput() GetImagesImageManifestConfigOutput {
	return i.ToGetImagesImageManifestConfigOutputWithContext(context.Background())
}

func (i GetImagesImageManifestConfigArgs) ToGetImagesImageManifestConfigOutputWithContext(ctx context.Context) GetImagesImageManifestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestConfigOutput)
}

func (i GetImagesImageManifestConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestConfig] {
	return pulumix.Output[GetImagesImageManifestConfig]{
		OutputState: i.ToGetImagesImageManifestConfigOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageManifestConfigArrayInput is an input type that accepts GetImagesImageManifestConfigArray and GetImagesImageManifestConfigArrayOutput values.
// You can construct a concrete instance of `GetImagesImageManifestConfigArrayInput` via:
//
//	GetImagesImageManifestConfigArray{ GetImagesImageManifestConfigArgs{...} }
type GetImagesImageManifestConfigArrayInput interface {
	pulumi.Input

	ToGetImagesImageManifestConfigArrayOutput() GetImagesImageManifestConfigArrayOutput
	ToGetImagesImageManifestConfigArrayOutputWithContext(context.Context) GetImagesImageManifestConfigArrayOutput
}

type GetImagesImageManifestConfigArray []GetImagesImageManifestConfigInput

func (GetImagesImageManifestConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestConfig)(nil)).Elem()
}

func (i GetImagesImageManifestConfigArray) ToGetImagesImageManifestConfigArrayOutput() GetImagesImageManifestConfigArrayOutput {
	return i.ToGetImagesImageManifestConfigArrayOutputWithContext(context.Background())
}

func (i GetImagesImageManifestConfigArray) ToGetImagesImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImagesImageManifestConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestConfigArrayOutput)
}

func (i GetImagesImageManifestConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestConfig] {
	return pulumix.Output[[]GetImagesImageManifestConfig]{
		OutputState: i.ToGetImagesImageManifestConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageManifestConfigOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestConfig)(nil)).Elem()
}

func (o GetImagesImageManifestConfigOutput) ToGetImagesImageManifestConfigOutput() GetImagesImageManifestConfigOutput {
	return o
}

func (o GetImagesImageManifestConfigOutput) ToGetImagesImageManifestConfigOutputWithContext(ctx context.Context) GetImagesImageManifestConfigOutput {
	return o
}

func (o GetImagesImageManifestConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestConfig] {
	return pulumix.Output[GetImagesImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestConfigOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestConfig) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestConfigOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestConfig) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestConfigOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageManifestConfig) int { return v.Size }).(pulumi.IntOutput)
}

type GetImagesImageManifestConfigArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestConfig)(nil)).Elem()
}

func (o GetImagesImageManifestConfigArrayOutput) ToGetImagesImageManifestConfigArrayOutput() GetImagesImageManifestConfigArrayOutput {
	return o
}

func (o GetImagesImageManifestConfigArrayOutput) ToGetImagesImageManifestConfigArrayOutputWithContext(ctx context.Context) GetImagesImageManifestConfigArrayOutput {
	return o
}

func (o GetImagesImageManifestConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestConfig] {
	return pulumix.Output[[]GetImagesImageManifestConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestConfigArrayOutput) Index(i pulumi.IntInput) GetImagesImageManifestConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageManifestConfig {
		return vs[0].([]GetImagesImageManifestConfig)[vs[1].(int)]
	}).(GetImagesImageManifestConfigOutput)
}

type GetImagesImageManifestLayer struct {
	Digest    string `pulumi:"digest"`
	MediaType string `pulumi:"mediaType"`
	Size      int    `pulumi:"size"`
}

// GetImagesImageManifestLayerInput is an input type that accepts GetImagesImageManifestLayerArgs and GetImagesImageManifestLayerOutput values.
// You can construct a concrete instance of `GetImagesImageManifestLayerInput` via:
//
//	GetImagesImageManifestLayerArgs{...}
type GetImagesImageManifestLayerInput interface {
	pulumi.Input

	ToGetImagesImageManifestLayerOutput() GetImagesImageManifestLayerOutput
	ToGetImagesImageManifestLayerOutputWithContext(context.Context) GetImagesImageManifestLayerOutput
}

type GetImagesImageManifestLayerArgs struct {
	Digest    pulumi.StringInput `pulumi:"digest"`
	MediaType pulumi.StringInput `pulumi:"mediaType"`
	Size      pulumi.IntInput    `pulumi:"size"`
}

func (GetImagesImageManifestLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestLayer)(nil)).Elem()
}

func (i GetImagesImageManifestLayerArgs) ToGetImagesImageManifestLayerOutput() GetImagesImageManifestLayerOutput {
	return i.ToGetImagesImageManifestLayerOutputWithContext(context.Background())
}

func (i GetImagesImageManifestLayerArgs) ToGetImagesImageManifestLayerOutputWithContext(ctx context.Context) GetImagesImageManifestLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestLayerOutput)
}

func (i GetImagesImageManifestLayerArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestLayer] {
	return pulumix.Output[GetImagesImageManifestLayer]{
		OutputState: i.ToGetImagesImageManifestLayerOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageManifestLayerArrayInput is an input type that accepts GetImagesImageManifestLayerArray and GetImagesImageManifestLayerArrayOutput values.
// You can construct a concrete instance of `GetImagesImageManifestLayerArrayInput` via:
//
//	GetImagesImageManifestLayerArray{ GetImagesImageManifestLayerArgs{...} }
type GetImagesImageManifestLayerArrayInput interface {
	pulumi.Input

	ToGetImagesImageManifestLayerArrayOutput() GetImagesImageManifestLayerArrayOutput
	ToGetImagesImageManifestLayerArrayOutputWithContext(context.Context) GetImagesImageManifestLayerArrayOutput
}

type GetImagesImageManifestLayerArray []GetImagesImageManifestLayerInput

func (GetImagesImageManifestLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestLayer)(nil)).Elem()
}

func (i GetImagesImageManifestLayerArray) ToGetImagesImageManifestLayerArrayOutput() GetImagesImageManifestLayerArrayOutput {
	return i.ToGetImagesImageManifestLayerArrayOutputWithContext(context.Background())
}

func (i GetImagesImageManifestLayerArray) ToGetImagesImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImagesImageManifestLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageManifestLayerArrayOutput)
}

func (i GetImagesImageManifestLayerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestLayer] {
	return pulumix.Output[[]GetImagesImageManifestLayer]{
		OutputState: i.ToGetImagesImageManifestLayerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageManifestLayerOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageManifestLayer)(nil)).Elem()
}

func (o GetImagesImageManifestLayerOutput) ToGetImagesImageManifestLayerOutput() GetImagesImageManifestLayerOutput {
	return o
}

func (o GetImagesImageManifestLayerOutput) ToGetImagesImageManifestLayerOutputWithContext(ctx context.Context) GetImagesImageManifestLayerOutput {
	return o
}

func (o GetImagesImageManifestLayerOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImageManifestLayer] {
	return pulumix.Output[GetImagesImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestLayerOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestLayer) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestLayerOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageManifestLayer) string { return v.MediaType }).(pulumi.StringOutput)
}

func (o GetImagesImageManifestLayerOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageManifestLayer) int { return v.Size }).(pulumi.IntOutput)
}

type GetImagesImageManifestLayerArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageManifestLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageManifestLayer)(nil)).Elem()
}

func (o GetImagesImageManifestLayerArrayOutput) ToGetImagesImageManifestLayerArrayOutput() GetImagesImageManifestLayerArrayOutput {
	return o
}

func (o GetImagesImageManifestLayerArrayOutput) ToGetImagesImageManifestLayerArrayOutputWithContext(ctx context.Context) GetImagesImageManifestLayerArrayOutput {
	return o
}

func (o GetImagesImageManifestLayerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImageManifestLayer] {
	return pulumix.Output[[]GetImagesImageManifestLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageManifestLayerArrayOutput) Index(i pulumi.IntInput) GetImagesImageManifestLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageManifestLayer {
		return vs[0].([]GetImagesImageManifestLayer)[vs[1].(int)]
	}).(GetImagesImageManifestLayerOutput)
}

type GetImagesQuery struct {
	Fetch *string             `pulumi:"fetch"`
	Spec  *GetImagesQuerySpec `pulumi:"spec"`
}

// GetImagesQueryInput is an input type that accepts GetImagesQueryArgs and GetImagesQueryOutput values.
// You can construct a concrete instance of `GetImagesQueryInput` via:
//
//	GetImagesQueryArgs{...}
type GetImagesQueryInput interface {
	pulumi.Input

	ToGetImagesQueryOutput() GetImagesQueryOutput
	ToGetImagesQueryOutputWithContext(context.Context) GetImagesQueryOutput
}

type GetImagesQueryArgs struct {
	Fetch pulumi.StringPtrInput      `pulumi:"fetch"`
	Spec  GetImagesQuerySpecPtrInput `pulumi:"spec"`
}

func (GetImagesQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuery)(nil)).Elem()
}

func (i GetImagesQueryArgs) ToGetImagesQueryOutput() GetImagesQueryOutput {
	return i.ToGetImagesQueryOutputWithContext(context.Background())
}

func (i GetImagesQueryArgs) ToGetImagesQueryOutputWithContext(ctx context.Context) GetImagesQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQueryOutput)
}

func (i GetImagesQueryArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuery] {
	return pulumix.Output[GetImagesQuery]{
		OutputState: i.ToGetImagesQueryOutputWithContext(ctx).OutputState,
	}
}

func (i GetImagesQueryArgs) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return i.ToGetImagesQueryPtrOutputWithContext(context.Background())
}

func (i GetImagesQueryArgs) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQueryOutput).ToGetImagesQueryPtrOutputWithContext(ctx)
}

// GetImagesQueryPtrInput is an input type that accepts GetImagesQueryArgs, GetImagesQueryPtr and GetImagesQueryPtrOutput values.
// You can construct a concrete instance of `GetImagesQueryPtrInput` via:
//
//	        GetImagesQueryArgs{...}
//
//	or:
//
//	        nil
type GetImagesQueryPtrInput interface {
	pulumi.Input

	ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput
	ToGetImagesQueryPtrOutputWithContext(context.Context) GetImagesQueryPtrOutput
}

type getImagesQueryPtrType GetImagesQueryArgs

func GetImagesQueryPtr(v *GetImagesQueryArgs) GetImagesQueryPtrInput {
	return (*getImagesQueryPtrType)(v)
}

func (*getImagesQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuery)(nil)).Elem()
}

func (i *getImagesQueryPtrType) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return i.ToGetImagesQueryPtrOutputWithContext(context.Background())
}

func (i *getImagesQueryPtrType) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQueryPtrOutput)
}

func (i *getImagesQueryPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuery] {
	return pulumix.Output[*GetImagesQuery]{
		OutputState: i.ToGetImagesQueryPtrOutputWithContext(ctx).OutputState,
	}
}

type GetImagesQueryOutput struct{ *pulumi.OutputState }

func (GetImagesQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuery)(nil)).Elem()
}

func (o GetImagesQueryOutput) ToGetImagesQueryOutput() GetImagesQueryOutput {
	return o
}

func (o GetImagesQueryOutput) ToGetImagesQueryOutputWithContext(ctx context.Context) GetImagesQueryOutput {
	return o
}

func (o GetImagesQueryOutput) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return o.ToGetImagesQueryPtrOutputWithContext(context.Background())
}

func (o GetImagesQueryOutput) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetImagesQuery) *GetImagesQuery {
		return &v
	}).(GetImagesQueryPtrOutput)
}

func (o GetImagesQueryOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuery] {
	return pulumix.Output[GetImagesQuery]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQueryOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuery) *string { return v.Fetch }).(pulumi.StringPtrOutput)
}

func (o GetImagesQueryOutput) Spec() GetImagesQuerySpecPtrOutput {
	return o.ApplyT(func(v GetImagesQuery) *GetImagesQuerySpec { return v.Spec }).(GetImagesQuerySpecPtrOutput)
}

type GetImagesQueryPtrOutput struct{ *pulumi.OutputState }

func (GetImagesQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuery)(nil)).Elem()
}

func (o GetImagesQueryPtrOutput) ToGetImagesQueryPtrOutput() GetImagesQueryPtrOutput {
	return o
}

func (o GetImagesQueryPtrOutput) ToGetImagesQueryPtrOutputWithContext(ctx context.Context) GetImagesQueryPtrOutput {
	return o
}

func (o GetImagesQueryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuery] {
	return pulumix.Output[*GetImagesQuery]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQueryPtrOutput) Elem() GetImagesQueryOutput {
	return o.ApplyT(func(v *GetImagesQuery) GetImagesQuery {
		if v != nil {
			return *v
		}
		var ret GetImagesQuery
		return ret
	}).(GetImagesQueryOutput)
}

func (o GetImagesQueryPtrOutput) Fetch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetImagesQuery) *string {
		if v == nil {
			return nil
		}
		return v.Fetch
	}).(pulumi.StringPtrOutput)
}

func (o GetImagesQueryPtrOutput) Spec() GetImagesQuerySpecPtrOutput {
	return o.ApplyT(func(v *GetImagesQuery) *GetImagesQuerySpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(GetImagesQuerySpecPtrOutput)
}

type GetImagesQuerySpec struct {
	Match *string                  `pulumi:"match"`
	Terms []GetImagesQuerySpecTerm `pulumi:"terms"`
}

// GetImagesQuerySpecInput is an input type that accepts GetImagesQuerySpecArgs and GetImagesQuerySpecOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecInput` via:
//
//	GetImagesQuerySpecArgs{...}
type GetImagesQuerySpecInput interface {
	pulumi.Input

	ToGetImagesQuerySpecOutput() GetImagesQuerySpecOutput
	ToGetImagesQuerySpecOutputWithContext(context.Context) GetImagesQuerySpecOutput
}

type GetImagesQuerySpecArgs struct {
	Match pulumi.StringPtrInput            `pulumi:"match"`
	Terms GetImagesQuerySpecTermArrayInput `pulumi:"terms"`
}

func (GetImagesQuerySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpec)(nil)).Elem()
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecOutput() GetImagesQuerySpecOutput {
	return i.ToGetImagesQuerySpecOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecOutputWithContext(ctx context.Context) GetImagesQuerySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecOutput)
}

func (i GetImagesQuerySpecArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpec] {
	return pulumix.Output[GetImagesQuerySpec]{
		OutputState: i.ToGetImagesQuerySpecOutputWithContext(ctx).OutputState,
	}
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return i.ToGetImagesQuerySpecPtrOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecArgs) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecOutput).ToGetImagesQuerySpecPtrOutputWithContext(ctx)
}

// GetImagesQuerySpecPtrInput is an input type that accepts GetImagesQuerySpecArgs, GetImagesQuerySpecPtr and GetImagesQuerySpecPtrOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecPtrInput` via:
//
//	        GetImagesQuerySpecArgs{...}
//
//	or:
//
//	        nil
type GetImagesQuerySpecPtrInput interface {
	pulumi.Input

	ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput
	ToGetImagesQuerySpecPtrOutputWithContext(context.Context) GetImagesQuerySpecPtrOutput
}

type getImagesQuerySpecPtrType GetImagesQuerySpecArgs

func GetImagesQuerySpecPtr(v *GetImagesQuerySpecArgs) GetImagesQuerySpecPtrInput {
	return (*getImagesQuerySpecPtrType)(v)
}

func (*getImagesQuerySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuerySpec)(nil)).Elem()
}

func (i *getImagesQuerySpecPtrType) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return i.ToGetImagesQuerySpecPtrOutputWithContext(context.Background())
}

func (i *getImagesQuerySpecPtrType) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecPtrOutput)
}

func (i *getImagesQuerySpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuerySpec] {
	return pulumix.Output[*GetImagesQuerySpec]{
		OutputState: i.ToGetImagesQuerySpecPtrOutputWithContext(ctx).OutputState,
	}
}

type GetImagesQuerySpecOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpec)(nil)).Elem()
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecOutput() GetImagesQuerySpecOutput {
	return o
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecOutputWithContext(ctx context.Context) GetImagesQuerySpecOutput {
	return o
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return o.ToGetImagesQuerySpecPtrOutputWithContext(context.Background())
}

func (o GetImagesQuerySpecOutput) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetImagesQuerySpec) *GetImagesQuerySpec {
		return &v
	}).(GetImagesQuerySpecPtrOutput)
}

func (o GetImagesQuerySpecOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpec] {
	return pulumix.Output[GetImagesQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpec) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecOutput) Terms() GetImagesQuerySpecTermArrayOutput {
	return o.ApplyT(func(v GetImagesQuerySpec) []GetImagesQuerySpecTerm { return v.Terms }).(GetImagesQuerySpecTermArrayOutput)
}

type GetImagesQuerySpecPtrOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImagesQuerySpec)(nil)).Elem()
}

func (o GetImagesQuerySpecPtrOutput) ToGetImagesQuerySpecPtrOutput() GetImagesQuerySpecPtrOutput {
	return o
}

func (o GetImagesQuerySpecPtrOutput) ToGetImagesQuerySpecPtrOutputWithContext(ctx context.Context) GetImagesQuerySpecPtrOutput {
	return o
}

func (o GetImagesQuerySpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetImagesQuerySpec] {
	return pulumix.Output[*GetImagesQuerySpec]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecPtrOutput) Elem() GetImagesQuerySpecOutput {
	return o.ApplyT(func(v *GetImagesQuerySpec) GetImagesQuerySpec {
		if v != nil {
			return *v
		}
		var ret GetImagesQuerySpec
		return ret
	}).(GetImagesQuerySpecOutput)
}

func (o GetImagesQuerySpecPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetImagesQuerySpec) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecPtrOutput) Terms() GetImagesQuerySpecTermArrayOutput {
	return o.ApplyT(func(v *GetImagesQuerySpec) []GetImagesQuerySpecTerm {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(GetImagesQuerySpecTermArrayOutput)
}

type GetImagesQuerySpecTerm struct {
	Op       *string `pulumi:"op"`
	Property *string `pulumi:"property"`
	Tag      *string `pulumi:"tag"`
	Value    *string `pulumi:"value"`
}

// GetImagesQuerySpecTermInput is an input type that accepts GetImagesQuerySpecTermArgs and GetImagesQuerySpecTermOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecTermInput` via:
//
//	GetImagesQuerySpecTermArgs{...}
type GetImagesQuerySpecTermInput interface {
	pulumi.Input

	ToGetImagesQuerySpecTermOutput() GetImagesQuerySpecTermOutput
	ToGetImagesQuerySpecTermOutputWithContext(context.Context) GetImagesQuerySpecTermOutput
}

type GetImagesQuerySpecTermArgs struct {
	Op       pulumi.StringPtrInput `pulumi:"op"`
	Property pulumi.StringPtrInput `pulumi:"property"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (GetImagesQuerySpecTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpecTerm)(nil)).Elem()
}

func (i GetImagesQuerySpecTermArgs) ToGetImagesQuerySpecTermOutput() GetImagesQuerySpecTermOutput {
	return i.ToGetImagesQuerySpecTermOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecTermArgs) ToGetImagesQuerySpecTermOutputWithContext(ctx context.Context) GetImagesQuerySpecTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecTermOutput)
}

func (i GetImagesQuerySpecTermArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpecTerm] {
	return pulumix.Output[GetImagesQuerySpecTerm]{
		OutputState: i.ToGetImagesQuerySpecTermOutputWithContext(ctx).OutputState,
	}
}

// GetImagesQuerySpecTermArrayInput is an input type that accepts GetImagesQuerySpecTermArray and GetImagesQuerySpecTermArrayOutput values.
// You can construct a concrete instance of `GetImagesQuerySpecTermArrayInput` via:
//
//	GetImagesQuerySpecTermArray{ GetImagesQuerySpecTermArgs{...} }
type GetImagesQuerySpecTermArrayInput interface {
	pulumi.Input

	ToGetImagesQuerySpecTermArrayOutput() GetImagesQuerySpecTermArrayOutput
	ToGetImagesQuerySpecTermArrayOutputWithContext(context.Context) GetImagesQuerySpecTermArrayOutput
}

type GetImagesQuerySpecTermArray []GetImagesQuerySpecTermInput

func (GetImagesQuerySpecTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesQuerySpecTerm)(nil)).Elem()
}

func (i GetImagesQuerySpecTermArray) ToGetImagesQuerySpecTermArrayOutput() GetImagesQuerySpecTermArrayOutput {
	return i.ToGetImagesQuerySpecTermArrayOutputWithContext(context.Background())
}

func (i GetImagesQuerySpecTermArray) ToGetImagesQuerySpecTermArrayOutputWithContext(ctx context.Context) GetImagesQuerySpecTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesQuerySpecTermArrayOutput)
}

func (i GetImagesQuerySpecTermArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesQuerySpecTerm] {
	return pulumix.Output[[]GetImagesQuerySpecTerm]{
		OutputState: i.ToGetImagesQuerySpecTermArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesQuerySpecTermOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesQuerySpecTerm)(nil)).Elem()
}

func (o GetImagesQuerySpecTermOutput) ToGetImagesQuerySpecTermOutput() GetImagesQuerySpecTermOutput {
	return o
}

func (o GetImagesQuerySpecTermOutput) ToGetImagesQuerySpecTermOutputWithContext(ctx context.Context) GetImagesQuerySpecTermOutput {
	return o
}

func (o GetImagesQuerySpecTermOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesQuerySpecTerm] {
	return pulumix.Output[GetImagesQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecTermOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecTermOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecTermOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o GetImagesQuerySpecTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesQuerySpecTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetImagesQuerySpecTermArrayOutput struct{ *pulumi.OutputState }

func (GetImagesQuerySpecTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesQuerySpecTerm)(nil)).Elem()
}

func (o GetImagesQuerySpecTermArrayOutput) ToGetImagesQuerySpecTermArrayOutput() GetImagesQuerySpecTermArrayOutput {
	return o
}

func (o GetImagesQuerySpecTermArrayOutput) ToGetImagesQuerySpecTermArrayOutputWithContext(ctx context.Context) GetImagesQuerySpecTermArrayOutput {
	return o
}

func (o GetImagesQuerySpecTermArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesQuerySpecTerm] {
	return pulumix.Output[[]GetImagesQuerySpecTerm]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesQuerySpecTermArrayOutput) Index(i pulumi.IntInput) GetImagesQuerySpecTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesQuerySpecTerm {
		return vs[0].([]GetImagesQuerySpecTerm)[vs[1].(int)]
	}).(GetImagesQuerySpecTermOutput)
}

type GetLocationGeo struct {
	City      *string  `pulumi:"city"`
	Continent *string  `pulumi:"continent"`
	Country   *string  `pulumi:"country"`
	Lat       *float64 `pulumi:"lat"`
	Lon       *float64 `pulumi:"lon"`
	State     *string  `pulumi:"state"`
}

// GetLocationGeoInput is an input type that accepts GetLocationGeoArgs and GetLocationGeoOutput values.
// You can construct a concrete instance of `GetLocationGeoInput` via:
//
//	GetLocationGeoArgs{...}
type GetLocationGeoInput interface {
	pulumi.Input

	ToGetLocationGeoOutput() GetLocationGeoOutput
	ToGetLocationGeoOutputWithContext(context.Context) GetLocationGeoOutput
}

type GetLocationGeoArgs struct {
	City      pulumi.StringPtrInput  `pulumi:"city"`
	Continent pulumi.StringPtrInput  `pulumi:"continent"`
	Country   pulumi.StringPtrInput  `pulumi:"country"`
	Lat       pulumi.Float64PtrInput `pulumi:"lat"`
	Lon       pulumi.Float64PtrInput `pulumi:"lon"`
	State     pulumi.StringPtrInput  `pulumi:"state"`
}

func (GetLocationGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGeo)(nil)).Elem()
}

func (i GetLocationGeoArgs) ToGetLocationGeoOutput() GetLocationGeoOutput {
	return i.ToGetLocationGeoOutputWithContext(context.Background())
}

func (i GetLocationGeoArgs) ToGetLocationGeoOutputWithContext(ctx context.Context) GetLocationGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGeoOutput)
}

func (i GetLocationGeoArgs) ToOutput(ctx context.Context) pulumix.Output[GetLocationGeo] {
	return pulumix.Output[GetLocationGeo]{
		OutputState: i.ToGetLocationGeoOutputWithContext(ctx).OutputState,
	}
}

// GetLocationGeoArrayInput is an input type that accepts GetLocationGeoArray and GetLocationGeoArrayOutput values.
// You can construct a concrete instance of `GetLocationGeoArrayInput` via:
//
//	GetLocationGeoArray{ GetLocationGeoArgs{...} }
type GetLocationGeoArrayInput interface {
	pulumi.Input

	ToGetLocationGeoArrayOutput() GetLocationGeoArrayOutput
	ToGetLocationGeoArrayOutputWithContext(context.Context) GetLocationGeoArrayOutput
}

type GetLocationGeoArray []GetLocationGeoInput

func (GetLocationGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGeo)(nil)).Elem()
}

func (i GetLocationGeoArray) ToGetLocationGeoArrayOutput() GetLocationGeoArrayOutput {
	return i.ToGetLocationGeoArrayOutputWithContext(context.Background())
}

func (i GetLocationGeoArray) ToGetLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGeoArrayOutput)
}

func (i GetLocationGeoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationGeo] {
	return pulumix.Output[[]GetLocationGeo]{
		OutputState: i.ToGetLocationGeoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLocationGeoOutput struct{ *pulumi.OutputState }

func (GetLocationGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGeo)(nil)).Elem()
}

func (o GetLocationGeoOutput) ToGetLocationGeoOutput() GetLocationGeoOutput {
	return o
}

func (o GetLocationGeoOutput) ToGetLocationGeoOutputWithContext(ctx context.Context) GetLocationGeoOutput {
	return o
}

func (o GetLocationGeoOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocationGeo] {
	return pulumix.Output[GetLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationGeoOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o GetLocationGeoOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.Continent }).(pulumi.StringPtrOutput)
}

func (o GetLocationGeoOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o GetLocationGeoOutput) Lat() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *float64 { return v.Lat }).(pulumi.Float64PtrOutput)
}

func (o GetLocationGeoOutput) Lon() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *float64 { return v.Lon }).(pulumi.Float64PtrOutput)
}

func (o GetLocationGeoOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGeo) *string { return v.State }).(pulumi.StringPtrOutput)
}

type GetLocationGeoArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGeo)(nil)).Elem()
}

func (o GetLocationGeoArrayOutput) ToGetLocationGeoArrayOutput() GetLocationGeoArrayOutput {
	return o
}

func (o GetLocationGeoArrayOutput) ToGetLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationGeoArrayOutput {
	return o
}

func (o GetLocationGeoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationGeo] {
	return pulumix.Output[[]GetLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationGeoArrayOutput) Index(i pulumi.IntInput) GetLocationGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGeo {
		return vs[0].([]GetLocationGeo)[vs[1].(int)]
	}).(GetLocationGeoOutput)
}

type GetLocationsLocation struct {
	CloudProvider string                    `pulumi:"cloudProvider"`
	CplnId        string                    `pulumi:"cplnId"`
	Description   string                    `pulumi:"description"`
	Enabled       bool                      `pulumi:"enabled"`
	Geos          []GetLocationsLocationGeo `pulumi:"geos"`
	IpRanges      []string                  `pulumi:"ipRanges"`
	Name          string                    `pulumi:"name"`
	Region        string                    `pulumi:"region"`
	SelfLink      string                    `pulumi:"selfLink"`
	Tags          map[string]string         `pulumi:"tags"`
}

// GetLocationsLocationInput is an input type that accepts GetLocationsLocationArgs and GetLocationsLocationOutput values.
// You can construct a concrete instance of `GetLocationsLocationInput` via:
//
//	GetLocationsLocationArgs{...}
type GetLocationsLocationInput interface {
	pulumi.Input

	ToGetLocationsLocationOutput() GetLocationsLocationOutput
	ToGetLocationsLocationOutputWithContext(context.Context) GetLocationsLocationOutput
}

type GetLocationsLocationArgs struct {
	CloudProvider pulumi.StringInput                `pulumi:"cloudProvider"`
	CplnId        pulumi.StringInput                `pulumi:"cplnId"`
	Description   pulumi.StringInput                `pulumi:"description"`
	Enabled       pulumi.BoolInput                  `pulumi:"enabled"`
	Geos          GetLocationsLocationGeoArrayInput `pulumi:"geos"`
	IpRanges      pulumi.StringArrayInput           `pulumi:"ipRanges"`
	Name          pulumi.StringInput                `pulumi:"name"`
	Region        pulumi.StringInput                `pulumi:"region"`
	SelfLink      pulumi.StringInput                `pulumi:"selfLink"`
	Tags          pulumi.StringMapInput             `pulumi:"tags"`
}

func (GetLocationsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return i.ToGetLocationsLocationOutputWithContext(context.Background())
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationOutput)
}

func (i GetLocationsLocationArgs) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocation] {
	return pulumix.Output[GetLocationsLocation]{
		OutputState: i.ToGetLocationsLocationOutputWithContext(ctx).OutputState,
	}
}

// GetLocationsLocationArrayInput is an input type that accepts GetLocationsLocationArray and GetLocationsLocationArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationArrayInput` via:
//
//	GetLocationsLocationArray{ GetLocationsLocationArgs{...} }
type GetLocationsLocationArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput
	ToGetLocationsLocationArrayOutputWithContext(context.Context) GetLocationsLocationArrayOutput
}

type GetLocationsLocationArray []GetLocationsLocationInput

func (GetLocationsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return i.ToGetLocationsLocationArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationArrayOutput)
}

func (i GetLocationsLocationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocation] {
	return pulumix.Output[[]GetLocationsLocation]{
		OutputState: i.ToGetLocationsLocationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLocationsLocationOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocation] {
	return pulumix.Output[GetLocationsLocation]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.CplnId }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationsLocation) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetLocationsLocationOutput) Geos() GetLocationsLocationGeoArrayOutput {
	return o.ApplyT(func(v GetLocationsLocation) []GetLocationsLocationGeo { return v.Geos }).(GetLocationsLocationGeoArrayOutput)
}

func (o GetLocationsLocationOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLocationsLocation) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o GetLocationsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationsLocation) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetLocationsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocation] {
	return pulumix.Output[[]GetLocationsLocation]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocation {
		return vs[0].([]GetLocationsLocation)[vs[1].(int)]
	}).(GetLocationsLocationOutput)
}

type GetLocationsLocationGeo struct {
	City      *string  `pulumi:"city"`
	Continent *string  `pulumi:"continent"`
	Country   *string  `pulumi:"country"`
	Lat       *float64 `pulumi:"lat"`
	Lon       *float64 `pulumi:"lon"`
	State     *string  `pulumi:"state"`
}

// GetLocationsLocationGeoInput is an input type that accepts GetLocationsLocationGeoArgs and GetLocationsLocationGeoOutput values.
// You can construct a concrete instance of `GetLocationsLocationGeoInput` via:
//
//	GetLocationsLocationGeoArgs{...}
type GetLocationsLocationGeoInput interface {
	pulumi.Input

	ToGetLocationsLocationGeoOutput() GetLocationsLocationGeoOutput
	ToGetLocationsLocationGeoOutputWithContext(context.Context) GetLocationsLocationGeoOutput
}

type GetLocationsLocationGeoArgs struct {
	City      pulumi.StringPtrInput  `pulumi:"city"`
	Continent pulumi.StringPtrInput  `pulumi:"continent"`
	Country   pulumi.StringPtrInput  `pulumi:"country"`
	Lat       pulumi.Float64PtrInput `pulumi:"lat"`
	Lon       pulumi.Float64PtrInput `pulumi:"lon"`
	State     pulumi.StringPtrInput  `pulumi:"state"`
}

func (GetLocationsLocationGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocationGeo)(nil)).Elem()
}

func (i GetLocationsLocationGeoArgs) ToGetLocationsLocationGeoOutput() GetLocationsLocationGeoOutput {
	return i.ToGetLocationsLocationGeoOutputWithContext(context.Background())
}

func (i GetLocationsLocationGeoArgs) ToGetLocationsLocationGeoOutputWithContext(ctx context.Context) GetLocationsLocationGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationGeoOutput)
}

func (i GetLocationsLocationGeoArgs) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocationGeo] {
	return pulumix.Output[GetLocationsLocationGeo]{
		OutputState: i.ToGetLocationsLocationGeoOutputWithContext(ctx).OutputState,
	}
}

// GetLocationsLocationGeoArrayInput is an input type that accepts GetLocationsLocationGeoArray and GetLocationsLocationGeoArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationGeoArrayInput` via:
//
//	GetLocationsLocationGeoArray{ GetLocationsLocationGeoArgs{...} }
type GetLocationsLocationGeoArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationGeoArrayOutput() GetLocationsLocationGeoArrayOutput
	ToGetLocationsLocationGeoArrayOutputWithContext(context.Context) GetLocationsLocationGeoArrayOutput
}

type GetLocationsLocationGeoArray []GetLocationsLocationGeoInput

func (GetLocationsLocationGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocationGeo)(nil)).Elem()
}

func (i GetLocationsLocationGeoArray) ToGetLocationsLocationGeoArrayOutput() GetLocationsLocationGeoArrayOutput {
	return i.ToGetLocationsLocationGeoArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationGeoArray) ToGetLocationsLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationsLocationGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationGeoArrayOutput)
}

func (i GetLocationsLocationGeoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocationGeo] {
	return pulumix.Output[[]GetLocationsLocationGeo]{
		OutputState: i.ToGetLocationsLocationGeoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLocationsLocationGeoOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocationGeo)(nil)).Elem()
}

func (o GetLocationsLocationGeoOutput) ToGetLocationsLocationGeoOutput() GetLocationsLocationGeoOutput {
	return o
}

func (o GetLocationsLocationGeoOutput) ToGetLocationsLocationGeoOutputWithContext(ctx context.Context) GetLocationsLocationGeoOutput {
	return o
}

func (o GetLocationsLocationGeoOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocationGeo] {
	return pulumix.Output[GetLocationsLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationGeoOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationGeoOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.Continent }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationGeoOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationGeoOutput) Lat() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *float64 { return v.Lat }).(pulumi.Float64PtrOutput)
}

func (o GetLocationsLocationGeoOutput) Lon() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *float64 { return v.Lon }).(pulumi.Float64PtrOutput)
}

func (o GetLocationsLocationGeoOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocationGeo) *string { return v.State }).(pulumi.StringPtrOutput)
}

type GetLocationsLocationGeoArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocationGeo)(nil)).Elem()
}

func (o GetLocationsLocationGeoArrayOutput) ToGetLocationsLocationGeoArrayOutput() GetLocationsLocationGeoArrayOutput {
	return o
}

func (o GetLocationsLocationGeoArrayOutput) ToGetLocationsLocationGeoArrayOutputWithContext(ctx context.Context) GetLocationsLocationGeoArrayOutput {
	return o
}

func (o GetLocationsLocationGeoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocationGeo] {
	return pulumix.Output[[]GetLocationsLocationGeo]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationGeoArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocationGeo {
		return vs[0].([]GetLocationsLocationGeo)[vs[1].(int)]
	}).(GetLocationsLocationGeoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAwsInput)(nil)).Elem(), CloudAccountAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAwsPtrInput)(nil)).Elem(), CloudAccountAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAzureInput)(nil)).Elem(), CloudAccountAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAzurePtrInput)(nil)).Elem(), CloudAccountAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountGcpInput)(nil)).Elem(), CloudAccountGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountGcpPtrInput)(nil)).Elem(), CloudAccountGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountNgsInput)(nil)).Elem(), CloudAccountNgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountNgsPtrInput)(nil)).Elem(), CloudAccountNgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecInput)(nil)).Elem(), DomainSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPtrInput)(nil)).Elem(), DomainSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortInput)(nil)).Elem(), DomainSpecPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortArrayInput)(nil)).Elem(), DomainSpecPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsInput)(nil)).Elem(), DomainSpecPortCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsPtrInput)(nil)).Elem(), DomainSpecPortCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsAllowOriginInput)(nil)).Elem(), DomainSpecPortCorsAllowOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortCorsAllowOriginArrayInput)(nil)).Elem(), DomainSpecPortCorsAllowOriginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsInput)(nil)).Elem(), DomainSpecPortTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsClientCertificateInput)(nil)).Elem(), DomainSpecPortTlsClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsClientCertificatePtrInput)(nil)).Elem(), DomainSpecPortTlsClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsServerCertificateInput)(nil)).Elem(), DomainSpecPortTlsServerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSpecPortTlsServerCertificatePtrInput)(nil)).Elem(), DomainSpecPortTlsServerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusInput)(nil)).Elem(), DomainStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusArrayInput)(nil)).Elem(), DomainStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusDnsConfigInput)(nil)).Elem(), DomainStatusDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusDnsConfigArrayInput)(nil)).Elem(), DomainStatusDnsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusEndpointInput)(nil)).Elem(), DomainStatusEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusEndpointArrayInput)(nil)).Elem(), DomainStatusEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusLocationInput)(nil)).Elem(), DomainStatusLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusLocationArrayInput)(nil)).Elem(), DomainStatusLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupIdentityMatcherInput)(nil)).Elem(), GroupIdentityMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupIdentityMatcherPtrInput)(nil)).Elem(), GroupIdentityMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQueryInput)(nil)).Elem(), GroupMemberQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQueryPtrInput)(nil)).Elem(), GroupMemberQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecInput)(nil)).Elem(), GroupMemberQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecPtrInput)(nil)).Elem(), GroupMemberQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecTermInput)(nil)).Elem(), GroupMemberQuerySpecTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberQuerySpecTermArrayInput)(nil)).Elem(), GroupMemberQuerySpecTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcControlplaneTracingInput)(nil)).Elem(), GvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcControlplaneTracingPtrInput)(nil)).Elem(), GvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLightstepTracingInput)(nil)).Elem(), GvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLightstepTracingPtrInput)(nil)).Elem(), GvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerInput)(nil)).Elem(), GvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcLoadBalancerPtrInput)(nil)).Elem(), GvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcOtelTracingInput)(nil)).Elem(), GvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcOtelTracingPtrInput)(nil)).Elem(), GvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcSidecarInput)(nil)).Elem(), GvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GvcSidecarPtrInput)(nil)).Elem(), GvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAccessPolicyInput)(nil)).Elem(), IdentityAwsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAccessPolicyPtrInput)(nil)).Elem(), IdentityAwsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyInput)(nil)).Elem(), IdentityAzureAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyPtrInput)(nil)).Elem(), IdentityAzureAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignmentInput)(nil)).Elem(), IdentityAzureAccessPolicyRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAccessPolicyRoleAssignmentArrayInput)(nil)).Elem(), IdentityAzureAccessPolicyRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyInput)(nil)).Elem(), IdentityGcpAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyPtrInput)(nil)).Elem(), IdentityGcpAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyBindingInput)(nil)).Elem(), IdentityGcpAccessPolicyBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAccessPolicyBindingArrayInput)(nil)).Elem(), IdentityGcpAccessPolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceInput)(nil)).Elem(), IdentityNativeNetworkResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceArrayInput)(nil)).Elem(), IdentityNativeNetworkResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLinkInput)(nil)).Elem(), IdentityNativeNetworkResourceAwsPrivateLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceAwsPrivateLinkPtrInput)(nil)).Elem(), IdentityNativeNetworkResourceAwsPrivateLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnectInput)(nil)).Elem(), IdentityNativeNetworkResourceGcpServiceConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNativeNetworkResourceGcpServiceConnectPtrInput)(nil)).Elem(), IdentityNativeNetworkResourceGcpServiceConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNetworkResourceInput)(nil)).Elem(), IdentityNetworkResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNetworkResourceArrayInput)(nil)).Elem(), IdentityNetworkResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyInput)(nil)).Elem(), IdentityNgsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyPtrInput)(nil)).Elem(), IdentityNgsAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyPubInput)(nil)).Elem(), IdentityNgsAccessPolicyPubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyPubPtrInput)(nil)).Elem(), IdentityNgsAccessPolicyPubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyRespInput)(nil)).Elem(), IdentityNgsAccessPolicyRespArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicyRespPtrInput)(nil)).Elem(), IdentityNgsAccessPolicyRespArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicySubInput)(nil)).Elem(), IdentityNgsAccessPolicySubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityNgsAccessPolicySubPtrInput)(nil)).Elem(), IdentityNgsAccessPolicySubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgAuthConfigInput)(nil)).Elem(), OrgAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgAuthConfigPtrInput)(nil)).Elem(), OrgAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCloudWatchLoggingInput)(nil)).Elem(), OrgLoggingCloudWatchLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCloudWatchLoggingArrayInput)(nil)).Elem(), OrgLoggingCloudWatchLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCoralogixLoggingInput)(nil)).Elem(), OrgLoggingCoralogixLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingCoralogixLoggingArrayInput)(nil)).Elem(), OrgLoggingCoralogixLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingDatadogLoggingInput)(nil)).Elem(), OrgLoggingDatadogLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingDatadogLoggingArrayInput)(nil)).Elem(), OrgLoggingDatadogLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingInput)(nil)).Elem(), OrgLoggingElasticLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingArrayInput)(nil)).Elem(), OrgLoggingElasticLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingAwsInput)(nil)).Elem(), OrgLoggingElasticLoggingAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingAwsPtrInput)(nil)).Elem(), OrgLoggingElasticLoggingAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloudInput)(nil)).Elem(), OrgLoggingElasticLoggingElasticCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingElasticCloudPtrInput)(nil)).Elem(), OrgLoggingElasticLoggingElasticCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingGenericInput)(nil)).Elem(), OrgLoggingElasticLoggingGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingElasticLoggingGenericPtrInput)(nil)).Elem(), OrgLoggingElasticLoggingGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingFluentdLoggingInput)(nil)).Elem(), OrgLoggingFluentdLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingFluentdLoggingArrayInput)(nil)).Elem(), OrgLoggingFluentdLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingLogzioLoggingInput)(nil)).Elem(), OrgLoggingLogzioLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingLogzioLoggingArrayInput)(nil)).Elem(), OrgLoggingLogzioLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingS3LoggingInput)(nil)).Elem(), OrgLoggingS3LoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingS3LoggingArrayInput)(nil)).Elem(), OrgLoggingS3LoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingStackdriverLoggingInput)(nil)).Elem(), OrgLoggingStackdriverLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLoggingStackdriverLoggingArrayInput)(nil)).Elem(), OrgLoggingStackdriverLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgObservabilityInput)(nil)).Elem(), OrgObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgObservabilityPtrInput)(nil)).Elem(), OrgObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgStatusInput)(nil)).Elem(), OrgStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgStatusArrayInput)(nil)).Elem(), OrgStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingControlplaneTracingInput)(nil)).Elem(), OrgTracingControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingControlplaneTracingPtrInput)(nil)).Elem(), OrgTracingControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingLightstepTracingInput)(nil)).Elem(), OrgTracingLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingLightstepTracingPtrInput)(nil)).Elem(), OrgTracingLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingOtelTracingInput)(nil)).Elem(), OrgTracingOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgTracingOtelTracingPtrInput)(nil)).Elem(), OrgTracingOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingInput)(nil)).Elem(), PolicyBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingArrayInput)(nil)).Elem(), PolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQueryInput)(nil)).Elem(), PolicyTargetQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQueryPtrInput)(nil)).Elem(), PolicyTargetQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecInput)(nil)).Elem(), PolicyTargetQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecPtrInput)(nil)).Elem(), PolicyTargetQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecTermInput)(nil)).Elem(), PolicyTargetQuerySpecTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTargetQuerySpecTermArrayInput)(nil)).Elem(), PolicyTargetQuerySpecTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAwsInput)(nil)).Elem(), SecretAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAwsPtrInput)(nil)).Elem(), SecretAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAzureConnectorInput)(nil)).Elem(), SecretAzureConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAzureConnectorPtrInput)(nil)).Elem(), SecretAzureConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretEcrInput)(nil)).Elem(), SecretEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretEcrPtrInput)(nil)).Elem(), SecretEcrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretKeypairInput)(nil)).Elem(), SecretKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretKeypairPtrInput)(nil)).Elem(), SecretKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretNatsAccountInput)(nil)).Elem(), SecretNatsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretNatsAccountPtrInput)(nil)).Elem(), SecretNatsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretOpaqueInput)(nil)).Elem(), SecretOpaqueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretOpaquePtrInput)(nil)).Elem(), SecretOpaqueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTlsInput)(nil)).Elem(), SecretTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTlsPtrInput)(nil)).Elem(), SecretTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretUserpassInput)(nil)).Elem(), SecretUserpassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretUserpassPtrInput)(nil)).Elem(), SecretUserpassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetAutoscalingInput)(nil)).Elem(), VolumeSetAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetAutoscalingPtrInput)(nil)).Elem(), VolumeSetAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetSnapshotsInput)(nil)).Elem(), VolumeSetSnapshotsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetSnapshotsPtrInput)(nil)).Elem(), VolumeSetSnapshotsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetStatusInput)(nil)).Elem(), VolumeSetStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeSetStatusArrayInput)(nil)).Elem(), VolumeSetStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerInput)(nil)).Elem(), WorkloadContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerArrayInput)(nil)).Elem(), WorkloadContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerGpuNvidiaInput)(nil)).Elem(), WorkloadContainerGpuNvidiaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerGpuNvidiaPtrInput)(nil)).Elem(), WorkloadContainerGpuNvidiaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecycleInput)(nil)).Elem(), WorkloadContainerLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePtrInput)(nil)).Elem(), WorkloadContainerLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartExecInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePostStartExecPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePostStartExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopExecInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLifecyclePreStopExecPtrInput)(nil)).Elem(), WorkloadContainerLifecyclePreStopExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeInput)(nil)).Elem(), WorkloadContainerLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbePtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeExecInput)(nil)).Elem(), WorkloadContainerLivenessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeExecPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeGrpcInput)(nil)).Elem(), WorkloadContainerLivenessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeGrpcPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGetInput)(nil)).Elem(), WorkloadContainerLivenessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeHttpGetPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocketInput)(nil)).Elem(), WorkloadContainerLivenessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerLivenessProbeTcpSocketPtrInput)(nil)).Elem(), WorkloadContainerLivenessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerMetricsInput)(nil)).Elem(), WorkloadContainerMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerMetricsPtrInput)(nil)).Elem(), WorkloadContainerMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerPortInput)(nil)).Elem(), WorkloadContainerPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerPortArrayInput)(nil)).Elem(), WorkloadContainerPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeInput)(nil)).Elem(), WorkloadContainerReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbePtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeExecInput)(nil)).Elem(), WorkloadContainerReadinessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeExecPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeGrpcInput)(nil)).Elem(), WorkloadContainerReadinessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeGrpcPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGetInput)(nil)).Elem(), WorkloadContainerReadinessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeHttpGetPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocketInput)(nil)).Elem(), WorkloadContainerReadinessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerReadinessProbeTcpSocketPtrInput)(nil)).Elem(), WorkloadContainerReadinessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerVolumeInput)(nil)).Elem(), WorkloadContainerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadContainerVolumeArrayInput)(nil)).Elem(), WorkloadContainerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecInput)(nil)).Elem(), WorkloadFirewallSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecPtrInput)(nil)).Elem(), WorkloadFirewallSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalInput)(nil)).Elem(), WorkloadFirewallSpecExternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalPtrInput)(nil)).Elem(), WorkloadFirewallSpecExternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPortInput)(nil)).Elem(), WorkloadFirewallSpecExternalOutboundAllowPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecExternalOutboundAllowPortArrayInput)(nil)).Elem(), WorkloadFirewallSpecExternalOutboundAllowPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecInternalInput)(nil)).Elem(), WorkloadFirewallSpecInternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadFirewallSpecInternalPtrInput)(nil)).Elem(), WorkloadFirewallSpecInternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadJobInput)(nil)).Elem(), WorkloadJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadJobPtrInput)(nil)).Elem(), WorkloadJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionInput)(nil)).Elem(), WorkloadLocalOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionArrayInput)(nil)).Elem(), WorkloadLocalOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionAutoscalingInput)(nil)).Elem(), WorkloadLocalOptionAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLocalOptionAutoscalingPtrInput)(nil)).Elem(), WorkloadLocalOptionAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsInput)(nil)).Elem(), WorkloadOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsPtrInput)(nil)).Elem(), WorkloadOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsAutoscalingInput)(nil)).Elem(), WorkloadOptionsAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadOptionsAutoscalingPtrInput)(nil)).Elem(), WorkloadOptionsAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadRolloutOptionsInput)(nil)).Elem(), WorkloadRolloutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadRolloutOptionsPtrInput)(nil)).Elem(), WorkloadRolloutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSecurityOptionsInput)(nil)).Elem(), WorkloadSecurityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSecurityOptionsPtrInput)(nil)).Elem(), WorkloadSecurityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSidecarInput)(nil)).Elem(), WorkloadSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadSidecarPtrInput)(nil)).Elem(), WorkloadSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusInput)(nil)).Elem(), WorkloadStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusArrayInput)(nil)).Elem(), WorkloadStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusHealthCheckInput)(nil)).Elem(), WorkloadStatusHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusHealthCheckArrayInput)(nil)).Elem(), WorkloadStatusHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageInput)(nil)).Elem(), WorkloadStatusResolvedImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageArrayInput)(nil)).Elem(), WorkloadStatusResolvedImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageInput)(nil)).Elem(), WorkloadStatusResolvedImageImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageArrayInput)(nil)).Elem(), WorkloadStatusResolvedImageImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageManifestInput)(nil)).Elem(), WorkloadStatusResolvedImageImageManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStatusResolvedImageImageManifestArrayInput)(nil)).Elem(), WorkloadStatusResolvedImageImageManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcControlplaneTracingInput)(nil)).Elem(), GetGvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcControlplaneTracingPtrInput)(nil)).Elem(), GetGvcControlplaneTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLightstepTracingInput)(nil)).Elem(), GetGvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLightstepTracingPtrInput)(nil)).Elem(), GetGvcLightstepTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerInput)(nil)).Elem(), GetGvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcLoadBalancerPtrInput)(nil)).Elem(), GetGvcLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcOtelTracingInput)(nil)).Elem(), GetGvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcOtelTracingPtrInput)(nil)).Elem(), GetGvcOtelTracingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcSidecarInput)(nil)).Elem(), GetGvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGvcSidecarPtrInput)(nil)).Elem(), GetGvcSidecarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestInput)(nil)).Elem(), GetImageManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestArrayInput)(nil)).Elem(), GetImageManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestConfigInput)(nil)).Elem(), GetImageManifestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestConfigArrayInput)(nil)).Elem(), GetImageManifestConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestLayerInput)(nil)).Elem(), GetImageManifestLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageManifestLayerArrayInput)(nil)).Elem(), GetImageManifestLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestInput)(nil)).Elem(), GetImagesImageManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestArrayInput)(nil)).Elem(), GetImagesImageManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestConfigInput)(nil)).Elem(), GetImagesImageManifestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestConfigArrayInput)(nil)).Elem(), GetImagesImageManifestConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestLayerInput)(nil)).Elem(), GetImagesImageManifestLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageManifestLayerArrayInput)(nil)).Elem(), GetImagesImageManifestLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQueryInput)(nil)).Elem(), GetImagesQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQueryPtrInput)(nil)).Elem(), GetImagesQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecInput)(nil)).Elem(), GetImagesQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecPtrInput)(nil)).Elem(), GetImagesQuerySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecTermInput)(nil)).Elem(), GetImagesQuerySpecTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesQuerySpecTermArrayInput)(nil)).Elem(), GetImagesQuerySpecTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGeoInput)(nil)).Elem(), GetLocationGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGeoArrayInput)(nil)).Elem(), GetLocationGeoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationInput)(nil)).Elem(), GetLocationsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationArrayInput)(nil)).Elem(), GetLocationsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationGeoInput)(nil)).Elem(), GetLocationsLocationGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationGeoArrayInput)(nil)).Elem(), GetLocationsLocationGeoArray{})
	pulumi.RegisterOutputType(CloudAccountAwsOutput{})
	pulumi.RegisterOutputType(CloudAccountAwsPtrOutput{})
	pulumi.RegisterOutputType(CloudAccountAzureOutput{})
	pulumi.RegisterOutputType(CloudAccountAzurePtrOutput{})
	pulumi.RegisterOutputType(CloudAccountGcpOutput{})
	pulumi.RegisterOutputType(CloudAccountGcpPtrOutput{})
	pulumi.RegisterOutputType(CloudAccountNgsOutput{})
	pulumi.RegisterOutputType(CloudAccountNgsPtrOutput{})
	pulumi.RegisterOutputType(DomainSpecOutput{})
	pulumi.RegisterOutputType(DomainSpecPtrOutput{})
	pulumi.RegisterOutputType(DomainSpecPortOutput{})
	pulumi.RegisterOutputType(DomainSpecPortArrayOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsPtrOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsAllowOriginOutput{})
	pulumi.RegisterOutputType(DomainSpecPortCorsAllowOriginArrayOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsClientCertificateOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsServerCertificateOutput{})
	pulumi.RegisterOutputType(DomainSpecPortTlsServerCertificatePtrOutput{})
	pulumi.RegisterOutputType(DomainStatusOutput{})
	pulumi.RegisterOutputType(DomainStatusArrayOutput{})
	pulumi.RegisterOutputType(DomainStatusDnsConfigOutput{})
	pulumi.RegisterOutputType(DomainStatusDnsConfigArrayOutput{})
	pulumi.RegisterOutputType(DomainStatusEndpointOutput{})
	pulumi.RegisterOutputType(DomainStatusEndpointArrayOutput{})
	pulumi.RegisterOutputType(DomainStatusLocationOutput{})
	pulumi.RegisterOutputType(DomainStatusLocationArrayOutput{})
	pulumi.RegisterOutputType(GroupIdentityMatcherOutput{})
	pulumi.RegisterOutputType(GroupIdentityMatcherPtrOutput{})
	pulumi.RegisterOutputType(GroupMemberQueryOutput{})
	pulumi.RegisterOutputType(GroupMemberQueryPtrOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecPtrOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecTermOutput{})
	pulumi.RegisterOutputType(GroupMemberQuerySpecTermArrayOutput{})
	pulumi.RegisterOutputType(GvcControlplaneTracingOutput{})
	pulumi.RegisterOutputType(GvcControlplaneTracingPtrOutput{})
	pulumi.RegisterOutputType(GvcLightstepTracingOutput{})
	pulumi.RegisterOutputType(GvcLightstepTracingPtrOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerOutput{})
	pulumi.RegisterOutputType(GvcLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(GvcOtelTracingOutput{})
	pulumi.RegisterOutputType(GvcOtelTracingPtrOutput{})
	pulumi.RegisterOutputType(GvcSidecarOutput{})
	pulumi.RegisterOutputType(GvcSidecarPtrOutput{})
	pulumi.RegisterOutputType(IdentityAwsAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityAwsAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyRoleAssignmentOutput{})
	pulumi.RegisterOutputType(IdentityAzureAccessPolicyRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyBindingOutput{})
	pulumi.RegisterOutputType(IdentityGcpAccessPolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceArrayOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceAwsPrivateLinkOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceAwsPrivateLinkPtrOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceGcpServiceConnectOutput{})
	pulumi.RegisterOutputType(IdentityNativeNetworkResourceGcpServiceConnectPtrOutput{})
	pulumi.RegisterOutputType(IdentityNetworkResourceOutput{})
	pulumi.RegisterOutputType(IdentityNetworkResourceArrayOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyPubOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyPubPtrOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyRespOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicyRespPtrOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicySubOutput{})
	pulumi.RegisterOutputType(IdentityNgsAccessPolicySubPtrOutput{})
	pulumi.RegisterOutputType(OrgAuthConfigOutput{})
	pulumi.RegisterOutputType(OrgAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingCloudWatchLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingCloudWatchLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingCoralogixLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingCoralogixLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingDatadogLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingDatadogLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingAwsOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingAwsPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingElasticCloudOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingElasticCloudPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingGenericOutput{})
	pulumi.RegisterOutputType(OrgLoggingElasticLoggingGenericPtrOutput{})
	pulumi.RegisterOutputType(OrgLoggingFluentdLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingFluentdLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingLogzioLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingLogzioLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingS3LoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingS3LoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgLoggingStackdriverLoggingOutput{})
	pulumi.RegisterOutputType(OrgLoggingStackdriverLoggingArrayOutput{})
	pulumi.RegisterOutputType(OrgObservabilityOutput{})
	pulumi.RegisterOutputType(OrgObservabilityPtrOutput{})
	pulumi.RegisterOutputType(OrgStatusOutput{})
	pulumi.RegisterOutputType(OrgStatusArrayOutput{})
	pulumi.RegisterOutputType(OrgTracingControlplaneTracingOutput{})
	pulumi.RegisterOutputType(OrgTracingControlplaneTracingPtrOutput{})
	pulumi.RegisterOutputType(OrgTracingLightstepTracingOutput{})
	pulumi.RegisterOutputType(OrgTracingLightstepTracingPtrOutput{})
	pulumi.RegisterOutputType(OrgTracingOtelTracingOutput{})
	pulumi.RegisterOutputType(OrgTracingOtelTracingPtrOutput{})
	pulumi.RegisterOutputType(PolicyBindingOutput{})
	pulumi.RegisterOutputType(PolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(PolicyTargetQueryOutput{})
	pulumi.RegisterOutputType(PolicyTargetQueryPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecTermOutput{})
	pulumi.RegisterOutputType(PolicyTargetQuerySpecTermArrayOutput{})
	pulumi.RegisterOutputType(SecretAwsOutput{})
	pulumi.RegisterOutputType(SecretAwsPtrOutput{})
	pulumi.RegisterOutputType(SecretAzureConnectorOutput{})
	pulumi.RegisterOutputType(SecretAzureConnectorPtrOutput{})
	pulumi.RegisterOutputType(SecretEcrOutput{})
	pulumi.RegisterOutputType(SecretEcrPtrOutput{})
	pulumi.RegisterOutputType(SecretKeypairOutput{})
	pulumi.RegisterOutputType(SecretKeypairPtrOutput{})
	pulumi.RegisterOutputType(SecretNatsAccountOutput{})
	pulumi.RegisterOutputType(SecretNatsAccountPtrOutput{})
	pulumi.RegisterOutputType(SecretOpaqueOutput{})
	pulumi.RegisterOutputType(SecretOpaquePtrOutput{})
	pulumi.RegisterOutputType(SecretTlsOutput{})
	pulumi.RegisterOutputType(SecretTlsPtrOutput{})
	pulumi.RegisterOutputType(SecretUserpassOutput{})
	pulumi.RegisterOutputType(SecretUserpassPtrOutput{})
	pulumi.RegisterOutputType(VolumeSetAutoscalingOutput{})
	pulumi.RegisterOutputType(VolumeSetAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(VolumeSetSnapshotsOutput{})
	pulumi.RegisterOutputType(VolumeSetSnapshotsPtrOutput{})
	pulumi.RegisterOutputType(VolumeSetStatusOutput{})
	pulumi.RegisterOutputType(VolumeSetStatusArrayOutput{})
	pulumi.RegisterOutputType(WorkloadContainerOutput{})
	pulumi.RegisterOutputType(WorkloadContainerArrayOutput{})
	pulumi.RegisterOutputType(WorkloadContainerGpuNvidiaOutput{})
	pulumi.RegisterOutputType(WorkloadContainerGpuNvidiaPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecycleOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePostStartExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLifecyclePreStopExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeGrpcOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeGrpcPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(WorkloadContainerLivenessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerMetricsOutput{})
	pulumi.RegisterOutputType(WorkloadContainerMetricsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerPortOutput{})
	pulumi.RegisterOutputType(WorkloadContainerPortArrayOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeExecOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeGrpcOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeGrpcPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(WorkloadContainerReadinessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(WorkloadContainerVolumeOutput{})
	pulumi.RegisterOutputType(WorkloadContainerVolumeArrayOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalPtrOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalOutboundAllowPortOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecExternalOutboundAllowPortArrayOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecInternalOutput{})
	pulumi.RegisterOutputType(WorkloadFirewallSpecInternalPtrOutput{})
	pulumi.RegisterOutputType(WorkloadJobOutput{})
	pulumi.RegisterOutputType(WorkloadJobPtrOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionArrayOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionAutoscalingOutput{})
	pulumi.RegisterOutputType(WorkloadLocalOptionAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsAutoscalingOutput{})
	pulumi.RegisterOutputType(WorkloadOptionsAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(WorkloadRolloutOptionsOutput{})
	pulumi.RegisterOutputType(WorkloadRolloutOptionsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadSecurityOptionsOutput{})
	pulumi.RegisterOutputType(WorkloadSecurityOptionsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadSidecarOutput{})
	pulumi.RegisterOutputType(WorkloadSidecarPtrOutput{})
	pulumi.RegisterOutputType(WorkloadStatusOutput{})
	pulumi.RegisterOutputType(WorkloadStatusArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusHealthCheckOutput{})
	pulumi.RegisterOutputType(WorkloadStatusHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageManifestOutput{})
	pulumi.RegisterOutputType(WorkloadStatusResolvedImageImageManifestArrayOutput{})
	pulumi.RegisterOutputType(GetGvcControlplaneTracingOutput{})
	pulumi.RegisterOutputType(GetGvcControlplaneTracingPtrOutput{})
	pulumi.RegisterOutputType(GetGvcLightstepTracingOutput{})
	pulumi.RegisterOutputType(GetGvcLightstepTracingPtrOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerOutput{})
	pulumi.RegisterOutputType(GetGvcLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(GetGvcOtelTracingOutput{})
	pulumi.RegisterOutputType(GetGvcOtelTracingPtrOutput{})
	pulumi.RegisterOutputType(GetGvcSidecarOutput{})
	pulumi.RegisterOutputType(GetGvcSidecarPtrOutput{})
	pulumi.RegisterOutputType(GetImageManifestOutput{})
	pulumi.RegisterOutputType(GetImageManifestArrayOutput{})
	pulumi.RegisterOutputType(GetImageManifestConfigOutput{})
	pulumi.RegisterOutputType(GetImageManifestConfigArrayOutput{})
	pulumi.RegisterOutputType(GetImageManifestLayerOutput{})
	pulumi.RegisterOutputType(GetImageManifestLayerArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestConfigOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestConfigArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestLayerOutput{})
	pulumi.RegisterOutputType(GetImagesImageManifestLayerArrayOutput{})
	pulumi.RegisterOutputType(GetImagesQueryOutput{})
	pulumi.RegisterOutputType(GetImagesQueryPtrOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecPtrOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecTermOutput{})
	pulumi.RegisterOutputType(GetImagesQuerySpecTermArrayOutput{})
	pulumi.RegisterOutputType(GetLocationGeoOutput{})
	pulumi.RegisterOutputType(GetLocationGeoArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationGeoOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationGeoArrayOutput{})
}
