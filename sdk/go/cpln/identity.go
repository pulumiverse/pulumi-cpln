// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

type Identity struct {
	pulumi.CustomResourceState

	// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
	// environment.
	AwsAccessPolicy IdentityAwsAccessPolicyPtrOutput `pulumi:"awsAccessPolicy"`
	// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
	// environment.
	AzureAccessPolicy IdentityAzureAccessPolicyPtrOutput `pulumi:"azureAccessPolicy"`
	// ID, in GUID format, of the Identity.
	CplnId pulumi.StringOutput `pulumi:"cplnId"`
	// Description of the Identity.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The GCP access policy can either contain an existing serviceAccount or multiple bindings.
	GcpAccessPolicy IdentityGcpAccessPolicyPtrOutput `pulumi:"gcpAccessPolicy"`
	// Name of the GVC.
	Gvc pulumi.StringOutput `pulumi:"gvc"`
	// Name of the Identity.
	Name pulumi.StringOutput `pulumi:"name"`
	// > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
	NativeNetworkResources IdentityNativeNetworkResourceArrayOutput `pulumi:"nativeNetworkResources"`
	// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
	// ports. - IP's and ports.
	NetworkResources IdentityNetworkResourceArrayOutput `pulumi:"networkResources"`
	// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
	// environment.
	NgsAccessPolicy IdentityNgsAccessPolicyPtrOutput `pulumi:"ngsAccessPolicy"`
	// Full link to this resource. Can be referenced by other resources.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Key-value map of identity status. Available fields: `objectName`.
	Status pulumi.StringMapOutput `pulumi:"status"`
	// Key-value map of resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewIdentity registers a new resource with the given unique name, arguments, and options.
func NewIdentity(ctx *pulumi.Context,
	name string, args *IdentityArgs, opts ...pulumi.ResourceOption) (*Identity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Gvc == nil {
		return nil, errors.New("invalid value for required argument 'Gvc'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Identity
	err := ctx.RegisterResource("cpln:index/identity:Identity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentity gets an existing Identity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityState, opts ...pulumi.ResourceOption) (*Identity, error) {
	var resource Identity
	err := ctx.ReadResource("cpln:index/identity:Identity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Identity resources.
type identityState struct {
	// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
	// environment.
	AwsAccessPolicy *IdentityAwsAccessPolicy `pulumi:"awsAccessPolicy"`
	// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
	// environment.
	AzureAccessPolicy *IdentityAzureAccessPolicy `pulumi:"azureAccessPolicy"`
	// ID, in GUID format, of the Identity.
	CplnId *string `pulumi:"cplnId"`
	// Description of the Identity.
	Description *string `pulumi:"description"`
	// The GCP access policy can either contain an existing serviceAccount or multiple bindings.
	GcpAccessPolicy *IdentityGcpAccessPolicy `pulumi:"gcpAccessPolicy"`
	// Name of the GVC.
	Gvc *string `pulumi:"gvc"`
	// Name of the Identity.
	Name *string `pulumi:"name"`
	// > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
	NativeNetworkResources []IdentityNativeNetworkResource `pulumi:"nativeNetworkResources"`
	// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
	// ports. - IP's and ports.
	NetworkResources []IdentityNetworkResource `pulumi:"networkResources"`
	// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
	// environment.
	NgsAccessPolicy *IdentityNgsAccessPolicy `pulumi:"ngsAccessPolicy"`
	// Full link to this resource. Can be referenced by other resources.
	SelfLink *string `pulumi:"selfLink"`
	// Key-value map of identity status. Available fields: `objectName`.
	Status map[string]string `pulumi:"status"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
}

type IdentityState struct {
	// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
	// environment.
	AwsAccessPolicy IdentityAwsAccessPolicyPtrInput
	// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
	// environment.
	AzureAccessPolicy IdentityAzureAccessPolicyPtrInput
	// ID, in GUID format, of the Identity.
	CplnId pulumi.StringPtrInput
	// Description of the Identity.
	Description pulumi.StringPtrInput
	// The GCP access policy can either contain an existing serviceAccount or multiple bindings.
	GcpAccessPolicy IdentityGcpAccessPolicyPtrInput
	// Name of the GVC.
	Gvc pulumi.StringPtrInput
	// Name of the Identity.
	Name pulumi.StringPtrInput
	// > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
	NativeNetworkResources IdentityNativeNetworkResourceArrayInput
	// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
	// ports. - IP's and ports.
	NetworkResources IdentityNetworkResourceArrayInput
	// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
	// environment.
	NgsAccessPolicy IdentityNgsAccessPolicyPtrInput
	// Full link to this resource. Can be referenced by other resources.
	SelfLink pulumi.StringPtrInput
	// Key-value map of identity status. Available fields: `objectName`.
	Status pulumi.StringMapInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
}

func (IdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityState)(nil)).Elem()
}

type identityArgs struct {
	// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
	// environment.
	AwsAccessPolicy *IdentityAwsAccessPolicy `pulumi:"awsAccessPolicy"`
	// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
	// environment.
	AzureAccessPolicy *IdentityAzureAccessPolicy `pulumi:"azureAccessPolicy"`
	// Description of the Identity.
	Description *string `pulumi:"description"`
	// The GCP access policy can either contain an existing serviceAccount or multiple bindings.
	GcpAccessPolicy *IdentityGcpAccessPolicy `pulumi:"gcpAccessPolicy"`
	// Name of the GVC.
	Gvc string `pulumi:"gvc"`
	// Name of the Identity.
	Name *string `pulumi:"name"`
	// > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
	NativeNetworkResources []IdentityNativeNetworkResource `pulumi:"nativeNetworkResources"`
	// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
	// ports. - IP's and ports.
	NetworkResources []IdentityNetworkResource `pulumi:"networkResources"`
	// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
	// environment.
	NgsAccessPolicy *IdentityNgsAccessPolicy `pulumi:"ngsAccessPolicy"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Identity resource.
type IdentityArgs struct {
	// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
	// environment.
	AwsAccessPolicy IdentityAwsAccessPolicyPtrInput
	// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
	// environment.
	AzureAccessPolicy IdentityAzureAccessPolicyPtrInput
	// Description of the Identity.
	Description pulumi.StringPtrInput
	// The GCP access policy can either contain an existing serviceAccount or multiple bindings.
	GcpAccessPolicy IdentityGcpAccessPolicyPtrInput
	// Name of the GVC.
	Gvc pulumi.StringInput
	// Name of the Identity.
	Name pulumi.StringPtrInput
	// > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
	NativeNetworkResources IdentityNativeNetworkResourceArrayInput
	// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
	// ports. - IP's and ports.
	NetworkResources IdentityNetworkResourceArrayInput
	// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
	// environment.
	NgsAccessPolicy IdentityNgsAccessPolicyPtrInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityArgs)(nil)).Elem()
}

type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(ctx context.Context) IdentityOutput
}

func (*Identity) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *Identity) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i *Identity) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

// IdentityArrayInput is an input type that accepts IdentityArray and IdentityArrayOutput values.
// You can construct a concrete instance of `IdentityArrayInput` via:
//
//	IdentityArray{ IdentityArgs{...} }
type IdentityArrayInput interface {
	pulumi.Input

	ToIdentityArrayOutput() IdentityArrayOutput
	ToIdentityArrayOutputWithContext(context.Context) IdentityArrayOutput
}

type IdentityArray []IdentityInput

func (IdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Identity)(nil)).Elem()
}

func (i IdentityArray) ToIdentityArrayOutput() IdentityArrayOutput {
	return i.ToIdentityArrayOutputWithContext(context.Background())
}

func (i IdentityArray) ToIdentityArrayOutputWithContext(ctx context.Context) IdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityArrayOutput)
}

// IdentityMapInput is an input type that accepts IdentityMap and IdentityMapOutput values.
// You can construct a concrete instance of `IdentityMapInput` via:
//
//	IdentityMap{ "key": IdentityArgs{...} }
type IdentityMapInput interface {
	pulumi.Input

	ToIdentityMapOutput() IdentityMapOutput
	ToIdentityMapOutputWithContext(context.Context) IdentityMapOutput
}

type IdentityMap map[string]IdentityInput

func (IdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Identity)(nil)).Elem()
}

func (i IdentityMap) ToIdentityMapOutput() IdentityMapOutput {
	return i.ToIdentityMapOutputWithContext(context.Background())
}

func (i IdentityMap) ToIdentityMapOutputWithContext(ctx context.Context) IdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityMapOutput)
}

type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
// environment.
func (o IdentityOutput) AwsAccessPolicy() IdentityAwsAccessPolicyPtrOutput {
	return o.ApplyT(func(v *Identity) IdentityAwsAccessPolicyPtrOutput { return v.AwsAccessPolicy }).(IdentityAwsAccessPolicyPtrOutput)
}

// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
// environment.
func (o IdentityOutput) AzureAccessPolicy() IdentityAzureAccessPolicyPtrOutput {
	return o.ApplyT(func(v *Identity) IdentityAzureAccessPolicyPtrOutput { return v.AzureAccessPolicy }).(IdentityAzureAccessPolicyPtrOutput)
}

// ID, in GUID format, of the Identity.
func (o IdentityOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.CplnId }).(pulumi.StringOutput)
}

// Description of the Identity.
func (o IdentityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The GCP access policy can either contain an existing serviceAccount or multiple bindings.
func (o IdentityOutput) GcpAccessPolicy() IdentityGcpAccessPolicyPtrOutput {
	return o.ApplyT(func(v *Identity) IdentityGcpAccessPolicyPtrOutput { return v.GcpAccessPolicy }).(IdentityGcpAccessPolicyPtrOutput)
}

// Name of the GVC.
func (o IdentityOutput) Gvc() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.Gvc }).(pulumi.StringOutput)
}

// Name of the Identity.
func (o IdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// > **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
func (o IdentityOutput) NativeNetworkResources() IdentityNativeNetworkResourceArrayOutput {
	return o.ApplyT(func(v *Identity) IdentityNativeNetworkResourceArrayOutput { return v.NativeNetworkResources }).(IdentityNativeNetworkResourceArrayOutput)
}

// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
// ports. - IP's and ports.
func (o IdentityOutput) NetworkResources() IdentityNetworkResourceArrayOutput {
	return o.ApplyT(func(v *Identity) IdentityNetworkResourceArrayOutput { return v.NetworkResources }).(IdentityNetworkResourceArrayOutput)
}

// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
// environment.
func (o IdentityOutput) NgsAccessPolicy() IdentityNgsAccessPolicyPtrOutput {
	return o.ApplyT(func(v *Identity) IdentityNgsAccessPolicyPtrOutput { return v.NgsAccessPolicy }).(IdentityNgsAccessPolicyPtrOutput)
}

// Full link to this resource. Can be referenced by other resources.
func (o IdentityOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Key-value map of identity status. Available fields: `objectName`.
func (o IdentityOutput) Status() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringMapOutput { return v.Status }).(pulumi.StringMapOutput)
}

// Key-value map of resource tags.
func (o IdentityOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type IdentityArrayOutput struct{ *pulumi.OutputState }

func (IdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Identity)(nil)).Elem()
}

func (o IdentityArrayOutput) ToIdentityArrayOutput() IdentityArrayOutput {
	return o
}

func (o IdentityArrayOutput) ToIdentityArrayOutputWithContext(ctx context.Context) IdentityArrayOutput {
	return o
}

func (o IdentityArrayOutput) Index(i pulumi.IntInput) IdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Identity {
		return vs[0].([]*Identity)[vs[1].(int)]
	}).(IdentityOutput)
}

type IdentityMapOutput struct{ *pulumi.OutputState }

func (IdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Identity)(nil)).Elem()
}

func (o IdentityMapOutput) ToIdentityMapOutput() IdentityMapOutput {
	return o
}

func (o IdentityMapOutput) ToIdentityMapOutputWithContext(ctx context.Context) IdentityMapOutput {
	return o
}

func (o IdentityMapOutput) MapIndex(k pulumi.StringInput) IdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Identity {
		return vs[0].(map[string]*Identity)[vs[1].(string)]
	}).(IdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityInput)(nil)).Elem(), &Identity{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityArrayInput)(nil)).Elem(), IdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityMapInput)(nil)).Elem(), IdentityMap{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityArrayOutput{})
	pulumi.RegisterOutputType(IdentityMapOutput{})
}
