// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    [CplnResourceType("cpln:index/identity:Identity")]
    public partial class Identity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
        /// environment.
        /// </summary>
        [Output("awsAccessPolicy")]
        public Output<Outputs.IdentityAwsAccessPolicy?> AwsAccessPolicy { get; private set; } = null!;

        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
        /// environment.
        /// </summary>
        [Output("azureAccessPolicy")]
        public Output<Outputs.IdentityAzureAccessPolicy?> AzureAccessPolicy { get; private set; } = null!;

        /// <summary>
        /// ID, in GUID format, of the Identity.
        /// </summary>
        [Output("cplnId")]
        public Output<string> CplnId { get; private set; } = null!;

        /// <summary>
        /// Description of the Identity.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The GCP access policy can either contain an existing service_account or multiple bindings.
        /// </summary>
        [Output("gcpAccessPolicy")]
        public Output<Outputs.IdentityGcpAccessPolicy?> GcpAccessPolicy { get; private set; } = null!;

        /// <summary>
        /// Name of the GVC.
        /// </summary>
        [Output("gvc")]
        public Output<string> Gvc { get; private set; } = null!;

        /// <summary>
        /// Name of the Identity.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// &gt; **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
        /// </summary>
        [Output("nativeNetworkResources")]
        public Output<ImmutableArray<Outputs.IdentityNativeNetworkResource>> NativeNetworkResources { get; private set; } = null!;

        /// <summary>
        /// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
        /// ports. - IP's and ports.
        /// </summary>
        [Output("networkResources")]
        public Output<ImmutableArray<Outputs.IdentityNetworkResource>> NetworkResources { get; private set; } = null!;

        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
        /// environment.
        /// </summary>
        [Output("ngsAccessPolicy")]
        public Output<Outputs.IdentityNgsAccessPolicy?> NgsAccessPolicy { get; private set; } = null!;

        /// <summary>
        /// Full link to this resource. Can be referenced by other resources.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Key-value map of identity status. Available fields: `objectName`.
        /// </summary>
        [Output("status")]
        public Output<ImmutableDictionary<string, string>> Status { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Identity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Identity(string name, IdentityArgs args, CustomResourceOptions? options = null)
            : base("cpln:index/identity:Identity", name, args ?? new IdentityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Identity(string name, Input<string> id, IdentityState? state = null, CustomResourceOptions? options = null)
            : base("cpln:index/identity:Identity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Identity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Identity Get(string name, Input<string> id, IdentityState? state = null, CustomResourceOptions? options = null)
        {
            return new Identity(name, id, state, options);
        }
    }

    public sealed class IdentityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
        /// environment.
        /// </summary>
        [Input("awsAccessPolicy")]
        public Input<Inputs.IdentityAwsAccessPolicyArgs>? AwsAccessPolicy { get; set; }

        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
        /// environment.
        /// </summary>
        [Input("azureAccessPolicy")]
        public Input<Inputs.IdentityAzureAccessPolicyArgs>? AzureAccessPolicy { get; set; }

        /// <summary>
        /// Description of the Identity.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The GCP access policy can either contain an existing service_account or multiple bindings.
        /// </summary>
        [Input("gcpAccessPolicy")]
        public Input<Inputs.IdentityGcpAccessPolicyArgs>? GcpAccessPolicy { get; set; }

        /// <summary>
        /// Name of the GVC.
        /// </summary>
        [Input("gvc", required: true)]
        public Input<string> Gvc { get; set; } = null!;

        /// <summary>
        /// Name of the Identity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nativeNetworkResources")]
        private InputList<Inputs.IdentityNativeNetworkResourceArgs>? _nativeNetworkResources;

        /// <summary>
        /// &gt; **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
        /// </summary>
        public InputList<Inputs.IdentityNativeNetworkResourceArgs> NativeNetworkResources
        {
            get => _nativeNetworkResources ?? (_nativeNetworkResources = new InputList<Inputs.IdentityNativeNetworkResourceArgs>());
            set => _nativeNetworkResources = value;
        }

        [Input("networkResources")]
        private InputList<Inputs.IdentityNetworkResourceArgs>? _networkResources;

        /// <summary>
        /// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
        /// ports. - IP's and ports.
        /// </summary>
        public InputList<Inputs.IdentityNetworkResourceArgs> NetworkResources
        {
            get => _networkResources ?? (_networkResources = new InputList<Inputs.IdentityNetworkResourceArgs>());
            set => _networkResources = value;
        }

        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
        /// environment.
        /// </summary>
        [Input("ngsAccessPolicy")]
        public Input<Inputs.IdentityNgsAccessPolicyArgs>? NgsAccessPolicy { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public IdentityArgs()
        {
        }
        public static new IdentityArgs Empty => new IdentityArgs();
    }

    public sealed class IdentityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an AWS
        /// environment.
        /// </summary>
        [Input("awsAccessPolicy")]
        public Input<Inputs.IdentityAwsAccessPolicyGetArgs>? AwsAccessPolicy { get; set; }

        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an Azure
        /// environment.
        /// </summary>
        [Input("azureAccessPolicy")]
        public Input<Inputs.IdentityAzureAccessPolicyGetArgs>? AzureAccessPolicy { get; set; }

        /// <summary>
        /// ID, in GUID format, of the Identity.
        /// </summary>
        [Input("cplnId")]
        public Input<string>? CplnId { get; set; }

        /// <summary>
        /// Description of the Identity.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The GCP access policy can either contain an existing service_account or multiple bindings.
        /// </summary>
        [Input("gcpAccessPolicy")]
        public Input<Inputs.IdentityGcpAccessPolicyGetArgs>? GcpAccessPolicy { get; set; }

        /// <summary>
        /// Name of the GVC.
        /// </summary>
        [Input("gvc")]
        public Input<string>? Gvc { get; set; }

        /// <summary>
        /// Name of the Identity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nativeNetworkResources")]
        private InputList<Inputs.IdentityNativeNetworkResourceGetArgs>? _nativeNetworkResources;

        /// <summary>
        /// &gt; **NOTE** The configuration of a native network resource requires the assistance of Control Plane support.
        /// </summary>
        public InputList<Inputs.IdentityNativeNetworkResourceGetArgs> NativeNetworkResources
        {
            get => _nativeNetworkResources ?? (_nativeNetworkResources = new InputList<Inputs.IdentityNativeNetworkResourceGetArgs>());
            set => _nativeNetworkResources = value;
        }

        [Input("networkResources")]
        private InputList<Inputs.IdentityNetworkResourceGetArgs>? _networkResources;

        /// <summary>
        /// A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and
        /// ports. - IP's and ports.
        /// </summary>
        public InputList<Inputs.IdentityNetworkResourceGetArgs> NetworkResources
        {
            get => _networkResources ?? (_networkResources = new InputList<Inputs.IdentityNetworkResourceGetArgs>());
            set => _networkResources = value;
        }

        /// <summary>
        /// A set of access policy rules that defines the actions and resources that an identity can access within an NGA
        /// environment.
        /// </summary>
        [Input("ngsAccessPolicy")]
        public Input<Inputs.IdentityNgsAccessPolicyGetArgs>? NgsAccessPolicy { get; set; }

        /// <summary>
        /// Full link to this resource. Can be referenced by other resources.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("status")]
        private InputMap<string>? _status;

        /// <summary>
        /// Key-value map of identity status. Available fields: `objectName`.
        /// </summary>
        public InputMap<string> Status
        {
            get => _status ?? (_status = new InputMap<string>());
            set => _status = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public IdentityState()
        {
        }
        public static new IdentityState Empty => new IdentityState();
    }
}
