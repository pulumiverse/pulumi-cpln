// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class Mk8sHetznerProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscaler")]
        public Input<Inputs.Mk8sHetznerProviderAutoscalerArgs>? Autoscaler { get; set; }

        [Input("dedicatedServerNodePools")]
        private InputList<Inputs.Mk8sHetznerProviderDedicatedServerNodePoolArgs>? _dedicatedServerNodePools;
        public InputList<Inputs.Mk8sHetznerProviderDedicatedServerNodePoolArgs> DedicatedServerNodePools
        {
            get => _dedicatedServerNodePools ?? (_dedicatedServerNodePools = new InputList<Inputs.Mk8sHetznerProviderDedicatedServerNodePoolArgs>());
            set => _dedicatedServerNodePools = value;
        }

        [Input("firewallId")]
        public Input<string>? FirewallId { get; set; }

        [Input("floatingIpSelector")]
        private InputMap<string>? _floatingIpSelector;
        public InputMap<string> FloatingIpSelector
        {
            get => _floatingIpSelector ?? (_floatingIpSelector = new InputMap<string>());
            set => _floatingIpSelector = value;
        }

        [Input("hetznerLabels")]
        private InputMap<string>? _hetznerLabels;
        public InputMap<string> HetznerLabels
        {
            get => _hetznerLabels ?? (_hetznerLabels = new InputMap<string>());
            set => _hetznerLabels = value;
        }

        [Input("image")]
        public Input<string>? Image { get; set; }

        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("networking", required: true)]
        public Input<Inputs.Mk8sHetznerProviderNetworkingArgs> Networking { get; set; } = null!;

        [Input("nodePools")]
        private InputList<Inputs.Mk8sHetznerProviderNodePoolArgs>? _nodePools;
        public InputList<Inputs.Mk8sHetznerProviderNodePoolArgs> NodePools
        {
            get => _nodePools ?? (_nodePools = new InputList<Inputs.Mk8sHetznerProviderNodePoolArgs>());
            set => _nodePools = value;
        }

        [Input("preInstallScript")]
        public Input<string>? PreInstallScript { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("sshKey")]
        public Input<string>? SshKey { get; set; }

        [Input("tokenSecretLink", required: true)]
        public Input<string> TokenSecretLink { get; set; } = null!;

        public Mk8sHetznerProviderArgs()
        {
        }
        public static new Mk8sHetznerProviderArgs Empty => new Mk8sHetznerProviderArgs();
    }
}
