// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class DomainStatusGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("dnsConfigs")]
        private InputList<Inputs.DomainStatusDnsConfigGetArgs>? _dnsConfigs;

        /// <summary>
        /// List of required DNS record entries.
        /// </summary>
        public InputList<Inputs.DomainStatusDnsConfigGetArgs> DnsConfigs
        {
            get => _dnsConfigs ?? (_dnsConfigs = new InputList<Inputs.DomainStatusDnsConfigGetArgs>());
            set => _dnsConfigs = value;
        }

        [Input("endpoints")]
        private InputList<Inputs.DomainStatusEndpointGetArgs>? _endpoints;

        /// <summary>
        /// List of configured domain endpoints.
        /// </summary>
        public InputList<Inputs.DomainStatusEndpointGetArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<Inputs.DomainStatusEndpointGetArgs>());
            set => _endpoints = value;
        }

        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        [Input("locations")]
        private InputList<Inputs.DomainStatusLocationGetArgs>? _locations;

        /// <summary>
        /// Contains the cloud provider name, region, and certificate status.
        /// </summary>
        public InputList<Inputs.DomainStatusLocationGetArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.DomainStatusLocationGetArgs>());
            set => _locations = value;
        }

        /// <summary>
        /// Status of Domain. Possible values: `Initializing`, `Ready`, `pendingDnsConfig`, `pendingCertificate`, `usedByGvc`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Warning message.
        /// </summary>
        [Input("warning")]
        public Input<string>? Warning { get; set; }

        public DomainStatusGetArgs()
        {
        }
        public static new DomainStatusGetArgs Empty => new DomainStatusGetArgs();
    }
}
