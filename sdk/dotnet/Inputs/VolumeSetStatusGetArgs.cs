// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class VolumeSetStatusGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Uniquely identifies the connection between the volume set and its workload. Every time a new connection is made, a new id is generated (e.g., If a workload is updated to remove the volume set, then updated again to reattach it, the volume set will have a new binding id).
        /// </summary>
        [Input("bindingId")]
        public Input<string>? BindingId { get; set; }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// Contains a list of actual volumes grouped by location.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The GVC ID.
        /// </summary>
        [Input("parentId")]
        public Input<string>? ParentId { get; set; }

        /// <summary>
        /// The url of the workload currently using this volume set (if any).
        /// </summary>
        [Input("usedByWorkload")]
        public Input<string>? UsedByWorkload { get; set; }

        [Input("workloadLinks")]
        private InputList<string>? _workloadLinks;

        /// <summary>
        /// Contains a list of workload links that are using this volume set.
        /// </summary>
        public InputList<string> WorkloadLinks
        {
            get => _workloadLinks ?? (_workloadLinks = new InputList<string>());
            set => _workloadLinks = value;
        }

        public VolumeSetStatusGetArgs()
        {
        }
        public static new VolumeSetStatusGetArgs Empty => new VolumeSetStatusGetArgs();
    }
}
