// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class WorkloadFirewallSpecExternalGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("inboundAllowCidrs")]
        private InputList<string>? _inboundAllowCidrs;

        /// <summary>
        /// The list of ipv4/ipv6 addresses or cidr blocks that are allowed to access this workload. No external access is allowed by default. Specify '0.0.0.0/0' to allow access to the public internet.
        /// </summary>
        public InputList<string> InboundAllowCidrs
        {
            get => _inboundAllowCidrs ?? (_inboundAllowCidrs = new InputList<string>());
            set => _inboundAllowCidrs = value;
        }

        [Input("outboundAllowCidrs")]
        private InputList<string>? _outboundAllowCidrs;

        /// <summary>
        /// The list of ipv4/ipv6 addresses or cidr blocks that this workload is allowed reach. No outbound access is allowed by default. Specify '0.0.0.0/0' to allow outbound access to the public internet.
        /// </summary>
        public InputList<string> OutboundAllowCidrs
        {
            get => _outboundAllowCidrs ?? (_outboundAllowCidrs = new InputList<string>());
            set => _outboundAllowCidrs = value;
        }

        [Input("outboundAllowHostnames")]
        private InputList<string>? _outboundAllowHostnames;

        /// <summary>
        /// The list of public hostnames that this workload is allowed to reach. No outbound access is allowed by default. A wildcard `*` is allowed on the prefix of the hostname only, ex: `*.amazonaws.com`. Use `outboundAllowCIDR` to allow access to all external websites.
        /// </summary>
        public InputList<string> OutboundAllowHostnames
        {
            get => _outboundAllowHostnames ?? (_outboundAllowHostnames = new InputList<string>());
            set => _outboundAllowHostnames = value;
        }

        [Input("outboundAllowPorts")]
        private InputList<Inputs.WorkloadFirewallSpecExternalOutboundAllowPortGetArgs>? _outboundAllowPorts;

        /// <summary>
        /// Allow outbound access to specific ports and protocols. When not specified, communication to address ranges in outboundAllowCIDR is allowed on all ports and communication to names in outboundAllowHostname is allowed on ports 80/443.
        /// </summary>
        public InputList<Inputs.WorkloadFirewallSpecExternalOutboundAllowPortGetArgs> OutboundAllowPorts
        {
            get => _outboundAllowPorts ?? (_outboundAllowPorts = new InputList<Inputs.WorkloadFirewallSpecExternalOutboundAllowPortGetArgs>());
            set => _outboundAllowPorts = value;
        }

        public WorkloadFirewallSpecExternalGetArgs()
        {
        }
        public static new WorkloadFirewallSpecExternalGetArgs Empty => new WorkloadFirewallSpecExternalGetArgs();
    }
}
