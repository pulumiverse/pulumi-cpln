// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class Mk8sHetznerProviderGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscaler")]
        public Input<Inputs.Mk8sHetznerProviderAutoscalerGetArgs>? Autoscaler { get; set; }

        [Input("dedicatedServerNodePools")]
        private InputList<Inputs.Mk8sHetznerProviderDedicatedServerNodePoolGetArgs>? _dedicatedServerNodePools;
        public InputList<Inputs.Mk8sHetznerProviderDedicatedServerNodePoolGetArgs> DedicatedServerNodePools
        {
            get => _dedicatedServerNodePools ?? (_dedicatedServerNodePools = new InputList<Inputs.Mk8sHetznerProviderDedicatedServerNodePoolGetArgs>());
            set => _dedicatedServerNodePools = value;
        }

        [Input("firewallId")]
        public Input<string>? FirewallId { get; set; }

        [Input("hetznerLabels")]
        private InputMap<string>? _hetznerLabels;
        public InputMap<string> HetznerLabels
        {
            get => _hetznerLabels ?? (_hetznerLabels = new InputMap<string>());
            set => _hetznerLabels = value;
        }

        [Input("image")]
        public Input<string>? Image { get; set; }

        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("networking")]
        public Input<Inputs.Mk8sHetznerProviderNetworkingGetArgs>? Networking { get; set; }

        [Input("nodePools")]
        private InputList<Inputs.Mk8sHetznerProviderNodePoolGetArgs>? _nodePools;
        public InputList<Inputs.Mk8sHetznerProviderNodePoolGetArgs> NodePools
        {
            get => _nodePools ?? (_nodePools = new InputList<Inputs.Mk8sHetznerProviderNodePoolGetArgs>());
            set => _nodePools = value;
        }

        [Input("preInstallScript")]
        public Input<string>? PreInstallScript { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("sshKey")]
        public Input<string>? SshKey { get; set; }

        [Input("tokenSecretLink", required: true)]
        public Input<string> TokenSecretLink { get; set; } = null!;

        public Mk8sHetznerProviderGetArgs()
        {
        }
        public static new Mk8sHetznerProviderGetArgs Empty => new Mk8sHetznerProviderGetArgs();
    }
}
