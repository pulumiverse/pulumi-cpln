// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class Mk8sAwsProviderGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscaler")]
        public Input<Inputs.Mk8sAwsProviderAutoscalerGetArgs>? Autoscaler { get; set; }

        [Input("awsTags")]
        private InputMap<string>? _awsTags;

        /// <summary>
        /// Extra tags to attach to all created objects.
        /// </summary>
        public InputMap<string> AwsTags
        {
            get => _awsTags ?? (_awsTags = new InputMap<string>());
            set => _awsTags = value;
        }

        /// <summary>
        /// Control Plane will set up the cluster by assuming this role.
        /// </summary>
        [Input("deployRoleArn", required: true)]
        public Input<string> DeployRoleArn { get; set; } = null!;

        [Input("deployRoleChains")]
        private InputList<Inputs.Mk8sAwsProviderDeployRoleChainGetArgs>? _deployRoleChains;
        public InputList<Inputs.Mk8sAwsProviderDeployRoleChainGetArgs> DeployRoleChains
        {
            get => _deployRoleChains ?? (_deployRoleChains = new InputList<Inputs.Mk8sAwsProviderDeployRoleChainGetArgs>());
            set => _deployRoleChains = value;
        }

        /// <summary>
        /// KMS key used to encrypt volumes. Supports SSM.
        /// </summary>
        [Input("diskEncryptionKeyArn")]
        public Input<string>? DiskEncryptionKeyArn { get; set; }

        [Input("extraNodePolicies")]
        private InputList<string>? _extraNodePolicies;
        public InputList<string> ExtraNodePolicies
        {
            get => _extraNodePolicies ?? (_extraNodePolicies = new InputList<string>());
            set => _extraNodePolicies = value;
        }

        /// <summary>
        /// Default image for all nodes.
        /// </summary>
        [Input("image")]
        public Input<Inputs.Mk8sAwsProviderImageGetArgs>? Image { get; set; }

        /// <summary>
        /// Name of keyPair. Supports SSM
        /// </summary>
        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("networking")]
        public Input<Inputs.Mk8sAwsProviderNetworkingGetArgs>? Networking { get; set; }

        [Input("nodePools")]
        private InputList<Inputs.Mk8sAwsProviderNodePoolGetArgs>? _nodePools;

        /// <summary>
        /// List of node pools.
        /// </summary>
        public InputList<Inputs.Mk8sAwsProviderNodePoolGetArgs> NodePools
        {
            get => _nodePools ?? (_nodePools = new InputList<Inputs.Mk8sAwsProviderNodePoolGetArgs>());
            set => _nodePools = value;
        }

        /// <summary>
        /// Optional shell script that will be run before K8s is installed. Supports SSM.
        /// </summary>
        [Input("preInstallScript")]
        public Input<string>? PreInstallScript { get; set; }

        /// <summary>
        /// Region where the cluster nodes will live.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// Security groups to deploy nodes to. Security groups control if the cluster is multi-zone or single-zon.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// If true, Control Plane will not create any roles.
        /// </summary>
        [Input("skipCreateRoles")]
        public Input<bool>? SkipCreateRoles { get; set; }

        /// <summary>
        /// The vpc where nodes will be deployed. Supports SSM.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public Mk8sAwsProviderGetArgs()
        {
        }
        public static new Mk8sAwsProviderGetArgs Empty => new Mk8sAwsProviderGetArgs();
    }
}
