// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class GetWorkloadOptionAutoscalingKedaTriggerArgs : global::Pulumi.InvokeArgs
    {
        [Input("authenticationReves")]
        private List<Inputs.GetWorkloadOptionAutoscalingKedaTriggerAuthenticationRefArgs>? _authenticationReves;

        /// <summary>
        /// Reference to a KEDA authentication object for secure access to external systems.
        /// </summary>
        public List<Inputs.GetWorkloadOptionAutoscalingKedaTriggerAuthenticationRefArgs> AuthenticationReves
        {
            get => _authenticationReves ?? (_authenticationReves = new List<Inputs.GetWorkloadOptionAutoscalingKedaTriggerAuthenticationRefArgs>());
            set => _authenticationReves = value;
        }

        [Input("metadata", required: true)]
        private Dictionary<string, string>? _metadata;

        /// <summary>
        /// The configuration parameters that the trigger requires.
        /// </summary>
        public Dictionary<string, string> Metadata
        {
            get => _metadata ?? (_metadata = new Dictionary<string, string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The type of metric to be used for scaling.
        /// </summary>
        [Input("metricType", required: true)]
        public string MetricType { get; set; } = null!;

        /// <summary>
        /// An optional name for the trigger. If not provided, a default name will be generated based on the trigger type.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The type of KEDA trigger, e.g "prometheus", "aws-sqs", etc.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        /// <summary>
        /// Enables caching of metric values during polling interval.
        /// </summary>
        [Input("useCachedMetrics", required: true)]
        public bool UseCachedMetrics { get; set; }

        public GetWorkloadOptionAutoscalingKedaTriggerArgs()
        {
        }
        public static new GetWorkloadOptionAutoscalingKedaTriggerArgs Empty => new GetWorkloadOptionAutoscalingKedaTriggerArgs();
    }
}
