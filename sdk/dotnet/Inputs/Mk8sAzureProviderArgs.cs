// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class Mk8sAzureProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscaler")]
        public Input<Inputs.Mk8sAzureProviderAutoscalerArgs>? Autoscaler { get; set; }

        /// <summary>
        /// Default image for all nodes.
        /// </summary>
        [Input("image")]
        public Input<Inputs.Mk8sAzureProviderImageArgs>? Image { get; set; }

        /// <summary>
        /// Region where the cluster nodes will live.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The vpc where nodes will be deployed.
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("networking")]
        public Input<Inputs.Mk8sAzureProviderNetworkingArgs>? Networking { get; set; }

        [Input("nodePools")]
        private InputList<Inputs.Mk8sAzureProviderNodePoolArgs>? _nodePools;
        public InputList<Inputs.Mk8sAzureProviderNodePoolArgs> NodePools
        {
            get => _nodePools ?? (_nodePools = new InputList<Inputs.Mk8sAzureProviderNodePoolArgs>());
            set => _nodePools = value;
        }

        /// <summary>
        /// Optional shell script that will be run before K8s is installed. Supports SSM.
        /// </summary>
        [Input("preInstallScript")]
        public Input<string>? PreInstallScript { get; set; }

        [Input("resourceGroup", required: true)]
        public Input<string> ResourceGroup { get; set; } = null!;

        [Input("sdkSecretLink", required: true)]
        public Input<string> SdkSecretLink { get; set; } = null!;

        [Input("sshKeys", required: true)]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// SSH keys to install for "azureuser" linux user
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Extra tags to attach to all created objects.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public Mk8sAzureProviderArgs()
        {
        }
        public static new Mk8sAzureProviderArgs Empty => new Mk8sAzureProviderArgs();
    }
}
