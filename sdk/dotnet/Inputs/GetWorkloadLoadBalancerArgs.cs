// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Inputs
{

    public sealed class GetWorkloadLoadBalancerInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("directs")]
        private InputList<Inputs.GetWorkloadLoadBalancerDirectInputArgs>? _directs;

        /// <summary>
        /// Direct load balancers are created in each location that a workload is running in and are configured for the standard endpoints of the workload. Customers are responsible for configuring the workload with certificates if TLS is required.
        /// </summary>
        public InputList<Inputs.GetWorkloadLoadBalancerDirectInputArgs> Directs
        {
            get => _directs ?? (_directs = new InputList<Inputs.GetWorkloadLoadBalancerDirectInputArgs>());
            set => _directs = value;
        }

        [Input("geoLocations")]
        private InputList<Inputs.GetWorkloadLoadBalancerGeoLocationInputArgs>? _geoLocations;
        public InputList<Inputs.GetWorkloadLoadBalancerGeoLocationInputArgs> GeoLocations
        {
            get => _geoLocations ?? (_geoLocations = new InputList<Inputs.GetWorkloadLoadBalancerGeoLocationInputArgs>());
            set => _geoLocations = value;
        }

        /// <summary>
        /// When enabled, individual replicas of the workload can be reached directly using the subdomain prefix replica-&lt;index&gt;. For example, replica-0.my-workload.my-gvc.cpln.local or replica-0.my-workload-&lt;gvc-alias&gt;.cpln.app - Can only be used with stateful workloads.
        /// </summary>
        [Input("replicaDirect", required: true)]
        public Input<bool> ReplicaDirect { get; set; } = null!;

        public GetWorkloadLoadBalancerInputArgs()
        {
        }
        public static new GetWorkloadLoadBalancerInputArgs Empty => new GetWorkloadLoadBalancerInputArgs();
    }
}
