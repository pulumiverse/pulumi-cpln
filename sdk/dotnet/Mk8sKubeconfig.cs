// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    /// <summary>
    /// Obtain the Clusterâ€™s Kubeconfig.
    /// 
    /// ## Declaration
    /// 
    /// ### Required
    /// 
    /// - **name** (String) Name of the Mk8s.
    /// 
    /// &gt; **Note** Only one of the below can be included in the resource.
    /// 
    /// - **profile** (String) The name of the cpln profile used to generate the kubeconfig file for authenticating with your Kubernetes cluster.
    /// - **service_account** (String) The name of an existing service account for which a key will be generated, enabling kubeconfig-based authentication with your Kubernetes cluster.
    /// 
    /// ## Outputs
    /// 
    /// The following attributes are exported:
    /// 
    /// - **kubeconfig** (String) The Kubeconfig in YAML format.
    /// 
    /// ## Example Usage
    /// 
    /// ### Profile
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cpln = Pulumiverse.Cpln;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @new = new Cpln.Mk8sKubeconfig("new", new()
    ///     {
    ///         Profile = "default",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["generic-cluster-kubeconfig"] = @new.Kubeconfig,
    ///     };
    /// });
    /// ```
    /// 
    /// ### Service Account
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cpln = Pulumiverse.Cpln;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @new = new Cpln.Mk8sKubeconfig("new", new()
    ///     {
    ///         ServiceAccount = "devops-sa",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["generic-cluster-kubeconfig"] = @new.Kubeconfig,
    ///     };
    /// });
    /// ```
    /// </summary>
    [CplnResourceType("cpln:index/mk8sKubeconfig:Mk8sKubeconfig")]
    public partial class Mk8sKubeconfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Kubeconfig of your MK8s cluster in YAML format.
        /// </summary>
        [Output("kubeconfig")]
        public Output<string> Kubeconfig { get; private set; } = null!;

        /// <summary>
        /// Name of the MK8s to create the Kubeconfig for.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Profile name to extract the token from.
        /// </summary>
        [Output("profile")]
        public Output<string?> Profile { get; private set; } = null!;

        /// <summary>
        /// A service account to add a key to.
        /// </summary>
        [Output("serviceAccount")]
        public Output<string?> ServiceAccount { get; private set; } = null!;


        /// <summary>
        /// Create a Mk8sKubeconfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Mk8sKubeconfig(string name, Mk8sKubeconfigArgs? args = null, CustomResourceOptions? options = null)
            : base("cpln:index/mk8sKubeconfig:Mk8sKubeconfig", name, args ?? new Mk8sKubeconfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Mk8sKubeconfig(string name, Input<string> id, Mk8sKubeconfigState? state = null, CustomResourceOptions? options = null)
            : base("cpln:index/mk8sKubeconfig:Mk8sKubeconfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                AdditionalSecretOutputs =
                {
                    "kubeconfig",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Mk8sKubeconfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Mk8sKubeconfig Get(string name, Input<string> id, Mk8sKubeconfigState? state = null, CustomResourceOptions? options = null)
        {
            return new Mk8sKubeconfig(name, id, state, options);
        }
    }

    public sealed class Mk8sKubeconfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the MK8s to create the Kubeconfig for.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Profile name to extract the token from.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// A service account to add a key to.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        public Mk8sKubeconfigArgs()
        {
        }
        public static new Mk8sKubeconfigArgs Empty => new Mk8sKubeconfigArgs();
    }

    public sealed class Mk8sKubeconfigState : global::Pulumi.ResourceArgs
    {
        [Input("kubeconfig")]
        private Input<string>? _kubeconfig;

        /// <summary>
        /// The Kubeconfig of your MK8s cluster in YAML format.
        /// </summary>
        public Input<string>? Kubeconfig
        {
            get => _kubeconfig;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kubeconfig = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Name of the MK8s to create the Kubeconfig for.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Profile name to extract the token from.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// A service account to add a key to.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        public Mk8sKubeconfigState()
        {
        }
        public static new Mk8sKubeconfigState Empty => new Mk8sKubeconfigState();
    }
}
