// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    [CplnResourceType("cpln:index/workload:Workload")]
    public partial class Workload : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An isolated and lightweight runtime environment that encapsulates an application and its dependencies.
        /// </summary>
        [Output("containers")]
        public Output<ImmutableArray<Outputs.WorkloadContainer>> Containers { get; private set; } = null!;

        /// <summary>
        /// The ID, in GUID format, of the Workload.
        /// </summary>
        [Output("cplnId")]
        public Output<string> CplnId { get; private set; } = null!;

        /// <summary>
        /// Description of the Workload.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic.
        /// Access is restricted by default.
        /// </summary>
        [Output("firewallSpec")]
        public Output<Outputs.WorkloadFirewallSpec?> FirewallSpec { get; private set; } = null!;

        /// <summary>
        /// Name of the associated GVC.
        /// </summary>
        [Output("gvc")]
        public Output<string> Gvc { get; private set; } = null!;

        /// <summary>
        /// Full link to an Identity.
        /// </summary>
        [Output("identityLink")]
        public Output<string?> IdentityLink { get; private set; } = null!;

        /// <summary>
        /// [Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron).
        /// </summary>
        [Output("job")]
        public Output<Outputs.WorkloadJob?> Job { get; private set; } = null!;

        [Output("loadBalancer")]
        public Output<Outputs.WorkloadLoadBalancer?> LoadBalancer { get; private set; } = null!;

        [Output("localOptions")]
        public Output<ImmutableArray<Outputs.WorkloadLocalOption>> LocalOptions { get; private set; } = null!;

        /// <summary>
        /// Name of the Workload.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and
        /// characteristics of the workload.
        /// </summary>
        [Output("options")]
        public Output<Outputs.WorkloadOptions> Options { get; private set; } = null!;

        /// <summary>
        /// Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable
        /// replicas, surge replicas, and scaling policies.
        /// </summary>
        [Output("rolloutOptions")]
        public Output<Outputs.WorkloadRolloutOptions?> RolloutOptions { get; private set; } = null!;

        /// <summary>
        /// Allows for the configuration of the `file system group id` and `geo location`
        /// </summary>
        [Output("securityOptions")]
        public Output<Outputs.WorkloadSecurityOptions?> SecurityOptions { get; private set; } = null!;

        /// <summary>
        /// Full link to this resource. Can be referenced by other resources.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("sidecar")]
        public Output<Outputs.WorkloadSidecar?> Sidecar { get; private set; } = null!;

        /// <summary>
        /// Status of the workload.
        /// </summary>
        [Output("statuses")]
        public Output<ImmutableArray<Outputs.WorkloadStatus>> Statuses { get; private set; } = null!;

        /// <summary>
        /// Workload will automatically redeploy when one of the container images is updated in the container registry. Default:
        /// false.
        /// </summary>
        [Output("supportDynamicTags")]
        public Output<bool?> SupportDynamicTags { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Workload Type. Either `serverless`, `standard`, `stateful`, or `cron`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Workload resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workload(string name, WorkloadArgs args, CustomResourceOptions? options = null)
            : base("cpln:index/workload:Workload", name, args ?? new WorkloadArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workload(string name, Input<string> id, WorkloadState? state = null, CustomResourceOptions? options = null)
            : base("cpln:index/workload:Workload", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workload resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workload Get(string name, Input<string> id, WorkloadState? state = null, CustomResourceOptions? options = null)
        {
            return new Workload(name, id, state, options);
        }
    }

    public sealed class WorkloadArgs : global::Pulumi.ResourceArgs
    {
        [Input("containers", required: true)]
        private InputList<Inputs.WorkloadContainerArgs>? _containers;

        /// <summary>
        /// An isolated and lightweight runtime environment that encapsulates an application and its dependencies.
        /// </summary>
        public InputList<Inputs.WorkloadContainerArgs> Containers
        {
            get => _containers ?? (_containers = new InputList<Inputs.WorkloadContainerArgs>());
            set => _containers = value;
        }

        /// <summary>
        /// Description of the Workload.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic.
        /// Access is restricted by default.
        /// </summary>
        [Input("firewallSpec")]
        public Input<Inputs.WorkloadFirewallSpecArgs>? FirewallSpec { get; set; }

        /// <summary>
        /// Name of the associated GVC.
        /// </summary>
        [Input("gvc", required: true)]
        public Input<string> Gvc { get; set; } = null!;

        /// <summary>
        /// Full link to an Identity.
        /// </summary>
        [Input("identityLink")]
        public Input<string>? IdentityLink { get; set; }

        /// <summary>
        /// [Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron).
        /// </summary>
        [Input("job")]
        public Input<Inputs.WorkloadJobArgs>? Job { get; set; }

        [Input("loadBalancer")]
        public Input<Inputs.WorkloadLoadBalancerArgs>? LoadBalancer { get; set; }

        [Input("localOptions")]
        private InputList<Inputs.WorkloadLocalOptionArgs>? _localOptions;
        public InputList<Inputs.WorkloadLocalOptionArgs> LocalOptions
        {
            get => _localOptions ?? (_localOptions = new InputList<Inputs.WorkloadLocalOptionArgs>());
            set => _localOptions = value;
        }

        /// <summary>
        /// Name of the Workload.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and
        /// characteristics of the workload.
        /// </summary>
        [Input("options", required: true)]
        public Input<Inputs.WorkloadOptionsArgs> Options { get; set; } = null!;

        /// <summary>
        /// Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable
        /// replicas, surge replicas, and scaling policies.
        /// </summary>
        [Input("rolloutOptions")]
        public Input<Inputs.WorkloadRolloutOptionsArgs>? RolloutOptions { get; set; }

        /// <summary>
        /// Allows for the configuration of the `file system group id` and `geo location`
        /// </summary>
        [Input("securityOptions")]
        public Input<Inputs.WorkloadSecurityOptionsArgs>? SecurityOptions { get; set; }

        [Input("sidecar")]
        public Input<Inputs.WorkloadSidecarArgs>? Sidecar { get; set; }

        /// <summary>
        /// Workload will automatically redeploy when one of the container images is updated in the container registry. Default:
        /// false.
        /// </summary>
        [Input("supportDynamicTags")]
        public Input<bool>? SupportDynamicTags { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Workload Type. Either `serverless`, `standard`, `stateful`, or `cron`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WorkloadArgs()
        {
        }
        public static new WorkloadArgs Empty => new WorkloadArgs();
    }

    public sealed class WorkloadState : global::Pulumi.ResourceArgs
    {
        [Input("containers")]
        private InputList<Inputs.WorkloadContainerGetArgs>? _containers;

        /// <summary>
        /// An isolated and lightweight runtime environment that encapsulates an application and its dependencies.
        /// </summary>
        public InputList<Inputs.WorkloadContainerGetArgs> Containers
        {
            get => _containers ?? (_containers = new InputList<Inputs.WorkloadContainerGetArgs>());
            set => _containers = value;
        }

        /// <summary>
        /// The ID, in GUID format, of the Workload.
        /// </summary>
        [Input("cplnId")]
        public Input<string>? CplnId { get; set; }

        /// <summary>
        /// Description of the Workload.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic.
        /// Access is restricted by default.
        /// </summary>
        [Input("firewallSpec")]
        public Input<Inputs.WorkloadFirewallSpecGetArgs>? FirewallSpec { get; set; }

        /// <summary>
        /// Name of the associated GVC.
        /// </summary>
        [Input("gvc")]
        public Input<string>? Gvc { get; set; }

        /// <summary>
        /// Full link to an Identity.
        /// </summary>
        [Input("identityLink")]
        public Input<string>? IdentityLink { get; set; }

        /// <summary>
        /// [Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron).
        /// </summary>
        [Input("job")]
        public Input<Inputs.WorkloadJobGetArgs>? Job { get; set; }

        [Input("loadBalancer")]
        public Input<Inputs.WorkloadLoadBalancerGetArgs>? LoadBalancer { get; set; }

        [Input("localOptions")]
        private InputList<Inputs.WorkloadLocalOptionGetArgs>? _localOptions;
        public InputList<Inputs.WorkloadLocalOptionGetArgs> LocalOptions
        {
            get => _localOptions ?? (_localOptions = new InputList<Inputs.WorkloadLocalOptionGetArgs>());
            set => _localOptions = value;
        }

        /// <summary>
        /// Name of the Workload.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and
        /// characteristics of the workload.
        /// </summary>
        [Input("options")]
        public Input<Inputs.WorkloadOptionsGetArgs>? Options { get; set; }

        /// <summary>
        /// Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable
        /// replicas, surge replicas, and scaling policies.
        /// </summary>
        [Input("rolloutOptions")]
        public Input<Inputs.WorkloadRolloutOptionsGetArgs>? RolloutOptions { get; set; }

        /// <summary>
        /// Allows for the configuration of the `file system group id` and `geo location`
        /// </summary>
        [Input("securityOptions")]
        public Input<Inputs.WorkloadSecurityOptionsGetArgs>? SecurityOptions { get; set; }

        /// <summary>
        /// Full link to this resource. Can be referenced by other resources.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("sidecar")]
        public Input<Inputs.WorkloadSidecarGetArgs>? Sidecar { get; set; }

        [Input("statuses")]
        private InputList<Inputs.WorkloadStatusGetArgs>? _statuses;

        /// <summary>
        /// Status of the workload.
        /// </summary>
        public InputList<Inputs.WorkloadStatusGetArgs> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<Inputs.WorkloadStatusGetArgs>());
            set => _statuses = value;
        }

        /// <summary>
        /// Workload will automatically redeploy when one of the container images is updated in the container registry. Default:
        /// false.
        /// </summary>
        [Input("supportDynamicTags")]
        public Input<bool>? SupportDynamicTags { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Workload Type. Either `serverless`, `standard`, `stateful`, or `cron`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public WorkloadState()
        {
        }
        public static new WorkloadState Empty => new WorkloadState();
    }
}
