// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    public static class GetSecret
    {
        /// <summary>
        /// Use this data source to access information about a [Secret](https://docs.controlplane.com/reference/secret) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the secret.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the secret.
        /// - **name** (String) Name of the secret.
        /// - **description** (String) Description of the secret.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **secret_link** (String) Output used when linking a secret to an environment variable or volume, in the format: `cpln://secret/SECRET_NAME`.
        /// - **dictionary_as_envs** (Map of String) If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
        /// - **aws** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#aws).
        /// - **azure_connector** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
        /// - **azure_sdk** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
        /// - **dictionary** (Map of String) List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
        /// - **docker** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
        /// - **ecr** (Block List, Max: 1) (see below).
        /// - **gcp** (String, Sensitive) JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
        /// - **keypair** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
        /// - **nats_account** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
        /// - **opaque** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
        /// - **tls** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#tls).
        /// - **userpass** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#username).
        /// 
        /// &lt;a id="nestedblock--aws"&gt;&lt;/a&gt;
        /// 
        /// ### `aws`
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String, Sensitive) Access Key provided by AWS.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID.
        /// 
        /// &lt;a id="nestedblock--azure_connector"&gt;&lt;/a&gt;
        /// 
        /// ### `azure_connector`
        /// 
        /// Optional:
        /// 
        /// - **code** (String, Sensitive) Code/Key to authenticate to deployment URL.
        /// - **url** (String, Sensitive) Deployment URL.
        /// 
        /// &lt;a id="nestedblock--ecr"&gt;&lt;/a&gt;
        /// 
        /// ### `ecr`
        /// 
        /// [Reference Page](https://docs.controlplane.com/reference/secret#ecr)
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String) Access Key provided by AWS.
        /// - **repos** (Set of String) List of ECR repositories.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.
        /// 
        /// &lt;a id="nestedblock--keypair"&gt;&lt;/a&gt;
        /// 
        /// ### `keypair`
        /// 
        /// Optional:
        /// 
        /// - **passphrase** (String, Sensitive) Passphrase for private key.
        /// - **public_key** (String) Public Key.
        /// - **secret_key** (String, Sensitive) Secret/Private Key.
        /// 
        /// &lt;a id="nestedblock--nats-account"&gt;&lt;/a&gt;
        /// 
        /// ### `nats_account`
        /// 
        /// Required:
        /// 
        /// - **account_id** (String) Account ID.
        /// - **private_key** (String) Private Key.
        /// 
        /// &lt;a id="nestedblock--opaque"&gt;&lt;/a&gt;
        /// 
        /// ### `opaque`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `plain`, `base64`. Default: `plain`.
        /// - **payload** (String, Sensitive) Plain text or base64 encoded string. Use `encoding` attribute to specify encoding.
        /// 
        /// &lt;a id="nestedblock--tls"&gt;&lt;/a&gt;
        /// 
        /// ### `tls`
        /// 
        /// Optional:
        /// 
        /// - **cert** (String) Public Certificate.
        /// - **chain** (String) Chain Certificate.
        /// - **key** (String, Sensitive) Private Certificate.
        /// 
        /// &lt;a id="nestedblock--userpass"&gt;&lt;/a&gt;
        /// 
        /// ### `userpass`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `plain`, `base64`. Default: `plain`.
        /// - **password** (String, Sensitive) Password.
        /// - **username** (String) Username.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cpln.GetSecret.Invoke(new()
        ///     {
        ///         Name = "example-secret-opaque",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example-secret-payload"] = example.Apply(getSecretResult =&gt; getSecretResult.Opaque?.Payload),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecretResult> InvokeAsync(GetSecretArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretResult>("cpln:index/getSecret:getSecret", args ?? new GetSecretArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about a [Secret](https://docs.controlplane.com/reference/secret) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the secret.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the secret.
        /// - **name** (String) Name of the secret.
        /// - **description** (String) Description of the secret.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **secret_link** (String) Output used when linking a secret to an environment variable or volume, in the format: `cpln://secret/SECRET_NAME`.
        /// - **dictionary_as_envs** (Map of String) If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
        /// - **aws** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#aws).
        /// - **azure_connector** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
        /// - **azure_sdk** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
        /// - **dictionary** (Map of String) List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
        /// - **docker** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
        /// - **ecr** (Block List, Max: 1) (see below).
        /// - **gcp** (String, Sensitive) JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
        /// - **keypair** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
        /// - **nats_account** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
        /// - **opaque** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
        /// - **tls** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#tls).
        /// - **userpass** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#username).
        /// 
        /// &lt;a id="nestedblock--aws"&gt;&lt;/a&gt;
        /// 
        /// ### `aws`
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String, Sensitive) Access Key provided by AWS.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID.
        /// 
        /// &lt;a id="nestedblock--azure_connector"&gt;&lt;/a&gt;
        /// 
        /// ### `azure_connector`
        /// 
        /// Optional:
        /// 
        /// - **code** (String, Sensitive) Code/Key to authenticate to deployment URL.
        /// - **url** (String, Sensitive) Deployment URL.
        /// 
        /// &lt;a id="nestedblock--ecr"&gt;&lt;/a&gt;
        /// 
        /// ### `ecr`
        /// 
        /// [Reference Page](https://docs.controlplane.com/reference/secret#ecr)
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String) Access Key provided by AWS.
        /// - **repos** (Set of String) List of ECR repositories.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.
        /// 
        /// &lt;a id="nestedblock--keypair"&gt;&lt;/a&gt;
        /// 
        /// ### `keypair`
        /// 
        /// Optional:
        /// 
        /// - **passphrase** (String, Sensitive) Passphrase for private key.
        /// - **public_key** (String) Public Key.
        /// - **secret_key** (String, Sensitive) Secret/Private Key.
        /// 
        /// &lt;a id="nestedblock--nats-account"&gt;&lt;/a&gt;
        /// 
        /// ### `nats_account`
        /// 
        /// Required:
        /// 
        /// - **account_id** (String) Account ID.
        /// - **private_key** (String) Private Key.
        /// 
        /// &lt;a id="nestedblock--opaque"&gt;&lt;/a&gt;
        /// 
        /// ### `opaque`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `plain`, `base64`. Default: `plain`.
        /// - **payload** (String, Sensitive) Plain text or base64 encoded string. Use `encoding` attribute to specify encoding.
        /// 
        /// &lt;a id="nestedblock--tls"&gt;&lt;/a&gt;
        /// 
        /// ### `tls`
        /// 
        /// Optional:
        /// 
        /// - **cert** (String) Public Certificate.
        /// - **chain** (String) Chain Certificate.
        /// - **key** (String, Sensitive) Private Certificate.
        /// 
        /// &lt;a id="nestedblock--userpass"&gt;&lt;/a&gt;
        /// 
        /// ### `userpass`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `plain`, `base64`. Default: `plain`.
        /// - **password** (String, Sensitive) Password.
        /// - **username** (String) Username.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cpln.GetSecret.Invoke(new()
        ///     {
        ///         Name = "example-secret-opaque",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example-secret-payload"] = example.Apply(getSecretResult =&gt; getSecretResult.Opaque?.Payload),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecretResult> Invoke(GetSecretInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretResult>("cpln:index/getSecret:getSecret", args ?? new GetSecretInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about a [Secret](https://docs.controlplane.com/reference/secret) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the secret.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the secret.
        /// - **name** (String) Name of the secret.
        /// - **description** (String) Description of the secret.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **secret_link** (String) Output used when linking a secret to an environment variable or volume, in the format: `cpln://secret/SECRET_NAME`.
        /// - **dictionary_as_envs** (Map of String) If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
        /// - **aws** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#aws).
        /// - **azure_connector** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
        /// - **azure_sdk** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
        /// - **dictionary** (Map of String) List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
        /// - **docker** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
        /// - **ecr** (Block List, Max: 1) (see below).
        /// - **gcp** (String, Sensitive) JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
        /// - **keypair** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
        /// - **nats_account** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
        /// - **opaque** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
        /// - **tls** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#tls).
        /// - **userpass** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#username).
        /// 
        /// &lt;a id="nestedblock--aws"&gt;&lt;/a&gt;
        /// 
        /// ### `aws`
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String, Sensitive) Access Key provided by AWS.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID.
        /// 
        /// &lt;a id="nestedblock--azure_connector"&gt;&lt;/a&gt;
        /// 
        /// ### `azure_connector`
        /// 
        /// Optional:
        /// 
        /// - **code** (String, Sensitive) Code/Key to authenticate to deployment URL.
        /// - **url** (String, Sensitive) Deployment URL.
        /// 
        /// &lt;a id="nestedblock--ecr"&gt;&lt;/a&gt;
        /// 
        /// ### `ecr`
        /// 
        /// [Reference Page](https://docs.controlplane.com/reference/secret#ecr)
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String) Access Key provided by AWS.
        /// - **repos** (Set of String) List of ECR repositories.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.
        /// 
        /// &lt;a id="nestedblock--keypair"&gt;&lt;/a&gt;
        /// 
        /// ### `keypair`
        /// 
        /// Optional:
        /// 
        /// - **passphrase** (String, Sensitive) Passphrase for private key.
        /// - **public_key** (String) Public Key.
        /// - **secret_key** (String, Sensitive) Secret/Private Key.
        /// 
        /// &lt;a id="nestedblock--nats-account"&gt;&lt;/a&gt;
        /// 
        /// ### `nats_account`
        /// 
        /// Required:
        /// 
        /// - **account_id** (String) Account ID.
        /// - **private_key** (String) Private Key.
        /// 
        /// &lt;a id="nestedblock--opaque"&gt;&lt;/a&gt;
        /// 
        /// ### `opaque`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `plain`, `base64`. Default: `plain`.
        /// - **payload** (String, Sensitive) Plain text or base64 encoded string. Use `encoding` attribute to specify encoding.
        /// 
        /// &lt;a id="nestedblock--tls"&gt;&lt;/a&gt;
        /// 
        /// ### `tls`
        /// 
        /// Optional:
        /// 
        /// - **cert** (String) Public Certificate.
        /// - **chain** (String) Chain Certificate.
        /// - **key** (String, Sensitive) Private Certificate.
        /// 
        /// &lt;a id="nestedblock--userpass"&gt;&lt;/a&gt;
        /// 
        /// ### `userpass`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `plain`, `base64`. Default: `plain`.
        /// - **password** (String, Sensitive) Password.
        /// - **username** (String) Username.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cpln.GetSecret.Invoke(new()
        ///     {
        ///         Name = "example-secret-opaque",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example-secret-payload"] = example.Apply(getSecretResult =&gt; getSecretResult.Opaque?.Payload),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecretResult> Invoke(GetSecretInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretResult>("cpln:index/getSecret:getSecret", args ?? new GetSecretInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretArgs : global::Pulumi.InvokeArgs
    {
        [Input("aws")]
        public Inputs.GetSecretAwsArgs? Aws { get; set; }

        [Input("azureConnector")]
        public Inputs.GetSecretAzureConnectorArgs? AzureConnector { get; set; }

        [Input("azureSdk")]
        private string? _azureSdk;
        public string? AzureSdk
        {
            get => _azureSdk;
            set => _azureSdk = value;
        }

        [Input("description")]
        public string? Description { get; set; }

        [Input("dictionary")]
        private Dictionary<string, string>? _dictionary;
        public Dictionary<string, string> Dictionary
        {
            get => _dictionary ?? (_dictionary = new Dictionary<string, string>());
            set => _dictionary = value;
        }

        [Input("docker")]
        private string? _docker;
        public string? Docker
        {
            get => _docker;
            set => _docker = value;
        }

        [Input("ecr")]
        public Inputs.GetSecretEcrArgs? Ecr { get; set; }

        [Input("gcp")]
        private string? _gcp;
        public string? Gcp
        {
            get => _gcp;
            set => _gcp = value;
        }

        [Input("keypair")]
        public Inputs.GetSecretKeypairArgs? Keypair { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("natsAccount")]
        public Inputs.GetSecretNatsAccountArgs? NatsAccount { get; set; }

        [Input("opaque")]
        public Inputs.GetSecretOpaqueArgs? Opaque { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        [Input("tls")]
        public Inputs.GetSecretTlsArgs? Tls { get; set; }

        [Input("userpass")]
        public Inputs.GetSecretUserpassArgs? Userpass { get; set; }

        public GetSecretArgs()
        {
        }
        public static new GetSecretArgs Empty => new GetSecretArgs();
    }

    public sealed class GetSecretInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("aws")]
        public Input<Inputs.GetSecretAwsInputArgs>? Aws { get; set; }

        [Input("azureConnector")]
        public Input<Inputs.GetSecretAzureConnectorInputArgs>? AzureConnector { get; set; }

        [Input("azureSdk")]
        private Input<string>? _azureSdk;
        public Input<string>? AzureSdk
        {
            get => _azureSdk;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _azureSdk = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dictionary")]
        private InputMap<string>? _dictionary;
        public InputMap<string> Dictionary
        {
            get => _dictionary ?? (_dictionary = new InputMap<string>());
            set => _dictionary = value;
        }

        [Input("docker")]
        private Input<string>? _docker;
        public Input<string>? Docker
        {
            get => _docker;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _docker = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("ecr")]
        public Input<Inputs.GetSecretEcrInputArgs>? Ecr { get; set; }

        [Input("gcp")]
        private Input<string>? _gcp;
        public Input<string>? Gcp
        {
            get => _gcp;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _gcp = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("keypair")]
        public Input<Inputs.GetSecretKeypairInputArgs>? Keypair { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("natsAccount")]
        public Input<Inputs.GetSecretNatsAccountInputArgs>? NatsAccount { get; set; }

        [Input("opaque")]
        public Input<Inputs.GetSecretOpaqueInputArgs>? Opaque { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tls")]
        public Input<Inputs.GetSecretTlsInputArgs>? Tls { get; set; }

        [Input("userpass")]
        public Input<Inputs.GetSecretUserpassInputArgs>? Userpass { get; set; }

        public GetSecretInvokeArgs()
        {
        }
        public static new GetSecretInvokeArgs Empty => new GetSecretInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretResult
    {
        public readonly Outputs.GetSecretAwsResult? Aws;
        public readonly Outputs.GetSecretAzureConnectorResult? AzureConnector;
        public readonly string? AzureSdk;
        public readonly string CplnId;
        public readonly string? Description;
        public readonly ImmutableDictionary<string, string>? Dictionary;
        public readonly ImmutableDictionary<string, string> DictionaryAsEnvs;
        public readonly string? Docker;
        public readonly Outputs.GetSecretEcrResult? Ecr;
        public readonly string? Gcp;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetSecretKeypairResult? Keypair;
        public readonly string Name;
        public readonly Outputs.GetSecretNatsAccountResult? NatsAccount;
        public readonly Outputs.GetSecretOpaqueResult? Opaque;
        public readonly string SecretLink;
        public readonly string SelfLink;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly Outputs.GetSecretTlsResult? Tls;
        public readonly Outputs.GetSecretUserpassResult? Userpass;

        [OutputConstructor]
        private GetSecretResult(
            Outputs.GetSecretAwsResult? aws,

            Outputs.GetSecretAzureConnectorResult? azureConnector,

            string? azureSdk,

            string cplnId,

            string? description,

            ImmutableDictionary<string, string>? dictionary,

            ImmutableDictionary<string, string> dictionaryAsEnvs,

            string? docker,

            Outputs.GetSecretEcrResult? ecr,

            string? gcp,

            string id,

            Outputs.GetSecretKeypairResult? keypair,

            string name,

            Outputs.GetSecretNatsAccountResult? natsAccount,

            Outputs.GetSecretOpaqueResult? opaque,

            string secretLink,

            string selfLink,

            ImmutableDictionary<string, string>? tags,

            Outputs.GetSecretTlsResult? tls,

            Outputs.GetSecretUserpassResult? userpass)
        {
            Aws = aws;
            AzureConnector = azureConnector;
            AzureSdk = azureSdk;
            CplnId = cplnId;
            Description = description;
            Dictionary = dictionary;
            DictionaryAsEnvs = dictionaryAsEnvs;
            Docker = docker;
            Ecr = ecr;
            Gcp = gcp;
            Id = id;
            Keypair = keypair;
            Name = name;
            NatsAccount = natsAccount;
            Opaque = opaque;
            SecretLink = secretLink;
            SelfLink = selfLink;
            Tags = tags;
            Tls = tls;
            Userpass = userpass;
        }
    }
}
