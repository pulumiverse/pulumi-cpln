// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    public static class GetSecret
    {
        /// <summary>
        /// Use this data source to access information about a [Secret](https://docs.controlplane.com/reference/secret) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the secret.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the secret.
        /// - **name** (String) Name of the secret.
        /// - **description** (String) Description of the secret.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **secret_link** (String) Output used when linking a secret to an environment variable or volume, in the format: `cpln://secret/SECRET_NAME`.
        /// - **dictionary_as_envs** (Map of String) If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
        /// - **aws** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#aws).
        /// - **azure_connector** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
        /// - **azure_sdk** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
        /// - **dictionary** (Map of String) List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
        /// - **docker** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
        /// - **ecr** (Block List, Max: 1) (see below).
        /// - **gcp** (String, Sensitive) JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
        /// - **keypair** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
        /// - **nats_account** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
        /// - **opaque** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
        /// - **tls** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#tls).
        /// - **userpass** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#username).
        /// 
        /// &lt;a id="nestedblock--aws"&gt;&lt;/a&gt;
        /// 
        /// ### `Aws`
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String, Sensitive) Access Key provided by AWS.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID.
        /// 
        /// &lt;a id="nestedblock--azure_connector"&gt;&lt;/a&gt;
        /// 
        /// ### `AzureConnector`
        /// 
        /// Optional:
        /// 
        /// - **code** (String, Sensitive) Code/Key to authenticate to deployment URL.
        /// - **url** (String, Sensitive) Deployment URL.
        /// 
        /// &lt;a id="nestedblock--ecr"&gt;&lt;/a&gt;
        /// 
        /// ### `Ecr`
        /// 
        /// [Reference Page](https://docs.controlplane.com/reference/secret#ecr)
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String) Access Key provided by AWS.
        /// - **repos** (Set of String) List of ECR repositories.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.
        /// 
        /// &lt;a id="nestedblock--keypair"&gt;&lt;/a&gt;
        /// 
        /// ### `Keypair`
        /// 
        /// Optional:
        /// 
        /// - **passphrase** (String, Sensitive) Passphrase for private key.
        /// - **public_key** (String) Public Key.
        /// - **secret_key** (String, Sensitive) Secret/Private Key.
        /// 
        /// &lt;a id="nestedblock--nats-account"&gt;&lt;/a&gt;
        /// 
        /// ### `NatsAccount`
        /// 
        /// Required:
        /// 
        /// - **account_id** (String) Account ID.
        /// - **private_key** (String) Private Key.
        /// 
        /// &lt;a id="nestedblock--opaque"&gt;&lt;/a&gt;
        /// 
        /// ### `Opaque`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `Plain`, `Base64`. Default: `Plain`.
        /// - **payload** (String, Sensitive) Plain text or base64 encoded string. Use `Encoding` attribute to specify encoding.
        /// 
        /// &lt;a id="nestedblock--tls"&gt;&lt;/a&gt;
        /// 
        /// ### `Tls`
        /// 
        /// Optional:
        /// 
        /// - **cert** (String) Public Certificate.
        /// - **chain** (String) Chain Certificate.
        /// - **key** (String, Sensitive) Private Certificate.
        /// 
        /// &lt;a id="nestedblock--userpass"&gt;&lt;/a&gt;
        /// 
        /// ### `Userpass`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `Plain`, `Base64`. Default: `Plain`.
        /// - **password** (String, Sensitive) Password.
        /// - **username** (String) Username.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cpln.GetSecret.Invoke(new()
        ///     {
        ///         Name = "example-secret-opaque",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example-secret-payload"] = example.Apply(getSecretResult =&gt; getSecretResult.Opaques?.Payload),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecretResult> InvokeAsync(GetSecretArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretResult>("cpln:index/getSecret:getSecret", args ?? new GetSecretArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about a [Secret](https://docs.controlplane.com/reference/secret) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the secret.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the secret.
        /// - **name** (String) Name of the secret.
        /// - **description** (String) Description of the secret.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **secret_link** (String) Output used when linking a secret to an environment variable or volume, in the format: `cpln://secret/SECRET_NAME`.
        /// - **dictionary_as_envs** (Map of String) If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
        /// - **aws** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#aws).
        /// - **azure_connector** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
        /// - **azure_sdk** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
        /// - **dictionary** (Map of String) List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
        /// - **docker** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
        /// - **ecr** (Block List, Max: 1) (see below).
        /// - **gcp** (String, Sensitive) JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
        /// - **keypair** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
        /// - **nats_account** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
        /// - **opaque** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
        /// - **tls** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#tls).
        /// - **userpass** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#username).
        /// 
        /// &lt;a id="nestedblock--aws"&gt;&lt;/a&gt;
        /// 
        /// ### `Aws`
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String, Sensitive) Access Key provided by AWS.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID.
        /// 
        /// &lt;a id="nestedblock--azure_connector"&gt;&lt;/a&gt;
        /// 
        /// ### `AzureConnector`
        /// 
        /// Optional:
        /// 
        /// - **code** (String, Sensitive) Code/Key to authenticate to deployment URL.
        /// - **url** (String, Sensitive) Deployment URL.
        /// 
        /// &lt;a id="nestedblock--ecr"&gt;&lt;/a&gt;
        /// 
        /// ### `Ecr`
        /// 
        /// [Reference Page](https://docs.controlplane.com/reference/secret#ecr)
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String) Access Key provided by AWS.
        /// - **repos** (Set of String) List of ECR repositories.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.
        /// 
        /// &lt;a id="nestedblock--keypair"&gt;&lt;/a&gt;
        /// 
        /// ### `Keypair`
        /// 
        /// Optional:
        /// 
        /// - **passphrase** (String, Sensitive) Passphrase for private key.
        /// - **public_key** (String) Public Key.
        /// - **secret_key** (String, Sensitive) Secret/Private Key.
        /// 
        /// &lt;a id="nestedblock--nats-account"&gt;&lt;/a&gt;
        /// 
        /// ### `NatsAccount`
        /// 
        /// Required:
        /// 
        /// - **account_id** (String) Account ID.
        /// - **private_key** (String) Private Key.
        /// 
        /// &lt;a id="nestedblock--opaque"&gt;&lt;/a&gt;
        /// 
        /// ### `Opaque`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `Plain`, `Base64`. Default: `Plain`.
        /// - **payload** (String, Sensitive) Plain text or base64 encoded string. Use `Encoding` attribute to specify encoding.
        /// 
        /// &lt;a id="nestedblock--tls"&gt;&lt;/a&gt;
        /// 
        /// ### `Tls`
        /// 
        /// Optional:
        /// 
        /// - **cert** (String) Public Certificate.
        /// - **chain** (String) Chain Certificate.
        /// - **key** (String, Sensitive) Private Certificate.
        /// 
        /// &lt;a id="nestedblock--userpass"&gt;&lt;/a&gt;
        /// 
        /// ### `Userpass`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `Plain`, `Base64`. Default: `Plain`.
        /// - **password** (String, Sensitive) Password.
        /// - **username** (String) Username.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cpln.GetSecret.Invoke(new()
        ///     {
        ///         Name = "example-secret-opaque",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example-secret-payload"] = example.Apply(getSecretResult =&gt; getSecretResult.Opaques?.Payload),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecretResult> Invoke(GetSecretInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretResult>("cpln:index/getSecret:getSecret", args ?? new GetSecretInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about a [Secret](https://docs.controlplane.com/reference/secret) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the secret.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the secret.
        /// - **name** (String) Name of the secret.
        /// - **description** (String) Description of the secret.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **secret_link** (String) Output used when linking a secret to an environment variable or volume, in the format: `cpln://secret/SECRET_NAME`.
        /// - **dictionary_as_envs** (Map of String) If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.
        /// - **aws** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#aws).
        /// - **azure_connector** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).
        /// - **azure_sdk** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).
        /// - **dictionary** (Map of String) List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).
        /// - **docker** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).
        /// - **ecr** (Block List, Max: 1) (see below).
        /// - **gcp** (String, Sensitive) JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)
        /// - **keypair** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#keypair).
        /// - **nats_account** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).
        /// - **opaque** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#opaque).
        /// - **tls** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#tls).
        /// - **userpass** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#username).
        /// 
        /// &lt;a id="nestedblock--aws"&gt;&lt;/a&gt;
        /// 
        /// ### `Aws`
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String, Sensitive) Access Key provided by AWS.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID.
        /// 
        /// &lt;a id="nestedblock--azure_connector"&gt;&lt;/a&gt;
        /// 
        /// ### `AzureConnector`
        /// 
        /// Optional:
        /// 
        /// - **code** (String, Sensitive) Code/Key to authenticate to deployment URL.
        /// - **url** (String, Sensitive) Deployment URL.
        /// 
        /// &lt;a id="nestedblock--ecr"&gt;&lt;/a&gt;
        /// 
        /// ### `Ecr`
        /// 
        /// [Reference Page](https://docs.controlplane.com/reference/secret#ecr)
        /// 
        /// Optional:
        /// 
        /// - **access_key** (String) Access Key provided by AWS.
        /// - **repos** (Set of String) List of ECR repositories.
        /// - **role_arn** (String) Role ARN provided by AWS.
        /// - **secret_key** (String, Sensitive) Secret Key provided by AWS.
        /// - **external_id** (String) AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.
        /// 
        /// &lt;a id="nestedblock--keypair"&gt;&lt;/a&gt;
        /// 
        /// ### `Keypair`
        /// 
        /// Optional:
        /// 
        /// - **passphrase** (String, Sensitive) Passphrase for private key.
        /// - **public_key** (String) Public Key.
        /// - **secret_key** (String, Sensitive) Secret/Private Key.
        /// 
        /// &lt;a id="nestedblock--nats-account"&gt;&lt;/a&gt;
        /// 
        /// ### `NatsAccount`
        /// 
        /// Required:
        /// 
        /// - **account_id** (String) Account ID.
        /// - **private_key** (String) Private Key.
        /// 
        /// &lt;a id="nestedblock--opaque"&gt;&lt;/a&gt;
        /// 
        /// ### `Opaque`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `Plain`, `Base64`. Default: `Plain`.
        /// - **payload** (String, Sensitive) Plain text or base64 encoded string. Use `Encoding` attribute to specify encoding.
        /// 
        /// &lt;a id="nestedblock--tls"&gt;&lt;/a&gt;
        /// 
        /// ### `Tls`
        /// 
        /// Optional:
        /// 
        /// - **cert** (String) Public Certificate.
        /// - **chain** (String) Chain Certificate.
        /// - **key** (String, Sensitive) Private Certificate.
        /// 
        /// &lt;a id="nestedblock--userpass"&gt;&lt;/a&gt;
        /// 
        /// ### `Userpass`
        /// 
        /// Optional:
        /// 
        /// - **encoding** (String) Available encodings: `Plain`, `Base64`. Default: `Plain`.
        /// - **password** (String, Sensitive) Password.
        /// - **username** (String) Username.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cpln.GetSecret.Invoke(new()
        ///     {
        ///         Name = "example-secret-opaque",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example-secret-payload"] = example.Apply(getSecretResult =&gt; getSecretResult.Opaques?.Payload),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecretResult> Invoke(GetSecretInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretResult>("cpln:index/getSecret:getSecret", args ?? new GetSecretInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretArgs : global::Pulumi.InvokeArgs
    {
        [Input("aws")]
        private List<Inputs.GetSecretAwArgs>? _aws;
        public List<Inputs.GetSecretAwArgs> Aws
        {
            get => _aws ?? (_aws = new List<Inputs.GetSecretAwArgs>());
            set => _aws = value;
        }

        [Input("azureConnectors")]
        private List<Inputs.GetSecretAzureConnectorArgs>? _azureConnectors;
        public List<Inputs.GetSecretAzureConnectorArgs> AzureConnectors
        {
            get => _azureConnectors ?? (_azureConnectors = new List<Inputs.GetSecretAzureConnectorArgs>());
            set => _azureConnectors = value;
        }

        [Input("ecrs")]
        private List<Inputs.GetSecretEcrArgs>? _ecrs;
        public List<Inputs.GetSecretEcrArgs> Ecrs
        {
            get => _ecrs ?? (_ecrs = new List<Inputs.GetSecretEcrArgs>());
            set => _ecrs = value;
        }

        [Input("keypairs")]
        private List<Inputs.GetSecretKeypairArgs>? _keypairs;
        public List<Inputs.GetSecretKeypairArgs> Keypairs
        {
            get => _keypairs ?? (_keypairs = new List<Inputs.GetSecretKeypairArgs>());
            set => _keypairs = value;
        }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("natsAccounts")]
        private List<Inputs.GetSecretNatsAccountArgs>? _natsAccounts;
        public List<Inputs.GetSecretNatsAccountArgs> NatsAccounts
        {
            get => _natsAccounts ?? (_natsAccounts = new List<Inputs.GetSecretNatsAccountArgs>());
            set => _natsAccounts = value;
        }

        [Input("opaques")]
        private List<Inputs.GetSecretOpaqueArgs>? _opaques;
        public List<Inputs.GetSecretOpaqueArgs> Opaques
        {
            get => _opaques ?? (_opaques = new List<Inputs.GetSecretOpaqueArgs>());
            set => _opaques = value;
        }

        [Input("tls")]
        private List<Inputs.GetSecretTlArgs>? _tls;
        public List<Inputs.GetSecretTlArgs> Tls
        {
            get => _tls ?? (_tls = new List<Inputs.GetSecretTlArgs>());
            set => _tls = value;
        }

        [Input("userpasses")]
        private List<Inputs.GetSecretUserpassArgs>? _userpasses;
        public List<Inputs.GetSecretUserpassArgs> Userpasses
        {
            get => _userpasses ?? (_userpasses = new List<Inputs.GetSecretUserpassArgs>());
            set => _userpasses = value;
        }

        public GetSecretArgs()
        {
        }
        public static new GetSecretArgs Empty => new GetSecretArgs();
    }

    public sealed class GetSecretInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("aws")]
        private InputList<Inputs.GetSecretAwInputArgs>? _aws;
        public InputList<Inputs.GetSecretAwInputArgs> Aws
        {
            get => _aws ?? (_aws = new InputList<Inputs.GetSecretAwInputArgs>());
            set => _aws = value;
        }

        [Input("azureConnectors")]
        private InputList<Inputs.GetSecretAzureConnectorInputArgs>? _azureConnectors;
        public InputList<Inputs.GetSecretAzureConnectorInputArgs> AzureConnectors
        {
            get => _azureConnectors ?? (_azureConnectors = new InputList<Inputs.GetSecretAzureConnectorInputArgs>());
            set => _azureConnectors = value;
        }

        [Input("ecrs")]
        private InputList<Inputs.GetSecretEcrInputArgs>? _ecrs;
        public InputList<Inputs.GetSecretEcrInputArgs> Ecrs
        {
            get => _ecrs ?? (_ecrs = new InputList<Inputs.GetSecretEcrInputArgs>());
            set => _ecrs = value;
        }

        [Input("keypairs")]
        private InputList<Inputs.GetSecretKeypairInputArgs>? _keypairs;
        public InputList<Inputs.GetSecretKeypairInputArgs> Keypairs
        {
            get => _keypairs ?? (_keypairs = new InputList<Inputs.GetSecretKeypairInputArgs>());
            set => _keypairs = value;
        }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("natsAccounts")]
        private InputList<Inputs.GetSecretNatsAccountInputArgs>? _natsAccounts;
        public InputList<Inputs.GetSecretNatsAccountInputArgs> NatsAccounts
        {
            get => _natsAccounts ?? (_natsAccounts = new InputList<Inputs.GetSecretNatsAccountInputArgs>());
            set => _natsAccounts = value;
        }

        [Input("opaques")]
        private InputList<Inputs.GetSecretOpaqueInputArgs>? _opaques;
        public InputList<Inputs.GetSecretOpaqueInputArgs> Opaques
        {
            get => _opaques ?? (_opaques = new InputList<Inputs.GetSecretOpaqueInputArgs>());
            set => _opaques = value;
        }

        [Input("tls")]
        private InputList<Inputs.GetSecretTlInputArgs>? _tls;
        public InputList<Inputs.GetSecretTlInputArgs> Tls
        {
            get => _tls ?? (_tls = new InputList<Inputs.GetSecretTlInputArgs>());
            set => _tls = value;
        }

        [Input("userpasses")]
        private InputList<Inputs.GetSecretUserpassInputArgs>? _userpasses;
        public InputList<Inputs.GetSecretUserpassInputArgs> Userpasses
        {
            get => _userpasses ?? (_userpasses = new InputList<Inputs.GetSecretUserpassInputArgs>());
            set => _userpasses = value;
        }

        public GetSecretInvokeArgs()
        {
        }
        public static new GetSecretInvokeArgs Empty => new GetSecretInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretResult
    {
        public readonly ImmutableArray<Outputs.GetSecretAwResult> Aws;
        public readonly ImmutableArray<Outputs.GetSecretAzureConnectorResult> AzureConnectors;
        public readonly string AzureSdk;
        public readonly string CplnId;
        public readonly string Description;
        public readonly ImmutableDictionary<string, string> Dictionary;
        public readonly ImmutableDictionary<string, string> DictionaryAsEnvs;
        public readonly string Docker;
        public readonly ImmutableArray<Outputs.GetSecretEcrResult> Ecrs;
        public readonly string Gcp;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetSecretKeypairResult> Keypairs;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetSecretNatsAccountResult> NatsAccounts;
        public readonly ImmutableArray<Outputs.GetSecretOpaqueResult> Opaques;
        public readonly string SecretLink;
        public readonly string SelfLink;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly ImmutableArray<Outputs.GetSecretTlResult> Tls;
        public readonly ImmutableArray<Outputs.GetSecretUserpassResult> Userpasses;

        [OutputConstructor]
        private GetSecretResult(
            ImmutableArray<Outputs.GetSecretAwResult> aws,

            ImmutableArray<Outputs.GetSecretAzureConnectorResult> azureConnectors,

            string azureSdk,

            string cplnId,

            string description,

            ImmutableDictionary<string, string> dictionary,

            ImmutableDictionary<string, string> dictionaryAsEnvs,

            string docker,

            ImmutableArray<Outputs.GetSecretEcrResult> ecrs,

            string gcp,

            string id,

            ImmutableArray<Outputs.GetSecretKeypairResult> keypairs,

            string name,

            ImmutableArray<Outputs.GetSecretNatsAccountResult> natsAccounts,

            ImmutableArray<Outputs.GetSecretOpaqueResult> opaques,

            string secretLink,

            string selfLink,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<Outputs.GetSecretTlResult> tls,

            ImmutableArray<Outputs.GetSecretUserpassResult> userpasses)
        {
            Aws = aws;
            AzureConnectors = azureConnectors;
            AzureSdk = azureSdk;
            CplnId = cplnId;
            Description = description;
            Dictionary = dictionary;
            DictionaryAsEnvs = dictionaryAsEnvs;
            Docker = docker;
            Ecrs = ecrs;
            Gcp = gcp;
            Id = id;
            Keypairs = keypairs;
            Name = name;
            NatsAccounts = natsAccounts;
            Opaques = opaques;
            SecretLink = secretLink;
            SelfLink = selfLink;
            Tags = tags;
            Tls = tls;
            Userpasses = userpasses;
        }
    }
}
