// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    public static class GetLocation
    {
        /// <summary>
        /// Use this data source to access information about a [Location](https://docs.controlplane.com/reference/location) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the location (i.e. `aws-us-west-2`).
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the location.
        /// - **name** (String) Name of the location.
        /// - **description** (String) Description of the location.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **origin** (String)
        /// - **cloud_provider** (String) Cloud Provider of the location.
        /// - **region** (String) Region of the location.
        /// - **enabled** (Boolean) Indication if location is enabled.
        /// - **geo** (Block List, Max: 1) (see below)
        /// - **ip_ranges** (List of String) A list of IP ranges of the location.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// 
        /// &lt;a id="nestedblock--geo"&gt;&lt;/a&gt;
        /// 
        /// ### `Geo`
        /// 
        /// Location geographical details
        /// 
        /// - **lat** (Number) Latitude.
        /// - **lon** (Number) Longitude.
        /// - **country** (String) Country.
        /// - **state** (String) State.
        /// - **city** (String) City.
        /// - **continent** (String) Continent.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var location = Cpln.GetLocation.Invoke(new()
        ///     {
        ///         Name = "aws-us-west-2",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["location"] = location,
        ///         ["locationEnabled"] = location.Apply(getLocationResult =&gt; getLocationResult.Enabled),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetLocationResult> InvokeAsync(GetLocationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocationResult>("cpln:index/getLocation:getLocation", args ?? new GetLocationArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about a [Location](https://docs.controlplane.com/reference/location) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the location (i.e. `aws-us-west-2`).
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the location.
        /// - **name** (String) Name of the location.
        /// - **description** (String) Description of the location.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **origin** (String)
        /// - **cloud_provider** (String) Cloud Provider of the location.
        /// - **region** (String) Region of the location.
        /// - **enabled** (Boolean) Indication if location is enabled.
        /// - **geo** (Block List, Max: 1) (see below)
        /// - **ip_ranges** (List of String) A list of IP ranges of the location.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// 
        /// &lt;a id="nestedblock--geo"&gt;&lt;/a&gt;
        /// 
        /// ### `Geo`
        /// 
        /// Location geographical details
        /// 
        /// - **lat** (Number) Latitude.
        /// - **lon** (Number) Longitude.
        /// - **country** (String) Country.
        /// - **state** (String) State.
        /// - **city** (String) City.
        /// - **continent** (String) Continent.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var location = Cpln.GetLocation.Invoke(new()
        ///     {
        ///         Name = "aws-us-west-2",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["location"] = location,
        ///         ["locationEnabled"] = location.Apply(getLocationResult =&gt; getLocationResult.Enabled),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLocationResult> Invoke(GetLocationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationResult>("cpln:index/getLocation:getLocation", args ?? new GetLocationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about a [Location](https://docs.controlplane.com/reference/location) within Control Plane.
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the location (i.e. `aws-us-west-2`).
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the location.
        /// - **name** (String) Name of the location.
        /// - **description** (String) Description of the location.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **origin** (String)
        /// - **cloud_provider** (String) Cloud Provider of the location.
        /// - **region** (String) Region of the location.
        /// - **enabled** (Boolean) Indication if location is enabled.
        /// - **geo** (Block List, Max: 1) (see below)
        /// - **ip_ranges** (List of String) A list of IP ranges of the location.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// 
        /// &lt;a id="nestedblock--geo"&gt;&lt;/a&gt;
        /// 
        /// ### `Geo`
        /// 
        /// Location geographical details
        /// 
        /// - **lat** (Number) Latitude.
        /// - **lon** (Number) Longitude.
        /// - **country** (String) Country.
        /// - **state** (String) State.
        /// - **city** (String) City.
        /// - **continent** (String) Continent.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var location = Cpln.GetLocation.Invoke(new()
        ///     {
        ///         Name = "aws-us-west-2",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["location"] = location,
        ///         ["locationEnabled"] = location.Apply(getLocationResult =&gt; getLocationResult.Enabled),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLocationResult> Invoke(GetLocationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationResult>("cpln:index/getLocation:getLocation", args ?? new GetLocationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocationArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetLocationArgs()
        {
        }
        public static new GetLocationArgs Empty => new GetLocationArgs();
    }

    public sealed class GetLocationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetLocationInvokeArgs()
        {
        }
        public static new GetLocationInvokeArgs Empty => new GetLocationInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocationResult
    {
        public readonly string CloudProvider;
        public readonly string CplnId;
        public readonly string Description;
        public readonly bool Enabled;
        public readonly ImmutableArray<Outputs.GetLocationGeoResult> Geos;
        public readonly string Id;
        public readonly ImmutableArray<string> IpRanges;
        public readonly string Name;
        public readonly string Origin;
        public readonly string Region;
        public readonly string SelfLink;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetLocationResult(
            string cloudProvider,

            string cplnId,

            string description,

            bool enabled,

            ImmutableArray<Outputs.GetLocationGeoResult> geos,

            string id,

            ImmutableArray<string> ipRanges,

            string name,

            string origin,

            string region,

            string selfLink,

            ImmutableDictionary<string, string> tags)
        {
            CloudProvider = cloudProvider;
            CplnId = cplnId;
            Description = description;
            Enabled = enabled;
            Geos = geos;
            Id = id;
            IpRanges = ipRanges;
            Name = name;
            Origin = origin;
            Region = region;
            SelfLink = selfLink;
            Tags = tags;
        }
    }
}
