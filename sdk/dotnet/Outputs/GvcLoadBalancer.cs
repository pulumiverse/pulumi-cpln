// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class GvcLoadBalancer
    {
        /// <summary>
        /// Creates a dedicated load balancer in each location and enables additional Domain features: custom ports, protocols and wildcard hostnames. Charges apply for each location.
        /// </summary>
        public readonly bool? Dedicated;
        /// <summary>
        /// The link or the name of the IP Set that will be used for this load balancer.
        /// </summary>
        public readonly string? Ipset;
        public readonly Outputs.GvcLoadBalancerMultiZone? MultiZone;
        /// <summary>
        /// Specify the url to be redirected to for different http status codes.
        /// </summary>
        public readonly Outputs.GvcLoadBalancerRedirect? Redirect;
        /// <summary>
        /// Controls the address used for request logging and for setting the X-Envoy-External-Address header. If set to 1, then the last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If set to 2, then the second to last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If the XFF header does not have at least two addresses or does not exist then the source client IP address will be used instead.
        /// </summary>
        public readonly int? TrustedProxies;

        [OutputConstructor]
        private GvcLoadBalancer(
            bool? dedicated,

            string? ipset,

            Outputs.GvcLoadBalancerMultiZone? multiZone,

            Outputs.GvcLoadBalancerRedirect? redirect,

            int? trustedProxies)
        {
            Dedicated = dedicated;
            Ipset = ipset;
            MultiZone = multiZone;
            Redirect = redirect;
            TrustedProxies = trustedProxies;
        }
    }
}
