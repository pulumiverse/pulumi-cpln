// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class GetWorkloadContainerLivenessProbeResult
    {
        public readonly ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeExecResult> Execs;
        public readonly int FailureThreshold;
        public readonly ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeGrpcResult> Grpcs;
        public readonly ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeHttpGetResult> HttpGets;
        public readonly int InitialDelaySeconds;
        public readonly int PeriodSeconds;
        public readonly int SuccessThreshold;
        public readonly ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeTcpSocketResult> TcpSockets;
        public readonly int TimeoutSeconds;

        [OutputConstructor]
        private GetWorkloadContainerLivenessProbeResult(
            ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeExecResult> execs,

            int failureThreshold,

            ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeGrpcResult> grpcs,

            ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeHttpGetResult> httpGets,

            int initialDelaySeconds,

            int periodSeconds,

            int successThreshold,

            ImmutableArray<Outputs.GetWorkloadContainerLivenessProbeTcpSocketResult> tcpSockets,

            int timeoutSeconds)
        {
            Execs = execs;
            FailureThreshold = failureThreshold;
            Grpcs = grpcs;
            HttpGets = httpGets;
            InitialDelaySeconds = initialDelaySeconds;
            PeriodSeconds = periodSeconds;
            SuccessThreshold = successThreshold;
            TcpSockets = tcpSockets;
            TimeoutSeconds = timeoutSeconds;
        }
    }
}
