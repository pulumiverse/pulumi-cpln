// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class GetWorkloadStatusResolvedImageResult
    {
        public readonly ImmutableArray<string> ErrorMessages;
        /// <summary>
        /// A list of images that were resolved.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkloadStatusResolvedImageImageResult> Images;
        public readonly string NextRetryAt;
        /// <summary>
        /// UTC Time when the images were resolved.
        /// </summary>
        public readonly string ResolvedAt;
        /// <summary>
        /// Workload version the images were resolved for.
        /// </summary>
        public readonly int ResolvedForVersion;

        [OutputConstructor]
        private GetWorkloadStatusResolvedImageResult(
            ImmutableArray<string> errorMessages,

            ImmutableArray<Outputs.GetWorkloadStatusResolvedImageImageResult> images,

            string nextRetryAt,

            string resolvedAt,

            int resolvedForVersion)
        {
            ErrorMessages = errorMessages;
            Images = images;
            NextRetryAt = nextRetryAt;
            ResolvedAt = resolvedAt;
            ResolvedForVersion = resolvedForVersion;
        }
    }
}
