// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class GetWorkloadOptionAutoscalingKedaTriggerResult
    {
        /// <summary>
        /// Reference to a KEDA authentication object for secure access to external systems.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkloadOptionAutoscalingKedaTriggerAuthenticationRefResult> AuthenticationReves;
        /// <summary>
        /// The configuration parameters that the trigger requires.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// The type of metric to be used for scaling.
        /// </summary>
        public readonly string MetricType;
        /// <summary>
        /// An optional name for the trigger. If not provided, a default name will be generated based on the trigger type.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of KEDA trigger, e.g "prometheus", "aws-sqs", etc.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Enables caching of metric values during polling interval.
        /// </summary>
        public readonly bool UseCachedMetrics;

        [OutputConstructor]
        private GetWorkloadOptionAutoscalingKedaTriggerResult(
            ImmutableArray<Outputs.GetWorkloadOptionAutoscalingKedaTriggerAuthenticationRefResult> authenticationReves,

            ImmutableDictionary<string, string> metadata,

            string metricType,

            string name,

            string type,

            bool useCachedMetrics)
        {
            AuthenticationReves = authenticationReves;
            Metadata = metadata;
            MetricType = metricType;
            Name = name;
            Type = type;
            UseCachedMetrics = useCachedMetrics;
        }
    }
}
