// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class DomainStatus
    {
        /// <summary>
        /// List of required DNS record entries.
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainStatusDnsConfig> DnsConfigs;
        /// <summary>
        /// List of configured domain endpoints.
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainStatusEndpoint> Endpoints;
        public readonly string? Fingerprint;
        /// <summary>
        /// Contains the cloud provider name, region, and certificate status.
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainStatusLocation> Locations;
        /// <summary>
        /// Status of Domain. Possible values: `Initializing`, `Ready`, `pendingDnsConfig`, `pendingCertificate`, `usedByGvc`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Warning message.
        /// </summary>
        public readonly string? Warning;

        [OutputConstructor]
        private DomainStatus(
            ImmutableArray<Outputs.DomainStatusDnsConfig> dnsConfigs,

            ImmutableArray<Outputs.DomainStatusEndpoint> endpoints,

            string? fingerprint,

            ImmutableArray<Outputs.DomainStatusLocation> locations,

            string? status,

            string? warning)
        {
            DnsConfigs = dnsConfigs;
            Endpoints = endpoints;
            Fingerprint = fingerprint;
            Locations = locations;
            Status = status;
            Warning = warning;
        }
    }
}
