// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class WorkloadOptionsAutoscaling
    {
        /// <summary>
        /// KEDA (Kubernetes-based Event Driven Autoscaling) allows for advanced autoscaling based on external metrics and triggers.
        /// </summary>
        public readonly Outputs.WorkloadOptionsAutoscalingKeda? Keda;
        /// <summary>
        /// A hard maximum for the number of concurrent requests allowed to a replica. If no replicas are available to fulfill the request then it will be queued until a replica with capacity is available and delivered as soon as one is available again. Capacity can be available from requests completing or when a new replica is available from scale out.Min: `0`. Max: `1000`. Default `0`.
        /// </summary>
        public readonly int? MaxConcurrency;
        /// <summary>
        /// The maximum allowed number of replicas. Min: `0`. Default `5`.
        /// </summary>
        public readonly int? MaxScale;
        /// <summary>
        /// Valid values: `concurrency`, `cpu`, `memory`, `rps`, `latency`, `keda` or `disabled`.
        /// </summary>
        public readonly string? Metric;
        /// <summary>
        /// For metrics represented as a distribution (e.g. latency) a percentile within the distribution must be chosen as the target.
        /// </summary>
        public readonly string? MetricPercentile;
        /// <summary>
        /// The minimum allowed number of replicas. Control Plane can scale the workload down to 0 when there is no traffic and scale up immediately to fulfill new requests. Min: `0`. Max: `max_scale`. Default `1`.
        /// </summary>
        public readonly int? MinScale;
        public readonly ImmutableArray<Outputs.WorkloadOptionsAutoscalingMulti> Multis;
        /// <summary>
        /// The amount of time (in seconds) with no requests received before a workload is scaled to 0. Min: `30`. Max: `3600`. Default: `300`.
        /// </summary>
        public readonly int? ScaleToZeroDelay;
        /// <summary>
        /// Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: `1`. Max: `20000`. Default: `95`.
        /// </summary>
        public readonly int? Target;

        [OutputConstructor]
        private WorkloadOptionsAutoscaling(
            Outputs.WorkloadOptionsAutoscalingKeda? keda,

            int? maxConcurrency,

            int? maxScale,

            string? metric,

            string? metricPercentile,

            int? minScale,

            ImmutableArray<Outputs.WorkloadOptionsAutoscalingMulti> multis,

            int? scaleToZeroDelay,

            int? target)
        {
            Keda = keda;
            MaxConcurrency = maxConcurrency;
            MaxScale = maxScale;
            Metric = metric;
            MetricPercentile = metricPercentile;
            MinScale = minScale;
            Multis = multis;
            ScaleToZeroDelay = scaleToZeroDelay;
            Target = target;
        }
    }
}
