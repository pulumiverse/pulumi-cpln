// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class GetWorkloadStatusResult
    {
        /// <summary>
        /// Canonical endpoint for the workload.
        /// </summary>
        public readonly string CanonicalEndpoint;
        /// <summary>
        /// Current amount of replicas deployed.
        /// </summary>
        public readonly int CurrentReplicaCount;
        /// <summary>
        /// Endpoint for the workload.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// Current health status.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkloadStatusHealthCheckResult> HealthChecks;
        /// <summary>
        /// Internal hostname for the workload. Used for service-to-service requests.
        /// </summary>
        public readonly string InternalName;
        public readonly ImmutableArray<Outputs.GetWorkloadStatusLoadBalancerResult> LoadBalancers;
        /// <summary>
        /// ID of the parent object.
        /// </summary>
        public readonly string ParentId;
        public readonly ImmutableArray<string> ReplicaInternalNames;
        /// <summary>
        /// Resolved images for workloads with dynamic tags enabled.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkloadStatusResolvedImageResult> ResolvedImages;

        [OutputConstructor]
        private GetWorkloadStatusResult(
            string canonicalEndpoint,

            int currentReplicaCount,

            string endpoint,

            ImmutableArray<Outputs.GetWorkloadStatusHealthCheckResult> healthChecks,

            string internalName,

            ImmutableArray<Outputs.GetWorkloadStatusLoadBalancerResult> loadBalancers,

            string parentId,

            ImmutableArray<string> replicaInternalNames,

            ImmutableArray<Outputs.GetWorkloadStatusResolvedImageResult> resolvedImages)
        {
            CanonicalEndpoint = canonicalEndpoint;
            CurrentReplicaCount = currentReplicaCount;
            Endpoint = endpoint;
            HealthChecks = healthChecks;
            InternalName = internalName;
            LoadBalancers = loadBalancers;
            ParentId = parentId;
            ReplicaInternalNames = replicaInternalNames;
            ResolvedImages = resolvedImages;
        }
    }
}
