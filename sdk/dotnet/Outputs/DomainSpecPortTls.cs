// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class DomainSpecPortTls
    {
        /// <summary>
        /// Allowed cipher suites. Refer to the [Domain Reference](https://docs.controlplane.com/reference/domain#cipher-suites) for details.
        /// </summary>
        public readonly ImmutableArray<string> CipherSuites;
        /// <summary>
        /// The certificate authority PEM, stored as a TLS Secret, used to verify the authority of the client certificate. The only verification performed checks that the CN of the PEM matches the Domain (i.e., CN=*.DOMAIN).
        /// </summary>
        public readonly Outputs.DomainSpecPortTlsClientCertificate? ClientCertificate;
        /// <summary>
        /// Minimum TLS version to accept. Minimum is `1.0`. Default: `1.2`.
        /// </summary>
        public readonly string? MinProtocolVersion;
        /// <summary>
        /// Configure an optional custom server certificate for the domain. When the port number is 443 and this is not supplied, a certificate is provisioned automatically.
        /// </summary>
        public readonly Outputs.DomainSpecPortTlsServerCertificate? ServerCertificate;

        [OutputConstructor]
        private DomainSpecPortTls(
            ImmutableArray<string> cipherSuites,

            Outputs.DomainSpecPortTlsClientCertificate? clientCertificate,

            string? minProtocolVersion,

            Outputs.DomainSpecPortTlsServerCertificate? serverCertificate)
        {
            CipherSuites = cipherSuites;
            ClientCertificate = clientCertificate;
            MinProtocolVersion = minProtocolVersion;
            ServerCertificate = serverCertificate;
        }
    }
}
