// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumiverse.Cpln
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("cpln");

        private static readonly __Value<string?> _endpoint = new __Value<string?>(() => __config.Get("endpoint"));
        /// <summary>
        /// The Control Plane Data Service API endpoint. Default is: https://api.cpln.io. Can be specified with the CPLN_ENDPOINT
        /// environment variable.
        /// </summary>
        public static string? Endpoint
        {
            get => _endpoint.Get();
            set => _endpoint.Set(value);
        }

        private static readonly __Value<string?> _org = new __Value<string?>(() => __config.Get("org"));
        /// <summary>
        /// The Control Plane org that this provider will perform actions against. Can be specified with the CPLN_ORG environment
        /// variable.
        /// </summary>
        public static string? Org
        {
            get => _org.Get();
            set => _org.Set(value);
        }

        private static readonly __Value<string?> _profile = new __Value<string?>(() => __config.Get("profile"));
        /// <summary>
        /// The user/service account profile that this provider will use to authenticate to the data service. Can be specified with
        /// the CPLN_PROFILE environment variable.
        /// </summary>
        public static string? Profile
        {
            get => _profile.Get();
            set => _profile.Set(value);
        }

        private static readonly __Value<string?> _refreshToken = new __Value<string?>(() => __config.Get("refreshToken"));
        /// <summary>
        /// A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_REFRESH_TOKEN
        /// environment variable. Used when the provider is required to create an org or update the auth_config property. Refer to
        /// the section above on how to obtain the refresh token.
        /// </summary>
        public static string? RefreshToken
        {
            get => _refreshToken.Get();
            set => _refreshToken.Set(value);
        }

        private static readonly __Value<string?> _token = new __Value<string?>(() => __config.Get("token"));
        /// <summary>
        /// A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_TOKEN
        /// environment variable.
        /// </summary>
        public static string? Token
        {
            get => _token.Get();
            set => _token.Set(value);
        }

    }
}
