// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    public static class GetGvc
    {
        /// <summary>
        /// Use this data source to access information about an existing [Global Virtual Cloud (GVC)](https://docs.controlplane.com/reference/gvc) within Control Plane. 
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the GVC.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the GVC.
        /// - **name** (String) Name of the GVC.
        /// - **alias** (String) The alias name of the GVC.
        /// - **description** (String) Description of the GVC.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **domain** (String) Custom domain name used by associated workloads.
        /// - **locations** (List of String) A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud.
        /// - **pull_secrets** (List of String) A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC.
        /// - **lightstep_tracing** (Block List, Max: 1) (see below).
        /// - **otel_tracing** (Block List, Max: 1) (see below).
        /// - **controlplane_tracing** (Block List, Max: 1) (see below).
        /// - **load_balancer** (Block List, Max: 1) (see below).
        /// 
        /// &lt;a id="nestedblock--lightstep_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `lightstep_tracing`
        /// 
        /// - **sampling** (Int) Sampling percentage.
        /// - **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or the internal endpoint.
        /// - **credentials** (String) Full link to referenced Opaque Secret.
        /// 
        /// &lt;a id="nestedblock--otel_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `otel_tracing`
        /// 
        /// - **sampling** (Int) Determines what percentage of requests should be traced.
        /// - **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.
        /// - **custom_tags** (Map of String) Key-value map of custom tags.
        /// 
        /// &lt;a id="nestedblock--controlplane_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `controlplane_tracing`
        /// 
        /// - **sampling** (Int) Determines what percentage of requests should be traced.
        /// - **custom_tags** (Map of String) Key-value map of custom tags.
        /// 
        /// &lt;a id="nestedblock--load_balancer"&gt;&lt;/a&gt;
        /// 
        /// ### `load_balancer`
        /// 
        /// - **dedicated** (Boolean) Creates a dedicated load balancer in each location and enables additional Domain features: custom ports, protocols and wildcard hostnames. Charges apply for each location.
        /// 
        /// - **trusted_proxies** (Int) Controls the address used for request logging and for setting the X-Envoy-External-Address header. If set to 1, then the last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If set to 2, then the second to last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If the XFF header does not have at least two addresses or does not exist then the source client IP address will be used instead.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var gvc = Cpln.GetGvc.Invoke(new()
        ///     {
        ///         Name = "gvc-example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gvcId"] = gvc.Apply(getGvcResult =&gt; getGvcResult.Id),
        ///         ["gvcLocations"] = gvc.Apply(getGvcResult =&gt; getGvcResult.Locations),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetGvcResult> InvokeAsync(GetGvcArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGvcResult>("cpln:index/getGvc:getGvc", args ?? new GetGvcArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing [Global Virtual Cloud (GVC)](https://docs.controlplane.com/reference/gvc) within Control Plane. 
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the GVC.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the GVC.
        /// - **name** (String) Name of the GVC.
        /// - **alias** (String) The alias name of the GVC.
        /// - **description** (String) Description of the GVC.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **domain** (String) Custom domain name used by associated workloads.
        /// - **locations** (List of String) A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud.
        /// - **pull_secrets** (List of String) A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC.
        /// - **lightstep_tracing** (Block List, Max: 1) (see below).
        /// - **otel_tracing** (Block List, Max: 1) (see below).
        /// - **controlplane_tracing** (Block List, Max: 1) (see below).
        /// - **load_balancer** (Block List, Max: 1) (see below).
        /// 
        /// &lt;a id="nestedblock--lightstep_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `lightstep_tracing`
        /// 
        /// - **sampling** (Int) Sampling percentage.
        /// - **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or the internal endpoint.
        /// - **credentials** (String) Full link to referenced Opaque Secret.
        /// 
        /// &lt;a id="nestedblock--otel_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `otel_tracing`
        /// 
        /// - **sampling** (Int) Determines what percentage of requests should be traced.
        /// - **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.
        /// - **custom_tags** (Map of String) Key-value map of custom tags.
        /// 
        /// &lt;a id="nestedblock--controlplane_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `controlplane_tracing`
        /// 
        /// - **sampling** (Int) Determines what percentage of requests should be traced.
        /// - **custom_tags** (Map of String) Key-value map of custom tags.
        /// 
        /// &lt;a id="nestedblock--load_balancer"&gt;&lt;/a&gt;
        /// 
        /// ### `load_balancer`
        /// 
        /// - **dedicated** (Boolean) Creates a dedicated load balancer in each location and enables additional Domain features: custom ports, protocols and wildcard hostnames. Charges apply for each location.
        /// 
        /// - **trusted_proxies** (Int) Controls the address used for request logging and for setting the X-Envoy-External-Address header. If set to 1, then the last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If set to 2, then the second to last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If the XFF header does not have at least two addresses or does not exist then the source client IP address will be used instead.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var gvc = Cpln.GetGvc.Invoke(new()
        ///     {
        ///         Name = "gvc-example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gvcId"] = gvc.Apply(getGvcResult =&gt; getGvcResult.Id),
        ///         ["gvcLocations"] = gvc.Apply(getGvcResult =&gt; getGvcResult.Locations),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetGvcResult> Invoke(GetGvcInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGvcResult>("cpln:index/getGvc:getGvc", args ?? new GetGvcInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing [Global Virtual Cloud (GVC)](https://docs.controlplane.com/reference/gvc) within Control Plane. 
        /// 
        /// ## Required
        /// 
        /// - **name** (String) Name of the GVC.
        /// 
        /// ## Outputs
        /// 
        /// The following attributes are exported:
        /// 
        /// - **cpln_id** (String) The ID, in GUID format, of the GVC.
        /// - **name** (String) Name of the GVC.
        /// - **alias** (String) The alias name of the GVC.
        /// - **description** (String) Description of the GVC.
        /// - **tags** (Map of String) Key-value map of resource tags.
        /// - **self_link** (String) Full link to this resource. Can be referenced by other resources.
        /// - **domain** (String) Custom domain name used by associated workloads.
        /// - **locations** (List of String) A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud.
        /// - **pull_secrets** (List of String) A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC.
        /// - **lightstep_tracing** (Block List, Max: 1) (see below).
        /// - **otel_tracing** (Block List, Max: 1) (see below).
        /// - **controlplane_tracing** (Block List, Max: 1) (see below).
        /// - **load_balancer** (Block List, Max: 1) (see below).
        /// 
        /// &lt;a id="nestedblock--lightstep_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `lightstep_tracing`
        /// 
        /// - **sampling** (Int) Sampling percentage.
        /// - **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or the internal endpoint.
        /// - **credentials** (String) Full link to referenced Opaque Secret.
        /// 
        /// &lt;a id="nestedblock--otel_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `otel_tracing`
        /// 
        /// - **sampling** (Int) Determines what percentage of requests should be traced.
        /// - **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.
        /// - **custom_tags** (Map of String) Key-value map of custom tags.
        /// 
        /// &lt;a id="nestedblock--controlplane_tracing"&gt;&lt;/a&gt;
        /// 
        /// ### `controlplane_tracing`
        /// 
        /// - **sampling** (Int) Determines what percentage of requests should be traced.
        /// - **custom_tags** (Map of String) Key-value map of custom tags.
        /// 
        /// &lt;a id="nestedblock--load_balancer"&gt;&lt;/a&gt;
        /// 
        /// ### `load_balancer`
        /// 
        /// - **dedicated** (Boolean) Creates a dedicated load balancer in each location and enables additional Domain features: custom ports, protocols and wildcard hostnames. Charges apply for each location.
        /// 
        /// - **trusted_proxies** (Int) Controls the address used for request logging and for setting the X-Envoy-External-Address header. If set to 1, then the last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If set to 2, then the second to last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If the XFF header does not have at least two addresses or does not exist then the source client IP address will be used instead.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cpln = Pulumi.Cpln;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var gvc = Cpln.GetGvc.Invoke(new()
        ///     {
        ///         Name = "gvc-example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gvcId"] = gvc.Apply(getGvcResult =&gt; getGvcResult.Id),
        ///         ["gvcLocations"] = gvc.Apply(getGvcResult =&gt; getGvcResult.Locations),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetGvcResult> Invoke(GetGvcInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGvcResult>("cpln:index/getGvc:getGvc", args ?? new GetGvcInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGvcArgs : global::Pulumi.InvokeArgs
    {
        [Input("controlplaneTracing")]
        public Inputs.GetGvcControlplaneTracingArgs? ControlplaneTracing { get; set; }

        [Input("domain")]
        public string? Domain { get; set; }

        [Input("endpointNamingFormat")]
        public string? EndpointNamingFormat { get; set; }

        [Input("env")]
        private Dictionary<string, string>? _env;
        public Dictionary<string, string> Env
        {
            get => _env ?? (_env = new Dictionary<string, string>());
            set => _env = value;
        }

        [Input("lightstepTracing")]
        public Inputs.GetGvcLightstepTracingArgs? LightstepTracing { get; set; }

        [Input("loadBalancer")]
        public Inputs.GetGvcLoadBalancerArgs? LoadBalancer { get; set; }

        [Input("locations")]
        private List<string>? _locations;
        public List<string> Locations
        {
            get => _locations ?? (_locations = new List<string>());
            set => _locations = value;
        }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("otelTracing")]
        public Inputs.GetGvcOtelTracingArgs? OtelTracing { get; set; }

        [Input("pullSecrets")]
        private List<string>? _pullSecrets;
        public List<string> PullSecrets
        {
            get => _pullSecrets ?? (_pullSecrets = new List<string>());
            set => _pullSecrets = value;
        }

        [Input("sidecar")]
        public Inputs.GetGvcSidecarArgs? Sidecar { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetGvcArgs()
        {
        }
        public static new GetGvcArgs Empty => new GetGvcArgs();
    }

    public sealed class GetGvcInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("controlplaneTracing")]
        public Input<Inputs.GetGvcControlplaneTracingInputArgs>? ControlplaneTracing { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("endpointNamingFormat")]
        public Input<string>? EndpointNamingFormat { get; set; }

        [Input("env")]
        private InputMap<string>? _env;
        public InputMap<string> Env
        {
            get => _env ?? (_env = new InputMap<string>());
            set => _env = value;
        }

        [Input("lightstepTracing")]
        public Input<Inputs.GetGvcLightstepTracingInputArgs>? LightstepTracing { get; set; }

        [Input("loadBalancer")]
        public Input<Inputs.GetGvcLoadBalancerInputArgs>? LoadBalancer { get; set; }

        [Input("locations")]
        private InputList<string>? _locations;
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("otelTracing")]
        public Input<Inputs.GetGvcOtelTracingInputArgs>? OtelTracing { get; set; }

        [Input("pullSecrets")]
        private InputList<string>? _pullSecrets;
        public InputList<string> PullSecrets
        {
            get => _pullSecrets ?? (_pullSecrets = new InputList<string>());
            set => _pullSecrets = value;
        }

        [Input("sidecar")]
        public Input<Inputs.GetGvcSidecarInputArgs>? Sidecar { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetGvcInvokeArgs()
        {
        }
        public static new GetGvcInvokeArgs Empty => new GetGvcInvokeArgs();
    }


    [OutputType]
    public sealed class GetGvcResult
    {
        public readonly string Alias;
        public readonly Outputs.GetGvcControlplaneTracingResult? ControlplaneTracing;
        public readonly string CplnId;
        public readonly string Description;
        public readonly string? Domain;
        public readonly string EndpointNamingFormat;
        public readonly ImmutableDictionary<string, string>? Env;
        public readonly string Id;
        public readonly Outputs.GetGvcLightstepTracingResult? LightstepTracing;
        public readonly Outputs.GetGvcLoadBalancerResult? LoadBalancer;
        public readonly ImmutableArray<string> Locations;
        public readonly string Name;
        public readonly Outputs.GetGvcOtelTracingResult? OtelTracing;
        public readonly ImmutableArray<string> PullSecrets;
        public readonly string SelfLink;
        public readonly Outputs.GetGvcSidecarResult? Sidecar;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetGvcResult(
            string alias,

            Outputs.GetGvcControlplaneTracingResult? controlplaneTracing,

            string cplnId,

            string description,

            string? domain,

            string endpointNamingFormat,

            ImmutableDictionary<string, string>? env,

            string id,

            Outputs.GetGvcLightstepTracingResult? lightstepTracing,

            Outputs.GetGvcLoadBalancerResult? loadBalancer,

            ImmutableArray<string> locations,

            string name,

            Outputs.GetGvcOtelTracingResult? otelTracing,

            ImmutableArray<string> pullSecrets,

            string selfLink,

            Outputs.GetGvcSidecarResult? sidecar,

            ImmutableDictionary<string, string> tags)
        {
            Alias = alias;
            ControlplaneTracing = controlplaneTracing;
            CplnId = cplnId;
            Description = description;
            Domain = domain;
            EndpointNamingFormat = endpointNamingFormat;
            Env = env;
            Id = id;
            LightstepTracing = lightstepTracing;
            LoadBalancer = loadBalancer;
            Locations = locations;
            Name = name;
            OtelTracing = otelTracing;
            PullSecrets = pullSecrets;
            SelfLink = selfLink;
            Sidecar = sidecar;
            Tags = tags;
        }
    }
}
