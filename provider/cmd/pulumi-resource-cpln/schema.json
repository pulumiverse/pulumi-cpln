{
    "name": "cpln",
    "displayName": "Control Plane",
    "description": "A Pulumi package for creating and managing Control Plane (cpln) resources.",
    "keywords": [
        "pulumi",
        "cpln",
        "category/infrastructure"
    ],
    "homepage": "https://www.controlplane.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`cpln` Terraform Provider](https://github.com/controlplane-com/terraform-provider-cpln).",
    "repository": "https://github.com/pulumiverse/pulumi-cpln",
    "logoUrl": "https://raw.githubusercontent.com/pulumiverse/pulumi-cpln/main/docs/logo.png",
    "pluginDownloadURL": "github://api.github.com/pulumiverse",
    "publisher": "pulumiverse",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Pulumiverse",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumiverse/pulumi-cpln/sdk/go/cpln",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "@pulumiverse/cpln",
            "packageDescription": "A Pulumi package for creating and managing Control Plane (cpln) resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/controlplane-com/terraform-provider-cpln)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cpln` repo](https://github.com/pulumiverse/pulumi-cpln/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cpln` repo](https://github.com/controlplane-com/terraform-provider-cpln/issues).",
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "packageName": "pulumiverse_cpln",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/controlplane-com/terraform-provider-cpln)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cpln` repo](https://github.com/pulumiverse/pulumi-cpln/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cpln` repo](https://github.com/controlplane-com/terraform-provider-cpln/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "endpoint": {
                "type": "string",
                "description": "The Control Plane Data Service API endpoint. Default is: https://api.cpln.io. Can be specified with the CPLN_ENDPOINT environment variable."
            },
            "org": {
                "type": "string",
                "description": "The Control Plane org that this provider will perform actions against. Can be specified with the CPLN_ORG environment variable."
            },
            "profile": {
                "type": "string",
                "description": "The user/service account profile that this provider will use to authenticate to the data service. Can be specified with the CPLN_PROFILE environment variable."
            },
            "refreshToken": {
                "type": "string",
                "description": "A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_REFRESH_TOKEN environment variable. Used when the provider is required to create an org or update the\u003cspan pulumi-lang-nodejs=\" authConfig \" pulumi-lang-dotnet=\" AuthConfig \" pulumi-lang-go=\" authConfig \" pulumi-lang-python=\" auth_config \" pulumi-lang-yaml=\" authConfig \" pulumi-lang-java=\" authConfig \"\u003e auth_config \u003c/span\u003eproperty. Refer to the section above on how to obtain the refresh token.",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_TOKEN environment variable.",
                "secret": true
            }
        }
    },
    "types": {
        "cpln:index/CloudAccountAws:CloudAccountAws": {
            "properties": {
                "roleArn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) Role.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/CloudAccountAzure:CloudAccountAzure": {
            "properties": {
                "secretLink": {
                    "type": "string",
                    "description": "Full link to an Azure secret. (e.g., /org/ORG_NAME/secret/AZURE_SECRET).\n"
                }
            },
            "type": "object"
        },
        "cpln:index/CloudAccountGcp:CloudAccountGcp": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "GCP project ID. Obtained from the GCP cloud console.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/CloudAccountNgs:CloudAccountNgs": {
            "properties": {
                "secretLink": {
                    "type": "string",
                    "description": "Full link to a NATS Account Secret secret. (e.g., /org/ORG_NAME/secret/NATS_ACCOUNT_SECRET).\n"
                }
            },
            "type": "object"
        },
        "cpln:index/DomainRouteHeaders:DomainRouteHeaders": {
            "properties": {
                "request": {
                    "$ref": "#/types/cpln:index/DomainRouteHeadersRequest:DomainRouteHeadersRequest",
                    "description": "Manipulates HTTP headers.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/DomainRouteHeadersRequest:DomainRouteHeadersRequest": {
            "properties": {
                "set": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Sets or overrides headers to all http requests for this route.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/DomainSpec:DomainSpec": {
            "properties": {
                "acceptAllHosts": {
                    "type": "boolean",
                    "description": "Allows domain to accept wildcards. The associated GVC must have dedicated load balancing enabled.\n"
                },
                "acceptAllSubdomains": {
                    "type": "boolean",
                    "description": "Accept all subdomains will accept any host that is a sub domain of the domain so *.$DOMAIN\n"
                },
                "certChallengeType": {
                    "type": "string",
                    "description": "Defines the method used to prove domain ownership for certificate issuance.\n"
                },
                "dnsMode": {
                    "type": "string",
                    "description": "In \u003cspan pulumi-lang-nodejs=\"`cname`\" pulumi-lang-dotnet=\"`Cname`\" pulumi-lang-go=\"`cname`\" pulumi-lang-python=\"`cname`\" pulumi-lang-yaml=\"`cname`\" pulumi-lang-java=\"`cname`\"\u003e`cname`\u003c/span\u003e dnsMode, Control Plane will configure workloads to accept traffic for the domain but will not manage DNS records for the domain. End users must configure CNAME records in their own DNS pointed to the canonical workload endpoint. Currently \u003cspan pulumi-lang-nodejs=\"`cname`\" pulumi-lang-dotnet=\"`Cname`\" pulumi-lang-go=\"`cname`\" pulumi-lang-python=\"`cname`\" pulumi-lang-yaml=\"`cname`\" pulumi-lang-java=\"`cname`\"\u003e`cname`\u003c/span\u003e dnsMode requires that a TLS server certificate be configured when subdomain based routing is used. In \u003cspan pulumi-lang-nodejs=\"`ns`\" pulumi-lang-dotnet=\"`Ns`\" pulumi-lang-go=\"`ns`\" pulumi-lang-python=\"`ns`\" pulumi-lang-yaml=\"`ns`\" pulumi-lang-java=\"`ns`\"\u003e`ns`\u003c/span\u003e dnsMode, Control Plane will manage the subdomains and create all necessary DNS records. End users configure NS records to forward DNS requests to the Control Plane managed DNS servers. Valid values: \u003cspan pulumi-lang-nodejs=\"`cname`\" pulumi-lang-dotnet=\"`Cname`\" pulumi-lang-go=\"`cname`\" pulumi-lang-python=\"`cname`\" pulumi-lang-yaml=\"`cname`\" pulumi-lang-java=\"`cname`\"\u003e`cname`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ns`\" pulumi-lang-dotnet=\"`Ns`\" pulumi-lang-go=\"`ns`\" pulumi-lang-python=\"`ns`\" pulumi-lang-yaml=\"`ns`\" pulumi-lang-java=\"`ns`\"\u003e`ns`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`cname`\" pulumi-lang-dotnet=\"`Cname`\" pulumi-lang-go=\"`cname`\" pulumi-lang-python=\"`cname`\" pulumi-lang-yaml=\"`cname`\" pulumi-lang-java=\"`cname`\"\u003e`cname`\u003c/span\u003e.\n"
                },
                "gvcLink": {
                    "type": "string",
                    "description": "This value is set to a target GVC (using a full link) for use by subdomain based routing. Each workload in the GVC will receive a subdomain in the form ${workload.name}.${domain.name}. **Do not include if path based routing is used.**\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/DomainSpecPort:DomainSpecPort"
                    },
                    "description": "Domain port specifications.\n"
                },
                "workloadLink": {
                    "type": "string",
                    "description": "Creates a unique subdomain for each replica of a stateful workload, enabling direct access to individual instances.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "acceptAllHosts",
                        "acceptAllSubdomains",
                        "dnsMode"
                    ]
                }
            }
        },
        "cpln:index/DomainSpecPort:DomainSpecPort": {
            "properties": {
                "cors": {
                    "$ref": "#/types/cpln:index/DomainSpecPortCors:DomainSpecPortCors",
                    "description": "A security feature implemented by web browsers to allow resources on a web page to be requested from another domain outside the domain from which the resource originated.\n"
                },
                "number": {
                    "type": "integer",
                    "description": "Sets or overrides headers to all http requests for this route.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Allowed protocol. Valid values: \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`http2`\" pulumi-lang-dotnet=\"`Http2`\" pulumi-lang-go=\"`http2`\" pulumi-lang-python=\"`http2`\" pulumi-lang-yaml=\"`http2`\" pulumi-lang-java=\"`http2`\"\u003e`http2`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`http2`\" pulumi-lang-dotnet=\"`Http2`\" pulumi-lang-go=\"`http2`\" pulumi-lang-python=\"`http2`\" pulumi-lang-yaml=\"`http2`\" pulumi-lang-java=\"`http2`\"\u003e`http2`\u003c/span\u003e.\n"
                },
                "tls": {
                    "$ref": "#/types/cpln:index/DomainSpecPortTls:DomainSpecPortTls",
                    "description": "Used for TLS connections for this Domain. End users are responsible for certificate updates.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "number",
                        "protocol"
                    ]
                }
            }
        },
        "cpln:index/DomainSpecPortCors:DomainSpecPortCors": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Determines whether the client-side code (typically running in a web browser) is allowed to include credentials (such as cookies, HTTP authentication, or client-side SSL certificates) in cross-origin requests.\n"
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the custom HTTP headers that are allowed in a cross-origin request to a specific resource.\n"
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the HTTP methods (such as `GET`, `POST`, `PUT`, `DELETE`, etc.) that are allowed for a cross-origin request to a specific resource.\n"
                },
                "allowOrigins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/DomainSpecPortCorsAllowOrigin:DomainSpecPortCorsAllowOrigin"
                    },
                    "description": "Determines which origins are allowed to access a particular resource on a server from a web browser.\n"
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The HTTP headers that a server allows to be exposed to the client in response to a cross-origin request. These headers provide additional information about the server's capabilities or requirements, aiding in proper handling of the request by the client's browser or application.\n"
                },
                "maxAge": {
                    "type": "string",
                    "description": "Maximum amount of time that a preflight request result can be cached by the client browser. Input is expected as a duration string (i.e, 24h, 20m, etc.).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowCredentials",
                        "maxAge"
                    ]
                }
            }
        },
        "cpln:index/DomainSpecPortCorsAllowOrigin:DomainSpecPortCorsAllowOrigin": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Value of allowed origin.\n"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/DomainSpecPortTls:DomainSpecPortTls": {
            "properties": {
                "cipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed cipher suites. Refer to the [Domain Reference](https://docs.controlplane.com/reference/domain#cipher-suites) for details.\n"
                },
                "clientCertificate": {
                    "$ref": "#/types/cpln:index/DomainSpecPortTlsClientCertificate:DomainSpecPortTlsClientCertificate",
                    "description": "The certificate authority PEM, stored as a TLS Secret, used to verify the authority of the client certificate. The only verification performed checks that the CN of the PEM matches the Domain (i.e., CN=*.DOMAIN).\n"
                },
                "minProtocolVersion": {
                    "type": "string",
                    "description": "Minimum TLS version to accept. Minimum is `1.0`. Default: `1.2`.\n"
                },
                "serverCertificate": {
                    "$ref": "#/types/cpln:index/DomainSpecPortTlsServerCertificate:DomainSpecPortTlsServerCertificate",
                    "description": "Configure an optional custom server certificate for the domain. When the port number is 443 and this is not supplied, a certificate is provisioned automatically.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cipherSuites",
                        "minProtocolVersion"
                    ]
                }
            }
        },
        "cpln:index/DomainSpecPortTlsClientCertificate:DomainSpecPortTlsClientCertificate": {
            "properties": {
                "secretLink": {
                    "type": "string",
                    "description": "The secret will include a client certificate authority cert in PEM format used to verify requests which include client certificates. The key subject must match the domain and the key usage properties must be configured for client certificate authorization. The secret type must be keypair.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/DomainSpecPortTlsServerCertificate:DomainSpecPortTlsServerCertificate": {
            "properties": {
                "secretLink": {
                    "type": "string",
                    "description": "When provided, this is used as the server certificate authority. The secret type must be keypair and the content must be PEM encoded.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/DomainStatus:DomainStatus": {
            "properties": {
                "dnsConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/DomainStatusDnsConfig:DomainStatusDnsConfig"
                    },
                    "description": "List of required DNS record entries.\n"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/DomainStatusEndpoint:DomainStatusEndpoint"
                    },
                    "description": "List of configured domain endpoints.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/DomainStatusLocation:DomainStatusLocation"
                    },
                    "description": "Contains the cloud provider name, region, and certificate status.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of Domain. Possible values: \u003cspan pulumi-lang-nodejs=\"`initializing`\" pulumi-lang-dotnet=\"`Initializing`\" pulumi-lang-go=\"`initializing`\" pulumi-lang-python=\"`initializing`\" pulumi-lang-yaml=\"`initializing`\" pulumi-lang-java=\"`initializing`\"\u003e`initializing`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e, `pendingDnsConfig`, `pendingCertificate`, `usedByGvc`.\n"
                },
                "warning": {
                    "type": "string",
                    "description": "Warning message.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dnsConfigs",
                        "endpoints",
                        "fingerprint",
                        "locations",
                        "status",
                        "warning"
                    ]
                }
            }
        },
        "cpln:index/DomainStatusDnsConfig:DomainStatusDnsConfig": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The host in DNS terminology refers to the domain or subdomain that the DNS record is associated with. It's essentially the name that is being queried or managed. For example, in a DNS record for `www.example.com`, \u003cspan pulumi-lang-nodejs=\"`www`\" pulumi-lang-dotnet=\"`Www`\" pulumi-lang-go=\"`www`\" pulumi-lang-python=\"`www`\" pulumi-lang-yaml=\"`www`\" pulumi-lang-java=\"`www`\"\u003e`www`\u003c/span\u003e is a host in the domain `example.com`.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "Time to live (TTL) is a value that signifies how long (in seconds) a DNS record should be cached by a resolver or a browser before a new request should be sent to refresh the data. Lower TTL values mean records are updated more frequently, which is beneficial for dynamic DNS configurations or during DNS migrations. Higher TTL values reduce the load on DNS servers and improve the speed of name resolution for end users by relying on cached data.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The DNS record type specifies the type of data the DNS record contains. Valid values: `CNAME`, `NS`, `TXT`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of a DNS record contains the data the record is meant to convey, based on the type of the record.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "ttl",
                        "type",
                        "value"
                    ]
                }
            }
        },
        "cpln:index/DomainStatusEndpoint:DomainStatusEndpoint": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "URL of endpoint.\n"
                },
                "workloadLink": {
                    "type": "string",
                    "description": "Full link to associated workload.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "url",
                        "workloadLink"
                    ]
                }
            }
        },
        "cpln:index/DomainStatusLocation:DomainStatusLocation": {
            "properties": {
                "certificateStatus": {
                    "type": "string",
                    "description": "The current validity or status of the SSL/TLS certificate.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the location.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateStatus",
                        "name"
                    ]
                }
            }
        },
        "cpln:index/GroupIdentityMatcher:GroupIdentityMatcher": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Executes the expression against the users' claims to decide whether a user belongs to this group. This method is useful for managing the grouping of users logged in with SAML providers.\n"
                },
                "language": {
                    "type": "string",
                    "description": "Language of the expression. Either \u003cspan pulumi-lang-nodejs=\"`jmespath`\" pulumi-lang-dotnet=\"`Jmespath`\" pulumi-lang-go=\"`jmespath`\" pulumi-lang-python=\"`jmespath`\" pulumi-lang-yaml=\"`jmespath`\" pulumi-lang-java=\"`jmespath`\"\u003e`jmespath`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`javascript`\" pulumi-lang-dotnet=\"`Javascript`\" pulumi-lang-go=\"`javascript`\" pulumi-lang-python=\"`javascript`\" pulumi-lang-yaml=\"`javascript`\" pulumi-lang-java=\"`javascript`\"\u003e`javascript`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`jmespath`\" pulumi-lang-dotnet=\"`Jmespath`\" pulumi-lang-go=\"`jmespath`\" pulumi-lang-python=\"`jmespath`\" pulumi-lang-yaml=\"`jmespath`\" pulumi-lang-java=\"`jmespath`\"\u003e`jmespath`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expression",
                        "language"
                    ]
                }
            }
        },
        "cpln:index/GroupMemberQuery:GroupMemberQuery": {
            "properties": {
                "fetch": {
                    "type": "string",
                    "description": "Type of fetch. Specify either: \u003cspan pulumi-lang-nodejs=\"`links`\" pulumi-lang-dotnet=\"`Links`\" pulumi-lang-go=\"`links`\" pulumi-lang-python=\"`links`\" pulumi-lang-yaml=\"`links`\" pulumi-lang-java=\"`links`\"\u003e`links`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e.\n"
                },
                "spec": {
                    "$ref": "#/types/cpln:index/GroupMemberQuerySpec:GroupMemberQuerySpec"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fetch"
                    ]
                }
            }
        },
        "cpln:index/GroupMemberQuerySpec:GroupMemberQuerySpec": {
            "properties": {
                "match": {
                    "type": "string",
                    "description": "Type of match. Available values: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`any`\" pulumi-lang-dotnet=\"`Any`\" pulumi-lang-go=\"`any`\" pulumi-lang-python=\"`any`\" pulumi-lang-yaml=\"`any`\" pulumi-lang-java=\"`any`\"\u003e`any`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e.\n"
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/GroupMemberQuerySpecTerm:GroupMemberQuerySpecTerm"
                    },
                    "description": "Terms can only contain one of the following attributes: \u003cspan pulumi-lang-nodejs=\"`property`\" pulumi-lang-dotnet=\"`Property`\" pulumi-lang-go=\"`property`\" pulumi-lang-python=\"`property`\" pulumi-lang-yaml=\"`property`\" pulumi-lang-java=\"`property`\"\u003e`property`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rel`\" pulumi-lang-dotnet=\"`Rel`\" pulumi-lang-go=\"`rel`\" pulumi-lang-python=\"`rel`\" pulumi-lang-yaml=\"`rel`\" pulumi-lang-java=\"`rel`\"\u003e`rel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tag`\" pulumi-lang-dotnet=\"`Tag`\" pulumi-lang-go=\"`tag`\" pulumi-lang-python=\"`tag`\" pulumi-lang-yaml=\"`tag`\" pulumi-lang-java=\"`tag`\"\u003e`tag`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match"
                    ]
                }
            }
        },
        "cpln:index/GroupMemberQuerySpecTerm:GroupMemberQuerySpecTerm": {
            "properties": {
                "op": {
                    "type": "string",
                    "description": "Type of query operation. Available values: `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`, `!=`, \u003cspan pulumi-lang-nodejs=\"`exists`\" pulumi-lang-dotnet=\"`Exists`\" pulumi-lang-go=\"`exists`\" pulumi-lang-python=\"`exists`\" pulumi-lang-yaml=\"`exists`\" pulumi-lang-java=\"`exists`\"\u003e`exists`\u003c/span\u003e, `!exists`. Default: `=`.\n"
                },
                "property": {
                    "type": "string",
                    "description": "Property to use for query evaluation.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Relation to use for query evaluation.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag key to use for query evaluation.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Testing value for query evaluation.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "op"
                    ]
                }
            }
        },
        "cpln:index/GvcControlplaneTracing:GvcControlplaneTracing": {
            "properties": {
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "sampling"
            ]
        },
        "cpln:index/GvcKeda:GvcKeda": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable KEDA for this GVC. KEDA is a Kubernetes-based event-driven autoscaler that allows you to scale workloads based on external events. When enabled, a keda operator will be deployed in the GVC and workloads in the GVC can use KEDA to scale based on external metrics.\n"
                },
                "identityLink": {
                    "type": "string",
                    "description": "A link to an Identity resource that will be used for KEDA. This will allow the keda operator to access cloud and network resources.\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of secrets to be used as TriggerAuthentication objects. The TriggerAuthentication object will be named after the secret and can be used by triggers on workloads in this GVC.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "cpln:index/GvcLightstepTracing:GvcLightstepTracing": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full link to referenced Opaque Secret.\n"
                },
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "sampling"
            ]
        },
        "cpln:index/GvcLoadBalancer:GvcLoadBalancer": {
            "properties": {
                "dedicated": {
                    "type": "boolean",
                    "description": "Creates a dedicated load balancer in each location and enables additional Domain features: custom ports, protocols and wildcard hostnames. Charges apply for each location.\n"
                },
                "ipset": {
                    "type": "string",
                    "description": "The link or the name of the IP Set that will be used for this load balancer.\n"
                },
                "multiZone": {
                    "$ref": "#/types/cpln:index/GvcLoadBalancerMultiZone:GvcLoadBalancerMultiZone"
                },
                "redirect": {
                    "$ref": "#/types/cpln:index/GvcLoadBalancerRedirect:GvcLoadBalancerRedirect",
                    "description": "Specify the url to be redirected to for different http status codes.\n"
                },
                "trustedProxies": {
                    "type": "integer",
                    "description": "Controls the address used for request logging and for setting the X-Envoy-External-Address header. If set to 1, then the last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If set to 2, then the second to last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If the XFF header does not have at least two addresses or does not exist then the source client IP address will be used instead.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "trustedProxies"
                    ]
                }
            }
        },
        "cpln:index/GvcLoadBalancerMultiZone:GvcLoadBalancerMultiZone": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "cpln:index/GvcLoadBalancerRedirect:GvcLoadBalancerRedirect": {
            "properties": {
                "class": {
                    "$ref": "#/types/cpln:index/GvcLoadBalancerRedirectClass:GvcLoadBalancerRedirectClass",
                    "description": "Specify the redirect url for all status codes in a class.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/GvcLoadBalancerRedirectClass:GvcLoadBalancerRedirectClass": {
            "properties": {
                "status401": {
                    "type": "string",
                    "description": "An optional url redirect for 401 responses. Supports envoy format strings to include request information. E.g. https://your-oauth-server/oauth2/authorize?return_to=%REQ(:path)%\u0026client_id=your-client-id\n"
                },
                "status5xx": {
                    "type": "string",
                    "description": "Specify the redirect url for any 500 level status code.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/GvcOtelTracing:GvcOtelTracing": {
            "properties": {
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "sampling"
            ]
        },
        "cpln:index/GvcSidecar:GvcSidecar": {
            "properties": {
                "envoy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "envoy"
            ]
        },
        "cpln:index/IdentityAwsAccessPolicy:IdentityAwsAccessPolicy": {
            "properties": {
                "cloudAccountLink": {
                    "type": "string",
                    "description": "Full link to referenced cloud account.\n"
                },
                "policyRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of policies.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Role name.\n"
                },
                "trustPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IdentityAwsAccessPolicyTrustPolicy:IdentityAwsAccessPolicyTrustPolicy"
                    },
                    "description": "The trust policy for the role.\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccountLink"
            ]
        },
        "cpln:index/IdentityAwsAccessPolicyTrustPolicy:IdentityAwsAccessPolicyTrustPolicy": {
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "List of statements.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the policy.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "version"
                    ]
                }
            }
        },
        "cpln:index/IdentityAzureAccessPolicy:IdentityAzureAccessPolicy": {
            "properties": {
                "cloudAccountLink": {
                    "type": "string",
                    "description": "Full link to referenced cloud account.\n"
                },
                "roleAssignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IdentityAzureAccessPolicyRoleAssignment:IdentityAzureAccessPolicyRoleAssignment"
                    },
                    "description": "The process of assigning specific roles or permissions to an entity, such as a user or a service principal, within the system.\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccountLink"
            ]
        },
        "cpln:index/IdentityAzureAccessPolicyRoleAssignment:IdentityAzureAccessPolicyRoleAssignment": {
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of assigned roles.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope of roles.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/IdentityGcpAccessPolicy:IdentityGcpAccessPolicy": {
            "properties": {
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IdentityGcpAccessPolicyBinding:IdentityGcpAccessPolicyBinding"
                    },
                    "description": "The association or connection between a particular identity, such as a user or a group, and a set of permissions or roles within the system.\n"
                },
                "cloudAccountLink": {
                    "type": "string",
                    "description": "Full link to referenced cloud account.\n"
                },
                "scopes": {
                    "type": "string",
                    "description": "Comma delimited list of GCP scope URLs.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "Name of existing GCP service account.\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccountLink"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cloudAccountLink",
                        "scopes"
                    ]
                }
            }
        },
        "cpln:index/IdentityGcpAccessPolicyBinding:IdentityGcpAccessPolicyBinding": {
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "Name of resource for binding.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed roles.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/IdentityNativeNetworkResource:IdentityNativeNetworkResource": {
            "properties": {
                "awsPrivateLink": {
                    "$ref": "#/types/cpln:index/IdentityNativeNetworkResourceAwsPrivateLink:IdentityNativeNetworkResourceAwsPrivateLink",
                    "description": "A feature provided by AWS that enables private connectivity between private VPCs and compute running at Control Plane without traversing the public internet.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "Fully qualified domain name.\n"
                },
                "gcpServiceConnect": {
                    "$ref": "#/types/cpln:index/IdentityNativeNetworkResourceGcpServiceConnect:IdentityNativeNetworkResourceGcpServiceConnect",
                    "description": "Capability provided by GCP that allows private communication between private VPC networks and compute running at Control Plane.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Native Network Resource.\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Ports to expose. At least one port is required.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn",
                "name",
                "ports"
            ]
        },
        "cpln:index/IdentityNativeNetworkResourceAwsPrivateLink:IdentityNativeNetworkResourceAwsPrivateLink": {
            "properties": {
                "endpointServiceName": {
                    "type": "string",
                    "description": "Endpoint service name.\n"
                }
            },
            "type": "object",
            "required": [
                "endpointServiceName"
            ]
        },
        "cpln:index/IdentityNativeNetworkResourceGcpServiceConnect:IdentityNativeNetworkResourceGcpServiceConnect": {
            "properties": {
                "targetService": {
                    "type": "string",
                    "description": "Target service name.\n"
                }
            },
            "type": "object",
            "required": [
                "targetService"
            ]
        },
        "cpln:index/IdentityNetworkResource:IdentityNetworkResource": {
            "properties": {
                "agentLink": {
                    "type": "string",
                    "description": "Full link to referenced Agent.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "Fully qualified domain name.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP addresses.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Resource.\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Ports to expose.\n"
                },
                "resolverIp": {
                    "type": "string",
                    "description": "Resolver IP.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ports"
            ]
        },
        "cpln:index/IdentityNgsAccessPolicy:IdentityNgsAccessPolicy": {
            "properties": {
                "cloudAccountLink": {
                    "type": "string",
                    "description": "Full link to referenced cloud account.\n"
                },
                "data": {
                    "type": "integer",
                    "description": "Max number of bytes a connection can send. Default: -1\n"
                },
                "payload": {
                    "type": "integer",
                    "description": "Max message payload. Default: -1\n"
                },
                "pub": {
                    "$ref": "#/types/cpln:index/IdentityNgsAccessPolicyPub:IdentityNgsAccessPolicyPub",
                    "description": "Pub Permission.\n"
                },
                "resp": {
                    "$ref": "#/types/cpln:index/IdentityNgsAccessPolicyResp:IdentityNgsAccessPolicyResp",
                    "description": "Reponses.\n"
                },
                "sub": {
                    "$ref": "#/types/cpln:index/IdentityNgsAccessPolicySub:IdentityNgsAccessPolicySub",
                    "description": "Sub Permission.\n"
                },
                "subs": {
                    "type": "integer",
                    "description": "Max number of subscriptions per connection. Default: -1\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccountLink"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cloudAccountLink",
                        "data",
                        "payload",
                        "subs"
                    ]
                }
            }
        },
        "cpln:index/IdentityNgsAccessPolicyPub:IdentityNgsAccessPolicyPub": {
            "properties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allow subjects.\n"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of deny subjects.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/IdentityNgsAccessPolicyResp:IdentityNgsAccessPolicyResp": {
            "properties": {
                "max": {
                    "type": "integer",
                    "description": "Number of responses allowed on the replyTo subject, -1 means no limit. Default: -1\n"
                },
                "ttl": {
                    "type": "string",
                    "description": "Deadline to send replies on the replyTo subject [#ms(millis) | #s(econds) | m(inutes) | h(ours)]. -1 means no restriction.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "max"
                    ]
                }
            }
        },
        "cpln:index/IdentityNgsAccessPolicySub:IdentityNgsAccessPolicySub": {
            "properties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allow subjects.\n"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of deny subjects.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/IpSetLocation:IpSetLocation": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The self link of a location.\n"
                },
                "retentionPolicy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "retentionPolicy"
            ]
        },
        "cpln:index/IpSetStatus:IpSetStatus": {
            "properties": {
                "error": {
                    "type": "string"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IpSetStatusIpAddress:IpSetStatusIpAddress"
                    }
                },
                "warning": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "error",
                        "ipAddresses",
                        "warning"
                    ]
                }
            }
        },
        "cpln:index/IpSetStatusIpAddress:IpSetStatusIpAddress": {
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "id",
                        "ip",
                        "name",
                        "state"
                    ]
                }
            }
        },
        "cpln:index/LocationGeo:LocationGeo": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City of the location.\n"
                },
                "continent": {
                    "type": "string",
                    "description": "Continent of the location.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of the location.\n"
                },
                "lat": {
                    "type": "number",
                    "description": "Latitude of the location.\n"
                },
                "lon": {
                    "type": "number",
                    "description": "Longitude of the location.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the location.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "city",
                        "continent",
                        "country",
                        "lat",
                        "lon",
                        "state"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAddOns:Mk8sAddOns": {
            "properties": {
                "awsEcr": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsAwsEcr:Mk8sAddOnsAwsEcr"
                },
                "awsEfs": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsAwsEfs:Mk8sAddOnsAwsEfs"
                },
                "awsElb": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsAwsElb:Mk8sAddOnsAwsElb"
                },
                "awsWorkloadIdentity": {
                    "type": "boolean"
                },
                "azureAcr": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsAzureAcr:Mk8sAddOnsAzureAcr"
                },
                "azureWorkloadIdentity": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsAzureWorkloadIdentity:Mk8sAddOnsAzureWorkloadIdentity"
                },
                "byok": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByok:Mk8sAddOnsByok",
                    "description": "Bring-your-own Kubernetes (BYOK) add-on settings.\n"
                },
                "dashboard": {
                    "type": "boolean"
                },
                "localPathStorage": {
                    "type": "boolean"
                },
                "logs": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsLogs:Mk8sAddOnsLogs"
                },
                "metrics": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsMetrics:Mk8sAddOnsMetrics",
                    "description": "Scrape pods annotated with prometheus.io/scrape=true\n"
                },
                "nvidia": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsNvidia:Mk8sAddOnsNvidia"
                },
                "registryMirror": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsRegistryMirror:Mk8sAddOnsRegistryMirror"
                },
                "sysbox": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsAwsEcr:Mk8sAddOnsAwsEcr": {
            "properties": {
                "roleArn": {
                    "type": "string",
                    "description": "Role to use when authorizing ECR pulls. Optional on AWS, in which case it will use the instance role to pull.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsAwsEfs:Mk8sAddOnsAwsEfs": {
            "properties": {
                "roleArn": {
                    "type": "string",
                    "description": "Use this role for EFS interaction.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsAwsElb:Mk8sAddOnsAwsElb": {
            "properties": {
                "roleArn": {
                    "type": "string",
                    "description": "Role to use when authorizing calls to EC2 ELB. Optional on AWS, when not provided it will create the recommended role.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsAzureAcr:Mk8sAddOnsAzureAcr": {
            "properties": {
                "clientId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId"
            ]
        },
        "cpln:index/Mk8sAddOnsAzureWorkloadIdentity:Mk8sAddOnsAzureWorkloadIdentity": {
            "properties": {
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID to use for workload identity.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByok:Mk8sAddOnsByok": {
            "properties": {
                "config": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfig:Mk8sAddOnsByokConfig",
                    "description": "Fine-grained configuration for the BYOK workloads.\n"
                },
                "ignoreUpdates": {
                    "type": "boolean",
                    "description": "Disable Control Plane managed upgrades for BYOK components.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The full link of a BYOK location.\n"
                }
            },
            "type": "object",
            "required": [
                "location"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "config",
                        "location"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAddOnsByokConfig:Mk8sAddOnsByokConfig": {
            "properties": {
                "actuator": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigActuator:Mk8sAddOnsByokConfigActuator",
                    "description": "Resource tuning for the actuator component.\n"
                },
                "common": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigCommon:Mk8sAddOnsByokConfigCommon",
                    "description": "Shared rollout settings for BYOK workloads.\n"
                },
                "ingress": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigIngress:Mk8sAddOnsByokConfigIngress",
                    "description": "Ingress controller resource configuration.\n"
                },
                "internalDns": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigInternalDns:Mk8sAddOnsByokConfigInternalDns",
                    "description": "Internal DNS deployment settings.\n"
                },
                "istio": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigIstio:Mk8sAddOnsByokConfigIstio",
                    "description": "Istio service mesh configuration.\n"
                },
                "logSplitter": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigLogSplitter:Mk8sAddOnsByokConfigLogSplitter",
                    "description": "Log splitter deployment configuration.\n"
                },
                "longhorn": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigLonghorn:Mk8sAddOnsByokConfigLonghorn",
                    "description": "Longhorn persistent volume settings.\n"
                },
                "middlebox": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigMiddlebox:Mk8sAddOnsByokConfigMiddlebox",
                    "description": "Configuration for the optional middlebox traffic shaper.\n"
                },
                "monitoring": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigMonitoring:Mk8sAddOnsByokConfigMonitoring",
                    "description": "Monitoring stack configuration.\n"
                },
                "redis": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigRedis:Mk8sAddOnsByokConfigRedis",
                    "description": "Redis cache configuration.\n"
                },
                "redisHa": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigRedisHa:Mk8sAddOnsByokConfigRedisHa",
                    "description": "High-availability Redis configuration.\n"
                },
                "redisSentinel": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigRedisSentinel:Mk8sAddOnsByokConfigRedisSentinel",
                    "description": "Redis Sentinel configuration.\n"
                },
                "tempoAgent": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigTempoAgent:Mk8sAddOnsByokConfigTempoAgent",
                    "description": "Tempo agent resource configuration.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigActuator:Mk8sAddOnsByokConfigActuator": {
            "properties": {
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional environment variables injected into actuator pods.\n"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Log level override for actuator containers. Valid values are: trace, info, error.\n"
                },
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to actuator pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to actuator pods.\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "Minimum CPU request applied to actuator pods (e.g. \"100m\").\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Minimum memory request applied to actuator pods (e.g. \"128Mi\").\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigCommon:Mk8sAddOnsByokConfigCommon": {
            "properties": {
                "deploymentReplicas": {
                    "type": "integer",
                    "description": "Replica count shared by BYOK control plane deployments.\n"
                },
                "pdb": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigCommonPdb:Mk8sAddOnsByokConfigCommonPdb",
                    "description": "Pod disruption budget limits for BYOK workloads.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigCommonPdb:Mk8sAddOnsByokConfigCommonPdb": {
            "properties": {
                "maxUnavailable": {
                    "type": "integer",
                    "description": "Maximum number of pods that can be unavailable during disruptions.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigIngress:Mk8sAddOnsByokConfigIngress": {
            "properties": {
                "cpu": {
                    "type": "string",
                    "description": "CPU request/limit string applied to ingress pods.\n"
                },
                "memory": {
                    "type": "string",
                    "description": "Memory request/limit string applied to ingress pods.\n"
                },
                "targetPercent": {
                    "type": "number",
                    "description": "Target usage percentage that triggers ingress autoscaling.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigInternalDns:Mk8sAddOnsByokConfigInternalDns": {
            "properties": {
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to internal DNS pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to internal DNS pods.\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to internal DNS pods.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to internal DNS pods.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigIstio:Mk8sAddOnsByokConfigIstio": {
            "properties": {
                "ingressGateway": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigIstioIngressGateway:Mk8sAddOnsByokConfigIstioIngressGateway",
                    "description": "Istio ingress gateway deployment settings.\n"
                },
                "istiod": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigIstioIstiod:Mk8sAddOnsByokConfigIstioIstiod",
                    "description": "Control plane deployment settings for istiod.\n"
                },
                "sidecar": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigIstioSidecar:Mk8sAddOnsByokConfigIstioSidecar",
                    "description": "Default resource requests for Istio sidecar injection.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigIstioIngressGateway:Mk8sAddOnsByokConfigIstioIngressGateway": {
            "properties": {
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to ingress gateway pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to ingress gateway pods.\n"
                },
                "replicas": {
                    "type": "integer",
                    "description": "Number of ingress gateway replicas.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigIstioIstiod:Mk8sAddOnsByokConfigIstioIstiod": {
            "properties": {
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to istiod pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to istiod pods.\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to istiod pods.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to istiod pods.\n"
                },
                "pdb": {
                    "type": "integer",
                    "description": "Pod disruption budget maxUnavailable for istiod.\n"
                },
                "replicas": {
                    "type": "integer",
                    "description": "Number of istiod replicas.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigIstioSidecar:Mk8sAddOnsByokConfigIstioSidecar": {
            "properties": {
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to injected sidecars.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to injected sidecars.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigLogSplitter:Mk8sAddOnsByokConfigLogSplitter": {
            "properties": {
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to log splitter pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to log splitter pods.\n"
                },
                "memBufferSize": {
                    "type": "string",
                    "description": "In-memory buffer size consumed by each log splitter pod.\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to log splitter pods.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to log splitter pods.\n"
                },
                "perPodRate": {
                    "type": "integer",
                    "description": "Per-pod log processing rate limit.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigLonghorn:Mk8sAddOnsByokConfigLonghorn": {
            "properties": {
                "replicas": {
                    "type": "integer",
                    "description": "Replica factor for Longhorn volumes. Minimum: 1.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigMiddlebox:Mk8sAddOnsByokConfigMiddlebox": {
            "properties": {
                "bandwidthAlertMbps": {
                    "type": "integer",
                    "description": "Alert threshold, in Mbps, for middlebox bandwidth usage.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to deploy the middlebox component.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigMonitoring:Mk8sAddOnsByokConfigMonitoring": {
            "properties": {
                "kubeStateMetrics": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigMonitoringKubeStateMetrics:Mk8sAddOnsByokConfigMonitoringKubeStateMetrics",
                    "description": "Kube-state-metrics resource overrides.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Maximum memory limit for monitoring components.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Minimum memory request for monitoring components.\n"
                },
                "prometheus": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigMonitoringPrometheus:Mk8sAddOnsByokConfigMonitoringPrometheus",
                    "description": "Prometheus deployment configuration.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigMonitoringKubeStateMetrics:Mk8sAddOnsByokConfigMonitoringKubeStateMetrics": {
            "properties": {
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to kube-state-metrics pods.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigMonitoringPrometheus:Mk8sAddOnsByokConfigMonitoringPrometheus": {
            "properties": {
                "main": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsByokConfigMonitoringPrometheusMain:Mk8sAddOnsByokConfigMonitoringPrometheusMain",
                    "description": "Primary Prometheus instance settings.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigMonitoringPrometheusMain:Mk8sAddOnsByokConfigMonitoringPrometheusMain": {
            "properties": {
                "storage": {
                    "type": "string",
                    "description": "Persistent volume size for Prometheus (for example, \"50Gi\").\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigRedis:Mk8sAddOnsByokConfigRedis": {
            "properties": {
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to the Redis pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to the Redis pods.\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to the Redis pods.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to the Redis pods.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Persistent storage size allocated to the Redis pods (for example, \"8Gi\").\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigRedisHa:Mk8sAddOnsByokConfigRedisHa": {
            "properties": {
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to the Redis pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to the Redis pods.\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to the Redis pods.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to the Redis pods.\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "Persistent storage size allocated to the Redis pods, in GiB.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigRedisSentinel:Mk8sAddOnsByokConfigRedisSentinel": {
            "properties": {
                "maxCpu": {
                    "type": "string",
                    "description": "CPU limit applied to the Redis pods.\n"
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Memory limit applied to the Redis pods.\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to the Redis pods.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to the Redis pods.\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "Persistent storage size allocated to the Redis pods, in GiB.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsByokConfigTempoAgent:Mk8sAddOnsByokConfigTempoAgent": {
            "properties": {
                "minCpu": {
                    "type": "string",
                    "description": "CPU request applied to tempo agent pods.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Memory request applied to tempo agent pods.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsLogs:Mk8sAddOnsLogs": {
            "properties": {
                "auditEnabled": {
                    "type": "boolean",
                    "description": "Collect k8s audit log as log events.\n"
                },
                "docker": {
                    "type": "boolean",
                    "description": "Collect docker logs if docker is also running.\n"
                },
                "events": {
                    "type": "boolean",
                    "description": "Collect K8S events from all namespaces.\n"
                },
                "excludeNamespaces": {
                    "type": "string"
                },
                "includeNamespaces": {
                    "type": "string"
                },
                "kernel": {
                    "type": "boolean",
                    "description": "Collect kernel logs.\n"
                },
                "kubelet": {
                    "type": "boolean",
                    "description": "Collect kubelet logs from journald.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsMetrics:Mk8sAddOnsMetrics": {
            "properties": {
                "apiServer": {
                    "type": "boolean",
                    "description": "Enable scraping apiserver stats.\n"
                },
                "cadvisor": {
                    "type": "boolean",
                    "description": "Enable CNI-level container stats.\n"
                },
                "coreDns": {
                    "type": "boolean",
                    "description": "Enable scraping of core-dns service.\n"
                },
                "kubeState": {
                    "type": "boolean",
                    "description": "Enable kube-state metrics.\n"
                },
                "kubelet": {
                    "type": "boolean",
                    "description": "Enable scraping kubelet stats.\n"
                },
                "nodeExporter": {
                    "type": "boolean",
                    "description": "Enable collecting node-level stats (disk, network, filesystem, etc).\n"
                },
                "scrapeAnnotated": {
                    "$ref": "#/types/cpln:index/Mk8sAddOnsMetricsScrapeAnnotated:Mk8sAddOnsMetricsScrapeAnnotated"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsMetricsScrapeAnnotated:Mk8sAddOnsMetricsScrapeAnnotated": {
            "properties": {
                "excludeNamespaces": {
                    "type": "string"
                },
                "includeNamespaces": {
                    "type": "string"
                },
                "intervalSeconds": {
                    "type": "integer"
                },
                "retainLabels": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "intervalSeconds"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAddOnsNvidia:Mk8sAddOnsNvidia": {
            "properties": {
                "taintGpuNodes": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsRegistryMirror:Mk8sAddOnsRegistryMirror": {
            "properties": {
                "mirrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sAddOnsRegistryMirrorMirror:Mk8sAddOnsRegistryMirrorMirror"
                    }
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAddOnsRegistryMirrorMirror:Mk8sAddOnsRegistryMirrorMirror": {
            "properties": {
                "mirrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "registry"
            ]
        },
        "cpln:index/Mk8sAwsProvider:Mk8sAwsProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sAwsProviderAutoscaler:Mk8sAwsProviderAutoscaler"
                },
                "awsTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra tags to attach to all created objects.\n"
                },
                "deployRoleArn": {
                    "type": "string",
                    "description": "Control Plane will set up the cluster by assuming this role.\n"
                },
                "deployRoleChains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sAwsProviderDeployRoleChain:Mk8sAwsProviderDeployRoleChain"
                    }
                },
                "diskEncryptionKeyArn": {
                    "type": "string",
                    "description": "KMS key used to encrypt volumes. Supports SSM.\n"
                },
                "extraNodePolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "$ref": "#/types/cpln:index/Mk8sAwsProviderImage:Mk8sAwsProviderImage",
                    "description": "Default image for all nodes.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "Name of keyPair. Supports SSM\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sAwsProviderNetworking:Mk8sAwsProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sAwsProviderNodePool:Mk8sAwsProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region where the cluster nodes will live.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security groups to deploy nodes to. Security groups control if the cluster is multi-zone or single-zon.\n"
                },
                "skipCreateRoles": {
                    "type": "boolean",
                    "description": "If true, Control Plane will not create any roles.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The vpc where nodes will be deployed. Supports SSM.\n"
                }
            },
            "type": "object",
            "required": [
                "deployRoleArn",
                "region",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deployRoleArn",
                        "region",
                        "skipCreateRoles",
                        "vpcId"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAwsProviderAutoscaler:Mk8sAwsProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAwsProviderDeployRoleChain:Mk8sAwsProviderDeployRoleChain": {
            "properties": {
                "externalId": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "sessionNamePrefix": {
                    "type": "string",
                    "description": "Control Plane will set up the cluster by assuming this role.\n"
                }
            },
            "type": "object",
            "required": [
                "roleArn"
            ]
        },
        "cpln:index/Mk8sAwsProviderImage:Mk8sAwsProviderImage": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Support SSM.\n"
                },
                "recommended": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAwsProviderNetworking:Mk8sAwsProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAwsProviderNodePool:Mk8sAwsProviderNodePool": {
            "properties": {
                "bootDiskSize": {
                    "type": "integer",
                    "description": "Size in GB.\n"
                },
                "extraSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security groups to deploy nodes to. Security groups control if the cluster is multi-zone or single-zon.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "onDemandBaseCapacity": {
                    "type": "integer"
                },
                "onDemandPercentageAboveBaseCapacity": {
                    "type": "integer"
                },
                "overrideImage": {
                    "$ref": "#/types/cpln:index/Mk8sAwsProviderNodePoolOverrideImage:Mk8sAwsProviderNodePoolOverrideImage",
                    "description": "Default image for all nodes.\n"
                },
                "spotAllocationStrategy": {
                    "type": "string"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sAwsProviderNodePoolTaint:Mk8sAwsProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "instanceTypes",
                "name",
                "subnetIds"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootDiskSize",
                        "instanceTypes",
                        "maxSize",
                        "minSize",
                        "name",
                        "onDemandBaseCapacity",
                        "onDemandPercentageAboveBaseCapacity",
                        "spotAllocationStrategy",
                        "subnetIds"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAwsProviderNodePoolOverrideImage:Mk8sAwsProviderNodePoolOverrideImage": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Support SSM.\n"
                },
                "recommended": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAwsProviderNodePoolTaint:Mk8sAwsProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAzureProvider:Mk8sAzureProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProviderAutoscaler:Mk8sAzureProviderAutoscaler"
                },
                "image": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProviderImage:Mk8sAzureProviderImage",
                    "description": "Default image for all nodes.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Region where the cluster nodes will live.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The vpc where nodes will be deployed.\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProviderNetworking:Mk8sAzureProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sAzureProviderNodePool:Mk8sAzureProviderNodePool"
                    }
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "resourceGroup": {
                    "type": "string"
                },
                "sdkSecretLink": {
                    "type": "string"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSH keys to install for \"azureuser\" linux user\n"
                },
                "subscriptionId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra tags to attach to all created objects.\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "networkId",
                "resourceGroup",
                "sdkSecretLink",
                "sshKeys",
                "subscriptionId"
            ]
        },
        "cpln:index/Mk8sAzureProviderAutoscaler:Mk8sAzureProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAzureProviderImage:Mk8sAzureProviderImage": {
            "properties": {
                "recommended": {
                    "type": "string"
                },
                "reference": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProviderImageReference:Mk8sAzureProviderImageReference"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAzureProviderImageReference:Mk8sAzureProviderImageReference": {
            "properties": {
                "offer": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "offer",
                "publisher",
                "sku",
                "version"
            ]
        },
        "cpln:index/Mk8sAzureProviderNetworking:Mk8sAzureProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAzureProviderNodePool:Mk8sAzureProviderNodePool": {
            "properties": {
                "bootDiskSize": {
                    "type": "integer"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overrideImage": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProviderNodePoolOverrideImage:Mk8sAzureProviderNodePoolOverrideImage"
                },
                "size": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sAzureProviderNodePoolTaint:Mk8sAzureProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object",
            "required": [
                "bootDiskSize",
                "name",
                "size",
                "subnetId",
                "zones"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootDiskSize",
                        "maxSize",
                        "minSize",
                        "name",
                        "size",
                        "subnetId",
                        "zones"
                    ]
                }
            }
        },
        "cpln:index/Mk8sAzureProviderNodePoolOverrideImage:Mk8sAzureProviderNodePoolOverrideImage": {
            "properties": {
                "recommended": {
                    "type": "string"
                },
                "reference": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProviderNodePoolOverrideImageReference:Mk8sAzureProviderNodePoolOverrideImageReference"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sAzureProviderNodePoolOverrideImageReference:Mk8sAzureProviderNodePoolOverrideImageReference": {
            "properties": {
                "offer": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "offer",
                "publisher",
                "sku",
                "version"
            ]
        },
        "cpln:index/Mk8sAzureProviderNodePoolTaint:Mk8sAzureProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sDigitalOceanProvider:Mk8sDigitalOceanProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sDigitalOceanProviderAutoscaler:Mk8sDigitalOceanProviderAutoscaler"
                },
                "digitalOceanTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Extra tags to attach to droplets.\n"
                },
                "extraSshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Extra SSH keys to provision for user root that are not registered in the DigitalOcean.\n"
                },
                "image": {
                    "type": "string",
                    "description": "Default image for all nodes.\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sDigitalOceanProviderNetworking:Mk8sDigitalOceanProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sDigitalOceanProviderNodePool:Mk8sDigitalOceanProviderNodePool"
                    }
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region to deploy nodes to.\n"
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional set of IPs to assign as extra IPs for nodes of the cluster.\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSH key name for accessing deployed nodes.\n"
                },
                "tokenSecretLink": {
                    "type": "string",
                    "description": "Link to a secret holding personal access token.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "ID of the Hetzner network to deploy nodes to.\n"
                }
            },
            "type": "object",
            "required": [
                "image",
                "region",
                "sshKeys",
                "tokenSecretLink",
                "vpcId"
            ]
        },
        "cpln:index/Mk8sDigitalOceanProviderAutoscaler:Mk8sDigitalOceanProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sDigitalOceanProviderNetworking:Mk8sDigitalOceanProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sDigitalOceanProviderNodePool:Mk8sDigitalOceanProviderNodePool": {
            "properties": {
                "dropletSize": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overrideImage": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sDigitalOceanProviderNodePoolTaint:Mk8sDigitalOceanProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "dropletSize",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dropletSize",
                        "maxSize",
                        "minSize",
                        "name"
                    ]
                }
            }
        },
        "cpln:index/Mk8sDigitalOceanProviderNodePoolTaint:Mk8sDigitalOceanProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sEphemeralProvider:Mk8sEphemeralProvider": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Control Plane location that will host the K8s components. Prefer one that is closest to where the nodes are running.\n"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sEphemeralProviderNodePool:Mk8sEphemeralProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                }
            },
            "type": "object",
            "required": [
                "location"
            ]
        },
        "cpln:index/Mk8sEphemeralProviderNodePool:Mk8sEphemeralProviderNodePool": {
            "properties": {
                "arch": {
                    "type": "string",
                    "description": "CPU architecture of the nodes.\n"
                },
                "count": {
                    "type": "integer",
                    "description": "Number of nodes to deploy.\n"
                },
                "cpu": {
                    "type": "string",
                    "description": "Allocated CPU.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Linux distro to use for ephemeral nodes.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "memory": {
                    "type": "string",
                    "description": "Allocated memory.\n"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sEphemeralProviderNodePoolTaint:Mk8sEphemeralProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "arch",
                "count",
                "cpu",
                "memory",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "arch",
                        "count",
                        "cpu",
                        "flavor",
                        "memory",
                        "name"
                    ]
                }
            }
        },
        "cpln:index/Mk8sEphemeralProviderNodePoolTaint:Mk8sEphemeralProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sFirewall:Mk8sFirewall": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "sourceCidr": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceCidr"
            ]
        },
        "cpln:index/Mk8sGcpProvider:Mk8sGcpProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sGcpProviderAutoscaler:Mk8sGcpProviderAutoscaler"
                },
                "gcpLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra tags to attach to all created objects.\n"
                },
                "image": {
                    "$ref": "#/types/cpln:index/Mk8sGcpProviderImage:Mk8sGcpProviderImage",
                    "description": "Default image for all nodes.\n"
                },
                "network": {
                    "type": "string",
                    "description": "VPC network used by the cluster.\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sGcpProviderNetworking:Mk8sGcpProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sGcpProviderNodePool:Mk8sGcpProviderNodePool"
                    }
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "GCP project ID that hosts the cluster infrastructure.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region where the cluster nodes will live.\n"
                },
                "saKeyLink": {
                    "type": "string",
                    "description": "Link to a secret containing the service account JSON key.\n"
                }
            },
            "type": "object",
            "required": [
                "network",
                "projectId",
                "region",
                "saKeyLink"
            ]
        },
        "cpln:index/Mk8sGcpProviderAutoscaler:Mk8sGcpProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sGcpProviderImage:Mk8sGcpProviderImage": {
            "properties": {
                "recommended": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sGcpProviderNetworking:Mk8sGcpProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sGcpProviderNodePool:Mk8sGcpProviderNodePool": {
            "properties": {
                "bootDiskSize": {
                    "type": "integer",
                    "description": "Size in GB.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "machineType": {
                    "type": "string",
                    "description": "GCE machine type for nodes in this pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overrideImage": {
                    "$ref": "#/types/cpln:index/Mk8sGcpProviderNodePoolOverrideImage:Mk8sGcpProviderNodePoolOverrideImage"
                },
                "subnet": {
                    "type": "string",
                    "description": "Subnet within the selected network.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sGcpProviderNodePoolTaint:Mk8sGcpProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the pool nodes run.\n"
                }
            },
            "type": "object",
            "required": [
                "bootDiskSize",
                "machineType",
                "name",
                "subnet",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootDiskSize",
                        "machineType",
                        "maxSize",
                        "minSize",
                        "name",
                        "subnet",
                        "zone"
                    ]
                }
            }
        },
        "cpln:index/Mk8sGcpProviderNodePoolOverrideImage:Mk8sGcpProviderNodePoolOverrideImage": {
            "properties": {
                "recommended": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sGcpProviderNodePoolTaint:Mk8sGcpProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sGenericProvider:Mk8sGenericProvider": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Control Plane location that will host the K8s components. Prefer one that is closest to where the nodes are running.\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sGenericProviderNetworking:Mk8sGenericProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sGenericProviderNodePool:Mk8sGenericProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                }
            },
            "type": "object",
            "required": [
                "location"
            ]
        },
        "cpln:index/Mk8sGenericProviderNetworking:Mk8sGenericProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sGenericProviderNodePool:Mk8sGenericProviderNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sGenericProviderNodePoolTaint:Mk8sGenericProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cpln:index/Mk8sGenericProviderNodePoolTaint:Mk8sGenericProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sHetznerProvider:Mk8sHetznerProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sHetznerProviderAutoscaler:Mk8sHetznerProviderAutoscaler"
                },
                "dedicatedServerNodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sHetznerProviderDedicatedServerNodePool:Mk8sHetznerProviderDedicatedServerNodePool"
                    },
                    "description": "Node pools that can configure dedicated Hetzner servers.\n"
                },
                "firewallId": {
                    "type": "string",
                    "description": "Optional firewall rule to attach to all nodes.\n"
                },
                "floatingIpSelector": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "If supplied, nodes will get assigned a random floating ip matching the selector.\n"
                },
                "hetznerLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra labels to attach to servers.\n"
                },
                "image": {
                    "type": "string",
                    "description": "Default image for all nodes.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the Hetzner network to deploy nodes to.\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sHetznerProviderNetworking:Mk8sHetznerProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sHetznerProviderNodePool:Mk8sHetznerProviderNodePool"
                    }
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Hetzner region to deploy nodes to.\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH key name for accessing deployed nodes.\n"
                },
                "tokenSecretLink": {
                    "type": "string",
                    "description": "Link to a secret holding Hetzner access key.\n"
                }
            },
            "type": "object",
            "required": [
                "networkId",
                "region",
                "tokenSecretLink"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "image",
                        "networkId",
                        "region",
                        "tokenSecretLink"
                    ]
                }
            }
        },
        "cpln:index/Mk8sHetznerProviderAutoscaler:Mk8sHetznerProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sHetznerProviderDedicatedServerNodePool:Mk8sHetznerProviderDedicatedServerNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sHetznerProviderDedicatedServerNodePoolTaint:Mk8sHetznerProviderDedicatedServerNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cpln:index/Mk8sHetznerProviderDedicatedServerNodePoolTaint:Mk8sHetznerProviderDedicatedServerNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sHetznerProviderNetworking:Mk8sHetznerProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sHetznerProviderNodePool:Mk8sHetznerProviderNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overrideImage": {
                    "type": "string"
                },
                "serverType": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sHetznerProviderNodePoolTaint:Mk8sHetznerProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "serverType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxSize",
                        "minSize",
                        "name",
                        "serverType"
                    ]
                }
            }
        },
        "cpln:index/Mk8sHetznerProviderNodePoolTaint:Mk8sHetznerProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sLambdalabsProvider:Mk8sLambdalabsProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sLambdalabsProviderAutoscaler:Mk8sLambdalabsProviderAutoscaler"
                },
                "fileSystems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sLambdalabsProviderNodePool:Mk8sLambdalabsProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region where the cluster nodes will live.\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH key name for accessing deployed nodes.\n"
                },
                "tokenSecretLink": {
                    "type": "string",
                    "description": "Link to a secret holding Lambdalabs access key.\n"
                },
                "unmanagedNodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sLambdalabsProviderUnmanagedNodePool:Mk8sLambdalabsProviderUnmanagedNodePool"
                    }
                }
            },
            "type": "object",
            "required": [
                "region",
                "sshKey",
                "tokenSecretLink"
            ]
        },
        "cpln:index/Mk8sLambdalabsProviderAutoscaler:Mk8sLambdalabsProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sLambdalabsProviderNodePool:Mk8sLambdalabsProviderNodePool": {
            "properties": {
                "instanceType": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sLambdalabsProviderNodePoolTaint:Mk8sLambdalabsProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "instanceType",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "instanceType",
                        "maxSize",
                        "minSize",
                        "name"
                    ]
                }
            }
        },
        "cpln:index/Mk8sLambdalabsProviderNodePoolTaint:Mk8sLambdalabsProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sLambdalabsProviderUnmanagedNodePool:Mk8sLambdalabsProviderUnmanagedNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sLambdalabsProviderUnmanagedNodePoolTaint:Mk8sLambdalabsProviderUnmanagedNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cpln:index/Mk8sLambdalabsProviderUnmanagedNodePoolTaint:Mk8sLambdalabsProviderUnmanagedNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sLinodeProvider:Mk8sLinodeProvider": {
            "properties": {
                "authorizedKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authorizedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sLinodeProviderAutoscaler:Mk8sLinodeProviderAutoscaler"
                },
                "firewallId": {
                    "type": "string",
                    "description": "Optional firewall rule to attach to all nodes.\n"
                },
                "image": {
                    "type": "string",
                    "description": "Default image for all nodes.\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sLinodeProviderNetworking:Mk8sLinodeProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sLinodeProviderNodePool:Mk8sLinodeProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region where the cluster nodes will live.\n"
                },
                "tokenSecretLink": {
                    "type": "string",
                    "description": "Link to a secret holding Linode access key.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The vpc where nodes will be deployed. Supports SSM.\n"
                }
            },
            "type": "object",
            "required": [
                "image",
                "region",
                "tokenSecretLink",
                "vpcId"
            ]
        },
        "cpln:index/Mk8sLinodeProviderAutoscaler:Mk8sLinodeProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sLinodeProviderNetworking:Mk8sLinodeProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sLinodeProviderNodePool:Mk8sLinodeProviderNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overrideImage": {
                    "type": "string"
                },
                "serverType": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sLinodeProviderNodePoolTaint:Mk8sLinodeProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "serverType",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxSize",
                        "minSize",
                        "name",
                        "serverType",
                        "subnetId"
                    ]
                }
            }
        },
        "cpln:index/Mk8sLinodeProviderNodePoolTaint:Mk8sLinodeProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sOblivusProvider:Mk8sOblivusProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sOblivusProviderAutoscaler:Mk8sOblivusProviderAutoscaler"
                },
                "datacenter": {
                    "type": "string"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sOblivusProviderNodePool:Mk8sOblivusProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenSecretLink": {
                    "type": "string",
                    "description": "Link to a secret holding Oblivus access key.\n"
                },
                "unmanagedNodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sOblivusProviderUnmanagedNodePool:Mk8sOblivusProviderUnmanagedNodePool"
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenter",
                "tokenSecretLink"
            ]
        },
        "cpln:index/Mk8sOblivusProviderAutoscaler:Mk8sOblivusProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sOblivusProviderNodePool:Mk8sOblivusProviderNodePool": {
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sOblivusProviderNodePoolTaint:Mk8sOblivusProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "flavor",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flavor",
                        "maxSize",
                        "minSize",
                        "name"
                    ]
                }
            }
        },
        "cpln:index/Mk8sOblivusProviderNodePoolTaint:Mk8sOblivusProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sOblivusProviderUnmanagedNodePool:Mk8sOblivusProviderUnmanagedNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sOblivusProviderUnmanagedNodePoolTaint:Mk8sOblivusProviderUnmanagedNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cpln:index/Mk8sOblivusProviderUnmanagedNodePoolTaint:Mk8sOblivusProviderUnmanagedNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sPaperspaceProvider:Mk8sPaperspaceProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sPaperspaceProviderAutoscaler:Mk8sPaperspaceProviderAutoscaler"
                },
                "networkId": {
                    "type": "string"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sPaperspaceProviderNodePool:Mk8sPaperspaceProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region where the cluster nodes will live.\n"
                },
                "sharedDrives": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenSecretLink": {
                    "type": "string",
                    "description": "Link to a secret holding Paperspace access key.\n"
                },
                "unmanagedNodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sPaperspaceProviderUnmanagedNodePool:Mk8sPaperspaceProviderUnmanagedNodePool"
                    }
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "networkId",
                "region",
                "tokenSecretLink"
            ]
        },
        "cpln:index/Mk8sPaperspaceProviderAutoscaler:Mk8sPaperspaceProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sPaperspaceProviderNodePool:Mk8sPaperspaceProviderNodePool": {
            "properties": {
                "bootDiskSize": {
                    "type": "integer"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "machineType": {
                    "type": "string"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "publicIpType": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sPaperspaceProviderNodePoolTaint:Mk8sPaperspaceProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "machineType",
                "name",
                "publicIpType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "machineType",
                        "maxSize",
                        "minSize",
                        "name",
                        "publicIpType"
                    ]
                }
            }
        },
        "cpln:index/Mk8sPaperspaceProviderNodePoolTaint:Mk8sPaperspaceProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sPaperspaceProviderUnmanagedNodePool:Mk8sPaperspaceProviderUnmanagedNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "name": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sPaperspaceProviderUnmanagedNodePoolTaint:Mk8sPaperspaceProviderUnmanagedNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cpln:index/Mk8sPaperspaceProviderUnmanagedNodePoolTaint:Mk8sPaperspaceProviderUnmanagedNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sStatus:Mk8sStatus": {
            "properties": {
                "addOns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOn:Mk8sStatusAddOn"
                    }
                },
                "homeLocation": {
                    "type": "string"
                },
                "oidcProviderUrl": {
                    "type": "string"
                },
                "serverUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addOns",
                        "homeLocation",
                        "oidcProviderUrl",
                        "serverUrl"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOn:Mk8sStatusAddOn": {
            "properties": {
                "awsEcrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnAwsEcr:Mk8sStatusAddOnAwsEcr"
                    }
                },
                "awsEfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnAwsEf:Mk8sStatusAddOnAwsEf"
                    }
                },
                "awsElbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnAwsElb:Mk8sStatusAddOnAwsElb"
                    }
                },
                "awsWorkloadIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnAwsWorkloadIdentity:Mk8sStatusAddOnAwsWorkloadIdentity"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnDashboard:Mk8sStatusAddOnDashboard"
                    }
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnLog:Mk8sStatusAddOnLog"
                    }
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnMetric:Mk8sStatusAddOnMetric"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsEcrs",
                        "awsEfs",
                        "awsElbs",
                        "awsWorkloadIdentities",
                        "dashboards",
                        "logs",
                        "metrics"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnAwsEcr:Mk8sStatusAddOnAwsEcr": {
            "properties": {
                "trustPolicy": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "trustPolicy"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnAwsEf:Mk8sStatusAddOnAwsEf": {
            "properties": {
                "trustPolicy": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "trustPolicy"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnAwsElb:Mk8sStatusAddOnAwsElb": {
            "properties": {
                "trustPolicy": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "trustPolicy"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnAwsWorkloadIdentity:Mk8sStatusAddOnAwsWorkloadIdentity": {
            "properties": {
                "oidcProviderConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig:Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig"
                    }
                },
                "trustPolicy": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "oidcProviderConfigs",
                        "trustPolicy"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig:Mk8sStatusAddOnAwsWorkloadIdentityOidcProviderConfig": {
            "properties": {
                "audience": {
                    "type": "string"
                },
                "providerUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "audience",
                        "providerUrl"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnDashboard:Mk8sStatusAddOnDashboard": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Access to dashboard.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "url"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnLog:Mk8sStatusAddOnLog": {
            "properties": {
                "lokiAddress": {
                    "type": "string",
                    "description": "Loki endpoint to query logs from.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "lokiAddress"
                    ]
                }
            }
        },
        "cpln:index/Mk8sStatusAddOnMetric:Mk8sStatusAddOnMetric": {
            "properties": {
                "prometheusEndpoint": {
                    "type": "string"
                },
                "remoteWriteConfig": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "prometheusEndpoint",
                        "remoteWriteConfig"
                    ]
                }
            }
        },
        "cpln:index/Mk8sTritonProvider:Mk8sTritonProvider": {
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderAutoscaler:Mk8sTritonProviderAutoscaler"
                },
                "connection": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderConnection:Mk8sTritonProviderConnection"
                },
                "firewallEnabled": {
                    "type": "boolean",
                    "description": "Enable firewall for the instances deployed.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Default image for all nodes.\n"
                },
                "loadBalancer": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderLoadBalancer:Mk8sTritonProviderLoadBalancer"
                },
                "location": {
                    "type": "string",
                    "description": "Control Plane location that will host the K8s components. Prefer one that is closest to the Triton datacenter.\n"
                },
                "networking": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderNetworking:Mk8sTritonProviderNetworking"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sTritonProviderNodePool:Mk8sTritonProviderNodePool"
                    },
                    "description": "List of node pools.\n"
                },
                "preInstallScript": {
                    "type": "string",
                    "description": "Optional shell script that will be run before K8s is installed. Supports SSM.\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "ID of the private Fabric/Network.\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Extra SSH keys to provision for user root.\n"
                }
            },
            "type": "object",
            "required": [
                "imageId",
                "location",
                "privateNetworkId"
            ]
        },
        "cpln:index/Mk8sTritonProviderAutoscaler:Mk8sTritonProviderAutoscaler": {
            "properties": {
                "expanders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unneededTime": {
                    "type": "string"
                },
                "unreadyTime": {
                    "type": "string"
                },
                "utilizationThreshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expanders",
                        "unneededTime",
                        "unreadyTime",
                        "utilizationThreshold"
                    ]
                }
            }
        },
        "cpln:index/Mk8sTritonProviderConnection:Mk8sTritonProviderConnection": {
            "properties": {
                "account": {
                    "type": "string"
                },
                "privateKeySecretLink": {
                    "type": "string",
                    "description": "Link to a SSH or opaque secret.\n"
                },
                "url": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "account",
                "privateKeySecretLink",
                "url"
            ]
        },
        "cpln:index/Mk8sTritonProviderLoadBalancer:Mk8sTritonProviderLoadBalancer": {
            "properties": {
                "gateway": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderLoadBalancerGateway:Mk8sTritonProviderLoadBalancerGateway"
                },
                "manual": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderLoadBalancerManual:Mk8sTritonProviderLoadBalancerManual"
                },
                "none": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderLoadBalancerNone:Mk8sTritonProviderLoadBalancerNone"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sTritonProviderLoadBalancerGateway:Mk8sTritonProviderLoadBalancerGateway": {
            "type": "object"
        },
        "cpln:index/Mk8sTritonProviderLoadBalancerManual:Mk8sTritonProviderLoadBalancerManual": {
            "properties": {
                "cnsInternalDomain": {
                    "type": "string"
                },
                "cnsPublicDomain": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "imageId": {
                    "type": "string"
                },
                "logging": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProviderLoadBalancerManualLogging:Mk8sTritonProviderLoadBalancerManualLogging"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra tags to attach to instances from a node pool.\n"
                },
                "packageId": {
                    "type": "string"
                },
                "privateNetworkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If set, machine will also get a public IP.\n"
                },
                "publicNetworkId": {
                    "type": "string",
                    "description": "If set, machine will also get a public IP.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra tags to attach to instances from a node pool.\n"
                }
            },
            "type": "object",
            "required": [
                "cnsInternalDomain",
                "cnsPublicDomain",
                "imageId",
                "packageId",
                "privateNetworkIds",
                "publicNetworkId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cnsInternalDomain",
                        "cnsPublicDomain",
                        "count",
                        "imageId",
                        "packageId",
                        "privateNetworkIds",
                        "publicNetworkId"
                    ]
                }
            }
        },
        "cpln:index/Mk8sTritonProviderLoadBalancerManualLogging:Mk8sTritonProviderLoadBalancerManualLogging": {
            "properties": {
                "externalSyslog": {
                    "type": "string"
                },
                "nodePort": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cpln:index/Mk8sTritonProviderLoadBalancerNone:Mk8sTritonProviderLoadBalancerNone": {
            "type": "object"
        },
        "cpln:index/Mk8sTritonProviderNetworking:Mk8sTritonProviderNetworking": {
            "properties": {
                "dnsForwarder": {
                    "type": "string",
                    "description": "DNS forwarder used by the cluster. Can be a space-delimited list of dns servers. Default is /etc/resolv.conf when not specified.\n"
                },
                "podNetwork": {
                    "type": "string",
                    "description": "The CIDR of the pod network.\n"
                },
                "serviceNetwork": {
                    "type": "string",
                    "description": "The CIDR of the service network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podNetwork",
                        "serviceNetwork"
                    ]
                }
            }
        },
        "cpln:index/Mk8sTritonProviderNodePool:Mk8sTritonProviderNodePool": {
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to attach to nodes of a node pool.\n"
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overrideImageId": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "privateNetworkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "More private networks to join.\n"
                },
                "publicNetworkId": {
                    "type": "string",
                    "description": "If set, machine will also get a public IP.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sTritonProviderNodePoolTaint:Mk8sTritonProviderNodePoolTaint"
                    },
                    "description": "Taint for the nodes of a pool.\n"
                },
                "tritonTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra tags to attach to instances from a node pool.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxSize",
                        "minSize",
                        "name",
                        "packageId"
                    ]
                }
            }
        },
        "cpln:index/Mk8sTritonProviderNodePoolTaint:Mk8sTritonProviderNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cpln:index/OrgAuthConfig:OrgAuthConfig": {
            "properties": {
                "domainAutoMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains which will auto-provision users when authenticating using SAML.\n"
                },
                "samlOnly": {
                    "type": "boolean",
                    "description": "Enforce SAML only authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "domainAutoMembers"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domainAutoMembers",
                        "samlOnly"
                    ]
                }
            }
        },
        "cpln:index/OrgLoggingCloudWatchLogging:OrgLoggingCloudWatchLogging": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full Link to a secret of type \u003cspan pulumi-lang-nodejs=\"`opaque`\" pulumi-lang-dotnet=\"`Opaque`\" pulumi-lang-go=\"`opaque`\" pulumi-lang-python=\"`opaque`\" pulumi-lang-yaml=\"`opaque`\" pulumi-lang-java=\"`opaque`\"\u003e`opaque`\u003c/span\u003e.\n"
                },
                "extractFields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Enable custom data extraction from log entries for enhanced querying and analysis.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "A container for log streams with common settings like retention. Used to categorize logs by application or service type.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Valid AWS region.\n"
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "Length, in days, for how log data is kept before it is automatically deleted.\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "A sequence of log events from the same source within a log group. Typically represents individual instances of services or applications.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "groupName",
                "region",
                "streamName"
            ]
        },
        "cpln:index/OrgLoggingCoralogixLogging:OrgLoggingCoralogixLogging": {
            "properties": {
                "app": {
                    "type": "string",
                    "description": "App name to be displayed in Coralogix dashboard.\n"
                },
                "cluster": {
                    "type": "string",
                    "description": "Coralogix cluster URI.\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "Full link to referenced Opaque Secret.\n"
                },
                "subsystem": {
                    "type": "string",
                    "description": "Subsystem name to be displayed in Coralogix dashboard.\n"
                }
            },
            "type": "object",
            "required": [
                "cluster",
                "credentials"
            ]
        },
        "cpln:index/OrgLoggingDatadogLogging:OrgLoggingDatadogLogging": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full link to referenced Opaque Secret.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Datadog host URI.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "host"
            ]
        },
        "cpln:index/OrgLoggingElasticLogging:OrgLoggingElasticLogging": {
            "properties": {
                "aws": {
                    "$ref": "#/types/cpln:index/OrgLoggingElasticLoggingAws:OrgLoggingElasticLoggingAws",
                    "description": "For targeting Amazon Web Services (AWS) ElasticSearch.\n"
                },
                "elasticCloud": {
                    "$ref": "#/types/cpln:index/OrgLoggingElasticLoggingElasticCloud:OrgLoggingElasticLoggingElasticCloud",
                    "description": "For targeting Elastic Cloud.\n"
                },
                "generic": {
                    "$ref": "#/types/cpln:index/OrgLoggingElasticLoggingGeneric:OrgLoggingElasticLoggingGeneric",
                    "description": "For targeting generic Elastic Search providers.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/OrgLoggingElasticLoggingAws:OrgLoggingElasticLoggingAws": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full Link to a secret of type \u003cspan pulumi-lang-nodejs=\"`aws`\" pulumi-lang-dotnet=\"`Aws`\" pulumi-lang-go=\"`aws`\" pulumi-lang-python=\"`aws`\" pulumi-lang-yaml=\"`aws`\" pulumi-lang-java=\"`aws`\"\u003e`aws`\u003c/span\u003e.\n"
                },
                "host": {
                    "type": "string",
                    "description": "A valid AWS ElasticSearch hostname (must end with es.amazonaws.com).\n"
                },
                "index": {
                    "type": "string",
                    "description": "Logging Index.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port. Default: 443\n"
                },
                "region": {
                    "type": "string",
                    "description": "Valid AWS region.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Logging Type.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "host",
                "index",
                "port",
                "region",
                "type"
            ]
        },
        "cpln:index/OrgLoggingElasticLoggingElasticCloud:OrgLoggingElasticLoggingElasticCloud": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "description": "[Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html)\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "Full Link to a secret of type \u003cspan pulumi-lang-nodejs=\"`userpass`\" pulumi-lang-dotnet=\"`Userpass`\" pulumi-lang-go=\"`userpass`\" pulumi-lang-python=\"`userpass`\" pulumi-lang-yaml=\"`userpass`\" pulumi-lang-java=\"`userpass`\"\u003e`userpass`\u003c/span\u003e.\n"
                },
                "index": {
                    "type": "string",
                    "description": "Logging Index.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Logging Type.\n"
                }
            },
            "type": "object",
            "required": [
                "cloudId",
                "credentials",
                "index",
                "type"
            ]
        },
        "cpln:index/OrgLoggingElasticLoggingGeneric:OrgLoggingElasticLoggingGeneric": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full Link to a secret of type \u003cspan pulumi-lang-nodejs=\"`userpass`\" pulumi-lang-dotnet=\"`Userpass`\" pulumi-lang-go=\"`userpass`\" pulumi-lang-python=\"`userpass`\" pulumi-lang-yaml=\"`userpass`\" pulumi-lang-java=\"`userpass`\"\u003e`userpass`\u003c/span\u003e.\n"
                },
                "host": {
                    "type": "string",
                    "description": "A valid Elastic Search provider hostname.\n"
                },
                "index": {
                    "type": "string",
                    "description": "Logging Index.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Logging path.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port. Default: 443\n"
                },
                "type": {
                    "type": "string",
                    "description": "Logging Type.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "host",
                "index",
                "path",
                "port",
                "type"
            ]
        },
        "cpln:index/OrgLoggingFluentdLogging:OrgLoggingFluentdLogging": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The hostname or IP address of a remote log storage system.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port. Default: 24224\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port"
                    ]
                }
            }
        },
        "cpln:index/OrgLoggingLogzioLogging:OrgLoggingLogzioLogging": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full link to referenced Opaque Secret.\n"
                },
                "listenerHost": {
                    "type": "string",
                    "description": "Logzio listener host URI.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "listenerHost"
            ]
        },
        "cpln:index/OrgLoggingS3Logging:OrgLoggingS3Logging": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of S3 bucket.\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "Full link to referenced AWS Secret.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Bucket path prefix. Default: \"/\".\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region where bucket is located.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "credentials",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bucket",
                        "credentials",
                        "prefix",
                        "region"
                    ]
                }
            }
        },
        "cpln:index/OrgLoggingStackdriverLogging:OrgLoggingStackdriverLogging": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full Link to a secret of type \u003cspan pulumi-lang-nodejs=\"`opaque`\" pulumi-lang-dotnet=\"`Opaque`\" pulumi-lang-go=\"`opaque`\" pulumi-lang-python=\"`opaque`\" pulumi-lang-yaml=\"`opaque`\" pulumi-lang-java=\"`opaque`\"\u003e`opaque`\u003c/span\u003e.\n"
                },
                "location": {
                    "type": "string",
                    "description": "A Google Cloud Provider region.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "location"
            ]
        },
        "cpln:index/OrgLoggingSyslogLogging:OrgLoggingSyslogLogging": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Log Format. Valid values: RFC3164 or RFC5424.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of Syslog Endpoint.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Log Mode. Valid values: TCP, TLS, or UDP.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port of Syslog Endpoint.\n"
                },
                "severity": {
                    "type": "integer",
                    "description": "Severity Level. See documentation for details. Valid values: 0 to 7.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "format",
                        "host",
                        "mode",
                        "port",
                        "severity"
                    ]
                }
            }
        },
        "cpln:index/OrgObservability:OrgObservability": {
            "properties": {
                "defaultAlertEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "These emails are configured as alert recipients in Grafana when the 'grafana-default-email' contact delivery type is 'Email'.\n"
                },
                "logsRetentionDays": {
                    "type": "integer",
                    "description": "Log retention days. Default: 30\n"
                },
                "metricsRetentionDays": {
                    "type": "integer",
                    "description": "Metrics retention days. Default: 30\n"
                },
                "tracesRetentionDays": {
                    "type": "integer",
                    "description": "Traces retention days. Default: 30\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "defaultAlertEmails",
                        "logsRetentionDays",
                        "metricsRetentionDays",
                        "tracesRetentionDays"
                    ]
                }
            }
        },
        "cpln:index/OrgSecurity:OrgSecurity": {
            "properties": {
                "threatDetection": {
                    "$ref": "#/types/cpln:index/OrgSecurityThreatDetection:OrgSecurityThreatDetection"
                }
            },
            "type": "object"
        },
        "cpln:index/OrgSecurityThreatDetection:OrgSecurityThreatDetection": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether threat detection should be forwarded or not.\n"
                },
                "minimumSeverity": {
                    "type": "string",
                    "description": "Any threats with this severity and more severe will be sent. Others will be ignored. Valid values: \u003cspan pulumi-lang-nodejs=\"`warning`\" pulumi-lang-dotnet=\"`Warning`\" pulumi-lang-go=\"`warning`\" pulumi-lang-python=\"`warning`\" pulumi-lang-yaml=\"`warning`\" pulumi-lang-java=\"`warning`\"\u003e`warning`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`error`\" pulumi-lang-dotnet=\"`Error`\" pulumi-lang-go=\"`error`\" pulumi-lang-python=\"`error`\" pulumi-lang-yaml=\"`error`\" pulumi-lang-java=\"`error`\"\u003e`error`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`critical`\" pulumi-lang-dotnet=\"`Critical`\" pulumi-lang-go=\"`critical`\" pulumi-lang-python=\"`critical`\" pulumi-lang-yaml=\"`critical`\" pulumi-lang-java=\"`critical`\"\u003e`critical`\u003c/span\u003e.\n"
                },
                "syslog": {
                    "$ref": "#/types/cpln:index/OrgSecurityThreatDetectionSyslog:OrgSecurityThreatDetectionSyslog",
                    "description": "Configuration for syslog forwarding.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "cpln:index/OrgSecurityThreatDetectionSyslog:OrgSecurityThreatDetectionSyslog": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The hostname to send syslog messages to.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port to send syslog messages to.\n"
                },
                "transport": {
                    "type": "string",
                    "description": "The transport-layer protocol to send the syslog messages over. If TCP is chosen, messages will be sent with TLS. Default: \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port",
                        "transport"
                    ]
                }
            }
        },
        "cpln:index/OrgStatus:OrgStatus": {
            "properties": {
                "accountLink": {
                    "type": "string",
                    "description": "The link of the account the org belongs to.\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "Indicates whether the org is active or not.\n"
                },
                "endpointPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountLink",
                        "active",
                        "endpointPrefix"
                    ]
                }
            }
        },
        "cpln:index/OrgTracingControlplaneTracing:OrgTracingControlplaneTracing": {
            "properties": {
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "sampling"
            ]
        },
        "cpln:index/OrgTracingLightstepTracing:OrgTracingLightstepTracing": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full link to referenced Opaque Secret.\n"
                },
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "sampling"
            ]
        },
        "cpln:index/OrgTracingOtelTracing:OrgTracingOtelTracing": {
            "properties": {
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "sampling"
            ]
        },
        "cpln:index/PolicyBinding:PolicyBinding": {
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of permissions to allow.\n"
                },
                "principalLinks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the principals this binding will be applied to. Principal links format: `group/GROUP_NAME`, `user/USER_EMAIL`, `gvc/GVC_NAME/identity/IDENTITY_NAME`, `serviceaccount/SERVICE_ACCOUNT_NAME`.\n"
                }
            },
            "type": "object",
            "required": [
                "permissions",
                "principalLinks"
            ]
        },
        "cpln:index/PolicyTargetQuery:PolicyTargetQuery": {
            "properties": {
                "fetch": {
                    "type": "string",
                    "description": "Type of fetch. Specify either: \u003cspan pulumi-lang-nodejs=\"`links`\" pulumi-lang-dotnet=\"`Links`\" pulumi-lang-go=\"`links`\" pulumi-lang-python=\"`links`\" pulumi-lang-yaml=\"`links`\" pulumi-lang-java=\"`links`\"\u003e`links`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e.\n"
                },
                "spec": {
                    "$ref": "#/types/cpln:index/PolicyTargetQuerySpec:PolicyTargetQuerySpec"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fetch"
                    ]
                }
            }
        },
        "cpln:index/PolicyTargetQuerySpec:PolicyTargetQuerySpec": {
            "properties": {
                "match": {
                    "type": "string",
                    "description": "Type of match. Available values: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`any`\" pulumi-lang-dotnet=\"`Any`\" pulumi-lang-go=\"`any`\" pulumi-lang-python=\"`any`\" pulumi-lang-yaml=\"`any`\" pulumi-lang-java=\"`any`\"\u003e`any`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e.\n"
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/PolicyTargetQuerySpecTerm:PolicyTargetQuerySpecTerm"
                    },
                    "description": "Terms can only contain one of the following attributes: \u003cspan pulumi-lang-nodejs=\"`property`\" pulumi-lang-dotnet=\"`Property`\" pulumi-lang-go=\"`property`\" pulumi-lang-python=\"`property`\" pulumi-lang-yaml=\"`property`\" pulumi-lang-java=\"`property`\"\u003e`property`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rel`\" pulumi-lang-dotnet=\"`Rel`\" pulumi-lang-go=\"`rel`\" pulumi-lang-python=\"`rel`\" pulumi-lang-yaml=\"`rel`\" pulumi-lang-java=\"`rel`\"\u003e`rel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tag`\" pulumi-lang-dotnet=\"`Tag`\" pulumi-lang-go=\"`tag`\" pulumi-lang-python=\"`tag`\" pulumi-lang-yaml=\"`tag`\" pulumi-lang-java=\"`tag`\"\u003e`tag`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match"
                    ]
                }
            }
        },
        "cpln:index/PolicyTargetQuerySpecTerm:PolicyTargetQuerySpecTerm": {
            "properties": {
                "op": {
                    "type": "string",
                    "description": "Type of query operation. Available values: `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`, `!=`, \u003cspan pulumi-lang-nodejs=\"`exists`\" pulumi-lang-dotnet=\"`Exists`\" pulumi-lang-go=\"`exists`\" pulumi-lang-python=\"`exists`\" pulumi-lang-yaml=\"`exists`\" pulumi-lang-java=\"`exists`\"\u003e`exists`\u003c/span\u003e, `!exists`. Default: `=`.\n"
                },
                "property": {
                    "type": "string",
                    "description": "Property to use for query evaluation.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Relation to use for query evaluation.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag key to use for query evaluation.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Testing value for query evaluation.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "op"
                    ]
                }
            }
        },
        "cpln:index/SecretAws:SecretAws": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access Key provided by AWS.\n",
                    "secret": true
                },
                "externalId": {
                    "type": "string",
                    "description": "AWS IAM Role External ID.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role ARN provided by AWS.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret Key provided by AWS.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKey",
                        "roleArn",
                        "secretKey"
                    ]
                }
            }
        },
        "cpln:index/SecretAzureConnector:SecretAzureConnector": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code/Key to authenticate to deployment URL.\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "Deployment URL.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "code",
                "url"
            ]
        },
        "cpln:index/SecretEcr:SecretEcr": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access Key provided by AWS.\n",
                    "secret": true
                },
                "externalId": {
                    "type": "string",
                    "description": "AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.\n"
                },
                "repos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ECR repositories.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role ARN provided by AWS.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret Key provided by AWS.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "repos",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKey",
                        "repos",
                        "roleArn",
                        "secretKey"
                    ]
                }
            }
        },
        "cpln:index/SecretKeypair:SecretKeypair": {
            "properties": {
                "passphrase": {
                    "type": "string",
                    "description": "Passphrase for private key.\n",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "Public Key.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret/Private Key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "secretKey"
            ]
        },
        "cpln:index/SecretNatsAccount:SecretNatsAccount": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account ID.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Private Key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "privateKey"
            ]
        },
        "cpln:index/SecretOpaque:SecretOpaque": {
            "properties": {
                "encoding": {
                    "type": "string",
                    "description": "Available encodings: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`base64`\" pulumi-lang-dotnet=\"`Base64`\" pulumi-lang-go=\"`base64`\" pulumi-lang-python=\"`base64`\" pulumi-lang-yaml=\"`base64`\" pulumi-lang-java=\"`base64`\"\u003e`base64`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e.\n"
                },
                "payload": {
                    "type": "string",
                    "description": "Plain text or base64 encoded string. Use \u003cspan pulumi-lang-nodejs=\"`encoding`\" pulumi-lang-dotnet=\"`Encoding`\" pulumi-lang-go=\"`encoding`\" pulumi-lang-python=\"`encoding`\" pulumi-lang-yaml=\"`encoding`\" pulumi-lang-java=\"`encoding`\"\u003e`encoding`\u003c/span\u003e attribute to specify encoding.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "payload"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "encoding",
                        "payload"
                    ]
                }
            }
        },
        "cpln:index/SecretTls:SecretTls": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "Public Certificate.\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Chain Certificate.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Private Certificate.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "cpln:index/SecretUserpass:SecretUserpass": {
            "properties": {
                "encoding": {
                    "type": "string",
                    "description": "Available encodings: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`base64`\" pulumi-lang-dotnet=\"`Base64`\" pulumi-lang-go=\"`base64`\" pulumi-lang-python=\"`base64`\" pulumi-lang-yaml=\"`base64`\" pulumi-lang-java=\"`base64`\"\u003e`base64`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "encoding",
                        "password",
                        "username"
                    ]
                }
            }
        },
        "cpln:index/VolumeSetAutoscaling:VolumeSetAutoscaling": {
            "properties": {
                "maxCapacity": {
                    "type": "integer",
                    "description": "The maximum size in GB for a volume in this set. A volume cannot grow to be bigger than this value. Minimum value: \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e.\n"
                },
                "minFreePercentage": {
                    "type": "integer",
                    "description": "The guaranteed free space on the volume as a percentage of the volume's total size. Control Plane will try to maintain at least that many percent free by scaling up the total size. Minimum percentage: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Maximum Percentage: \u003cspan pulumi-lang-nodejs=\"`100`\" pulumi-lang-dotnet=\"`100`\" pulumi-lang-go=\"`100`\" pulumi-lang-python=\"`100`\" pulumi-lang-yaml=\"`100`\" pulumi-lang-java=\"`100`\"\u003e`100`\u003c/span\u003e.\n"
                },
                "scalingFactor": {
                    "type": "number",
                    "description": "When scaling is necessary, then \u003cspan pulumi-lang-nodejs=\"`newCapacity \" pulumi-lang-dotnet=\"`NewCapacity \" pulumi-lang-go=\"`newCapacity \" pulumi-lang-python=\"`new_capacity \" pulumi-lang-yaml=\"`newCapacity \" pulumi-lang-java=\"`newCapacity \"\u003e`new_capacity \u003c/span\u003e=\u003cspan pulumi-lang-nodejs=\" currentCapacity \" pulumi-lang-dotnet=\" CurrentCapacity \" pulumi-lang-go=\" currentCapacity \" pulumi-lang-python=\" current_capacity \" pulumi-lang-yaml=\" currentCapacity \" pulumi-lang-java=\" currentCapacity \"\u003e current_capacity \u003c/span\u003e* storageScalingFactor`. Minimum value: `1.1`.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/VolumeSetCustomEncryption:VolumeSetCustomEncryption": {
            "properties": {
                "regions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/cpln:index/VolumeSetCustomEncryptionRegions:VolumeSetCustomEncryptionRegions"
                    },
                    "description": "Map of region identifiers to encryption key configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "regions"
            ]
        },
        "cpln:index/VolumeSetCustomEncryptionRegions:VolumeSetCustomEncryptionRegions": {
            "properties": {
                "keyId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "keyId"
            ]
        },
        "cpln:index/VolumeSetMountOptions:VolumeSetMountOptions": {
            "properties": {
                "resources": {
                    "$ref": "#/types/cpln:index/VolumeSetMountOptionsResources:VolumeSetMountOptionsResources",
                    "description": "For volume sets using the shared file system, this object specifies the CPU and memory resources allotted to each mount point.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/VolumeSetMountOptionsResources:VolumeSetMountOptionsResources": {
            "properties": {
                "maxCpu": {
                    "type": "string"
                },
                "maxMemory": {
                    "type": "string"
                },
                "minCpu": {
                    "type": "string"
                },
                "minMemory": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxCpu",
                        "maxMemory",
                        "minCpu",
                        "minMemory"
                    ]
                }
            }
        },
        "cpln:index/VolumeSetSnapshots:VolumeSetSnapshots": {
            "properties": {
                "createFinalSnapshot": {
                    "type": "boolean",
                    "description": "If true, a volume snapshot will be created immediately before deletion of any volume in this set. Default: \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e\n"
                },
                "retentionDuration": {
                    "type": "string",
                    "description": "The default retention period for volume snapshots. This string should contain a floating point number followed by either d, h, or m. For example, \"10d\" would retain snapshots for 10 days.\n"
                },
                "schedule": {
                    "type": "string",
                    "description": "A standard cron schedule expression used to determine when a snapshot will be taken. (i.e., `0 * * * *` Every hour). Note: snapshots cannot be scheduled more often than once per hour.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createFinalSnapshot"
                    ]
                }
            }
        },
        "cpln:index/VolumeSetStatus:VolumeSetStatus": {
            "properties": {
                "bindingId": {
                    "type": "string",
                    "description": "Uniquely identifies the connection between the volume set and its workload. Every time a new connection is made, a new id is generated (e.g., If a workload is updated to remove the volume set, then updated again to reattach it, the volume set will have a new binding id).\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains a list of actual volumes grouped by location.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The GVC ID.\n"
                },
                "usedByWorkload": {
                    "type": "string",
                    "description": "The url of the workload currently using this volume set (if any).\n"
                },
                "workloadLinks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains a list of workload links that are using this volume set.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindingId",
                        "locations",
                        "parentId",
                        "usedByWorkload",
                        "workloadLinks"
                    ]
                }
            }
        },
        "cpln:index/WorkloadContainer:WorkloadContainer": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Command line arguments passed to the container at runtime. Replaces the CMD arguments of the running container. It is an ordered list.\n"
                },
                "command": {
                    "type": "string",
                    "description": "Override the entry point.\n"
                },
                "cpu": {
                    "type": "string",
                    "description": "Reserved CPU of the workload when capacityAI is disabled. Maximum CPU when CapacityAI is enabled. Default: \"50m\".\n"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Name-Value list of environment variables.\n"
                },
                "gpuCustom": {
                    "$ref": "#/types/cpln:index/WorkloadContainerGpuCustom:WorkloadContainerGpuCustom"
                },
                "gpuNvidia": {
                    "$ref": "#/types/cpln:index/WorkloadContainerGpuNvidia:WorkloadContainerGpuNvidia",
                    "description": "GPUs manufactured by NVIDIA, which are specialized hardware accelerators used to offload and accelerate computationally intensive tasks within the workload.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The full image and tag path.\n"
                },
                "inheritEnv": {
                    "type": "boolean",
                    "description": "Enables inheritance of GVC environment variables. A variable in spec.env will override a GVC variable with the same name.\n"
                },
                "lifecycle": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLifecycle:WorkloadContainerLifecycle",
                    "description": "Lifecycle [Reference Page](https://docs.controlplane.com/reference/workload#lifecycle).\n"
                },
                "livenessProbe": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLivenessProbe:WorkloadContainerLivenessProbe",
                    "description": "Liveness Probe\n"
                },
                "memory": {
                    "type": "string",
                    "description": "Reserved memory of the workload when capacityAI is disabled. Maximum memory when CapacityAI is enabled. Default: \"128Mi\".\n"
                },
                "metrics": {
                    "$ref": "#/types/cpln:index/WorkloadContainerMetrics:WorkloadContainerMetrics",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/workload#metrics).\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "Minimum CPU when capacity AI is enabled.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Minimum memory when capacity AI is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the container.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port the container exposes. Only one container is allowed to specify a port. Min: \u003cspan pulumi-lang-nodejs=\"`80`\" pulumi-lang-dotnet=\"`80`\" pulumi-lang-go=\"`80`\" pulumi-lang-python=\"`80`\" pulumi-lang-yaml=\"`80`\" pulumi-lang-java=\"`80`\"\u003e`80`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`65535`\" pulumi-lang-dotnet=\"`65535`\" pulumi-lang-go=\"`65535`\" pulumi-lang-python=\"`65535`\" pulumi-lang-yaml=\"`65535`\" pulumi-lang-java=\"`65535`\"\u003e`65535`\u003c/span\u003e. Used by \u003cspan pulumi-lang-nodejs=\"`serverless`\" pulumi-lang-dotnet=\"`Serverless`\" pulumi-lang-go=\"`serverless`\" pulumi-lang-python=\"`serverless`\" pulumi-lang-yaml=\"`serverless`\" pulumi-lang-java=\"`serverless`\"\u003e`serverless`\u003c/span\u003e Workload type. **DEPRECATED - Use \u003cspan pulumi-lang-nodejs=\"`ports`\" pulumi-lang-dotnet=\"`Ports`\" pulumi-lang-go=\"`ports`\" pulumi-lang-python=\"`ports`\" pulumi-lang-yaml=\"`ports`\" pulumi-lang-java=\"`ports`\"\u003e`ports`\u003c/span\u003e.**\n",
                    "deprecationMessage": "The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead."
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadContainerPort:WorkloadContainerPort"
                    },
                    "description": "Communication endpoints used by the workload to send and receive network traffic.\n"
                },
                "readinessProbe": {
                    "$ref": "#/types/cpln:index/WorkloadContainerReadinessProbe:WorkloadContainerReadinessProbe",
                    "description": "Readiness Probe\n"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadContainerVolume:WorkloadContainerVolume"
                    },
                    "description": "Mount Object Store (S3, GCS, AzureBlob) buckets as file system.\n"
                },
                "workingDirectory": {
                    "type": "string",
                    "description": "Override the working directory. Must be an absolute path.\n"
                }
            },
            "type": "object",
            "required": [
                "image",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cpu",
                        "image",
                        "inheritEnv",
                        "memory",
                        "name"
                    ]
                }
            }
        },
        "cpln:index/WorkloadContainerGpuCustom:WorkloadContainerGpuCustom": {
            "properties": {
                "quantity": {
                    "type": "integer",
                    "description": "Number of GPUs.\n"
                },
                "resource": {
                    "type": "string"
                },
                "runtimeClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "quantity",
                "resource"
            ]
        },
        "cpln:index/WorkloadContainerGpuNvidia:WorkloadContainerGpuNvidia": {
            "properties": {
                "model": {
                    "type": "string",
                    "description": "GPU Model (i.e.: t4)\n"
                },
                "quantity": {
                    "type": "integer",
                    "description": "Number of GPUs.\n"
                }
            },
            "type": "object",
            "required": [
                "model",
                "quantity"
            ]
        },
        "cpln:index/WorkloadContainerLifecycle:WorkloadContainerLifecycle": {
            "properties": {
                "postStart": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLifecyclePostStart:WorkloadContainerLifecyclePostStart"
                },
                "preStop": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLifecyclePreStop:WorkloadContainerLifecyclePreStop"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadContainerLifecyclePostStart:WorkloadContainerLifecyclePostStart": {
            "properties": {
                "exec": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLifecyclePostStartExec:WorkloadContainerLifecyclePostStartExec"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadContainerLifecyclePostStartExec:WorkloadContainerLifecyclePostStartExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Command and arguments executed immediately after the container is created.\n"
                }
            },
            "type": "object",
            "required": [
                "commands"
            ]
        },
        "cpln:index/WorkloadContainerLifecyclePreStop:WorkloadContainerLifecyclePreStop": {
            "properties": {
                "exec": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLifecyclePreStopExec:WorkloadContainerLifecyclePreStopExec"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadContainerLifecyclePreStopExec:WorkloadContainerLifecyclePreStopExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Command and arguments executed immediately before the container is stopped.\n"
                }
            },
            "type": "object",
            "required": [
                "commands"
            ]
        },
        "cpln:index/WorkloadContainerLivenessProbe:WorkloadContainerLivenessProbe": {
            "properties": {
                "exec": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLivenessProbeExec:WorkloadContainerLivenessProbeExec"
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "grpc": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLivenessProbeGrpc:WorkloadContainerLivenessProbeGrpc"
                },
                "httpGet": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLivenessProbeHttpGet:WorkloadContainerLivenessProbeHttpGet"
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSocket": {
                    "$ref": "#/types/cpln:index/WorkloadContainerLivenessProbeTcpSocket:WorkloadContainerLivenessProbeTcpSocket"
                },
                "timeoutSeconds": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "failureThreshold",
                        "initialDelaySeconds",
                        "periodSeconds",
                        "successThreshold",
                        "timeoutSeconds"
                    ]
                }
            }
        },
        "cpln:index/WorkloadContainerLivenessProbeExec:WorkloadContainerLivenessProbeExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "commands"
            ]
        },
        "cpln:index/WorkloadContainerLivenessProbeGrpc:WorkloadContainerLivenessProbeGrpc": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadContainerLivenessProbeHttpGet:WorkloadContainerLivenessProbeHttpGet": {
            "properties": {
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "scheme": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "path",
                        "port",
                        "scheme"
                    ]
                }
            }
        },
        "cpln:index/WorkloadContainerLivenessProbeTcpSocket:WorkloadContainerLivenessProbeTcpSocket": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadContainerMetrics:WorkloadContainerMetrics": {
            "properties": {
                "dropMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Drop metrics that match given patterns.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path from container emitting custom metrics.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port from container emitting custom metrics.\n"
                }
            },
            "type": "object",
            "required": [
                "path",
                "port"
            ]
        },
        "cpln:index/WorkloadContainerPort:WorkloadContainerPort": {
            "properties": {
                "number": {
                    "type": "integer",
                    "description": "Port to expose.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Choice of: \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`http2`\" pulumi-lang-dotnet=\"`Http2`\" pulumi-lang-go=\"`http2`\" pulumi-lang-python=\"`http2`\" pulumi-lang-yaml=\"`http2`\" pulumi-lang-java=\"`http2`\"\u003e`http2`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`grpc`\" pulumi-lang-dotnet=\"`Grpc`\" pulumi-lang-go=\"`grpc`\" pulumi-lang-python=\"`grpc`\" pulumi-lang-yaml=\"`grpc`\" pulumi-lang-java=\"`grpc`\"\u003e`grpc`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "number"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "number",
                        "protocol"
                    ]
                }
            }
        },
        "cpln:index/WorkloadContainerReadinessProbe:WorkloadContainerReadinessProbe": {
            "properties": {
                "exec": {
                    "$ref": "#/types/cpln:index/WorkloadContainerReadinessProbeExec:WorkloadContainerReadinessProbeExec"
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "grpc": {
                    "$ref": "#/types/cpln:index/WorkloadContainerReadinessProbeGrpc:WorkloadContainerReadinessProbeGrpc"
                },
                "httpGet": {
                    "$ref": "#/types/cpln:index/WorkloadContainerReadinessProbeHttpGet:WorkloadContainerReadinessProbeHttpGet"
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSocket": {
                    "$ref": "#/types/cpln:index/WorkloadContainerReadinessProbeTcpSocket:WorkloadContainerReadinessProbeTcpSocket"
                },
                "timeoutSeconds": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "failureThreshold",
                        "initialDelaySeconds",
                        "periodSeconds",
                        "successThreshold",
                        "timeoutSeconds"
                    ]
                }
            }
        },
        "cpln:index/WorkloadContainerReadinessProbeExec:WorkloadContainerReadinessProbeExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "commands"
            ]
        },
        "cpln:index/WorkloadContainerReadinessProbeGrpc:WorkloadContainerReadinessProbeGrpc": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadContainerReadinessProbeHttpGet:WorkloadContainerReadinessProbeHttpGet": {
            "properties": {
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "scheme": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "path",
                        "port",
                        "scheme"
                    ]
                }
            }
        },
        "cpln:index/WorkloadContainerReadinessProbeTcpSocket:WorkloadContainerReadinessProbeTcpSocket": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadContainerVolume:WorkloadContainerVolume": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "File path added to workload pointing to the volume.\n"
                },
                "recoveryPolicy": {
                    "type": "string",
                    "description": "Only applicable to persistent volumes, this determines what Control Plane will do when creating a new workload replica if a corresponding volume exists. Available Values: \u003cspan pulumi-lang-nodejs=\"`retain`\" pulumi-lang-dotnet=\"`Retain`\" pulumi-lang-go=\"`retain`\" pulumi-lang-python=\"`retain`\" pulumi-lang-yaml=\"`retain`\" pulumi-lang-java=\"`retain`\"\u003e`retain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`recycle`\" pulumi-lang-dotnet=\"`Recycle`\" pulumi-lang-go=\"`recycle`\" pulumi-lang-python=\"`recycle`\" pulumi-lang-yaml=\"`recycle`\" pulumi-lang-java=\"`recycle`\"\u003e`recycle`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`retain`\" pulumi-lang-dotnet=\"`Retain`\" pulumi-lang-go=\"`retain`\" pulumi-lang-python=\"`retain`\" pulumi-lang-yaml=\"`retain`\" pulumi-lang-java=\"`retain`\"\u003e`retain`\u003c/span\u003e. **DEPRECATED - No longer being used.**\n"
                },
                "uri": {
                    "type": "string",
                    "description": "URI of a volume hosted at Control Plane (Volume Set) or at a cloud provider (AWS, Azure, GCP).\n"
                }
            },
            "type": "object",
            "required": [
                "path",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "path",
                        "recoveryPolicy",
                        "uri"
                    ]
                }
            }
        },
        "cpln:index/WorkloadFirewallSpec:WorkloadFirewallSpec": {
            "properties": {
                "external": {
                    "$ref": "#/types/cpln:index/WorkloadFirewallSpecExternal:WorkloadFirewallSpecExternal",
                    "description": "The external firewall is used to control inbound and outbound access to the workload for public-facing traffic.\n"
                },
                "internal": {
                    "$ref": "#/types/cpln:index/WorkloadFirewallSpecInternal:WorkloadFirewallSpecInternal",
                    "description": "The internal firewall is used to control access between workloads.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadFirewallSpecExternal:WorkloadFirewallSpecExternal": {
            "properties": {
                "http": {
                    "$ref": "#/types/cpln:index/WorkloadFirewallSpecExternalHttp:WorkloadFirewallSpecExternalHttp",
                    "description": "Firewall options for HTTP workloads.\n"
                },
                "inboundAllowCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that are allowed to access this workload. No external access is allowed by default. Specify '0.0.0.0/0' to allow access to the public internet.\n"
                },
                "inboundBlockedCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that are NOT allowed to access this workload. Addresses in the allow list will only be allowed if they do not exist in this list.\n"
                },
                "outboundAllowCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that this workload is allowed reach. No outbound access is allowed by default. Specify '0.0.0.0/0' to allow outbound access to the public internet.\n"
                },
                "outboundAllowHostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of public hostnames that this workload is allowed to reach. No outbound access is allowed by default. A wildcard `*` is allowed on the prefix of the hostname only, ex: `*.amazonaws.com`. Use `outboundAllowCIDR` to allow access to all external websites.\n"
                },
                "outboundAllowPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadFirewallSpecExternalOutboundAllowPort:WorkloadFirewallSpecExternalOutboundAllowPort"
                    },
                    "description": "Allow outbound access to specific ports and protocols. When not specified, communication to address ranges in outboundAllowCIDR is allowed on all ports and communication to names in outboundAllowHostname is allowed on ports 80/443.\n"
                },
                "outboundBlockedCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that this workload is NOT allowed to reach. Addresses in the allow list will only be allowed if they do not exist in this list.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "inboundAllowCidrs",
                        "inboundBlockedCidrs",
                        "outboundAllowCidrs",
                        "outboundAllowHostnames",
                        "outboundBlockedCidrs"
                    ]
                }
            }
        },
        "cpln:index/WorkloadFirewallSpecExternalHttp:WorkloadFirewallSpecExternalHttp": {
            "properties": {
                "inboundHeaderFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadFirewallSpecExternalHttpInboundHeaderFilter:WorkloadFirewallSpecExternalHttpInboundHeaderFilter"
                    },
                    "description": "A list of header filters for HTTP workloads.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadFirewallSpecExternalHttpInboundHeaderFilter:WorkloadFirewallSpecExternalHttpInboundHeaderFilter": {
            "properties": {
                "allowedValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regular expressions to match for allowed header values. Headers that do not match ANY of these values will be filtered and will not reach the workload.\n"
                },
                "blockedValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regular expressions to match for blocked header values. Headers that match ANY of these values will be filtered and will not reach the workload.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The header to match for.\n"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "cpln:index/WorkloadFirewallSpecExternalOutboundAllowPort:WorkloadFirewallSpecExternalOutboundAllowPort": {
            "properties": {
                "number": {
                    "type": "integer",
                    "description": "Port number. Max: 65000\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Either \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "number",
                "protocol"
            ]
        },
        "cpln:index/WorkloadFirewallSpecInternal:WorkloadFirewallSpecInternal": {
            "properties": {
                "inboundAllowType": {
                    "type": "string",
                    "description": "Used to control the internal firewall configuration and mutual tls. Allowed Values: \"none\", \"same-gvc\", \"same-org\", \"workload-list\".\n"
                },
                "inboundAllowWorkloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of specific workloads which are allowed to access this workload internally. This list is only used if the 'inboundAllowType' is set to 'workload-list'.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "inboundAllowType",
                        "inboundAllowWorkloads"
                    ]
                }
            }
        },
        "cpln:index/WorkloadJob:WorkloadJob": {
            "properties": {
                "activeDeadlineSeconds": {
                    "type": "integer",
                    "description": "The maximum number of seconds Control Plane will wait for the job to complete. If a job does not succeed or fail in the allotted time, Control Plane will stop the job, moving it into the Removed status.\n"
                },
                "concurrencyPolicy": {
                    "type": "string",
                    "description": "Either 'Forbid' or 'Replace'. This determines what Control Plane will do when the schedule requires a job to start, while a prior instance of the job is still running. Enum: [ Forbid, Replace ] Default: `Forbid`.\n"
                },
                "historyLimit": {
                    "type": "integer",
                    "description": "The maximum number of completed job instances to display. This should be an integer between 1 and 10. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                },
                "restartPolicy": {
                    "type": "string",
                    "description": "Either 'OnFailure' or 'Never'. This determines what Control Plane will do when a job instance fails. Enum: [ OnFailure, Never ] Default: `Never`.\n"
                },
                "schedule": {
                    "type": "string",
                    "description": "A standard cron [schedule expression](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#schedule-syntax) used to determine when your job should execute.\n"
                }
            },
            "type": "object",
            "required": [
                "schedule"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "concurrencyPolicy",
                        "historyLimit",
                        "restartPolicy",
                        "schedule"
                    ]
                }
            }
        },
        "cpln:index/WorkloadLoadBalancer:WorkloadLoadBalancer": {
            "properties": {
                "direct": {
                    "$ref": "#/types/cpln:index/WorkloadLoadBalancerDirect:WorkloadLoadBalancerDirect",
                    "description": "Direct load balancers are created in each location that a workload is running in and are configured for the standard endpoints of the workload. Customers are responsible for configuring the workload with certificates if TLS is required.\n"
                },
                "geoLocation": {
                    "$ref": "#/types/cpln:index/WorkloadLoadBalancerGeoLocation:WorkloadLoadBalancerGeoLocation"
                },
                "replicaDirect": {
                    "type": "boolean",
                    "description": "When enabled, individual replicas of the workload can be reached directly using the subdomain prefix replica-\u003cindex\u003e. For example, replica-0.my-workload.my-gvc.cpln.local or replica-0.my-workload-\u003cgvc-alias\u003e.cpln.app - Can only be used with stateful workloads.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "replicaDirect"
                    ]
                }
            }
        },
        "cpln:index/WorkloadLoadBalancerDirect:WorkloadLoadBalancerDirect": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "When disabled, this load balancer will be stopped.\n"
                },
                "ipset": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadLoadBalancerDirectPort:WorkloadLoadBalancerDirectPort"
                    },
                    "description": "List of ports that will be exposed by this load balancer.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "cpln:index/WorkloadLoadBalancerDirectPort:WorkloadLoadBalancerDirectPort": {
            "properties": {
                "containerPort": {
                    "type": "integer",
                    "description": "The port on the container tha will receive this traffic.\n"
                },
                "externalPort": {
                    "type": "integer",
                    "description": "The port that is available publicly.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol that is exposed publicly.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Overrides the default \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e url scheme that will be used for links in the UI and status.\n"
                }
            },
            "type": "object",
            "required": [
                "externalPort",
                "protocol"
            ]
        },
        "cpln:index/WorkloadLoadBalancerGeoLocation:WorkloadLoadBalancerGeoLocation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "When enabled, geo location headers will be included on inbound http requests. Existing headers will be replaced.\n"
                },
                "headers": {
                    "$ref": "#/types/cpln:index/WorkloadLoadBalancerGeoLocationHeaders:WorkloadLoadBalancerGeoLocationHeaders"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "cpln:index/WorkloadLoadBalancerGeoLocationHeaders:WorkloadLoadBalancerGeoLocationHeaders": {
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "The geo asn header.\n"
                },
                "city": {
                    "type": "string",
                    "description": "The geo city header.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The geo country header.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The geo region header.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadLocalOption:WorkloadLocalOption": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/cpln:index/WorkloadLocalOptionAutoscaling:WorkloadLocalOptionAutoscaling",
                    "description": "Auto-scaling adjusts horizontal scaling based on a set strategy, target value, and possibly a metric percentile.\n"
                },
                "capacityAi": {
                    "type": "boolean",
                    "description": "Capacity AI. Default: \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "capacityAiUpdateMinutes": {
                    "type": "integer",
                    "description": "The highest frequency capacity AI is allowed to update resource reservations when CapacityAI is enabled.\n"
                },
                "debug": {
                    "type": "boolean",
                    "description": "Debug mode. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Valid only for \u003cspan pulumi-lang-nodejs=\"`localOptions`\" pulumi-lang-dotnet=\"`LocalOptions`\" pulumi-lang-go=\"`localOptions`\" pulumi-lang-python=\"`local_options`\" pulumi-lang-yaml=\"`localOptions`\" pulumi-lang-java=\"`localOptions`\"\u003e`local_options`\u003c/span\u003e. Override options for a specific location.\n"
                },
                "multiZone": {
                    "$ref": "#/types/cpln:index/WorkloadLocalOptionMultiZone:WorkloadLocalOptionMultiZone"
                },
                "suspend": {
                    "type": "boolean",
                    "description": "Workload suspend. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "description": "Timeout in seconds. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "location"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "capacityAi",
                        "debug",
                        "location",
                        "suspend",
                        "timeoutSeconds"
                    ]
                }
            }
        },
        "cpln:index/WorkloadLocalOptionAutoscaling:WorkloadLocalOptionAutoscaling": {
            "properties": {
                "keda": {
                    "$ref": "#/types/cpln:index/WorkloadLocalOptionAutoscalingKeda:WorkloadLocalOptionAutoscalingKeda",
                    "description": "KEDA (Kubernetes-based Event Driven Autoscaling) allows for advanced autoscaling based on external metrics and triggers.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "A hard maximum for the number of concurrent requests allowed to a replica. If no replicas are available to fulfill the request then it will be queued until a replica with capacity is available and delivered as soon as one is available again. Capacity can be available from requests completing or when a new replica is available from scale out.Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`1000`\" pulumi-lang-dotnet=\"`1000`\" pulumi-lang-go=\"`1000`\" pulumi-lang-python=\"`1000`\" pulumi-lang-yaml=\"`1000`\" pulumi-lang-java=\"`1000`\"\u003e`1000`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e.\n"
                },
                "maxScale": {
                    "type": "integer",
                    "description": "The maximum allowed number of replicas. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`concurrency`\" pulumi-lang-dotnet=\"`Concurrency`\" pulumi-lang-go=\"`concurrency`\" pulumi-lang-python=\"`concurrency`\" pulumi-lang-yaml=\"`concurrency`\" pulumi-lang-java=\"`concurrency`\"\u003e`concurrency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rps`\" pulumi-lang-dotnet=\"`Rps`\" pulumi-lang-go=\"`rps`\" pulumi-lang-python=\"`rps`\" pulumi-lang-yaml=\"`rps`\" pulumi-lang-java=\"`rps`\"\u003e`rps`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`latency`\" pulumi-lang-dotnet=\"`Latency`\" pulumi-lang-go=\"`latency`\" pulumi-lang-python=\"`latency`\" pulumi-lang-yaml=\"`latency`\" pulumi-lang-java=\"`latency`\"\u003e`latency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`keda`\" pulumi-lang-dotnet=\"`Keda`\" pulumi-lang-go=\"`keda`\" pulumi-lang-python=\"`keda`\" pulumi-lang-yaml=\"`keda`\" pulumi-lang-java=\"`keda`\"\u003e`keda`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e.\n"
                },
                "metricPercentile": {
                    "type": "string",
                    "description": "For metrics represented as a distribution (e.g. latency) a percentile within the distribution must be chosen as the target.\n"
                },
                "minScale": {
                    "type": "integer",
                    "description": "The minimum allowed number of replicas. Control Plane can scale the workload down to 0 when there is no traffic and scale up immediately to fulfill new requests. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`maxScale`\" pulumi-lang-dotnet=\"`MaxScale`\" pulumi-lang-go=\"`maxScale`\" pulumi-lang-python=\"`max_scale`\" pulumi-lang-yaml=\"`maxScale`\" pulumi-lang-java=\"`maxScale`\"\u003e`max_scale`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e.\n"
                },
                "multis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadLocalOptionAutoscalingMulti:WorkloadLocalOptionAutoscalingMulti"
                    }
                },
                "scaleToZeroDelay": {
                    "type": "integer",
                    "description": "The amount of time (in seconds) with no requests received before a workload is scaled to 0. Min: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`3600`\" pulumi-lang-dotnet=\"`3600`\" pulumi-lang-go=\"`3600`\" pulumi-lang-python=\"`3600`\" pulumi-lang-yaml=\"`3600`\" pulumi-lang-java=\"`3600`\"\u003e`3600`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`300`\" pulumi-lang-dotnet=\"`300`\" pulumi-lang-go=\"`300`\" pulumi-lang-python=\"`300`\" pulumi-lang-yaml=\"`300`\" pulumi-lang-java=\"`300`\"\u003e`300`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`95`\" pulumi-lang-dotnet=\"`95`\" pulumi-lang-go=\"`95`\" pulumi-lang-python=\"`95`\" pulumi-lang-yaml=\"`95`\" pulumi-lang-java=\"`95`\"\u003e`95`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxConcurrency",
                        "maxScale",
                        "metric",
                        "minScale",
                        "scaleToZeroDelay",
                        "target"
                    ]
                }
            }
        },
        "cpln:index/WorkloadLocalOptionAutoscalingKeda:WorkloadLocalOptionAutoscalingKeda": {
            "properties": {
                "advanced": {
                    "$ref": "#/types/cpln:index/WorkloadLocalOptionAutoscalingKedaAdvanced:WorkloadLocalOptionAutoscalingKedaAdvanced",
                    "description": "Advanced configuration options for KEDA.\n"
                },
                "cooldownPeriod": {
                    "type": "integer",
                    "description": "The cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "initialCooldownPeriod": {
                    "type": "integer",
                    "description": "The initial cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "pollingInterval": {
                    "type": "integer",
                    "description": "The interval in seconds at which KEDA will poll the external metrics to determine if scaling is required.\n"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadLocalOptionAutoscalingKedaTrigger:WorkloadLocalOptionAutoscalingKedaTrigger"
                    },
                    "description": "An array of KEDA triggers to be used for scaling workloads in this GVC. This is used to define how KEDA will scale workloads in the GVC based on external metrics or events. Each trigger type may have its own specific configuration options.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadLocalOptionAutoscalingKedaAdvanced:WorkloadLocalOptionAutoscalingKedaAdvanced": {
            "properties": {
                "scalingModifiers": {
                    "$ref": "#/types/cpln:index/WorkloadLocalOptionAutoscalingKedaAdvancedScalingModifiers:WorkloadLocalOptionAutoscalingKedaAdvancedScalingModifiers",
                    "description": "Scaling modifiers allow for fine-tuning the scaling behavior of KEDA.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadLocalOptionAutoscalingKedaAdvancedScalingModifiers:WorkloadLocalOptionAutoscalingKedaAdvancedScalingModifiers": {
            "properties": {
                "activationTarget": {
                    "type": "string",
                    "description": "Defines the new activation target value to scale on for the composed metric.\n"
                },
                "formula": {
                    "type": "string",
                    "description": "Composes metrics together and allows them to be modified/manipulated. It accepts mathematical/conditional statements.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "Defines metric type used for this new composite-metric.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Defines new target value to scale on for the composed metric.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadLocalOptionAutoscalingKedaTrigger:WorkloadLocalOptionAutoscalingKedaTrigger": {
            "properties": {
                "authenticationRef": {
                    "$ref": "#/types/cpln:index/WorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef:WorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef",
                    "description": "Reference to a KEDA authentication object for secure access to external systems.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The configuration parameters that the trigger requires.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "The type of metric to be used for scaling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the trigger. If not provided, a default name will be generated based on the trigger type.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of KEDA trigger, e.g \"prometheus\", \"aws-sqs\", etc.\n"
                },
                "useCachedMetrics": {
                    "type": "boolean",
                    "description": "Enables caching of metric values during polling interval.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "cpln:index/WorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef:WorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of secret listed in the GVC spec.keda.secrets.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cpln:index/WorkloadLocalOptionAutoscalingMulti:WorkloadLocalOptionAutoscalingMulti": {
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadLocalOptionMultiZone:WorkloadLocalOptionMultiZone": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "cpln:index/WorkloadOptions:WorkloadOptions": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/cpln:index/WorkloadOptionsAutoscaling:WorkloadOptionsAutoscaling",
                    "description": "Auto-scaling adjusts horizontal scaling based on a set strategy, target value, and possibly a metric percentile.\n"
                },
                "capacityAi": {
                    "type": "boolean",
                    "description": "Capacity AI. Default: \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "capacityAiUpdateMinutes": {
                    "type": "integer",
                    "description": "The highest frequency capacity AI is allowed to update resource reservations when CapacityAI is enabled.\n"
                },
                "debug": {
                    "type": "boolean",
                    "description": "Debug mode. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "multiZone": {
                    "$ref": "#/types/cpln:index/WorkloadOptionsMultiZone:WorkloadOptionsMultiZone"
                },
                "suspend": {
                    "type": "boolean",
                    "description": "Workload suspend. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "description": "Timeout in seconds. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "capacityAi",
                        "debug",
                        "suspend",
                        "timeoutSeconds"
                    ]
                }
            }
        },
        "cpln:index/WorkloadOptionsAutoscaling:WorkloadOptionsAutoscaling": {
            "properties": {
                "keda": {
                    "$ref": "#/types/cpln:index/WorkloadOptionsAutoscalingKeda:WorkloadOptionsAutoscalingKeda",
                    "description": "KEDA (Kubernetes-based Event Driven Autoscaling) allows for advanced autoscaling based on external metrics and triggers.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "A hard maximum for the number of concurrent requests allowed to a replica. If no replicas are available to fulfill the request then it will be queued until a replica with capacity is available and delivered as soon as one is available again. Capacity can be available from requests completing or when a new replica is available from scale out.Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`1000`\" pulumi-lang-dotnet=\"`1000`\" pulumi-lang-go=\"`1000`\" pulumi-lang-python=\"`1000`\" pulumi-lang-yaml=\"`1000`\" pulumi-lang-java=\"`1000`\"\u003e`1000`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e.\n"
                },
                "maxScale": {
                    "type": "integer",
                    "description": "The maximum allowed number of replicas. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`concurrency`\" pulumi-lang-dotnet=\"`Concurrency`\" pulumi-lang-go=\"`concurrency`\" pulumi-lang-python=\"`concurrency`\" pulumi-lang-yaml=\"`concurrency`\" pulumi-lang-java=\"`concurrency`\"\u003e`concurrency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rps`\" pulumi-lang-dotnet=\"`Rps`\" pulumi-lang-go=\"`rps`\" pulumi-lang-python=\"`rps`\" pulumi-lang-yaml=\"`rps`\" pulumi-lang-java=\"`rps`\"\u003e`rps`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`latency`\" pulumi-lang-dotnet=\"`Latency`\" pulumi-lang-go=\"`latency`\" pulumi-lang-python=\"`latency`\" pulumi-lang-yaml=\"`latency`\" pulumi-lang-java=\"`latency`\"\u003e`latency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`keda`\" pulumi-lang-dotnet=\"`Keda`\" pulumi-lang-go=\"`keda`\" pulumi-lang-python=\"`keda`\" pulumi-lang-yaml=\"`keda`\" pulumi-lang-java=\"`keda`\"\u003e`keda`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e.\n"
                },
                "metricPercentile": {
                    "type": "string",
                    "description": "For metrics represented as a distribution (e.g. latency) a percentile within the distribution must be chosen as the target.\n"
                },
                "minScale": {
                    "type": "integer",
                    "description": "The minimum allowed number of replicas. Control Plane can scale the workload down to 0 when there is no traffic and scale up immediately to fulfill new requests. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`maxScale`\" pulumi-lang-dotnet=\"`MaxScale`\" pulumi-lang-go=\"`maxScale`\" pulumi-lang-python=\"`max_scale`\" pulumi-lang-yaml=\"`maxScale`\" pulumi-lang-java=\"`maxScale`\"\u003e`max_scale`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e.\n"
                },
                "multis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadOptionsAutoscalingMulti:WorkloadOptionsAutoscalingMulti"
                    }
                },
                "scaleToZeroDelay": {
                    "type": "integer",
                    "description": "The amount of time (in seconds) with no requests received before a workload is scaled to 0. Min: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`3600`\" pulumi-lang-dotnet=\"`3600`\" pulumi-lang-go=\"`3600`\" pulumi-lang-python=\"`3600`\" pulumi-lang-yaml=\"`3600`\" pulumi-lang-java=\"`3600`\"\u003e`3600`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`300`\" pulumi-lang-dotnet=\"`300`\" pulumi-lang-go=\"`300`\" pulumi-lang-python=\"`300`\" pulumi-lang-yaml=\"`300`\" pulumi-lang-java=\"`300`\"\u003e`300`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`95`\" pulumi-lang-dotnet=\"`95`\" pulumi-lang-go=\"`95`\" pulumi-lang-python=\"`95`\" pulumi-lang-yaml=\"`95`\" pulumi-lang-java=\"`95`\"\u003e`95`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxConcurrency",
                        "maxScale",
                        "metric",
                        "minScale",
                        "scaleToZeroDelay",
                        "target"
                    ]
                }
            }
        },
        "cpln:index/WorkloadOptionsAutoscalingKeda:WorkloadOptionsAutoscalingKeda": {
            "properties": {
                "advanced": {
                    "$ref": "#/types/cpln:index/WorkloadOptionsAutoscalingKedaAdvanced:WorkloadOptionsAutoscalingKedaAdvanced",
                    "description": "Advanced configuration options for KEDA.\n"
                },
                "cooldownPeriod": {
                    "type": "integer",
                    "description": "The cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "initialCooldownPeriod": {
                    "type": "integer",
                    "description": "The initial cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "pollingInterval": {
                    "type": "integer",
                    "description": "The interval in seconds at which KEDA will poll the external metrics to determine if scaling is required.\n"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadOptionsAutoscalingKedaTrigger:WorkloadOptionsAutoscalingKedaTrigger"
                    },
                    "description": "An array of KEDA triggers to be used for scaling workloads in this GVC. This is used to define how KEDA will scale workloads in the GVC based on external metrics or events. Each trigger type may have its own specific configuration options.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadOptionsAutoscalingKedaAdvanced:WorkloadOptionsAutoscalingKedaAdvanced": {
            "properties": {
                "scalingModifiers": {
                    "$ref": "#/types/cpln:index/WorkloadOptionsAutoscalingKedaAdvancedScalingModifiers:WorkloadOptionsAutoscalingKedaAdvancedScalingModifiers",
                    "description": "Scaling modifiers allow for fine-tuning the scaling behavior of KEDA.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadOptionsAutoscalingKedaAdvancedScalingModifiers:WorkloadOptionsAutoscalingKedaAdvancedScalingModifiers": {
            "properties": {
                "activationTarget": {
                    "type": "string",
                    "description": "Defines the new activation target value to scale on for the composed metric.\n"
                },
                "formula": {
                    "type": "string",
                    "description": "Composes metrics together and allows them to be modified/manipulated. It accepts mathematical/conditional statements.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "Defines metric type used for this new composite-metric.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Defines new target value to scale on for the composed metric.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadOptionsAutoscalingKedaTrigger:WorkloadOptionsAutoscalingKedaTrigger": {
            "properties": {
                "authenticationRef": {
                    "$ref": "#/types/cpln:index/WorkloadOptionsAutoscalingKedaTriggerAuthenticationRef:WorkloadOptionsAutoscalingKedaTriggerAuthenticationRef",
                    "description": "Reference to a KEDA authentication object for secure access to external systems.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The configuration parameters that the trigger requires.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "The type of metric to be used for scaling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the trigger. If not provided, a default name will be generated based on the trigger type.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of KEDA trigger, e.g \"prometheus\", \"aws-sqs\", etc.\n"
                },
                "useCachedMetrics": {
                    "type": "boolean",
                    "description": "Enables caching of metric values during polling interval.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "cpln:index/WorkloadOptionsAutoscalingKedaTriggerAuthenticationRef:WorkloadOptionsAutoscalingKedaTriggerAuthenticationRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of secret listed in the GVC spec.keda.secrets.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cpln:index/WorkloadOptionsAutoscalingMulti:WorkloadOptionsAutoscalingMulti": {
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadOptionsMultiZone:WorkloadOptionsMultiZone": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "cpln:index/WorkloadRequestRetryPolicy:WorkloadRequestRetryPolicy": {
            "properties": {
                "attempts": {
                    "type": "integer"
                },
                "retryOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attempts",
                        "retryOns"
                    ]
                }
            }
        },
        "cpln:index/WorkloadRolloutOption:WorkloadRolloutOption": {
            "properties": {
                "maxSurgeReplicas": {
                    "type": "string",
                    "description": "The number of replicas that can be created above the desired amount of replicas during an update.\n"
                },
                "maxUnavailableReplicas": {
                    "type": "string",
                    "description": "The number of replicas that can be unavailable during the update process.\n"
                },
                "minReadySeconds": {
                    "type": "integer",
                    "description": "The minimum number of seconds a container must run without crashing to be considered available.\n"
                },
                "scalingPolicy": {
                    "type": "string",
                    "description": "The strategies used to update applications and services deployed. Valid values: `OrderedReady` (Updates workloads in a rolling fashion, taking down old ones and bringing up new ones incrementally, ensuring that the service remains available during the update.), `Parallel` (Causes all pods affected by a scaling operation to be created or destroyed simultaneously. This does not affect update operations.). Default: `OrderedReady`.\n"
                },
                "terminationGracePeriodSeconds": {
                    "type": "integer",
                    "description": "The amount of time in seconds a workload has to gracefully terminate before forcefully terminating it. This includes the time it takes for the preStop hook to run.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "minReadySeconds",
                        "scalingPolicy",
                        "terminationGracePeriodSeconds"
                    ]
                }
            }
        },
        "cpln:index/WorkloadSecurityOptions:WorkloadSecurityOptions": {
            "properties": {
                "fileSystemGroupId": {
                    "type": "integer",
                    "description": "The group id assigned to any mounted volume.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/WorkloadSidecar:WorkloadSidecar": {
            "properties": {
                "envoy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "envoy"
            ]
        },
        "cpln:index/WorkloadStatus:WorkloadStatus": {
            "properties": {
                "canonicalEndpoint": {
                    "type": "string",
                    "description": "Canonical endpoint for the workload.\n"
                },
                "currentReplicaCount": {
                    "type": "integer",
                    "description": "Current amount of replicas deployed.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint for the workload.\n"
                },
                "healthChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadStatusHealthCheck:WorkloadStatusHealthCheck"
                    },
                    "description": "Current health status.\n"
                },
                "internalName": {
                    "type": "string",
                    "description": "Internal hostname for the workload. Used for service-to-service requests.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadStatusLoadBalancer:WorkloadStatusLoadBalancer"
                    }
                },
                "parentId": {
                    "type": "string",
                    "description": "ID of the parent object.\n"
                },
                "replicaInternalNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resolvedImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadStatusResolvedImage:WorkloadStatusResolvedImage"
                    },
                    "description": "Resolved images for workloads with dynamic tags enabled.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "canonicalEndpoint",
                        "currentReplicaCount",
                        "endpoint",
                        "healthChecks",
                        "internalName",
                        "loadBalancers",
                        "parentId",
                        "replicaInternalNames",
                        "resolvedImages"
                    ]
                }
            }
        },
        "cpln:index/WorkloadStatusHealthCheck:WorkloadStatusHealthCheck": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Active boolean for the associated workload.\n"
                },
                "code": {
                    "type": "integer",
                    "description": "Current output code for the associated workload.\n"
                },
                "failures": {
                    "type": "integer",
                    "description": "Failure integer for the associated workload.\n"
                },
                "lastChecked": {
                    "type": "string",
                    "description": "Timestamp in UTC of the last health check.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Current health status for the associated workload.\n"
                },
                "success": {
                    "type": "boolean",
                    "description": "Success boolean for the associated workload.\n"
                },
                "successes": {
                    "type": "integer",
                    "description": "Success integer for the associated workload.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "code",
                        "failures",
                        "lastChecked",
                        "message",
                        "success",
                        "successes"
                    ]
                }
            }
        },
        "cpln:index/WorkloadStatusLoadBalancer:WorkloadStatusLoadBalancer": {
            "properties": {
                "origin": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "origin",
                        "url"
                    ]
                }
            }
        },
        "cpln:index/WorkloadStatusResolvedImage:WorkloadStatusResolvedImage": {
            "properties": {
                "errorMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadStatusResolvedImageImage:WorkloadStatusResolvedImageImage"
                    },
                    "description": "A list of images that were resolved.\n"
                },
                "nextRetryAt": {
                    "type": "string"
                },
                "resolvedAt": {
                    "type": "string",
                    "description": "UTC Time when the images were resolved.\n"
                },
                "resolvedForVersion": {
                    "type": "integer",
                    "description": "Workload version the images were resolved for.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "errorMessages",
                        "images",
                        "nextRetryAt",
                        "resolvedAt",
                        "resolvedForVersion"
                    ]
                }
            }
        },
        "cpln:index/WorkloadStatusResolvedImageImage:WorkloadStatusResolvedImageImage": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A unique SHA256 hash value that identifies a specific image content. This digest serves as a fingerprint of the image's content, ensuring the image you pull or run is exactly what you expect, without any modifications or corruptions.\n"
                },
                "manifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadStatusResolvedImageImageManifest:WorkloadStatusResolvedImageImageManifest"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "digest",
                        "manifests"
                    ]
                }
            }
        },
        "cpln:index/WorkloadStatusResolvedImageImageManifest:WorkloadStatusResolvedImageImageManifest": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A SHA256 hash that uniquely identifies the specific image manifest.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The name and tag of the resolved image.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "The MIME type used in the Docker Registry HTTP API to specify the format of the data being sent or received. Docker uses media types to distinguish between different kinds of JSON objects and binary data formats within the registry protocol, enabling the Docker client and registry to understand and process different components of Docker images correctly.\n"
                },
                "platform": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of strings. The combination of the operating system and architecture for which the image is built.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "digest",
                        "image",
                        "mediaType",
                        "platform"
                    ]
                }
            }
        },
        "cpln:index/getGvcControlplaneTracing:getGvcControlplaneTracing": {
            "properties": {
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "sampling"
            ]
        },
        "cpln:index/getGvcKeda:getGvcKeda": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable KEDA for this GVC. KEDA is a Kubernetes-based event-driven autoscaler that allows you to scale workloads based on external events. When enabled, a keda operator will be deployed in the GVC and workloads in the GVC can use KEDA to scale based on external metrics.\n"
                },
                "identityLink": {
                    "type": "string",
                    "description": "A link to an Identity resource that will be used for KEDA. This will allow the keda operator to access cloud and network resources.\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of secrets to be used as TriggerAuthentication objects. The TriggerAuthentication object will be named after the secret and can be used by triggers on workloads in this GVC.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getGvcLightstepTracing:getGvcLightstepTracing": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Full link to referenced Opaque Secret.\n"
                },
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "sampling"
            ]
        },
        "cpln:index/getGvcLoadBalancer:getGvcLoadBalancer": {
            "properties": {
                "dedicated": {
                    "type": "boolean",
                    "description": "Creates a dedicated load balancer in each location and enables additional Domain features: custom ports, protocols and wildcard hostnames. Charges apply for each location.\n"
                },
                "ipset": {
                    "type": "string",
                    "description": "The link or the name of the IP Set that will be used for this load balancer.\n"
                },
                "multiZone": {
                    "$ref": "#/types/cpln:index/getGvcLoadBalancerMultiZone:getGvcLoadBalancerMultiZone"
                },
                "redirect": {
                    "$ref": "#/types/cpln:index/getGvcLoadBalancerRedirect:getGvcLoadBalancerRedirect",
                    "description": "Specify the url to be redirected to for different http status codes.\n"
                },
                "trustedProxies": {
                    "type": "integer",
                    "description": "Controls the address used for request logging and for setting the X-Envoy-External-Address header. If set to 1, then the last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If set to 2, then the second to last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If the XFF header does not have at least two addresses or does not exist then the source client IP address will be used instead.\n"
                }
            },
            "type": "object",
            "required": [
                "trustedProxies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getGvcLoadBalancerMultiZone:getGvcLoadBalancerMultiZone": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getGvcLoadBalancerRedirect:getGvcLoadBalancerRedirect": {
            "properties": {
                "class": {
                    "$ref": "#/types/cpln:index/getGvcLoadBalancerRedirectClass:getGvcLoadBalancerRedirectClass",
                    "description": "Specify the redirect url for all status codes in a class.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/getGvcLoadBalancerRedirectClass:getGvcLoadBalancerRedirectClass": {
            "properties": {
                "status401": {
                    "type": "string",
                    "description": "An optional url redirect for 401 responses. Supports envoy format strings to include request information. E.g. https://your-oauth-server/oauth2/authorize?return_to=%REQ(:path)%\u0026client_id=your-client-id\n"
                },
                "status5xx": {
                    "type": "string",
                    "description": "Specify the redirect url for any 500 level status code.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/getGvcOtelTracing:getGvcOtelTracing": {
            "properties": {
                "customTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of custom tags.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.\n"
                },
                "sampling": {
                    "type": "number",
                    "description": "Determines what percentage of requests should be traced.\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "sampling"
            ]
        },
        "cpln:index/getGvcSidecar:getGvcSidecar": {
            "properties": {
                "envoy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "envoy"
            ]
        },
        "cpln:index/getImageManifest:getImageManifest": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getImageManifestConfig:getImageManifestConfig"
                    },
                    "description": "The config is a JSON blob that contains the image configuration data which includes environment variables, default command to run, and other settings necessary to run the container based on this image.\n"
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getImageManifestLayer:getImageManifestLayer"
                    },
                    "description": "Layers lists the digests of the image's layers. These layers are filesystem changes or additions made in each step of the Docker image's creation process. The layers are stored separately and pulled as needed, which allows for efficient storage and transfer of images. Each layer is represented by a SHA256 digest, ensuring the integrity and authenticity of the image.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n"
                },
                "schemaVersion": {
                    "type": "integer",
                    "description": "The version of the Docker Image Manifest format.\n"
                }
            },
            "type": "object",
            "required": [
                "configs",
                "layers",
                "mediaType",
                "schemaVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImageManifestConfig:getImageManifestConfig": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A unique SHA256 hash used to identify a specific image version within the image registry.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image or layer in bytes. This helps in estimating the space required and the download time.\n"
                }
            },
            "type": "object",
            "required": [
                "digest",
                "mediaType",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImageManifestLayer:getImageManifestLayer": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A unique SHA256 hash used to identify a specific image version within the image registry.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image or layer in bytes. This helps in estimating the space required and the download time.\n"
                }
            },
            "type": "object",
            "required": [
                "digest",
                "mediaType",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImagesImage:getImagesImage": {
            "properties": {
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the image.\n"
                },
                "digest": {
                    "type": "string",
                    "description": "A unique SHA256 hash used to identify a specific image version within the image registry.\n"
                },
                "manifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getImagesImageManifest:getImagesImageManifest"
                    },
                    "description": "The manifest provides configuration and layers information about the image. It plays a crucial role in the Docker image distribution system, enabling image creation, verification, and replication in a consistent and secure manner.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the image.\n"
                },
                "repository": {
                    "type": "string",
                    "description": "Respository name of the image.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag of the image.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags.\n"
                }
            },
            "type": "object",
            "required": [
                "cplnId",
                "digest",
                "manifests",
                "name",
                "repository",
                "selfLink",
                "tag",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImagesImageManifest:getImagesImageManifest": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getImagesImageManifestConfig:getImagesImageManifestConfig"
                    },
                    "description": "The config is a JSON blob that contains the image configuration data which includes environment variables, default command to run, and other settings necessary to run the container based on this image.\n"
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getImagesImageManifestLayer:getImagesImageManifestLayer"
                    },
                    "description": "Layers lists the digests of the image's layers. These layers are filesystem changes or additions made in each step of the Docker image's creation process. The layers are stored separately and pulled as needed, which allows for efficient storage and transfer of images. Each layer is represented by a SHA256 digest, ensuring the integrity and authenticity of the image.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n"
                },
                "schemaVersion": {
                    "type": "integer",
                    "description": "The version of the Docker Image Manifest format.\n"
                }
            },
            "type": "object",
            "required": [
                "configs",
                "layers",
                "mediaType",
                "schemaVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImagesImageManifestConfig:getImagesImageManifestConfig": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A unique SHA256 hash used to identify a specific image version within the image registry.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image or layer in bytes. This helps in estimating the space required and the download time.\n"
                }
            },
            "type": "object",
            "required": [
                "digest",
                "mediaType",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImagesImageManifestLayer:getImagesImageManifestLayer": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A unique SHA256 hash used to identify a specific image version within the image registry.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image or layer in bytes. This helps in estimating the space required and the download time.\n"
                }
            },
            "type": "object",
            "required": [
                "digest",
                "mediaType",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImagesQuery:getImagesQuery": {
            "properties": {
                "fetch": {
                    "type": "string",
                    "description": "Type of fetch. Specify either: \u003cspan pulumi-lang-nodejs=\"`links`\" pulumi-lang-dotnet=\"`Links`\" pulumi-lang-go=\"`links`\" pulumi-lang-python=\"`links`\" pulumi-lang-yaml=\"`links`\" pulumi-lang-java=\"`links`\"\u003e`links`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e.\n"
                },
                "spec": {
                    "$ref": "#/types/cpln:index/getImagesQuerySpec:getImagesQuerySpec",
                    "description": "The specification of the query.\n"
                }
            },
            "type": "object",
            "required": [
                "fetch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImagesQuerySpec:getImagesQuerySpec": {
            "properties": {
                "match": {
                    "type": "string",
                    "description": "Type of match. Available values: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`any`\" pulumi-lang-dotnet=\"`Any`\" pulumi-lang-go=\"`any`\" pulumi-lang-python=\"`any`\" pulumi-lang-yaml=\"`any`\" pulumi-lang-java=\"`any`\"\u003e`any`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e.\n"
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getImagesQuerySpecTerm:getImagesQuerySpecTerm"
                    },
                    "description": "Terms can only contain one of the following attributes: \u003cspan pulumi-lang-nodejs=\"`property`\" pulumi-lang-dotnet=\"`Property`\" pulumi-lang-go=\"`property`\" pulumi-lang-python=\"`property`\" pulumi-lang-yaml=\"`property`\" pulumi-lang-java=\"`property`\"\u003e`property`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rel`\" pulumi-lang-dotnet=\"`Rel`\" pulumi-lang-go=\"`rel`\" pulumi-lang-python=\"`rel`\" pulumi-lang-yaml=\"`rel`\" pulumi-lang-java=\"`rel`\"\u003e`rel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tag`\" pulumi-lang-dotnet=\"`Tag`\" pulumi-lang-go=\"`tag`\" pulumi-lang-python=\"`tag`\" pulumi-lang-yaml=\"`tag`\" pulumi-lang-java=\"`tag`\"\u003e`tag`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "match"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getImagesQuerySpecTerm:getImagesQuerySpecTerm": {
            "properties": {
                "op": {
                    "type": "string",
                    "description": "Type of query operation. Available values: `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`, `!=`, \u003cspan pulumi-lang-nodejs=\"`exists`\" pulumi-lang-dotnet=\"`Exists`\" pulumi-lang-go=\"`exists`\" pulumi-lang-python=\"`exists`\" pulumi-lang-yaml=\"`exists`\" pulumi-lang-java=\"`exists`\"\u003e`exists`\u003c/span\u003e, `!exists`. Default: `=`.\n"
                },
                "property": {
                    "type": "string",
                    "description": "Property to use for query evaluation.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Relation to use for query evaluation.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag key to use for query evaluation.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Testing value for query evaluation.\n"
                }
            },
            "type": "object",
            "required": [
                "op"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getLocationGeo:getLocationGeo": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City of the location.\n"
                },
                "continent": {
                    "type": "string",
                    "description": "Continent of the location.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of the location.\n"
                },
                "lat": {
                    "type": "number",
                    "description": "Latitude of the location.\n"
                },
                "lon": {
                    "type": "number",
                    "description": "Longitude of the location.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the location.\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "continent",
                "country",
                "lat",
                "lon",
                "state"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getLocationsLocation:getLocationsLocation": {
            "properties": {
                "cloudProvider": {
                    "type": "string",
                    "description": "Cloud Provider of the location.\n"
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the location.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the location.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indication if location is enabled.\n"
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getLocationsLocationGeo:getLocationsLocationGeo"
                    }
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IP ranges of the location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the location.\n"
                },
                "origin": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the location.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags.\n"
                }
            },
            "type": "object",
            "required": [
                "cloudProvider",
                "cplnId",
                "description",
                "enabled",
                "geos",
                "ipRanges",
                "name",
                "origin",
                "region",
                "selfLink",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getLocationsLocationGeo:getLocationsLocationGeo": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City of the location.\n"
                },
                "continent": {
                    "type": "string",
                    "description": "Continent of the location.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of the location.\n"
                },
                "lat": {
                    "type": "number",
                    "description": "Latitude of the location.\n"
                },
                "lon": {
                    "type": "number",
                    "description": "Longitude of the location.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the location.\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "continent",
                "country",
                "lat",
                "lon",
                "state"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getOrgAuthConfig:getOrgAuthConfig": {
            "properties": {
                "domainAutoMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains which will auto-provision users when authenticating using SAML.\n"
                },
                "samlOnly": {
                    "type": "boolean",
                    "description": "Enforce SAML only authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "domainAutoMembers",
                "samlOnly"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getOrgObservability:getOrgObservability": {
            "properties": {
                "defaultAlertEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "These emails are configured as alert recipients in Grafana when the 'grafana-default-email' contact delivery type is 'Email'.\n"
                },
                "logsRetentionDays": {
                    "type": "integer",
                    "description": "Log retention days. Default: 30\n"
                },
                "metricsRetentionDays": {
                    "type": "integer",
                    "description": "Metrics retention days. Default: 30\n"
                },
                "tracesRetentionDays": {
                    "type": "integer",
                    "description": "Traces retention days. Default: 30\n"
                }
            },
            "type": "object",
            "required": [
                "defaultAlertEmails",
                "logsRetentionDays",
                "metricsRetentionDays",
                "tracesRetentionDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getOrgSecurity:getOrgSecurity": {
            "properties": {
                "threatDetection": {
                    "$ref": "#/types/cpln:index/getOrgSecurityThreatDetection:getOrgSecurityThreatDetection"
                }
            },
            "type": "object"
        },
        "cpln:index/getOrgSecurityThreatDetection:getOrgSecurityThreatDetection": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether threat detection should be forwarded or not.\n"
                },
                "minimumSeverity": {
                    "type": "string",
                    "description": "Any threats with this severity and more severe will be sent. Others will be ignored. Valid values: \u003cspan pulumi-lang-nodejs=\"`warning`\" pulumi-lang-dotnet=\"`Warning`\" pulumi-lang-go=\"`warning`\" pulumi-lang-python=\"`warning`\" pulumi-lang-yaml=\"`warning`\" pulumi-lang-java=\"`warning`\"\u003e`warning`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`error`\" pulumi-lang-dotnet=\"`Error`\" pulumi-lang-go=\"`error`\" pulumi-lang-python=\"`error`\" pulumi-lang-yaml=\"`error`\" pulumi-lang-java=\"`error`\"\u003e`error`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`critical`\" pulumi-lang-dotnet=\"`Critical`\" pulumi-lang-go=\"`critical`\" pulumi-lang-python=\"`critical`\" pulumi-lang-yaml=\"`critical`\" pulumi-lang-java=\"`critical`\"\u003e`critical`\u003c/span\u003e.\n"
                },
                "syslog": {
                    "$ref": "#/types/cpln:index/getOrgSecurityThreatDetectionSyslog:getOrgSecurityThreatDetectionSyslog",
                    "description": "Configuration for syslog forwarding.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getOrgSecurityThreatDetectionSyslog:getOrgSecurityThreatDetectionSyslog": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The hostname to send syslog messages to.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port to send syslog messages to.\n"
                },
                "transport": {
                    "type": "string",
                    "description": "The transport-layer protocol to send the syslog messages over. If TCP is chosen, messages will be sent with TLS. Default: \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port",
                "transport"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getOrgStatus:getOrgStatus": {
            "properties": {
                "accountLink": {
                    "type": "string",
                    "description": "The link of the account the org belongs to.\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "Indicates whether the org is active or not.\n"
                },
                "endpointPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountLink",
                "active",
                "endpointPrefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretAw:getSecretAw": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access Key provided by AWS.\n",
                    "secret": true
                },
                "externalId": {
                    "type": "string",
                    "description": "AWS IAM Role External ID.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role ARN provided by AWS.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret Key provided by AWS.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "externalId",
                "roleArn",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretAzureConnector:getSecretAzureConnector": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code/Key to authenticate to deployment URL.\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "Deployment URL.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "code",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretEcr:getSecretEcr": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access Key provided by AWS.\n",
                    "secret": true
                },
                "externalId": {
                    "type": "string",
                    "description": "AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.\n"
                },
                "repos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ECR repositories.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role ARN provided by AWS.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret Key provided by AWS.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "repos",
                "roleArn",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretKeypair:getSecretKeypair": {
            "properties": {
                "passphrase": {
                    "type": "string",
                    "description": "Passphrase for private key.\n",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "Public Key.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret/Private Key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "passphrase",
                "publicKey",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretNatsAccount:getSecretNatsAccount": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account ID.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Private Key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "privateKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretOpaque:getSecretOpaque": {
            "properties": {
                "encoding": {
                    "type": "string",
                    "description": "Available encodings: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`base64`\" pulumi-lang-dotnet=\"`Base64`\" pulumi-lang-go=\"`base64`\" pulumi-lang-python=\"`base64`\" pulumi-lang-yaml=\"`base64`\" pulumi-lang-java=\"`base64`\"\u003e`base64`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e.\n"
                },
                "payload": {
                    "type": "string",
                    "description": "Plain text or base64 encoded string. Use \u003cspan pulumi-lang-nodejs=\"`encoding`\" pulumi-lang-dotnet=\"`Encoding`\" pulumi-lang-go=\"`encoding`\" pulumi-lang-python=\"`encoding`\" pulumi-lang-yaml=\"`encoding`\" pulumi-lang-java=\"`encoding`\"\u003e`encoding`\u003c/span\u003e attribute to specify encoding.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "encoding",
                "payload"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretTl:getSecretTl": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "Public Certificate.\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Chain Certificate.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Private Certificate.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cert",
                "chain",
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getSecretUserpass:getSecretUserpass": {
            "properties": {
                "encoding": {
                    "type": "string",
                    "description": "Available encodings: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`base64`\" pulumi-lang-dotnet=\"`Base64`\" pulumi-lang-go=\"`base64`\" pulumi-lang-python=\"`base64`\" pulumi-lang-yaml=\"`base64`\" pulumi-lang-java=\"`base64`\"\u003e`base64`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "type": "object",
            "required": [
                "encoding",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainer:getWorkloadContainer": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Command line arguments passed to the container at runtime. Replaces the CMD arguments of the running container. It is an ordered list.\n"
                },
                "command": {
                    "type": "string",
                    "description": "Override the entry point.\n"
                },
                "cpu": {
                    "type": "string",
                    "description": "Reserved CPU of the workload when capacityAI is disabled. Maximum CPU when CapacityAI is enabled. Default: \"50m\".\n"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Name-Value list of environment variables.\n"
                },
                "gpuCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerGpuCustom:getWorkloadContainerGpuCustom"
                    }
                },
                "gpuNvidias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerGpuNvidia:getWorkloadContainerGpuNvidia"
                    },
                    "description": "GPUs manufactured by NVIDIA, which are specialized hardware accelerators used to offload and accelerate computationally intensive tasks within the workload.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The full image and tag path.\n"
                },
                "inheritEnv": {
                    "type": "boolean",
                    "description": "Enables inheritance of GVC environment variables. A variable in spec.env will override a GVC variable with the same name.\n"
                },
                "lifecycles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLifecycle:getWorkloadContainerLifecycle"
                    },
                    "description": "Lifecycle [Reference Page](https://docs.controlplane.com/reference/workload#lifecycle).\n"
                },
                "livenessProbes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLivenessProbe:getWorkloadContainerLivenessProbe"
                    },
                    "description": "Liveness Probe\n"
                },
                "memory": {
                    "type": "string",
                    "description": "Reserved memory of the workload when capacityAI is disabled. Maximum memory when CapacityAI is enabled. Default: \"128Mi\".\n"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerMetric:getWorkloadContainerMetric"
                    },
                    "description": "[Reference Page](https://docs.controlplane.com/reference/workload#metrics).\n"
                },
                "minCpu": {
                    "type": "string",
                    "description": "Minimum CPU when capacity AI is enabled.\n"
                },
                "minMemory": {
                    "type": "string",
                    "description": "Minimum memory when capacity AI is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the container.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port the container exposes. Only one container is allowed to specify a port. Min: \u003cspan pulumi-lang-nodejs=\"`80`\" pulumi-lang-dotnet=\"`80`\" pulumi-lang-go=\"`80`\" pulumi-lang-python=\"`80`\" pulumi-lang-yaml=\"`80`\" pulumi-lang-java=\"`80`\"\u003e`80`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`65535`\" pulumi-lang-dotnet=\"`65535`\" pulumi-lang-go=\"`65535`\" pulumi-lang-python=\"`65535`\" pulumi-lang-yaml=\"`65535`\" pulumi-lang-java=\"`65535`\"\u003e`65535`\u003c/span\u003e. Used by \u003cspan pulumi-lang-nodejs=\"`serverless`\" pulumi-lang-dotnet=\"`Serverless`\" pulumi-lang-go=\"`serverless`\" pulumi-lang-python=\"`serverless`\" pulumi-lang-yaml=\"`serverless`\" pulumi-lang-java=\"`serverless`\"\u003e`serverless`\u003c/span\u003e Workload type. **DEPRECATED - Use \u003cspan pulumi-lang-nodejs=\"`ports`\" pulumi-lang-dotnet=\"`Ports`\" pulumi-lang-go=\"`ports`\" pulumi-lang-python=\"`ports`\" pulumi-lang-yaml=\"`ports`\" pulumi-lang-java=\"`ports`\"\u003e`ports`\u003c/span\u003e.**\n",
                    "deprecationMessage": "The 'port' attribute will be deprecated in the next major version. Use the 'ports' attribute instead."
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerPort:getWorkloadContainerPort"
                    },
                    "description": "Communication endpoints used by the workload to send and receive network traffic.\n"
                },
                "readinessProbes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerReadinessProbe:getWorkloadContainerReadinessProbe"
                    },
                    "description": "Readiness Probe\n"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerVolume:getWorkloadContainerVolume"
                    },
                    "description": "Mount Object Store (S3, GCS, AzureBlob) buckets as file system.\n"
                },
                "workingDirectory": {
                    "type": "string",
                    "description": "Override the working directory. Must be an absolute path.\n"
                }
            },
            "type": "object",
            "required": [
                "args",
                "command",
                "cpu",
                "env",
                "image",
                "inheritEnv",
                "memory",
                "minCpu",
                "minMemory",
                "name",
                "port",
                "workingDirectory"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerGpuCustom:getWorkloadContainerGpuCustom": {
            "properties": {
                "quantity": {
                    "type": "integer",
                    "description": "Number of GPUs.\n"
                },
                "resource": {
                    "type": "string"
                },
                "runtimeClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "quantity",
                "resource",
                "runtimeClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerGpuNvidia:getWorkloadContainerGpuNvidia": {
            "properties": {
                "model": {
                    "type": "string",
                    "description": "GPU Model (i.e.: t4)\n"
                },
                "quantity": {
                    "type": "integer",
                    "description": "Number of GPUs.\n"
                }
            },
            "type": "object",
            "required": [
                "model",
                "quantity"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerLifecycle:getWorkloadContainerLifecycle": {
            "properties": {
                "postStarts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLifecyclePostStart:getWorkloadContainerLifecyclePostStart"
                    }
                },
                "preStops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLifecyclePreStop:getWorkloadContainerLifecyclePreStop"
                    }
                }
            },
            "type": "object"
        },
        "cpln:index/getWorkloadContainerLifecyclePostStart:getWorkloadContainerLifecyclePostStart": {
            "properties": {
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLifecyclePostStartExec:getWorkloadContainerLifecyclePostStartExec"
                    }
                }
            },
            "type": "object"
        },
        "cpln:index/getWorkloadContainerLifecyclePostStartExec:getWorkloadContainerLifecyclePostStartExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Command and arguments executed immediately after the container is created.\n"
                }
            },
            "type": "object",
            "required": [
                "commands"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerLifecyclePreStop:getWorkloadContainerLifecyclePreStop": {
            "properties": {
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLifecyclePreStopExec:getWorkloadContainerLifecyclePreStopExec"
                    }
                }
            },
            "type": "object"
        },
        "cpln:index/getWorkloadContainerLifecyclePreStopExec:getWorkloadContainerLifecyclePreStopExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Command and arguments executed immediately before the container is stopped.\n"
                }
            },
            "type": "object",
            "required": [
                "commands"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerLivenessProbe:getWorkloadContainerLivenessProbe": {
            "properties": {
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLivenessProbeExec:getWorkloadContainerLivenessProbeExec"
                    }
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "grpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLivenessProbeGrpc:getWorkloadContainerLivenessProbeGrpc"
                    }
                },
                "httpGets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLivenessProbeHttpGet:getWorkloadContainerLivenessProbeHttpGet"
                    }
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSockets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerLivenessProbeTcpSocket:getWorkloadContainerLivenessProbeTcpSocket"
                    }
                },
                "timeoutSeconds": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "failureThreshold",
                "initialDelaySeconds",
                "periodSeconds",
                "successThreshold",
                "timeoutSeconds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerLivenessProbeExec:getWorkloadContainerLivenessProbeExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "commands"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerLivenessProbeGrpc:getWorkloadContainerLivenessProbeGrpc": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerLivenessProbeHttpGet:getWorkloadContainerLivenessProbeHttpGet": {
            "properties": {
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "scheme": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "httpHeaders",
                "path",
                "port",
                "scheme"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerLivenessProbeTcpSocket:getWorkloadContainerLivenessProbeTcpSocket": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerMetric:getWorkloadContainerMetric": {
            "properties": {
                "dropMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Drop metrics that match given patterns.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path from container emitting custom metrics.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port from container emitting custom metrics.\n"
                }
            },
            "type": "object",
            "required": [
                "dropMetrics",
                "path",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerPort:getWorkloadContainerPort": {
            "properties": {
                "number": {
                    "type": "integer",
                    "description": "Port to expose.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Choice of: \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`http2`\" pulumi-lang-dotnet=\"`Http2`\" pulumi-lang-go=\"`http2`\" pulumi-lang-python=\"`http2`\" pulumi-lang-yaml=\"`http2`\" pulumi-lang-java=\"`http2`\"\u003e`http2`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`grpc`\" pulumi-lang-dotnet=\"`Grpc`\" pulumi-lang-go=\"`grpc`\" pulumi-lang-python=\"`grpc`\" pulumi-lang-yaml=\"`grpc`\" pulumi-lang-java=\"`grpc`\"\u003e`grpc`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "number",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerReadinessProbe:getWorkloadContainerReadinessProbe": {
            "properties": {
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerReadinessProbeExec:getWorkloadContainerReadinessProbeExec"
                    }
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "grpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerReadinessProbeGrpc:getWorkloadContainerReadinessProbeGrpc"
                    }
                },
                "httpGets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerReadinessProbeHttpGet:getWorkloadContainerReadinessProbeHttpGet"
                    }
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSockets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadContainerReadinessProbeTcpSocket:getWorkloadContainerReadinessProbeTcpSocket"
                    }
                },
                "timeoutSeconds": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "failureThreshold",
                "initialDelaySeconds",
                "periodSeconds",
                "successThreshold",
                "timeoutSeconds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerReadinessProbeExec:getWorkloadContainerReadinessProbeExec": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "commands"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerReadinessProbeGrpc:getWorkloadContainerReadinessProbeGrpc": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerReadinessProbeHttpGet:getWorkloadContainerReadinessProbeHttpGet": {
            "properties": {
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "scheme": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "httpHeaders",
                "path",
                "port",
                "scheme"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerReadinessProbeTcpSocket:getWorkloadContainerReadinessProbeTcpSocket": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadContainerVolume:getWorkloadContainerVolume": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "File path added to workload pointing to the volume.\n"
                },
                "recoveryPolicy": {
                    "type": "string",
                    "description": "Only applicable to persistent volumes, this determines what Control Plane will do when creating a new workload replica if a corresponding volume exists. Available Values: \u003cspan pulumi-lang-nodejs=\"`retain`\" pulumi-lang-dotnet=\"`Retain`\" pulumi-lang-go=\"`retain`\" pulumi-lang-python=\"`retain`\" pulumi-lang-yaml=\"`retain`\" pulumi-lang-java=\"`retain`\"\u003e`retain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`recycle`\" pulumi-lang-dotnet=\"`Recycle`\" pulumi-lang-go=\"`recycle`\" pulumi-lang-python=\"`recycle`\" pulumi-lang-yaml=\"`recycle`\" pulumi-lang-java=\"`recycle`\"\u003e`recycle`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`retain`\" pulumi-lang-dotnet=\"`Retain`\" pulumi-lang-go=\"`retain`\" pulumi-lang-python=\"`retain`\" pulumi-lang-yaml=\"`retain`\" pulumi-lang-java=\"`retain`\"\u003e`retain`\u003c/span\u003e. **DEPRECATED - No longer being used.**\n"
                },
                "uri": {
                    "type": "string",
                    "description": "URI of a volume hosted at Control Plane (Volume Set) or at a cloud provider (AWS, Azure, GCP).\n"
                }
            },
            "type": "object",
            "required": [
                "path",
                "recoveryPolicy",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadFirewallSpec:getWorkloadFirewallSpec": {
            "properties": {
                "externals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadFirewallSpecExternal:getWorkloadFirewallSpecExternal"
                    },
                    "description": "The external firewall is used to control inbound and outbound access to the workload for public-facing traffic.\n"
                },
                "internals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadFirewallSpecInternal:getWorkloadFirewallSpecInternal"
                    },
                    "description": "The internal firewall is used to control access between workloads.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/getWorkloadFirewallSpecExternal:getWorkloadFirewallSpecExternal": {
            "properties": {
                "https": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadFirewallSpecExternalHttp:getWorkloadFirewallSpecExternalHttp"
                    },
                    "description": "Firewall options for HTTP workloads.\n"
                },
                "inboundAllowCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that are allowed to access this workload. No external access is allowed by default. Specify '0.0.0.0/0' to allow access to the public internet.\n"
                },
                "inboundBlockedCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that are NOT allowed to access this workload. Addresses in the allow list will only be allowed if they do not exist in this list.\n"
                },
                "outboundAllowCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that this workload is allowed reach. No outbound access is allowed by default. Specify '0.0.0.0/0' to allow outbound access to the public internet.\n"
                },
                "outboundAllowHostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of public hostnames that this workload is allowed to reach. No outbound access is allowed by default. A wildcard `*` is allowed on the prefix of the hostname only, ex: `*.amazonaws.com`. Use `outboundAllowCIDR` to allow access to all external websites.\n"
                },
                "outboundAllowPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadFirewallSpecExternalOutboundAllowPort:getWorkloadFirewallSpecExternalOutboundAllowPort"
                    },
                    "description": "Allow outbound access to specific ports and protocols. When not specified, communication to address ranges in outboundAllowCIDR is allowed on all ports and communication to names in outboundAllowHostname is allowed on ports 80/443.\n"
                },
                "outboundBlockedCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of ipv4/ipv6 addresses or cidr blocks that this workload is NOT allowed to reach. Addresses in the allow list will only be allowed if they do not exist in this list.\n"
                }
            },
            "type": "object",
            "required": [
                "inboundAllowCidrs",
                "inboundBlockedCidrs",
                "outboundAllowCidrs",
                "outboundAllowHostnames",
                "outboundBlockedCidrs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadFirewallSpecExternalHttp:getWorkloadFirewallSpecExternalHttp": {
            "properties": {
                "inboundHeaderFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadFirewallSpecExternalHttpInboundHeaderFilter:getWorkloadFirewallSpecExternalHttpInboundHeaderFilter"
                    },
                    "description": "A list of header filters for HTTP workloads.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/getWorkloadFirewallSpecExternalHttpInboundHeaderFilter:getWorkloadFirewallSpecExternalHttpInboundHeaderFilter": {
            "properties": {
                "allowedValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regular expressions to match for allowed header values. Headers that do not match ANY of these values will be filtered and will not reach the workload.\n"
                },
                "blockedValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regular expressions to match for blocked header values. Headers that match ANY of these values will be filtered and will not reach the workload.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The header to match for.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedValues",
                "blockedValues",
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadFirewallSpecExternalOutboundAllowPort:getWorkloadFirewallSpecExternalOutboundAllowPort": {
            "properties": {
                "number": {
                    "type": "integer",
                    "description": "Port number. Max: 65000\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Either \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "number",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadFirewallSpecInternal:getWorkloadFirewallSpecInternal": {
            "properties": {
                "inboundAllowType": {
                    "type": "string",
                    "description": "Used to control the internal firewall configuration and mutual tls. Allowed Values: \"none\", \"same-gvc\", \"same-org\", \"workload-list\".\n"
                },
                "inboundAllowWorkloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of specific workloads which are allowed to access this workload internally. This list is only used if the 'inboundAllowType' is set to 'workload-list'.\n"
                }
            },
            "type": "object",
            "required": [
                "inboundAllowType",
                "inboundAllowWorkloads"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadJob:getWorkloadJob": {
            "properties": {
                "activeDeadlineSeconds": {
                    "type": "integer",
                    "description": "The maximum number of seconds Control Plane will wait for the job to complete. If a job does not succeed or fail in the allotted time, Control Plane will stop the job, moving it into the Removed status.\n"
                },
                "concurrencyPolicy": {
                    "type": "string",
                    "description": "Either 'Forbid' or 'Replace'. This determines what Control Plane will do when the schedule requires a job to start, while a prior instance of the job is still running. Enum: [ Forbid, Replace ] Default: `Forbid`.\n"
                },
                "historyLimit": {
                    "type": "integer",
                    "description": "The maximum number of completed job instances to display. This should be an integer between 1 and 10. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                },
                "restartPolicy": {
                    "type": "string",
                    "description": "Either 'OnFailure' or 'Never'. This determines what Control Plane will do when a job instance fails. Enum: [ OnFailure, Never ] Default: `Never`.\n"
                },
                "schedule": {
                    "type": "string",
                    "description": "A standard cron [schedule expression](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#schedule-syntax) used to determine when your job should execute.\n"
                }
            },
            "type": "object",
            "required": [
                "activeDeadlineSeconds",
                "concurrencyPolicy",
                "historyLimit",
                "restartPolicy",
                "schedule"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLoadBalancer:getWorkloadLoadBalancer": {
            "properties": {
                "directs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLoadBalancerDirect:getWorkloadLoadBalancerDirect"
                    },
                    "description": "Direct load balancers are created in each location that a workload is running in and are configured for the standard endpoints of the workload. Customers are responsible for configuring the workload with certificates if TLS is required.\n"
                },
                "geoLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLoadBalancerGeoLocation:getWorkloadLoadBalancerGeoLocation"
                    }
                },
                "replicaDirect": {
                    "type": "boolean",
                    "description": "When enabled, individual replicas of the workload can be reached directly using the subdomain prefix replica-\u003cindex\u003e. For example, replica-0.my-workload.my-gvc.cpln.local or replica-0.my-workload-\u003cgvc-alias\u003e.cpln.app - Can only be used with stateful workloads.\n"
                }
            },
            "type": "object",
            "required": [
                "replicaDirect"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLoadBalancerDirect:getWorkloadLoadBalancerDirect": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "When disabled, this load balancer will be stopped.\n"
                },
                "ipset": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLoadBalancerDirectPort:getWorkloadLoadBalancerDirectPort"
                    },
                    "description": "List of ports that will be exposed by this load balancer.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "ipset"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLoadBalancerDirectPort:getWorkloadLoadBalancerDirectPort": {
            "properties": {
                "containerPort": {
                    "type": "integer",
                    "description": "The port on the container tha will receive this traffic.\n"
                },
                "externalPort": {
                    "type": "integer",
                    "description": "The port that is available publicly.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol that is exposed publicly.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Overrides the default \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e url scheme that will be used for links in the UI and status.\n"
                }
            },
            "type": "object",
            "required": [
                "containerPort",
                "externalPort",
                "protocol",
                "scheme"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLoadBalancerGeoLocation:getWorkloadLoadBalancerGeoLocation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "When enabled, geo location headers will be included on inbound http requests. Existing headers will be replaced.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLoadBalancerGeoLocationHeader:getWorkloadLoadBalancerGeoLocationHeader"
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLoadBalancerGeoLocationHeader:getWorkloadLoadBalancerGeoLocationHeader": {
            "properties": {
                "asn": {
                    "type": "string",
                    "description": "The geo asn header.\n"
                },
                "city": {
                    "type": "string",
                    "description": "The geo city header.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The geo country header.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The geo region header.\n"
                }
            },
            "type": "object",
            "required": [
                "asn",
                "city",
                "country",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLocalOption:getWorkloadLocalOption": {
            "properties": {
                "autoscalings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionAutoscaling:getWorkloadLocalOptionAutoscaling"
                    },
                    "description": "Auto-scaling adjusts horizontal scaling based on a set strategy, target value, and possibly a metric percentile.\n"
                },
                "capacityAi": {
                    "type": "boolean",
                    "description": "Capacity AI. Default: \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "capacityAiUpdateMinutes": {
                    "type": "integer",
                    "description": "The highest frequency capacity AI is allowed to update resource reservations when CapacityAI is enabled.\n"
                },
                "debug": {
                    "type": "boolean",
                    "description": "Debug mode. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Valid only for \u003cspan pulumi-lang-nodejs=\"`localOptions`\" pulumi-lang-dotnet=\"`LocalOptions`\" pulumi-lang-go=\"`localOptions`\" pulumi-lang-python=\"`local_options`\" pulumi-lang-yaml=\"`localOptions`\" pulumi-lang-java=\"`localOptions`\"\u003e`local_options`\u003c/span\u003e. Override options for a specific location.\n"
                },
                "multiZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionMultiZone:getWorkloadLocalOptionMultiZone"
                    }
                },
                "suspend": {
                    "type": "boolean",
                    "description": "Workload suspend. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "description": "Timeout in seconds. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "capacityAi",
                "capacityAiUpdateMinutes",
                "debug",
                "location",
                "suspend",
                "timeoutSeconds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "location"
                    ]
                }
            }
        },
        "cpln:index/getWorkloadLocalOptionAutoscaling:getWorkloadLocalOptionAutoscaling": {
            "properties": {
                "kedas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionAutoscalingKeda:getWorkloadLocalOptionAutoscalingKeda"
                    },
                    "description": "KEDA (Kubernetes-based Event Driven Autoscaling) allows for advanced autoscaling based on external metrics and triggers.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "A hard maximum for the number of concurrent requests allowed to a replica. If no replicas are available to fulfill the request then it will be queued until a replica with capacity is available and delivered as soon as one is available again. Capacity can be available from requests completing or when a new replica is available from scale out.Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`1000`\" pulumi-lang-dotnet=\"`1000`\" pulumi-lang-go=\"`1000`\" pulumi-lang-python=\"`1000`\" pulumi-lang-yaml=\"`1000`\" pulumi-lang-java=\"`1000`\"\u003e`1000`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e.\n"
                },
                "maxScale": {
                    "type": "integer",
                    "description": "The maximum allowed number of replicas. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`concurrency`\" pulumi-lang-dotnet=\"`Concurrency`\" pulumi-lang-go=\"`concurrency`\" pulumi-lang-python=\"`concurrency`\" pulumi-lang-yaml=\"`concurrency`\" pulumi-lang-java=\"`concurrency`\"\u003e`concurrency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rps`\" pulumi-lang-dotnet=\"`Rps`\" pulumi-lang-go=\"`rps`\" pulumi-lang-python=\"`rps`\" pulumi-lang-yaml=\"`rps`\" pulumi-lang-java=\"`rps`\"\u003e`rps`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`latency`\" pulumi-lang-dotnet=\"`Latency`\" pulumi-lang-go=\"`latency`\" pulumi-lang-python=\"`latency`\" pulumi-lang-yaml=\"`latency`\" pulumi-lang-java=\"`latency`\"\u003e`latency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`keda`\" pulumi-lang-dotnet=\"`Keda`\" pulumi-lang-go=\"`keda`\" pulumi-lang-python=\"`keda`\" pulumi-lang-yaml=\"`keda`\" pulumi-lang-java=\"`keda`\"\u003e`keda`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e.\n"
                },
                "metricPercentile": {
                    "type": "string",
                    "description": "For metrics represented as a distribution (e.g. latency) a percentile within the distribution must be chosen as the target.\n"
                },
                "minScale": {
                    "type": "integer",
                    "description": "The minimum allowed number of replicas. Control Plane can scale the workload down to 0 when there is no traffic and scale up immediately to fulfill new requests. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`maxScale`\" pulumi-lang-dotnet=\"`MaxScale`\" pulumi-lang-go=\"`maxScale`\" pulumi-lang-python=\"`max_scale`\" pulumi-lang-yaml=\"`maxScale`\" pulumi-lang-java=\"`maxScale`\"\u003e`max_scale`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e.\n"
                },
                "multis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionAutoscalingMulti:getWorkloadLocalOptionAutoscalingMulti"
                    }
                },
                "scaleToZeroDelay": {
                    "type": "integer",
                    "description": "The amount of time (in seconds) with no requests received before a workload is scaled to 0. Min: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`3600`\" pulumi-lang-dotnet=\"`3600`\" pulumi-lang-go=\"`3600`\" pulumi-lang-python=\"`3600`\" pulumi-lang-yaml=\"`3600`\" pulumi-lang-java=\"`3600`\"\u003e`3600`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`300`\" pulumi-lang-dotnet=\"`300`\" pulumi-lang-go=\"`300`\" pulumi-lang-python=\"`300`\" pulumi-lang-yaml=\"`300`\" pulumi-lang-java=\"`300`\"\u003e`300`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`95`\" pulumi-lang-dotnet=\"`95`\" pulumi-lang-go=\"`95`\" pulumi-lang-python=\"`95`\" pulumi-lang-yaml=\"`95`\" pulumi-lang-java=\"`95`\"\u003e`95`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "maxConcurrency",
                "maxScale",
                "metric",
                "metricPercentile",
                "minScale",
                "scaleToZeroDelay",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLocalOptionAutoscalingKeda:getWorkloadLocalOptionAutoscalingKeda": {
            "properties": {
                "advanceds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionAutoscalingKedaAdvanced:getWorkloadLocalOptionAutoscalingKedaAdvanced"
                    },
                    "description": "Advanced configuration options for KEDA.\n"
                },
                "cooldownPeriod": {
                    "type": "integer",
                    "description": "The cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "initialCooldownPeriod": {
                    "type": "integer",
                    "description": "The initial cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "pollingInterval": {
                    "type": "integer",
                    "description": "The interval in seconds at which KEDA will poll the external metrics to determine if scaling is required.\n"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionAutoscalingKedaTrigger:getWorkloadLocalOptionAutoscalingKedaTrigger"
                    },
                    "description": "An array of KEDA triggers to be used for scaling workloads in this GVC. This is used to define how KEDA will scale workloads in the GVC based on external metrics or events. Each trigger type may have its own specific configuration options.\n"
                }
            },
            "type": "object",
            "required": [
                "cooldownPeriod",
                "initialCooldownPeriod",
                "pollingInterval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLocalOptionAutoscalingKedaAdvanced:getWorkloadLocalOptionAutoscalingKedaAdvanced": {
            "properties": {
                "scalingModifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionAutoscalingKedaAdvancedScalingModifier:getWorkloadLocalOptionAutoscalingKedaAdvancedScalingModifier"
                    },
                    "description": "Scaling modifiers allow for fine-tuning the scaling behavior of KEDA.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/getWorkloadLocalOptionAutoscalingKedaAdvancedScalingModifier:getWorkloadLocalOptionAutoscalingKedaAdvancedScalingModifier": {
            "properties": {
                "activationTarget": {
                    "type": "string",
                    "description": "Defines the new activation target value to scale on for the composed metric.\n"
                },
                "formula": {
                    "type": "string",
                    "description": "Composes metrics together and allows them to be modified/manipulated. It accepts mathematical/conditional statements.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "Defines metric type used for this new composite-metric.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Defines new target value to scale on for the composed metric.\n"
                }
            },
            "type": "object",
            "required": [
                "activationTarget",
                "formula",
                "metricType",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLocalOptionAutoscalingKedaTrigger:getWorkloadLocalOptionAutoscalingKedaTrigger": {
            "properties": {
                "authenticationReves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef:getWorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef"
                    },
                    "description": "Reference to a KEDA authentication object for secure access to external systems.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The configuration parameters that the trigger requires.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "The type of metric to be used for scaling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the trigger. If not provided, a default name will be generated based on the trigger type.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of KEDA trigger, e.g \"prometheus\", \"aws-sqs\", etc.\n"
                },
                "useCachedMetrics": {
                    "type": "boolean",
                    "description": "Enables caching of metric values during polling interval.\n"
                }
            },
            "type": "object",
            "required": [
                "metadata",
                "metricType",
                "name",
                "type",
                "useCachedMetrics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef:getWorkloadLocalOptionAutoscalingKedaTriggerAuthenticationRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of secret listed in the GVC spec.keda.secrets.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLocalOptionAutoscalingMulti:getWorkloadLocalOptionAutoscalingMulti": {
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "metric",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadLocalOptionMultiZone:getWorkloadLocalOptionMultiZone": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOption:getWorkloadOption": {
            "properties": {
                "autoscalings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionAutoscaling:getWorkloadOptionAutoscaling"
                    },
                    "description": "Auto-scaling adjusts horizontal scaling based on a set strategy, target value, and possibly a metric percentile.\n"
                },
                "capacityAi": {
                    "type": "boolean",
                    "description": "Capacity AI. Default: \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "capacityAiUpdateMinutes": {
                    "type": "integer",
                    "description": "The highest frequency capacity AI is allowed to update resource reservations when CapacityAI is enabled.\n"
                },
                "debug": {
                    "type": "boolean",
                    "description": "Debug mode. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "multiZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionMultiZone:getWorkloadOptionMultiZone"
                    }
                },
                "suspend": {
                    "type": "boolean",
                    "description": "Workload suspend. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "description": "Timeout in seconds. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "capacityAi",
                "capacityAiUpdateMinutes",
                "debug",
                "suspend",
                "timeoutSeconds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOptionAutoscaling:getWorkloadOptionAutoscaling": {
            "properties": {
                "kedas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionAutoscalingKeda:getWorkloadOptionAutoscalingKeda"
                    },
                    "description": "KEDA (Kubernetes-based Event Driven Autoscaling) allows for advanced autoscaling based on external metrics and triggers.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "A hard maximum for the number of concurrent requests allowed to a replica. If no replicas are available to fulfill the request then it will be queued until a replica with capacity is available and delivered as soon as one is available again. Capacity can be available from requests completing or when a new replica is available from scale out.Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`1000`\" pulumi-lang-dotnet=\"`1000`\" pulumi-lang-go=\"`1000`\" pulumi-lang-python=\"`1000`\" pulumi-lang-yaml=\"`1000`\" pulumi-lang-java=\"`1000`\"\u003e`1000`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e.\n"
                },
                "maxScale": {
                    "type": "integer",
                    "description": "The maximum allowed number of replicas. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`concurrency`\" pulumi-lang-dotnet=\"`Concurrency`\" pulumi-lang-go=\"`concurrency`\" pulumi-lang-python=\"`concurrency`\" pulumi-lang-yaml=\"`concurrency`\" pulumi-lang-java=\"`concurrency`\"\u003e`concurrency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rps`\" pulumi-lang-dotnet=\"`Rps`\" pulumi-lang-go=\"`rps`\" pulumi-lang-python=\"`rps`\" pulumi-lang-yaml=\"`rps`\" pulumi-lang-java=\"`rps`\"\u003e`rps`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`latency`\" pulumi-lang-dotnet=\"`Latency`\" pulumi-lang-go=\"`latency`\" pulumi-lang-python=\"`latency`\" pulumi-lang-yaml=\"`latency`\" pulumi-lang-java=\"`latency`\"\u003e`latency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`keda`\" pulumi-lang-dotnet=\"`Keda`\" pulumi-lang-go=\"`keda`\" pulumi-lang-python=\"`keda`\" pulumi-lang-yaml=\"`keda`\" pulumi-lang-java=\"`keda`\"\u003e`keda`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e.\n"
                },
                "metricPercentile": {
                    "type": "string",
                    "description": "For metrics represented as a distribution (e.g. latency) a percentile within the distribution must be chosen as the target.\n"
                },
                "minScale": {
                    "type": "integer",
                    "description": "The minimum allowed number of replicas. Control Plane can scale the workload down to 0 when there is no traffic and scale up immediately to fulfill new requests. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`maxScale`\" pulumi-lang-dotnet=\"`MaxScale`\" pulumi-lang-go=\"`maxScale`\" pulumi-lang-python=\"`max_scale`\" pulumi-lang-yaml=\"`maxScale`\" pulumi-lang-java=\"`maxScale`\"\u003e`max_scale`\u003c/span\u003e. Default \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e.\n"
                },
                "multis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionAutoscalingMulti:getWorkloadOptionAutoscalingMulti"
                    }
                },
                "scaleToZeroDelay": {
                    "type": "integer",
                    "description": "The amount of time (in seconds) with no requests received before a workload is scaled to 0. Min: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`3600`\" pulumi-lang-dotnet=\"`3600`\" pulumi-lang-go=\"`3600`\" pulumi-lang-python=\"`3600`\" pulumi-lang-yaml=\"`3600`\" pulumi-lang-java=\"`3600`\"\u003e`3600`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`300`\" pulumi-lang-dotnet=\"`300`\" pulumi-lang-go=\"`300`\" pulumi-lang-python=\"`300`\" pulumi-lang-yaml=\"`300`\" pulumi-lang-java=\"`300`\"\u003e`300`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`95`\" pulumi-lang-dotnet=\"`95`\" pulumi-lang-go=\"`95`\" pulumi-lang-python=\"`95`\" pulumi-lang-yaml=\"`95`\" pulumi-lang-java=\"`95`\"\u003e`95`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "maxConcurrency",
                "maxScale",
                "metric",
                "metricPercentile",
                "minScale",
                "scaleToZeroDelay",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOptionAutoscalingKeda:getWorkloadOptionAutoscalingKeda": {
            "properties": {
                "advanceds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionAutoscalingKedaAdvanced:getWorkloadOptionAutoscalingKedaAdvanced"
                    },
                    "description": "Advanced configuration options for KEDA.\n"
                },
                "cooldownPeriod": {
                    "type": "integer",
                    "description": "The cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "initialCooldownPeriod": {
                    "type": "integer",
                    "description": "The initial cooldown period in seconds after scaling down to 0 replicas before KEDA will allow scaling up again.\n"
                },
                "pollingInterval": {
                    "type": "integer",
                    "description": "The interval in seconds at which KEDA will poll the external metrics to determine if scaling is required.\n"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionAutoscalingKedaTrigger:getWorkloadOptionAutoscalingKedaTrigger"
                    },
                    "description": "An array of KEDA triggers to be used for scaling workloads in this GVC. This is used to define how KEDA will scale workloads in the GVC based on external metrics or events. Each trigger type may have its own specific configuration options.\n"
                }
            },
            "type": "object",
            "required": [
                "cooldownPeriod",
                "initialCooldownPeriod",
                "pollingInterval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOptionAutoscalingKedaAdvanced:getWorkloadOptionAutoscalingKedaAdvanced": {
            "properties": {
                "scalingModifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionAutoscalingKedaAdvancedScalingModifier:getWorkloadOptionAutoscalingKedaAdvancedScalingModifier"
                    },
                    "description": "Scaling modifiers allow for fine-tuning the scaling behavior of KEDA.\n"
                }
            },
            "type": "object"
        },
        "cpln:index/getWorkloadOptionAutoscalingKedaAdvancedScalingModifier:getWorkloadOptionAutoscalingKedaAdvancedScalingModifier": {
            "properties": {
                "activationTarget": {
                    "type": "string",
                    "description": "Defines the new activation target value to scale on for the composed metric.\n"
                },
                "formula": {
                    "type": "string",
                    "description": "Composes metrics together and allows them to be modified/manipulated. It accepts mathematical/conditional statements.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "Defines metric type used for this new composite-metric.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Defines new target value to scale on for the composed metric.\n"
                }
            },
            "type": "object",
            "required": [
                "activationTarget",
                "formula",
                "metricType",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOptionAutoscalingKedaTrigger:getWorkloadOptionAutoscalingKedaTrigger": {
            "properties": {
                "authenticationReves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadOptionAutoscalingKedaTriggerAuthenticationRef:getWorkloadOptionAutoscalingKedaTriggerAuthenticationRef"
                    },
                    "description": "Reference to a KEDA authentication object for secure access to external systems.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The configuration parameters that the trigger requires.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "The type of metric to be used for scaling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the trigger. If not provided, a default name will be generated based on the trigger type.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of KEDA trigger, e.g \"prometheus\", \"aws-sqs\", etc.\n"
                },
                "useCachedMetrics": {
                    "type": "boolean",
                    "description": "Enables caching of metric values during polling interval.\n"
                }
            },
            "type": "object",
            "required": [
                "metadata",
                "metricType",
                "name",
                "type",
                "useCachedMetrics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOptionAutoscalingKedaTriggerAuthenticationRef:getWorkloadOptionAutoscalingKedaTriggerAuthenticationRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of secret listed in the GVC spec.keda.secrets.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOptionAutoscalingMulti:getWorkloadOptionAutoscalingMulti": {
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "Valid values: \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e.\n"
                },
                "target": {
                    "type": "integer",
                    "description": "Control Plane will scale the number of replicas for this deployment up/down in order to be as close as possible to the target metric across all replicas of a deployment. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "metric",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadOptionMultiZone:getWorkloadOptionMultiZone": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadRequestRetryPolicy:getWorkloadRequestRetryPolicy": {
            "properties": {
                "attempts": {
                    "type": "integer"
                },
                "retryOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "attempts",
                "retryOns"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadRolloutOption:getWorkloadRolloutOption": {
            "properties": {
                "maxSurgeReplicas": {
                    "type": "string",
                    "description": "The number of replicas that can be created above the desired amount of replicas during an update.\n"
                },
                "maxUnavailableReplicas": {
                    "type": "string",
                    "description": "The number of replicas that can be unavailable during the update process.\n"
                },
                "minReadySeconds": {
                    "type": "integer",
                    "description": "The minimum number of seconds a container must run without crashing to be considered available.\n"
                },
                "scalingPolicy": {
                    "type": "string",
                    "description": "The strategies used to update applications and services deployed. Valid values: `OrderedReady` (Updates workloads in a rolling fashion, taking down old ones and bringing up new ones incrementally, ensuring that the service remains available during the update.), `Parallel` (Causes all pods affected by a scaling operation to be created or destroyed simultaneously. This does not affect update operations.). Default: `OrderedReady`.\n"
                },
                "terminationGracePeriodSeconds": {
                    "type": "integer",
                    "description": "The amount of time in seconds a workload has to gracefully terminate before forcefully terminating it. This includes the time it takes for the preStop hook to run.\n"
                }
            },
            "type": "object",
            "required": [
                "maxSurgeReplicas",
                "maxUnavailableReplicas",
                "minReadySeconds",
                "scalingPolicy",
                "terminationGracePeriodSeconds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadSecurityOption:getWorkloadSecurityOption": {
            "properties": {
                "fileSystemGroupId": {
                    "type": "integer",
                    "description": "The group id assigned to any mounted volume.\n"
                }
            },
            "type": "object",
            "required": [
                "fileSystemGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadSidecar:getWorkloadSidecar": {
            "properties": {
                "envoy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "envoy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadStatus:getWorkloadStatus": {
            "properties": {
                "canonicalEndpoint": {
                    "type": "string",
                    "description": "Canonical endpoint for the workload.\n"
                },
                "currentReplicaCount": {
                    "type": "integer",
                    "description": "Current amount of replicas deployed.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint for the workload.\n"
                },
                "healthChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadStatusHealthCheck:getWorkloadStatusHealthCheck"
                    },
                    "description": "Current health status.\n"
                },
                "internalName": {
                    "type": "string",
                    "description": "Internal hostname for the workload. Used for service-to-service requests.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadStatusLoadBalancer:getWorkloadStatusLoadBalancer"
                    }
                },
                "parentId": {
                    "type": "string",
                    "description": "ID of the parent object.\n"
                },
                "replicaInternalNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resolvedImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadStatusResolvedImage:getWorkloadStatusResolvedImage"
                    },
                    "description": "Resolved images for workloads with dynamic tags enabled.\n"
                }
            },
            "type": "object",
            "required": [
                "canonicalEndpoint",
                "currentReplicaCount",
                "endpoint",
                "healthChecks",
                "internalName",
                "loadBalancers",
                "parentId",
                "replicaInternalNames",
                "resolvedImages"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadStatusHealthCheck:getWorkloadStatusHealthCheck": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Active boolean for the associated workload.\n"
                },
                "code": {
                    "type": "integer",
                    "description": "Current output code for the associated workload.\n"
                },
                "failures": {
                    "type": "integer",
                    "description": "Failure integer for the associated workload.\n"
                },
                "lastChecked": {
                    "type": "string",
                    "description": "Timestamp in UTC of the last health check.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Current health status for the associated workload.\n"
                },
                "success": {
                    "type": "boolean",
                    "description": "Success boolean for the associated workload.\n"
                },
                "successes": {
                    "type": "integer",
                    "description": "Success integer for the associated workload.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "code",
                "failures",
                "lastChecked",
                "message",
                "success",
                "successes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadStatusLoadBalancer:getWorkloadStatusLoadBalancer": {
            "properties": {
                "origin": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "origin",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadStatusResolvedImage:getWorkloadStatusResolvedImage": {
            "properties": {
                "errorMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadStatusResolvedImageImage:getWorkloadStatusResolvedImageImage"
                    },
                    "description": "A list of images that were resolved.\n"
                },
                "nextRetryAt": {
                    "type": "string"
                },
                "resolvedAt": {
                    "type": "string",
                    "description": "UTC Time when the images were resolved.\n"
                },
                "resolvedForVersion": {
                    "type": "integer",
                    "description": "Workload version the images were resolved for.\n"
                }
            },
            "type": "object",
            "required": [
                "errorMessages",
                "images",
                "nextRetryAt",
                "resolvedAt",
                "resolvedForVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadStatusResolvedImageImage:getWorkloadStatusResolvedImageImage": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A unique SHA256 hash value that identifies a specific image content. This digest serves as a fingerprint of the image's content, ensuring the image you pull or run is exactly what you expect, without any modifications or corruptions.\n"
                },
                "manifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/getWorkloadStatusResolvedImageImageManifest:getWorkloadStatusResolvedImageImageManifest"
                    }
                }
            },
            "type": "object",
            "required": [
                "digest",
                "manifests"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cpln:index/getWorkloadStatusResolvedImageImageManifest:getWorkloadStatusResolvedImageImageManifest": {
            "properties": {
                "digest": {
                    "type": "string",
                    "description": "A SHA256 hash that uniquely identifies the specific image manifest.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The name and tag of the resolved image.\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "The MIME type used in the Docker Registry HTTP API to specify the format of the data being sent or received. Docker uses media types to distinguish between different kinds of JSON objects and binary data formats within the registry protocol, enabling the Docker client and registry to understand and process different components of Docker images correctly.\n"
                },
                "platform": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of strings. The combination of the operating system and architecture for which the image is built.\n"
                }
            },
            "type": "object",
            "required": [
                "digest",
                "image",
                "mediaType",
                "platform"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the cpln package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "endpoint": {
                "type": "string",
                "description": "The Control Plane Data Service API endpoint. Default is: https://api.cpln.io. Can be specified with the CPLN_ENDPOINT environment variable."
            },
            "org": {
                "type": "string",
                "description": "The Control Plane org that this provider will perform actions against. Can be specified with the CPLN_ORG environment variable."
            },
            "profile": {
                "type": "string",
                "description": "The user/service account profile that this provider will use to authenticate to the data service. Can be specified with the CPLN_PROFILE environment variable."
            },
            "refreshToken": {
                "type": "string",
                "description": "A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_REFRESH_TOKEN environment variable. Used when the provider is required to create an org or update the\u003cspan pulumi-lang-nodejs=\" authConfig \" pulumi-lang-dotnet=\" AuthConfig \" pulumi-lang-go=\" authConfig \" pulumi-lang-python=\" auth_config \" pulumi-lang-yaml=\" authConfig \" pulumi-lang-java=\" authConfig \"\u003e auth_config \u003c/span\u003eproperty. Refer to the section above on how to obtain the refresh token.",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_TOKEN environment variable.",
                "secret": true
            }
        },
        "inputProperties": {
            "endpoint": {
                "type": "string",
                "description": "The Control Plane Data Service API endpoint. Default is: https://api.cpln.io. Can be specified with the CPLN_ENDPOINT environment variable."
            },
            "org": {
                "type": "string",
                "description": "The Control Plane org that this provider will perform actions against. Can be specified with the CPLN_ORG environment variable."
            },
            "profile": {
                "type": "string",
                "description": "The user/service account profile that this provider will use to authenticate to the data service. Can be specified with the CPLN_PROFILE environment variable."
            },
            "refreshToken": {
                "type": "string",
                "description": "A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_REFRESH_TOKEN environment variable. Used when the provider is required to create an org or update the\u003cspan pulumi-lang-nodejs=\" authConfig \" pulumi-lang-dotnet=\" AuthConfig \" pulumi-lang-go=\" authConfig \" pulumi-lang-python=\" auth_config \" pulumi-lang-yaml=\" authConfig \" pulumi-lang-java=\" authConfig \"\u003e auth_config \u003c/span\u003eproperty. Refer to the section above on how to obtain the refresh token.",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "A generated token that can be used to authenticate to the data service API. Can be specified with the CPLN_TOKEN environment variable.",
                "secret": true
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:cpln/terraformConfig"
        }
    },
    "resources": {
        "cpln:index/agent:Agent": {
            "properties": {
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Agent."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Agent."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Agent."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "userData": {
                    "type": "string",
                    "description": "The JSON output needed when creating an agent.",
                    "secret": true
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "selfLink",
                "tags",
                "userData"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Agent."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Agent."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Agent resources.\n",
                "properties": {
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Agent."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Agent."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Agent."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    },
                    "userData": {
                        "type": "string",
                        "description": "The JSON output needed when creating an agent.",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/auditContext:AuditContext": {
            "properties": {
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Audit Context."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Audit Context."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Audit Context."
                },
                "origin": {
                    "type": "string"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "origin",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Audit Context."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Audit Context."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuditContext resources.\n",
                "properties": {
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Audit Context."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Audit Context."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Audit Context."
                    },
                    "origin": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/cloudAccount:CloudAccount": {
            "properties": {
                "aws": {
                    "$ref": "#/types/cpln:index/CloudAccountAws:CloudAccountAws",
                    "description": "Contains AWS cloud account configuration."
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/CloudAccountAzure:CloudAccountAzure"
                    },
                    "description": "Contains Azure cloud account configuration."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Cloud Account."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Cloud Account."
                },
                "gcp": {
                    "$ref": "#/types/cpln:index/CloudAccountGcp:CloudAccountGcp",
                    "description": "Contains GCP cloud account configuration."
                },
                "gcpRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "GCP roles used during the configuration of the cloud account at GCP."
                },
                "gcpServiceAccountName": {
                    "type": "string",
                    "description": "GCP service account name used during the configuration of the cloud account at GCP."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Cloud Account."
                },
                "ngs": {
                    "$ref": "#/types/cpln:index/CloudAccountNgs:CloudAccountNgs",
                    "description": "Contains NGS cloud account configuration."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "gcpRoles",
                "gcpServiceAccountName",
                "name",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "aws": {
                    "$ref": "#/types/cpln:index/CloudAccountAws:CloudAccountAws",
                    "description": "Contains AWS cloud account configuration."
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/CloudAccountAzure:CloudAccountAzure"
                    },
                    "description": "Contains Azure cloud account configuration."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Cloud Account."
                },
                "gcp": {
                    "$ref": "#/types/cpln:index/CloudAccountGcp:CloudAccountGcp",
                    "description": "Contains GCP cloud account configuration."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Cloud Account."
                },
                "ngs": {
                    "$ref": "#/types/cpln:index/CloudAccountNgs:CloudAccountNgs",
                    "description": "Contains NGS cloud account configuration."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudAccount resources.\n",
                "properties": {
                    "aws": {
                        "$ref": "#/types/cpln:index/CloudAccountAws:CloudAccountAws",
                        "description": "Contains AWS cloud account configuration."
                    },
                    "azures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/CloudAccountAzure:CloudAccountAzure"
                        },
                        "description": "Contains Azure cloud account configuration."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Cloud Account."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Cloud Account."
                    },
                    "gcp": {
                        "$ref": "#/types/cpln:index/CloudAccountGcp:CloudAccountGcp",
                        "description": "Contains GCP cloud account configuration."
                    },
                    "gcpRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "GCP roles used during the configuration of the cloud account at GCP."
                    },
                    "gcpServiceAccountName": {
                        "type": "string",
                        "description": "GCP service account name used during the configuration of the cloud account at GCP."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Cloud Account."
                    },
                    "ngs": {
                        "$ref": "#/types/cpln:index/CloudAccountNgs:CloudAccountNgs",
                        "description": "Contains NGS cloud account configuration."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/customLocation:CustomLocation": {
            "properties": {
                "cloudProvider": {
                    "type": "string",
                    "description": "Cloud Provider of the custom location."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Custom Location."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Custom Location."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indication if the custom location is enabled."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Custom Location."
                },
                "origin": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the location."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cloudProvider",
                "cplnId",
                "description",
                "enabled",
                "name",
                "origin",
                "region",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "cloudProvider": {
                    "type": "string",
                    "description": "Cloud Provider of the custom location."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Custom Location."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indication if the custom location is enabled."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Custom Location."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "requiredInputs": [
                "cloudProvider",
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomLocation resources.\n",
                "properties": {
                    "cloudProvider": {
                        "type": "string",
                        "description": "Cloud Provider of the custom location."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Custom Location."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Custom Location."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indication if the custom location is enabled."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Custom Location."
                    },
                    "origin": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the location."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/domain:Domain": {
            "properties": {
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Domain."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Domain."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Domain."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "spec": {
                    "$ref": "#/types/cpln:index/DomainSpec:DomainSpec",
                    "description": "Domain specification."
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/DomainStatus:DomainStatus"
                    },
                    "description": "Domain status."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "selfLink",
                "statuses",
                "tags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Domain."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Domain."
                },
                "spec": {
                    "$ref": "#/types/cpln:index/DomainSpec:DomainSpec",
                    "description": "Domain specification."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Domain."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Domain."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Domain."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "spec": {
                        "$ref": "#/types/cpln:index/DomainSpec:DomainSpec",
                        "description": "Domain specification."
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/DomainStatus:DomainStatus"
                        },
                        "description": "Domain status."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/domainRoute:DomainRoute": {
            "properties": {
                "domainLink": {
                    "type": "string",
                    "description": "The self link of the domain to add the route to."
                },
                "domainPort": {
                    "type": "integer",
                    "description": "The port the route corresponds to. Default: 443"
                },
                "headers": {
                    "$ref": "#/types/cpln:index/DomainRouteHeaders:DomainRouteHeaders",
                    "description": "Modify the headers for all http requests for this route."
                },
                "hostPrefix": {
                    "type": "string",
                    "description": "This option allows forwarding traffic for different host headers to different workloads. This will only be used when the target GVC has dedicated load balancing enabled and the Domain is configured for wildcard support. Please contact us on Slack or at support@controlplane.com for additional details."
                },
                "hostRegex": {
                    "type": "string",
                    "description": "A regex to match the host header. This will only be used when the target GVC has dedicated load balancing enabled and the Domain is configure for wildcard support. Contact your account manager for details."
                },
                "port": {
                    "type": "integer",
                    "description": "For the linked workload, the port to route traffic to."
                },
                "prefix": {
                    "type": "string",
                    "description": "The path will match any unmatched path prefixes for the subdomain."
                },
                "regex": {
                    "type": "string",
                    "description": "Used to match URI paths. Uses the google re2 regex syntax."
                },
                "replacePrefix": {
                    "type": "string",
                    "description": "A path prefix can be configured to be replaced when forwarding the request to the Workload."
                },
                "replica": {
                    "type": "integer",
                    "description": "The replica number of a stateful workload to route to. If not provided, traffic will be routed to all replicas."
                },
                "workloadLink": {
                    "type": "string",
                    "description": "The link of the workload to map the prefix to."
                }
            },
            "required": [
                "domainLink",
                "domainPort",
                "workloadLink"
            ],
            "inputProperties": {
                "domainLink": {
                    "type": "string",
                    "description": "The self link of the domain to add the route to."
                },
                "domainPort": {
                    "type": "integer",
                    "description": "The port the route corresponds to. Default: 443"
                },
                "headers": {
                    "$ref": "#/types/cpln:index/DomainRouteHeaders:DomainRouteHeaders",
                    "description": "Modify the headers for all http requests for this route."
                },
                "hostPrefix": {
                    "type": "string",
                    "description": "This option allows forwarding traffic for different host headers to different workloads. This will only be used when the target GVC has dedicated load balancing enabled and the Domain is configured for wildcard support. Please contact us on Slack or at support@controlplane.com for additional details."
                },
                "hostRegex": {
                    "type": "string",
                    "description": "A regex to match the host header. This will only be used when the target GVC has dedicated load balancing enabled and the Domain is configure for wildcard support. Contact your account manager for details."
                },
                "port": {
                    "type": "integer",
                    "description": "For the linked workload, the port to route traffic to."
                },
                "prefix": {
                    "type": "string",
                    "description": "The path will match any unmatched path prefixes for the subdomain."
                },
                "regex": {
                    "type": "string",
                    "description": "Used to match URI paths. Uses the google re2 regex syntax."
                },
                "replacePrefix": {
                    "type": "string",
                    "description": "A path prefix can be configured to be replaced when forwarding the request to the Workload."
                },
                "replica": {
                    "type": "integer",
                    "description": "The replica number of a stateful workload to route to. If not provided, traffic will be routed to all replicas."
                },
                "workloadLink": {
                    "type": "string",
                    "description": "The link of the workload to map the prefix to."
                }
            },
            "requiredInputs": [
                "domainLink",
                "workloadLink"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainRoute resources.\n",
                "properties": {
                    "domainLink": {
                        "type": "string",
                        "description": "The self link of the domain to add the route to."
                    },
                    "domainPort": {
                        "type": "integer",
                        "description": "The port the route corresponds to. Default: 443"
                    },
                    "headers": {
                        "$ref": "#/types/cpln:index/DomainRouteHeaders:DomainRouteHeaders",
                        "description": "Modify the headers for all http requests for this route."
                    },
                    "hostPrefix": {
                        "type": "string",
                        "description": "This option allows forwarding traffic for different host headers to different workloads. This will only be used when the target GVC has dedicated load balancing enabled and the Domain is configured for wildcard support. Please contact us on Slack or at support@controlplane.com for additional details."
                    },
                    "hostRegex": {
                        "type": "string",
                        "description": "A regex to match the host header. This will only be used when the target GVC has dedicated load balancing enabled and the Domain is configure for wildcard support. Contact your account manager for details."
                    },
                    "port": {
                        "type": "integer",
                        "description": "For the linked workload, the port to route traffic to."
                    },
                    "prefix": {
                        "type": "string",
                        "description": "The path will match any unmatched path prefixes for the subdomain."
                    },
                    "regex": {
                        "type": "string",
                        "description": "Used to match URI paths. Uses the google re2 regex syntax."
                    },
                    "replacePrefix": {
                        "type": "string",
                        "description": "A path prefix can be configured to be replaced when forwarding the request to the Workload."
                    },
                    "replica": {
                        "type": "integer",
                        "description": "The replica number of a stateful workload to route to. If not provided, traffic will be routed to all replicas."
                    },
                    "workloadLink": {
                        "type": "string",
                        "description": "The link of the workload to map the prefix to."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/group:Group": {
            "properties": {
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Group."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Group."
                },
                "identityMatcher": {
                    "$ref": "#/types/cpln:index/GroupIdentityMatcher:GroupIdentityMatcher",
                    "description": "Executes the expression against the users' claims to decide whether a user belongs to this group. This method is useful for managing the grouping of users logged-in with SAML providers."
                },
                "memberQuery": {
                    "$ref": "#/types/cpln:index/GroupMemberQuery:GroupMemberQuery",
                    "description": "A predefined set of criteria or conditions used to query and retrieve members within the group."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Group."
                },
                "origin": {
                    "type": "string",
                    "description": "Origin of the service account. Either \u003cspan pulumi-lang-nodejs=\"`builtin`\" pulumi-lang-dotnet=\"`Builtin`\" pulumi-lang-go=\"`builtin`\" pulumi-lang-python=\"`builtin`\" pulumi-lang-yaml=\"`builtin`\" pulumi-lang-java=\"`builtin`\"\u003e`builtin`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`default`\" pulumi-lang-dotnet=\"`Default`\" pulumi-lang-go=\"`default`\" pulumi-lang-python=\"`default`\" pulumi-lang-yaml=\"`default`\" pulumi-lang-java=\"`default`\"\u003e`default`\u003c/span\u003e."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "serviceAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of service accounts that exists within the configured org. Group membership will fail if the service account does not exits within the org."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "userIdsAndEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of either the user ID or email address for a user that exists within the configured org. Group membership will fail if the user ID / email does not exist within the org."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "origin",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Group."
                },
                "identityMatcher": {
                    "$ref": "#/types/cpln:index/GroupIdentityMatcher:GroupIdentityMatcher",
                    "description": "Executes the expression against the users' claims to decide whether a user belongs to this group. This method is useful for managing the grouping of users logged-in with SAML providers."
                },
                "memberQuery": {
                    "$ref": "#/types/cpln:index/GroupMemberQuery:GroupMemberQuery",
                    "description": "A predefined set of criteria or conditions used to query and retrieve members within the group."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Group."
                },
                "serviceAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of service accounts that exists within the configured org. Group membership will fail if the service account does not exits within the org."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "userIdsAndEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of either the user ID or email address for a user that exists within the configured org. Group membership will fail if the user ID / email does not exist within the org."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Group."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Group."
                    },
                    "identityMatcher": {
                        "$ref": "#/types/cpln:index/GroupIdentityMatcher:GroupIdentityMatcher",
                        "description": "Executes the expression against the users' claims to decide whether a user belongs to this group. This method is useful for managing the grouping of users logged-in with SAML providers."
                    },
                    "memberQuery": {
                        "$ref": "#/types/cpln:index/GroupMemberQuery:GroupMemberQuery",
                        "description": "A predefined set of criteria or conditions used to query and retrieve members within the group."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Group."
                    },
                    "origin": {
                        "type": "string",
                        "description": "Origin of the service account. Either \u003cspan pulumi-lang-nodejs=\"`builtin`\" pulumi-lang-dotnet=\"`Builtin`\" pulumi-lang-go=\"`builtin`\" pulumi-lang-python=\"`builtin`\" pulumi-lang-yaml=\"`builtin`\" pulumi-lang-java=\"`builtin`\"\u003e`builtin`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`default`\" pulumi-lang-dotnet=\"`Default`\" pulumi-lang-go=\"`default`\" pulumi-lang-python=\"`default`\" pulumi-lang-yaml=\"`default`\" pulumi-lang-java=\"`default`\"\u003e`default`\u003c/span\u003e."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of service accounts that exists within the configured org. Group membership will fail if the service account does not exits within the org."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    },
                    "userIdsAndEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of either the user ID or email address for a user that exists within the configured org. Group membership will fail if the user ID / email does not exist within the org."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/gvc:Gvc": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "The alias name of the GVC."
                },
                "controlplaneTracing": {
                    "$ref": "#/types/cpln:index/GvcControlplaneTracing:GvcControlplaneTracing"
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Global Virtual Cloud."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Global Virtual Cloud."
                },
                "domain": {
                    "type": "string",
                    "description": "Custom domain name used by associated workloads.",
                    "deprecationMessage": "Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead."
                },
                "endpointNamingFormat": {
                    "type": "string",
                    "description": "Customizes the subdomain format for the canonical workload endpoint. \u003cspan pulumi-lang-nodejs=\"`legacy`\" pulumi-lang-dotnet=\"`Legacy`\" pulumi-lang-go=\"`legacy`\" pulumi-lang-python=\"`legacy`\" pulumi-lang-yaml=\"`legacy`\" pulumi-lang-java=\"`legacy`\"\u003e`legacy`\u003c/span\u003e leaves it as '${workloadName}-${gvcName}.cpln.app'. \u003cspan pulumi-lang-nodejs=\"`org`\" pulumi-lang-dotnet=\"`Org`\" pulumi-lang-go=\"`org`\" pulumi-lang-python=\"`org`\" pulumi-lang-yaml=\"`org`\" pulumi-lang-java=\"`org`\"\u003e`org`\u003c/span\u003e follows the scheme '${workloadName}-${gvcName}.${orgEndpointPrefix}.cpln.app'."
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value array of resource environment variables."
                },
                "keda": {
                    "$ref": "#/types/cpln:index/GvcKeda:GvcKeda",
                    "description": "KEDA configuration for the GVC."
                },
                "lightstepTracing": {
                    "$ref": "#/types/cpln:index/GvcLightstepTracing:GvcLightstepTracing"
                },
                "loadBalancer": {
                    "$ref": "#/types/cpln:index/GvcLoadBalancer:GvcLoadBalancer",
                    "description": "Dedicated load balancer configuration."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Global Virtual Cloud."
                },
                "otelTracing": {
                    "$ref": "#/types/cpln:index/GvcOtelTracing:GvcOtelTracing"
                },
                "pullSecrets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "sidecar": {
                    "$ref": "#/types/cpln:index/GvcSidecar:GvcSidecar"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "alias",
                "cplnId",
                "description",
                "endpointNamingFormat",
                "name",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "controlplaneTracing": {
                    "$ref": "#/types/cpln:index/GvcControlplaneTracing:GvcControlplaneTracing"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Global Virtual Cloud."
                },
                "domain": {
                    "type": "string",
                    "description": "Custom domain name used by associated workloads.",
                    "deprecationMessage": "Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead."
                },
                "endpointNamingFormat": {
                    "type": "string",
                    "description": "Customizes the subdomain format for the canonical workload endpoint. \u003cspan pulumi-lang-nodejs=\"`legacy`\" pulumi-lang-dotnet=\"`Legacy`\" pulumi-lang-go=\"`legacy`\" pulumi-lang-python=\"`legacy`\" pulumi-lang-yaml=\"`legacy`\" pulumi-lang-java=\"`legacy`\"\u003e`legacy`\u003c/span\u003e leaves it as '${workloadName}-${gvcName}.cpln.app'. \u003cspan pulumi-lang-nodejs=\"`org`\" pulumi-lang-dotnet=\"`Org`\" pulumi-lang-go=\"`org`\" pulumi-lang-python=\"`org`\" pulumi-lang-yaml=\"`org`\" pulumi-lang-java=\"`org`\"\u003e`org`\u003c/span\u003e follows the scheme '${workloadName}-${gvcName}.${orgEndpointPrefix}.cpln.app'."
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value array of resource environment variables."
                },
                "keda": {
                    "$ref": "#/types/cpln:index/GvcKeda:GvcKeda",
                    "description": "KEDA configuration for the GVC."
                },
                "lightstepTracing": {
                    "$ref": "#/types/cpln:index/GvcLightstepTracing:GvcLightstepTracing"
                },
                "loadBalancer": {
                    "$ref": "#/types/cpln:index/GvcLoadBalancer:GvcLoadBalancer",
                    "description": "Dedicated load balancer configuration."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Global Virtual Cloud."
                },
                "otelTracing": {
                    "$ref": "#/types/cpln:index/GvcOtelTracing:GvcOtelTracing"
                },
                "pullSecrets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC."
                },
                "sidecar": {
                    "$ref": "#/types/cpln:index/GvcSidecar:GvcSidecar"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Gvc resources.\n",
                "properties": {
                    "alias": {
                        "type": "string",
                        "description": "The alias name of the GVC."
                    },
                    "controlplaneTracing": {
                        "$ref": "#/types/cpln:index/GvcControlplaneTracing:GvcControlplaneTracing"
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Global Virtual Cloud."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Global Virtual Cloud."
                    },
                    "domain": {
                        "type": "string",
                        "description": "Custom domain name used by associated workloads.",
                        "deprecationMessage": "Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead."
                    },
                    "endpointNamingFormat": {
                        "type": "string",
                        "description": "Customizes the subdomain format for the canonical workload endpoint. \u003cspan pulumi-lang-nodejs=\"`legacy`\" pulumi-lang-dotnet=\"`Legacy`\" pulumi-lang-go=\"`legacy`\" pulumi-lang-python=\"`legacy`\" pulumi-lang-yaml=\"`legacy`\" pulumi-lang-java=\"`legacy`\"\u003e`legacy`\u003c/span\u003e leaves it as '${workloadName}-${gvcName}.cpln.app'. \u003cspan pulumi-lang-nodejs=\"`org`\" pulumi-lang-dotnet=\"`Org`\" pulumi-lang-go=\"`org`\" pulumi-lang-python=\"`org`\" pulumi-lang-yaml=\"`org`\" pulumi-lang-java=\"`org`\"\u003e`org`\u003c/span\u003e follows the scheme '${workloadName}-${gvcName}.${orgEndpointPrefix}.cpln.app'."
                    },
                    "env": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value array of resource environment variables."
                    },
                    "keda": {
                        "$ref": "#/types/cpln:index/GvcKeda:GvcKeda",
                        "description": "KEDA configuration for the GVC."
                    },
                    "lightstepTracing": {
                        "$ref": "#/types/cpln:index/GvcLightstepTracing:GvcLightstepTracing"
                    },
                    "loadBalancer": {
                        "$ref": "#/types/cpln:index/GvcLoadBalancer:GvcLoadBalancer",
                        "description": "Dedicated load balancer configuration."
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Global Virtual Cloud."
                    },
                    "otelTracing": {
                        "$ref": "#/types/cpln:index/GvcOtelTracing:GvcOtelTracing"
                    },
                    "pullSecrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "sidecar": {
                        "$ref": "#/types/cpln:index/GvcSidecar:GvcSidecar"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/identity:Identity": {
            "properties": {
                "awsAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityAwsAccessPolicy:IdentityAwsAccessPolicy",
                    "description": "A set of access policy rules that defines the actions and resources that an identity can access within an AWS environment."
                },
                "azureAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityAzureAccessPolicy:IdentityAzureAccessPolicy",
                    "description": "A set of access policy rules that defines the actions and resources that an identity can access within an Azure environment."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the identity."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the identity."
                },
                "gcpAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityGcpAccessPolicy:IdentityGcpAccessPolicy",
                    "description": "The GCP access policy can either contain an existing\u003cspan pulumi-lang-nodejs=\" serviceAccount \" pulumi-lang-dotnet=\" ServiceAccount \" pulumi-lang-go=\" serviceAccount \" pulumi-lang-python=\" service_account \" pulumi-lang-yaml=\" serviceAccount \" pulumi-lang-java=\" serviceAccount \"\u003e service_account \u003c/span\u003eor multiple bindings."
                },
                "gvc": {
                    "type": "string",
                    "description": "The GVC to which this identity belongs."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the identity."
                },
                "nativeNetworkResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IdentityNativeNetworkResource:IdentityNativeNetworkResource"
                    },
                    "description": "\u003e **NOTE** The configuration of a native network resource requires the assistance of Control Plane support."
                },
                "networkResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IdentityNetworkResource:IdentityNetworkResource"
                    },
                    "description": "A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and ports. - IP's and ports."
                },
                "ngsAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityNgsAccessPolicy:IdentityNgsAccessPolicy",
                    "description": "A set of access policy rules that defines the actions and resources that an identity can access within an NGA environment."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of identity status. Available fields: `objectName`, \u003cspan pulumi-lang-nodejs=\"`aws`\" pulumi-lang-dotnet=\"`Aws`\" pulumi-lang-go=\"`aws`\" pulumi-lang-python=\"`aws`\" pulumi-lang-yaml=\"`aws`\" pulumi-lang-java=\"`aws`\"\u003e`aws`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`gcp`\" pulumi-lang-dotnet=\"`Gcp`\" pulumi-lang-go=\"`gcp`\" pulumi-lang-python=\"`gcp`\" pulumi-lang-yaml=\"`gcp`\" pulumi-lang-java=\"`gcp`\"\u003e`gcp`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`azure`\" pulumi-lang-dotnet=\"`Azure`\" pulumi-lang-go=\"`azure`\" pulumi-lang-python=\"`azure`\" pulumi-lang-yaml=\"`azure`\" pulumi-lang-java=\"`azure`\"\u003e`azure`\u003c/span\u003e."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "gvc",
                "name",
                "selfLink",
                "status",
                "tags"
            ],
            "inputProperties": {
                "awsAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityAwsAccessPolicy:IdentityAwsAccessPolicy",
                    "description": "A set of access policy rules that defines the actions and resources that an identity can access within an AWS environment."
                },
                "azureAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityAzureAccessPolicy:IdentityAzureAccessPolicy",
                    "description": "A set of access policy rules that defines the actions and resources that an identity can access within an Azure environment."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the identity."
                },
                "gcpAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityGcpAccessPolicy:IdentityGcpAccessPolicy",
                    "description": "The GCP access policy can either contain an existing\u003cspan pulumi-lang-nodejs=\" serviceAccount \" pulumi-lang-dotnet=\" ServiceAccount \" pulumi-lang-go=\" serviceAccount \" pulumi-lang-python=\" service_account \" pulumi-lang-yaml=\" serviceAccount \" pulumi-lang-java=\" serviceAccount \"\u003e service_account \u003c/span\u003eor multiple bindings."
                },
                "gvc": {
                    "type": "string",
                    "description": "The GVC to which this identity belongs."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the identity."
                },
                "nativeNetworkResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IdentityNativeNetworkResource:IdentityNativeNetworkResource"
                    },
                    "description": "\u003e **NOTE** The configuration of a native network resource requires the assistance of Control Plane support."
                },
                "networkResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IdentityNetworkResource:IdentityNetworkResource"
                    },
                    "description": "A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and ports. - IP's and ports."
                },
                "ngsAccessPolicy": {
                    "$ref": "#/types/cpln:index/IdentityNgsAccessPolicy:IdentityNgsAccessPolicy",
                    "description": "A set of access policy rules that defines the actions and resources that an identity can access within an NGA environment."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "requiredInputs": [
                "gvc"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Identity resources.\n",
                "properties": {
                    "awsAccessPolicy": {
                        "$ref": "#/types/cpln:index/IdentityAwsAccessPolicy:IdentityAwsAccessPolicy",
                        "description": "A set of access policy rules that defines the actions and resources that an identity can access within an AWS environment."
                    },
                    "azureAccessPolicy": {
                        "$ref": "#/types/cpln:index/IdentityAzureAccessPolicy:IdentityAzureAccessPolicy",
                        "description": "A set of access policy rules that defines the actions and resources that an identity can access within an Azure environment."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the identity."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the identity."
                    },
                    "gcpAccessPolicy": {
                        "$ref": "#/types/cpln:index/IdentityGcpAccessPolicy:IdentityGcpAccessPolicy",
                        "description": "The GCP access policy can either contain an existing\u003cspan pulumi-lang-nodejs=\" serviceAccount \" pulumi-lang-dotnet=\" ServiceAccount \" pulumi-lang-go=\" serviceAccount \" pulumi-lang-python=\" service_account \" pulumi-lang-yaml=\" serviceAccount \" pulumi-lang-java=\" serviceAccount \"\u003e service_account \u003c/span\u003eor multiple bindings."
                    },
                    "gvc": {
                        "type": "string",
                        "description": "The GVC to which this identity belongs."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the identity."
                    },
                    "nativeNetworkResources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/IdentityNativeNetworkResource:IdentityNativeNetworkResource"
                        },
                        "description": "\u003e **NOTE** The configuration of a native network resource requires the assistance of Control Plane support."
                    },
                    "networkResources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/IdentityNetworkResource:IdentityNetworkResource"
                        },
                        "description": "A network resource can be configured with: - A fully qualified domain name (FQDN) and ports. - An FQDN, resolver IP, and ports. - IP's and ports."
                    },
                    "ngsAccessPolicy": {
                        "$ref": "#/types/cpln:index/IdentityNgsAccessPolicy:IdentityNgsAccessPolicy",
                        "description": "A set of access policy rules that defines the actions and resources that an identity can access within an NGA environment."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "status": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of identity status. Available fields: `objectName`, \u003cspan pulumi-lang-nodejs=\"`aws`\" pulumi-lang-dotnet=\"`Aws`\" pulumi-lang-go=\"`aws`\" pulumi-lang-python=\"`aws`\" pulumi-lang-yaml=\"`aws`\" pulumi-lang-java=\"`aws`\"\u003e`aws`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`gcp`\" pulumi-lang-dotnet=\"`Gcp`\" pulumi-lang-go=\"`gcp`\" pulumi-lang-python=\"`gcp`\" pulumi-lang-yaml=\"`gcp`\" pulumi-lang-java=\"`gcp`\"\u003e`gcp`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`azure`\" pulumi-lang-dotnet=\"`Azure`\" pulumi-lang-go=\"`azure`\" pulumi-lang-python=\"`azure`\" pulumi-lang-yaml=\"`azure`\" pulumi-lang-java=\"`azure`\"\u003e`azure`\u003c/span\u003e."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/ipSet:IpSet": {
            "description": "Manages an org's IpSet.\n\n## Declaration\n\n### Required\n\n- **name** (String) Name of the IpSet.\n\n### Optional\n\n- **description** - (String) Description of the IpSet.\n- **tags** (Map of String) Key-value map of resource tags.\n- **link** (String) The self link of a workload or a GVC.\n- **location** (Block List) (see below).\n\n\u003ca id=\"nestedblock--location\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`location`\" pulumi-lang-dotnet=\"`Location`\" pulumi-lang-go=\"`location`\" pulumi-lang-python=\"`location`\" pulumi-lang-yaml=\"`location`\" pulumi-lang-java=\"`location`\"\u003e`location`\u003c/span\u003e\n\nRequired:\n\n- **name** (String) The self link of a location.\n- **retention_policy** (String) Exactly one of: \u003cspan pulumi-lang-nodejs=\"`keep`\" pulumi-lang-dotnet=\"`Keep`\" pulumi-lang-go=\"`keep`\" pulumi-lang-python=\"`keep`\" pulumi-lang-yaml=\"`keep`\" pulumi-lang-java=\"`keep`\"\u003e`keep`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`free`\" pulumi-lang-dotnet=\"`Free`\" pulumi-lang-go=\"`free`\" pulumi-lang-python=\"`free`\" pulumi-lang-yaml=\"`free`\" pulumi-lang-java=\"`free`\"\u003e`free`\u003c/span\u003e.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **cpln_id** (String) The ID, in GUID format, of the IpSet.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n- **status** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--status\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`status`\" pulumi-lang-dotnet=\"`Status`\" pulumi-lang-go=\"`status`\" pulumi-lang-python=\"`status`\" pulumi-lang-yaml=\"`status`\" pulumi-lang-java=\"`status`\"\u003e`status`\u003c/span\u003e\n\nStatus of the IpSet.\n\nRead-Only:\n\n- **ip_address** (Block List) (see below)\n- **error** (String)\n- **warning** (String)\n\n\u003ca id=\"nestedblock--status--ip_address\"\u003e\u003c/a\u003e\n\n### `status.ip_address`\n\n- **name** (String)\n- **ip** (String)\n- **id** (String)\n- **state** (String)\n- **created** (String)\n\n## Example Usage\n\n```terrafrom\nresource \"cpln_ipset\" \"new\" {\n\t\t\n  name        = \"example\"\n  description = \"example\"\n\n  tags = {\n    terraform_generated = \"true\"\n  }\n\n  link = \"SELF_LINK_TO_WORKLOAD\"\n  \n  location {\n    name             = \"SELF_LINK_TO_LOCATION\"\n    retention_policy = \"keep\"\n  }\n}\n```\n",
            "properties": {
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the IP Set."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP Set."
                },
                "link": {
                    "type": "string",
                    "description": "The self link of a workload or a GVC."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IpSetLocation:IpSetLocation"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IP Set."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IpSetStatus:IpSetStatus"
                    },
                    "description": "The status of the IP Set."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "selfLink",
                "statuses",
                "tags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the IP Set."
                },
                "link": {
                    "type": "string",
                    "description": "The self link of a workload or a GVC."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/IpSetLocation:IpSetLocation"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IP Set."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpSet resources.\n",
                "properties": {
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the IP Set."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the IP Set."
                    },
                    "link": {
                        "type": "string",
                        "description": "The self link of a workload or a GVC."
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/IpSetLocation:IpSetLocation"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IP Set."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/IpSetStatus:IpSetStatus"
                        },
                        "description": "The status of the IP Set."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/location:Location": {
            "properties": {
                "cloudProvider": {
                    "type": "string",
                    "description": "Cloud Provider of the location."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the location."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the location."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indication if location is enabled."
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/LocationGeo:LocationGeo"
                    }
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IP ranges of the location."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the location."
                },
                "origin": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the location."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cloudProvider",
                "cplnId",
                "description",
                "enabled",
                "geos",
                "ipRanges",
                "name",
                "origin",
                "region",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indication if location is enabled."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the location."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Location resources.\n",
                "properties": {
                    "cloudProvider": {
                        "type": "string",
                        "description": "Cloud Provider of the location."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the location."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the location."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indication if location is enabled."
                    },
                    "geos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/LocationGeo:LocationGeo"
                        }
                    },
                    "ipRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IP ranges of the location."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the location."
                    },
                    "origin": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the location."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/mk8s:Mk8s": {
            "properties": {
                "addOns": {
                    "$ref": "#/types/cpln:index/Mk8sAddOns:Mk8sAddOns"
                },
                "alias": {
                    "type": "string",
                    "description": "The alias name of the Mk8s."
                },
                "awsProvider": {
                    "$ref": "#/types/cpln:index/Mk8sAwsProvider:Mk8sAwsProvider"
                },
                "azureProvider": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProvider:Mk8sAzureProvider"
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the mk8s."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the mk8s."
                },
                "digitalOceanProvider": {
                    "$ref": "#/types/cpln:index/Mk8sDigitalOceanProvider:Mk8sDigitalOceanProvider"
                },
                "ephemeralProvider": {
                    "$ref": "#/types/cpln:index/Mk8sEphemeralProvider:Mk8sEphemeralProvider"
                },
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sFirewall:Mk8sFirewall"
                    },
                    "description": "Allow-list."
                },
                "gcpProvider": {
                    "$ref": "#/types/cpln:index/Mk8sGcpProvider:Mk8sGcpProvider"
                },
                "genericProvider": {
                    "$ref": "#/types/cpln:index/Mk8sGenericProvider:Mk8sGenericProvider"
                },
                "hetznerProvider": {
                    "$ref": "#/types/cpln:index/Mk8sHetznerProvider:Mk8sHetznerProvider"
                },
                "lambdalabsProvider": {
                    "$ref": "#/types/cpln:index/Mk8sLambdalabsProvider:Mk8sLambdalabsProvider"
                },
                "linodeProvider": {
                    "$ref": "#/types/cpln:index/Mk8sLinodeProvider:Mk8sLinodeProvider"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the mk8s."
                },
                "oblivusProvider": {
                    "$ref": "#/types/cpln:index/Mk8sOblivusProvider:Mk8sOblivusProvider"
                },
                "paperspaceProvider": {
                    "$ref": "#/types/cpln:index/Mk8sPaperspaceProvider:Mk8sPaperspaceProvider"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sStatus:Mk8sStatus"
                    },
                    "description": "Status of the mk8s."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "tritonProvider": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProvider:Mk8sTritonProvider"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "alias",
                "cplnId",
                "description",
                "name",
                "selfLink",
                "statuses",
                "tags",
                "version"
            ],
            "inputProperties": {
                "addOns": {
                    "$ref": "#/types/cpln:index/Mk8sAddOns:Mk8sAddOns"
                },
                "awsProvider": {
                    "$ref": "#/types/cpln:index/Mk8sAwsProvider:Mk8sAwsProvider"
                },
                "azureProvider": {
                    "$ref": "#/types/cpln:index/Mk8sAzureProvider:Mk8sAzureProvider"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the mk8s."
                },
                "digitalOceanProvider": {
                    "$ref": "#/types/cpln:index/Mk8sDigitalOceanProvider:Mk8sDigitalOceanProvider"
                },
                "ephemeralProvider": {
                    "$ref": "#/types/cpln:index/Mk8sEphemeralProvider:Mk8sEphemeralProvider"
                },
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/Mk8sFirewall:Mk8sFirewall"
                    },
                    "description": "Allow-list."
                },
                "gcpProvider": {
                    "$ref": "#/types/cpln:index/Mk8sGcpProvider:Mk8sGcpProvider"
                },
                "genericProvider": {
                    "$ref": "#/types/cpln:index/Mk8sGenericProvider:Mk8sGenericProvider"
                },
                "hetznerProvider": {
                    "$ref": "#/types/cpln:index/Mk8sHetznerProvider:Mk8sHetznerProvider"
                },
                "lambdalabsProvider": {
                    "$ref": "#/types/cpln:index/Mk8sLambdalabsProvider:Mk8sLambdalabsProvider"
                },
                "linodeProvider": {
                    "$ref": "#/types/cpln:index/Mk8sLinodeProvider:Mk8sLinodeProvider"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the mk8s."
                },
                "oblivusProvider": {
                    "$ref": "#/types/cpln:index/Mk8sOblivusProvider:Mk8sOblivusProvider"
                },
                "paperspaceProvider": {
                    "$ref": "#/types/cpln:index/Mk8sPaperspaceProvider:Mk8sPaperspaceProvider"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "tritonProvider": {
                    "$ref": "#/types/cpln:index/Mk8sTritonProvider:Mk8sTritonProvider"
                },
                "version": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mk8s resources.\n",
                "properties": {
                    "addOns": {
                        "$ref": "#/types/cpln:index/Mk8sAddOns:Mk8sAddOns"
                    },
                    "alias": {
                        "type": "string",
                        "description": "The alias name of the Mk8s."
                    },
                    "awsProvider": {
                        "$ref": "#/types/cpln:index/Mk8sAwsProvider:Mk8sAwsProvider"
                    },
                    "azureProvider": {
                        "$ref": "#/types/cpln:index/Mk8sAzureProvider:Mk8sAzureProvider"
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the mk8s."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the mk8s."
                    },
                    "digitalOceanProvider": {
                        "$ref": "#/types/cpln:index/Mk8sDigitalOceanProvider:Mk8sDigitalOceanProvider"
                    },
                    "ephemeralProvider": {
                        "$ref": "#/types/cpln:index/Mk8sEphemeralProvider:Mk8sEphemeralProvider"
                    },
                    "firewalls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/Mk8sFirewall:Mk8sFirewall"
                        },
                        "description": "Allow-list."
                    },
                    "gcpProvider": {
                        "$ref": "#/types/cpln:index/Mk8sGcpProvider:Mk8sGcpProvider"
                    },
                    "genericProvider": {
                        "$ref": "#/types/cpln:index/Mk8sGenericProvider:Mk8sGenericProvider"
                    },
                    "hetznerProvider": {
                        "$ref": "#/types/cpln:index/Mk8sHetznerProvider:Mk8sHetznerProvider"
                    },
                    "lambdalabsProvider": {
                        "$ref": "#/types/cpln:index/Mk8sLambdalabsProvider:Mk8sLambdalabsProvider"
                    },
                    "linodeProvider": {
                        "$ref": "#/types/cpln:index/Mk8sLinodeProvider:Mk8sLinodeProvider"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the mk8s."
                    },
                    "oblivusProvider": {
                        "$ref": "#/types/cpln:index/Mk8sOblivusProvider:Mk8sOblivusProvider"
                    },
                    "paperspaceProvider": {
                        "$ref": "#/types/cpln:index/Mk8sPaperspaceProvider:Mk8sPaperspaceProvider"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/Mk8sStatus:Mk8sStatus"
                        },
                        "description": "Status of the mk8s."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    },
                    "tritonProvider": {
                        "$ref": "#/types/cpln:index/Mk8sTritonProvider:Mk8sTritonProvider"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/mk8sKubeconfig:Mk8sKubeconfig": {
            "description": "Obtain the Cluster’s Kubeconfig.\n\n## Declaration\n\n### Required\n\n- **name** (String) Name of the Mk8s.\n\n\u003e **Note** Only one of the below can be included in the resource.\n\n- **profile** (String) The name of the cpln profile used to generate the kubeconfig file for authenticating with your Kubernetes cluster.\n- **service_account** (String) The name of an existing service account for which a key will be generated, enabling kubeconfig-based authentication with your Kubernetes cluster.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **kubeconfig** (String) The Kubeconfig in YAML format.\n\n## Example Usage\n\n### Profile\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nexport = async () =\u003e {\n    const _new = new cpln.Mk8sKubeconfig(\"new\", {\n        name: \"generic-cluster\",\n        profile: \"default\",\n    });\n    return {\n        \"generic-cluster-kubeconfig\": _new.kubeconfig,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumiverse_cpln as cpln\n\nnew = cpln.Mk8sKubeconfig(\"new\",\n    name=\"generic-cluster\",\n    profile=\"default\")\npulumi.export(\"generic-cluster-kubeconfig\", new.kubeconfig)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumiverse.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @new = new Cpln.Mk8sKubeconfig(\"new\", new()\n    {\n        Name = \"generic-cluster\",\n        Profile = \"default\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"generic-cluster-kubeconfig\"] = @new.Kubeconfig,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnew, err := cpln.NewMk8sKubeconfig(ctx, \"new\", \u0026cpln.Mk8sKubeconfigArgs{\n\t\t\tName:    pulumi.String(\"generic-cluster\"),\n\t\t\tProfile: pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"generic-cluster-kubeconfig\", new.Kubeconfig)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.Mk8sKubeconfig;\nimport com.pulumi.cpln.Mk8sKubeconfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var new_ = new Mk8sKubeconfig(\"new\", Mk8sKubeconfigArgs.builder()\n            .name(\"generic-cluster\")\n            .profile(\"default\")\n            .build());\n\n        ctx.export(\"generic-cluster-kubeconfig\", new_.kubeconfig());\n    }\n}\n```\n```yaml\nresources:\n  new:\n    type: cpln:Mk8sKubeconfig\n    properties:\n      name: generic-cluster\n      profile: default\noutputs:\n  generic-cluster-kubeconfig: ${new.kubeconfig}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Service Account\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nexport = async () =\u003e {\n    const _new = new cpln.Mk8sKubeconfig(\"new\", {\n        name: \"generic-cluster\",\n        serviceAccount: \"devops-sa\",\n    });\n    return {\n        \"generic-cluster-kubeconfig\": _new.kubeconfig,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumiverse_cpln as cpln\n\nnew = cpln.Mk8sKubeconfig(\"new\",\n    name=\"generic-cluster\",\n    service_account=\"devops-sa\")\npulumi.export(\"generic-cluster-kubeconfig\", new.kubeconfig)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumiverse.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @new = new Cpln.Mk8sKubeconfig(\"new\", new()\n    {\n        Name = \"generic-cluster\",\n        ServiceAccount = \"devops-sa\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"generic-cluster-kubeconfig\"] = @new.Kubeconfig,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnew, err := cpln.NewMk8sKubeconfig(ctx, \"new\", \u0026cpln.Mk8sKubeconfigArgs{\n\t\t\tName:           pulumi.String(\"generic-cluster\"),\n\t\t\tServiceAccount: pulumi.String(\"devops-sa\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"generic-cluster-kubeconfig\", new.Kubeconfig)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.Mk8sKubeconfig;\nimport com.pulumi.cpln.Mk8sKubeconfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var new_ = new Mk8sKubeconfig(\"new\", Mk8sKubeconfigArgs.builder()\n            .name(\"generic-cluster\")\n            .serviceAccount(\"devops-sa\")\n            .build());\n\n        ctx.export(\"generic-cluster-kubeconfig\", new_.kubeconfig());\n    }\n}\n```\n```yaml\nresources:\n  new:\n    type: cpln:Mk8sKubeconfig\n    properties:\n      name: generic-cluster\n      serviceAccount: devops-sa\noutputs:\n  generic-cluster-kubeconfig: ${new.kubeconfig}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "kubeconfig": {
                    "type": "string",
                    "description": "The Kubeconfig of your MK8s cluster in YAML format.",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the MK8s to create the Kubeconfig for."
                },
                "profile": {
                    "type": "string",
                    "description": "Profile name to extract the token from."
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "A service account to add a key to."
                }
            },
            "required": [
                "kubeconfig",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the MK8s to create the Kubeconfig for."
                },
                "profile": {
                    "type": "string",
                    "description": "Profile name to extract the token from."
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "A service account to add a key to."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mk8sKubeconfig resources.\n",
                "properties": {
                    "kubeconfig": {
                        "type": "string",
                        "description": "The Kubeconfig of your MK8s cluster in YAML format.",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the MK8s to create the Kubeconfig for."
                    },
                    "profile": {
                        "type": "string",
                        "description": "Profile name to extract the token from."
                    },
                    "serviceAccount": {
                        "type": "string",
                        "description": "A service account to add a key to."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/org:Org": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The associated account ID that will be used when creating the org. Only used on org creation. The account ID can be obtained from the `Org Management \u0026 Billing` page."
                },
                "authConfig": {
                    "$ref": "#/types/cpln:index/OrgAuthConfig:OrgAuthConfig",
                    "description": "The configuration settings and parameters related to authentication within the org."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Organization."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Organization."
                },
                "invitees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When an org is created, the list of email addresses which will receive an invitation to join the org and be assigned to the \u003cspan pulumi-lang-nodejs=\"`superusers`\" pulumi-lang-dotnet=\"`Superusers`\" pulumi-lang-go=\"`superusers`\" pulumi-lang-python=\"`superusers`\" pulumi-lang-yaml=\"`superusers`\" pulumi-lang-java=\"`superusers`\"\u003e`superusers`\u003c/span\u003e group. The user account used when creating the org will be included in this list."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Organization."
                },
                "observability": {
                    "$ref": "#/types/cpln:index/OrgObservability:OrgObservability",
                    "description": "The retention period (in days) for logs, metrics, and traces. Charges apply for storage beyond the 30 day default."
                },
                "security": {
                    "$ref": "#/types/cpln:index/OrgSecurity:OrgSecurity"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "sessionTimeoutSeconds": {
                    "type": "integer",
                    "description": "The idle time (in seconds) in which the console UI will automatically sign-out the user. Default: 900 (15 minutes)"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgStatus:OrgStatus"
                    },
                    "description": "Status of the org."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "accountId",
                "cplnId",
                "description",
                "invitees",
                "name",
                "selfLink",
                "sessionTimeoutSeconds",
                "statuses",
                "tags"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The associated account ID that will be used when creating the org. Only used on org creation. The account ID can be obtained from the `Org Management \u0026 Billing` page."
                },
                "authConfig": {
                    "$ref": "#/types/cpln:index/OrgAuthConfig:OrgAuthConfig",
                    "description": "The configuration settings and parameters related to authentication within the org."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Organization."
                },
                "invitees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When an org is created, the list of email addresses which will receive an invitation to join the org and be assigned to the \u003cspan pulumi-lang-nodejs=\"`superusers`\" pulumi-lang-dotnet=\"`Superusers`\" pulumi-lang-go=\"`superusers`\" pulumi-lang-python=\"`superusers`\" pulumi-lang-yaml=\"`superusers`\" pulumi-lang-java=\"`superusers`\"\u003e`superusers`\u003c/span\u003e group. The user account used when creating the org will be included in this list."
                },
                "observability": {
                    "$ref": "#/types/cpln:index/OrgObservability:OrgObservability",
                    "description": "The retention period (in days) for logs, metrics, and traces. Charges apply for storage beyond the 30 day default."
                },
                "security": {
                    "$ref": "#/types/cpln:index/OrgSecurity:OrgSecurity"
                },
                "sessionTimeoutSeconds": {
                    "type": "integer",
                    "description": "The idle time (in seconds) in which the console UI will automatically sign-out the user. Default: 900 (15 minutes)"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Org resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The associated account ID that will be used when creating the org. Only used on org creation. The account ID can be obtained from the `Org Management \u0026 Billing` page."
                    },
                    "authConfig": {
                        "$ref": "#/types/cpln:index/OrgAuthConfig:OrgAuthConfig",
                        "description": "The configuration settings and parameters related to authentication within the org."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Organization."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Organization."
                    },
                    "invitees": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When an org is created, the list of email addresses which will receive an invitation to join the org and be assigned to the \u003cspan pulumi-lang-nodejs=\"`superusers`\" pulumi-lang-dotnet=\"`Superusers`\" pulumi-lang-go=\"`superusers`\" pulumi-lang-python=\"`superusers`\" pulumi-lang-yaml=\"`superusers`\" pulumi-lang-java=\"`superusers`\"\u003e`superusers`\u003c/span\u003e group. The user account used when creating the org will be included in this list."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Organization."
                    },
                    "observability": {
                        "$ref": "#/types/cpln:index/OrgObservability:OrgObservability",
                        "description": "The retention period (in days) for logs, metrics, and traces. Charges apply for storage beyond the 30 day default."
                    },
                    "security": {
                        "$ref": "#/types/cpln:index/OrgSecurity:OrgSecurity"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "sessionTimeoutSeconds": {
                        "type": "integer",
                        "description": "The idle time (in seconds) in which the console UI will automatically sign-out the user. Default: 900 (15 minutes)"
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgStatus:OrgStatus"
                        },
                        "description": "Status of the org."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/orgLogging:OrgLogging": {
            "properties": {
                "cloudWatchLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingCloudWatchLogging:OrgLoggingCloudWatchLogging"
                    }
                },
                "coralogixLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingCoralogixLogging:OrgLoggingCoralogixLogging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/coralogix)"
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Org."
                },
                "datadogLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingDatadogLogging:OrgLoggingDatadogLogging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/datadog)"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Org."
                },
                "elasticLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingElasticLogging:OrgLoggingElasticLogging"
                    },
                    "description": "For logging and analyzing data within an org using Elastic Logging."
                },
                "fluentdLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingFluentdLogging:OrgLoggingFluentdLogging"
                    }
                },
                "logzioLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingLogzioLogging:OrgLoggingLogzioLogging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/logz-io)"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Org."
                },
                "s3Loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingS3Logging:OrgLoggingS3Logging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/s3)"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "stackdriverLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingStackdriverLogging:OrgLoggingStackdriverLogging"
                    }
                },
                "syslogLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingSyslogLogging:OrgLoggingSyslogLogging"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "cloudWatchLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingCloudWatchLogging:OrgLoggingCloudWatchLogging"
                    }
                },
                "coralogixLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingCoralogixLogging:OrgLoggingCoralogixLogging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/coralogix)"
                },
                "datadogLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingDatadogLogging:OrgLoggingDatadogLogging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/datadog)"
                },
                "elasticLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingElasticLogging:OrgLoggingElasticLogging"
                    },
                    "description": "For logging and analyzing data within an org using Elastic Logging."
                },
                "fluentdLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingFluentdLogging:OrgLoggingFluentdLogging"
                    }
                },
                "logzioLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingLogzioLogging:OrgLoggingLogzioLogging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/logz-io)"
                },
                "s3Loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingS3Logging:OrgLoggingS3Logging"
                    },
                    "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/s3)"
                },
                "stackdriverLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingStackdriverLogging:OrgLoggingStackdriverLogging"
                    }
                },
                "syslogLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/OrgLoggingSyslogLogging:OrgLoggingSyslogLogging"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrgLogging resources.\n",
                "properties": {
                    "cloudWatchLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingCloudWatchLogging:OrgLoggingCloudWatchLogging"
                        }
                    },
                    "coralogixLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingCoralogixLogging:OrgLoggingCoralogixLogging"
                        },
                        "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/coralogix)"
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Org."
                    },
                    "datadogLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingDatadogLogging:OrgLoggingDatadogLogging"
                        },
                        "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/datadog)"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Org."
                    },
                    "elasticLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingElasticLogging:OrgLoggingElasticLogging"
                        },
                        "description": "For logging and analyzing data within an org using Elastic Logging."
                    },
                    "fluentdLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingFluentdLogging:OrgLoggingFluentdLogging"
                        }
                    },
                    "logzioLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingLogzioLogging:OrgLoggingLogzioLogging"
                        },
                        "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/logz-io)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Org."
                    },
                    "s3Loggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingS3Logging:OrgLoggingS3Logging"
                        },
                        "description": "[Documentation Reference](https://docs.controlplane.com/external-logging/s3)"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "stackdriverLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingStackdriverLogging:OrgLoggingStackdriverLogging"
                        }
                    },
                    "syslogLoggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/OrgLoggingSyslogLogging:OrgLoggingSyslogLogging"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/orgTracing:OrgTracing": {
            "properties": {
                "controlplaneTracing": {
                    "$ref": "#/types/cpln:index/OrgTracingControlplaneTracing:OrgTracingControlplaneTracing"
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Org."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Org."
                },
                "lightstepTracing": {
                    "$ref": "#/types/cpln:index/OrgTracingLightstepTracing:OrgTracingLightstepTracing"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Org."
                },
                "otelTracing": {
                    "$ref": "#/types/cpln:index/OrgTracingOtelTracing:OrgTracingOtelTracing"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "controlplaneTracing": {
                    "$ref": "#/types/cpln:index/OrgTracingControlplaneTracing:OrgTracingControlplaneTracing"
                },
                "lightstepTracing": {
                    "$ref": "#/types/cpln:index/OrgTracingLightstepTracing:OrgTracingLightstepTracing"
                },
                "otelTracing": {
                    "$ref": "#/types/cpln:index/OrgTracingOtelTracing:OrgTracingOtelTracing"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrgTracing resources.\n",
                "properties": {
                    "controlplaneTracing": {
                        "$ref": "#/types/cpln:index/OrgTracingControlplaneTracing:OrgTracingControlplaneTracing"
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Org."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Org."
                    },
                    "lightstepTracing": {
                        "$ref": "#/types/cpln:index/OrgTracingLightstepTracing:OrgTracingLightstepTracing"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Org."
                    },
                    "otelTracing": {
                        "$ref": "#/types/cpln:index/OrgTracingOtelTracing:OrgTracingOtelTracing"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/policy:Policy": {
            "properties": {
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/PolicyBinding:PolicyBinding"
                    },
                    "description": "The association between a target kind and the bound permissions to service principals."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the Policy."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Policy."
                },
                "gvc": {
                    "type": "string",
                    "description": "The GVC for \u003cspan pulumi-lang-nodejs=\"`identity`\" pulumi-lang-dotnet=\"`Identity`\" pulumi-lang-go=\"`identity`\" pulumi-lang-python=\"`identity`\" pulumi-lang-yaml=\"`identity`\" pulumi-lang-java=\"`identity`\"\u003e`identity`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`workload`\" pulumi-lang-dotnet=\"`Workload`\" pulumi-lang-go=\"`workload`\" pulumi-lang-python=\"`workload`\" pulumi-lang-yaml=\"`workload`\" pulumi-lang-java=\"`workload`\"\u003e`workload`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`volumeset`\" pulumi-lang-dotnet=\"`Volumeset`\" pulumi-lang-go=\"`volumeset`\" pulumi-lang-python=\"`volumeset`\" pulumi-lang-yaml=\"`volumeset`\" pulumi-lang-java=\"`volumeset`\"\u003e`volumeset`\u003c/span\u003e target kinds only."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Policy."
                },
                "origin": {
                    "type": "string",
                    "description": "Origin of the Policy. Either \u003cspan pulumi-lang-nodejs=\"`builtin`\" pulumi-lang-dotnet=\"`Builtin`\" pulumi-lang-go=\"`builtin`\" pulumi-lang-python=\"`builtin`\" pulumi-lang-yaml=\"`builtin`\" pulumi-lang-java=\"`builtin`\"\u003e`builtin`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`default`\" pulumi-lang-dotnet=\"`Default`\" pulumi-lang-go=\"`default`\" pulumi-lang-python=\"`default`\" pulumi-lang-yaml=\"`default`\" pulumi-lang-java=\"`default`\"\u003e`default`\u003c/span\u003e."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "target": {
                    "type": "string",
                    "description": "Set this value of this attribute to \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e if this policy should target all objects of the given target_kind. Otherwise, do not include the attribute."
                },
                "targetKind": {
                    "type": "string",
                    "description": "The kind of resource to target (e.g., gvc, serviceaccount, etc.)."
                },
                "targetLinks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the targets this policy will be applied to. Not used if \u003cspan pulumi-lang-nodejs=\"`target`\" pulumi-lang-dotnet=\"`Target`\" pulumi-lang-go=\"`target`\" pulumi-lang-python=\"`target`\" pulumi-lang-yaml=\"`target`\" pulumi-lang-java=\"`target`\"\u003e`target`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e."
                },
                "targetQuery": {
                    "$ref": "#/types/cpln:index/PolicyTargetQuery:PolicyTargetQuery",
                    "description": "A defined set of criteria or conditions used to identify the target entities or resources to which the policy applies."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "origin",
                "selfLink",
                "tags",
                "targetKind"
            ],
            "inputProperties": {
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/PolicyBinding:PolicyBinding"
                    },
                    "description": "The association between a target kind and the bound permissions to service principals."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Policy."
                },
                "gvc": {
                    "type": "string",
                    "description": "The GVC for \u003cspan pulumi-lang-nodejs=\"`identity`\" pulumi-lang-dotnet=\"`Identity`\" pulumi-lang-go=\"`identity`\" pulumi-lang-python=\"`identity`\" pulumi-lang-yaml=\"`identity`\" pulumi-lang-java=\"`identity`\"\u003e`identity`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`workload`\" pulumi-lang-dotnet=\"`Workload`\" pulumi-lang-go=\"`workload`\" pulumi-lang-python=\"`workload`\" pulumi-lang-yaml=\"`workload`\" pulumi-lang-java=\"`workload`\"\u003e`workload`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`volumeset`\" pulumi-lang-dotnet=\"`Volumeset`\" pulumi-lang-go=\"`volumeset`\" pulumi-lang-python=\"`volumeset`\" pulumi-lang-yaml=\"`volumeset`\" pulumi-lang-java=\"`volumeset`\"\u003e`volumeset`\u003c/span\u003e target kinds only."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Policy."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "target": {
                    "type": "string",
                    "description": "Set this value of this attribute to \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e if this policy should target all objects of the given target_kind. Otherwise, do not include the attribute."
                },
                "targetKind": {
                    "type": "string",
                    "description": "The kind of resource to target (e.g., gvc, serviceaccount, etc.)."
                },
                "targetLinks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the targets this policy will be applied to. Not used if \u003cspan pulumi-lang-nodejs=\"`target`\" pulumi-lang-dotnet=\"`Target`\" pulumi-lang-go=\"`target`\" pulumi-lang-python=\"`target`\" pulumi-lang-yaml=\"`target`\" pulumi-lang-java=\"`target`\"\u003e`target`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e."
                },
                "targetQuery": {
                    "$ref": "#/types/cpln:index/PolicyTargetQuery:PolicyTargetQuery",
                    "description": "A defined set of criteria or conditions used to identify the target entities or resources to which the policy applies."
                }
            },
            "requiredInputs": [
                "targetKind"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/PolicyBinding:PolicyBinding"
                        },
                        "description": "The association between a target kind and the bound permissions to service principals."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the Policy."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Policy."
                    },
                    "gvc": {
                        "type": "string",
                        "description": "The GVC for \u003cspan pulumi-lang-nodejs=\"`identity`\" pulumi-lang-dotnet=\"`Identity`\" pulumi-lang-go=\"`identity`\" pulumi-lang-python=\"`identity`\" pulumi-lang-yaml=\"`identity`\" pulumi-lang-java=\"`identity`\"\u003e`identity`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`workload`\" pulumi-lang-dotnet=\"`Workload`\" pulumi-lang-go=\"`workload`\" pulumi-lang-python=\"`workload`\" pulumi-lang-yaml=\"`workload`\" pulumi-lang-java=\"`workload`\"\u003e`workload`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`volumeset`\" pulumi-lang-dotnet=\"`Volumeset`\" pulumi-lang-go=\"`volumeset`\" pulumi-lang-python=\"`volumeset`\" pulumi-lang-yaml=\"`volumeset`\" pulumi-lang-java=\"`volumeset`\"\u003e`volumeset`\u003c/span\u003e target kinds only."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Policy."
                    },
                    "origin": {
                        "type": "string",
                        "description": "Origin of the Policy. Either \u003cspan pulumi-lang-nodejs=\"`builtin`\" pulumi-lang-dotnet=\"`Builtin`\" pulumi-lang-go=\"`builtin`\" pulumi-lang-python=\"`builtin`\" pulumi-lang-yaml=\"`builtin`\" pulumi-lang-java=\"`builtin`\"\u003e`builtin`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`default`\" pulumi-lang-dotnet=\"`Default`\" pulumi-lang-go=\"`default`\" pulumi-lang-python=\"`default`\" pulumi-lang-yaml=\"`default`\" pulumi-lang-java=\"`default`\"\u003e`default`\u003c/span\u003e."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    },
                    "target": {
                        "type": "string",
                        "description": "Set this value of this attribute to \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e if this policy should target all objects of the given target_kind. Otherwise, do not include the attribute."
                    },
                    "targetKind": {
                        "type": "string",
                        "description": "The kind of resource to target (e.g., gvc, serviceaccount, etc.)."
                    },
                    "targetLinks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the targets this policy will be applied to. Not used if \u003cspan pulumi-lang-nodejs=\"`target`\" pulumi-lang-dotnet=\"`Target`\" pulumi-lang-go=\"`target`\" pulumi-lang-python=\"`target`\" pulumi-lang-yaml=\"`target`\" pulumi-lang-java=\"`target`\"\u003e`target`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e."
                    },
                    "targetQuery": {
                        "$ref": "#/types/cpln:index/PolicyTargetQuery:PolicyTargetQuery",
                        "description": "A defined set of criteria or conditions used to identify the target entities or resources to which the policy applies."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/secret:Secret": {
            "properties": {
                "aws": {
                    "$ref": "#/types/cpln:index/SecretAws:SecretAws",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#aws)."
                },
                "azureConnector": {
                    "$ref": "#/types/cpln:index/SecretAzureConnector:SecretAzureConnector",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#azure-connector)."
                },
                "azureSdk": {
                    "type": "string",
                    "description": "JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).",
                    "secret": true
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the secret."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the secret."
                },
                "dictionary": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary)."
                },
                "dictionaryAsEnvs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`."
                },
                "docker": {
                    "type": "string",
                    "description": "JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).",
                    "secret": true
                },
                "ecr": {
                    "$ref": "#/types/cpln:index/SecretEcr:SecretEcr"
                },
                "gcp": {
                    "type": "string",
                    "description": "JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)",
                    "secret": true
                },
                "keypair": {
                    "$ref": "#/types/cpln:index/SecretKeypair:SecretKeypair",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#keypair)."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the secret."
                },
                "natsAccount": {
                    "$ref": "#/types/cpln:index/SecretNatsAccount:SecretNatsAccount",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#nats-account)."
                },
                "opaque": {
                    "$ref": "#/types/cpln:index/SecretOpaque:SecretOpaque",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#opaque)."
                },
                "secretLink": {
                    "type": "string",
                    "description": "Output used when linking a secret to an environment variable or volume."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "tls": {
                    "$ref": "#/types/cpln:index/SecretTls:SecretTls",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#tls)."
                },
                "userpass": {
                    "$ref": "#/types/cpln:index/SecretUserpass:SecretUserpass",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#username)."
                }
            },
            "required": [
                "cplnId",
                "description",
                "dictionaryAsEnvs",
                "name",
                "secretLink",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "aws": {
                    "$ref": "#/types/cpln:index/SecretAws:SecretAws",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#aws)."
                },
                "azureConnector": {
                    "$ref": "#/types/cpln:index/SecretAzureConnector:SecretAzureConnector",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#azure-connector)."
                },
                "azureSdk": {
                    "type": "string",
                    "description": "JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the secret."
                },
                "dictionary": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary)."
                },
                "docker": {
                    "type": "string",
                    "description": "JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).",
                    "secret": true
                },
                "ecr": {
                    "$ref": "#/types/cpln:index/SecretEcr:SecretEcr"
                },
                "gcp": {
                    "type": "string",
                    "description": "JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)",
                    "secret": true
                },
                "keypair": {
                    "$ref": "#/types/cpln:index/SecretKeypair:SecretKeypair",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#keypair)."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the secret."
                },
                "natsAccount": {
                    "$ref": "#/types/cpln:index/SecretNatsAccount:SecretNatsAccount",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#nats-account)."
                },
                "opaque": {
                    "$ref": "#/types/cpln:index/SecretOpaque:SecretOpaque",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#opaque)."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "tls": {
                    "$ref": "#/types/cpln:index/SecretTls:SecretTls",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#tls)."
                },
                "userpass": {
                    "$ref": "#/types/cpln:index/SecretUserpass:SecretUserpass",
                    "description": "[Reference Page](https://docs.controlplane.com/reference/secret#username)."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Secret resources.\n",
                "properties": {
                    "aws": {
                        "$ref": "#/types/cpln:index/SecretAws:SecretAws",
                        "description": "[Reference Page](https://docs.controlplane.com/reference/secret#aws)."
                    },
                    "azureConnector": {
                        "$ref": "#/types/cpln:index/SecretAzureConnector:SecretAzureConnector",
                        "description": "[Reference Page](https://docs.controlplane.com/reference/secret#azure-connector)."
                    },
                    "azureSdk": {
                        "type": "string",
                        "description": "JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).",
                        "secret": true
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the secret."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the secret."
                    },
                    "dictionary": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary)."
                    },
                    "dictionaryAsEnvs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`."
                    },
                    "docker": {
                        "type": "string",
                        "description": "JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).",
                        "secret": true
                    },
                    "ecr": {
                        "$ref": "#/types/cpln:index/SecretEcr:SecretEcr"
                    },
                    "gcp": {
                        "type": "string",
                        "description": "JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)",
                        "secret": true
                    },
                    "keypair": {
                        "$ref": "#/types/cpln:index/SecretKeypair:SecretKeypair",
                        "description": "[Reference Page](https://docs.controlplane.com/reference/secret#keypair)."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the secret."
                    },
                    "natsAccount": {
                        "$ref": "#/types/cpln:index/SecretNatsAccount:SecretNatsAccount",
                        "description": "[Reference Page](https://docs.controlplane.com/reference/secret#nats-account)."
                    },
                    "opaque": {
                        "$ref": "#/types/cpln:index/SecretOpaque:SecretOpaque",
                        "description": "[Reference Page](https://docs.controlplane.com/reference/secret#opaque)."
                    },
                    "secretLink": {
                        "type": "string",
                        "description": "Output used when linking a secret to an environment variable or volume."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    },
                    "tls": {
                        "$ref": "#/types/cpln:index/SecretTls:SecretTls",
                        "description": "[Reference Page](https://docs.controlplane.com/reference/secret#tls)."
                    },
                    "userpass": {
                        "$ref": "#/types/cpln:index/SecretUserpass:SecretUserpass",
                        "description": "[Reference Page](https://docs.controlplane.com/reference/secret#username)."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/serviceAccount:ServiceAccount": {
            "properties": {
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the service account."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the service account."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service account."
                },
                "origin": {
                    "type": "string",
                    "description": "Origin of the Policy. Either \u003cspan pulumi-lang-nodejs=\"`builtin`\" pulumi-lang-dotnet=\"`Builtin`\" pulumi-lang-go=\"`builtin`\" pulumi-lang-python=\"`builtin`\" pulumi-lang-yaml=\"`builtin`\" pulumi-lang-java=\"`builtin`\"\u003e`builtin`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`default`\" pulumi-lang-dotnet=\"`Default`\" pulumi-lang-go=\"`default`\" pulumi-lang-python=\"`default`\" pulumi-lang-yaml=\"`default`\" pulumi-lang-java=\"`default`\"\u003e`default`\u003c/span\u003e."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "required": [
                "cplnId",
                "description",
                "name",
                "origin",
                "selfLink",
                "tags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the service account."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service account."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAccount resources.\n",
                "properties": {
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the service account."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the service account."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the service account."
                    },
                    "origin": {
                        "type": "string",
                        "description": "Origin of the Policy. Either \u003cspan pulumi-lang-nodejs=\"`builtin`\" pulumi-lang-dotnet=\"`Builtin`\" pulumi-lang-go=\"`builtin`\" pulumi-lang-python=\"`builtin`\" pulumi-lang-yaml=\"`builtin`\" pulumi-lang-java=\"`builtin`\"\u003e`builtin`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`default`\" pulumi-lang-dotnet=\"`Default`\" pulumi-lang-go=\"`default`\" pulumi-lang-python=\"`default`\" pulumi-lang-yaml=\"`default`\" pulumi-lang-java=\"`default`\"\u003e`default`\u003c/span\u003e."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/serviceAccountKey:ServiceAccountKey": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The timestamp, in UTC, when the key was created."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Service Account Key."
                },
                "key": {
                    "type": "string",
                    "description": "The generated key.",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The generated name of the key."
                },
                "serviceAccountName": {
                    "type": "string",
                    "description": "The name of an existing Service Account this key will belong to."
                }
            },
            "required": [
                "created",
                "description",
                "key",
                "name",
                "serviceAccountName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Service Account Key."
                },
                "serviceAccountName": {
                    "type": "string",
                    "description": "The name of an existing Service Account this key will belong to."
                }
            },
            "requiredInputs": [
                "description",
                "serviceAccountName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAccountKey resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The timestamp, in UTC, when the key was created."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Service Account Key."
                    },
                    "key": {
                        "type": "string",
                        "description": "The generated key.",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The generated name of the key."
                    },
                    "serviceAccountName": {
                        "type": "string",
                        "description": "The name of an existing Service Account this key will belong to."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/volumeSet:VolumeSet": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/cpln:index/VolumeSetAutoscaling:VolumeSetAutoscaling",
                    "description": "Automated adjustment of the volume set's capacity based on predefined metrics or conditions."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the volume set."
                },
                "customEncryption": {
                    "$ref": "#/types/cpln:index/VolumeSetCustomEncryption:VolumeSetCustomEncryption",
                    "description": "Configuration for customer-managed encryption keys, keyed by region."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the volume set."
                },
                "fileSystemType": {
                    "type": "string",
                    "description": "Each volume set has a single, immutable file system. Valid types: \u003cspan pulumi-lang-nodejs=\"`xfs`\" pulumi-lang-dotnet=\"`Xfs`\" pulumi-lang-go=\"`xfs`\" pulumi-lang-python=\"`xfs`\" pulumi-lang-yaml=\"`xfs`\" pulumi-lang-java=\"`xfs`\"\u003e`xfs`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`ext4`\" pulumi-lang-dotnet=\"`Ext4`\" pulumi-lang-go=\"`ext4`\" pulumi-lang-python=\"`ext4`\" pulumi-lang-yaml=\"`ext4`\" pulumi-lang-java=\"`ext4`\"\u003e`ext4`\u003c/span\u003e."
                },
                "gvc": {
                    "type": "string",
                    "description": "Name of the associated GVC."
                },
                "initialCapacity": {
                    "type": "integer",
                    "description": "The initial volume size in this set, specified in GB. The minimum size for the performance class `general-purpose-ssd` is `10 GB`, while `high-throughput-ssd` requires at least `200 GB`."
                },
                "mountOptions": {
                    "$ref": "#/types/cpln:index/VolumeSetMountOptions:VolumeSetMountOptions",
                    "description": "A list of mount options to use when mounting volumes in this set."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the volume set."
                },
                "performanceClass": {
                    "type": "string",
                    "description": "Each volume set has a single, immutable, performance class. Valid classes: `general-purpose-ssd` or `high-throughput-ssd`."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "snapshots": {
                    "$ref": "#/types/cpln:index/VolumeSetSnapshots:VolumeSetSnapshots",
                    "description": "Point-in-time copies of data stored within the volume set, capturing the state of the data at a specific moment."
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/VolumeSetStatus:VolumeSetStatus"
                    },
                    "description": "Status of the Volume Set."
                },
                "storageClassSuffix": {
                    "type": "string",
                    "description": "For self-hosted locations only. The storage class used for volumes in this set will be {performanceClass}-{fileSystemType}-{storageClassSuffix} if it exists, otherwise it will be {performanceClass}-{fileSystemType}"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "volumesetLink": {
                    "type": "string",
                    "description": "Output used when linking a volume set to a workload."
                }
            },
            "required": [
                "cplnId",
                "description",
                "fileSystemType",
                "gvc",
                "initialCapacity",
                "name",
                "performanceClass",
                "selfLink",
                "statuses",
                "tags",
                "volumesetLink"
            ],
            "inputProperties": {
                "autoscaling": {
                    "$ref": "#/types/cpln:index/VolumeSetAutoscaling:VolumeSetAutoscaling",
                    "description": "Automated adjustment of the volume set's capacity based on predefined metrics or conditions."
                },
                "customEncryption": {
                    "$ref": "#/types/cpln:index/VolumeSetCustomEncryption:VolumeSetCustomEncryption",
                    "description": "Configuration for customer-managed encryption keys, keyed by region."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the volume set."
                },
                "fileSystemType": {
                    "type": "string",
                    "description": "Each volume set has a single, immutable file system. Valid types: \u003cspan pulumi-lang-nodejs=\"`xfs`\" pulumi-lang-dotnet=\"`Xfs`\" pulumi-lang-go=\"`xfs`\" pulumi-lang-python=\"`xfs`\" pulumi-lang-yaml=\"`xfs`\" pulumi-lang-java=\"`xfs`\"\u003e`xfs`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`ext4`\" pulumi-lang-dotnet=\"`Ext4`\" pulumi-lang-go=\"`ext4`\" pulumi-lang-python=\"`ext4`\" pulumi-lang-yaml=\"`ext4`\" pulumi-lang-java=\"`ext4`\"\u003e`ext4`\u003c/span\u003e."
                },
                "gvc": {
                    "type": "string",
                    "description": "Name of the associated GVC."
                },
                "initialCapacity": {
                    "type": "integer",
                    "description": "The initial volume size in this set, specified in GB. The minimum size for the performance class `general-purpose-ssd` is `10 GB`, while `high-throughput-ssd` requires at least `200 GB`."
                },
                "mountOptions": {
                    "$ref": "#/types/cpln:index/VolumeSetMountOptions:VolumeSetMountOptions",
                    "description": "A list of mount options to use when mounting volumes in this set."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the volume set."
                },
                "performanceClass": {
                    "type": "string",
                    "description": "Each volume set has a single, immutable, performance class. Valid classes: `general-purpose-ssd` or `high-throughput-ssd`."
                },
                "snapshots": {
                    "$ref": "#/types/cpln:index/VolumeSetSnapshots:VolumeSetSnapshots",
                    "description": "Point-in-time copies of data stored within the volume set, capturing the state of the data at a specific moment."
                },
                "storageClassSuffix": {
                    "type": "string",
                    "description": "For self-hosted locations only. The storage class used for volumes in this set will be {performanceClass}-{fileSystemType}-{storageClassSuffix} if it exists, otherwise it will be {performanceClass}-{fileSystemType}"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                }
            },
            "requiredInputs": [
                "gvc",
                "initialCapacity",
                "performanceClass"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VolumeSet resources.\n",
                "properties": {
                    "autoscaling": {
                        "$ref": "#/types/cpln:index/VolumeSetAutoscaling:VolumeSetAutoscaling",
                        "description": "Automated adjustment of the volume set's capacity based on predefined metrics or conditions."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the volume set."
                    },
                    "customEncryption": {
                        "$ref": "#/types/cpln:index/VolumeSetCustomEncryption:VolumeSetCustomEncryption",
                        "description": "Configuration for customer-managed encryption keys, keyed by region."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the volume set."
                    },
                    "fileSystemType": {
                        "type": "string",
                        "description": "Each volume set has a single, immutable file system. Valid types: \u003cspan pulumi-lang-nodejs=\"`xfs`\" pulumi-lang-dotnet=\"`Xfs`\" pulumi-lang-go=\"`xfs`\" pulumi-lang-python=\"`xfs`\" pulumi-lang-yaml=\"`xfs`\" pulumi-lang-java=\"`xfs`\"\u003e`xfs`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`ext4`\" pulumi-lang-dotnet=\"`Ext4`\" pulumi-lang-go=\"`ext4`\" pulumi-lang-python=\"`ext4`\" pulumi-lang-yaml=\"`ext4`\" pulumi-lang-java=\"`ext4`\"\u003e`ext4`\u003c/span\u003e."
                    },
                    "gvc": {
                        "type": "string",
                        "description": "Name of the associated GVC."
                    },
                    "initialCapacity": {
                        "type": "integer",
                        "description": "The initial volume size in this set, specified in GB. The minimum size for the performance class `general-purpose-ssd` is `10 GB`, while `high-throughput-ssd` requires at least `200 GB`."
                    },
                    "mountOptions": {
                        "$ref": "#/types/cpln:index/VolumeSetMountOptions:VolumeSetMountOptions",
                        "description": "A list of mount options to use when mounting volumes in this set."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the volume set."
                    },
                    "performanceClass": {
                        "type": "string",
                        "description": "Each volume set has a single, immutable, performance class. Valid classes: `general-purpose-ssd` or `high-throughput-ssd`."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "snapshots": {
                        "$ref": "#/types/cpln:index/VolumeSetSnapshots:VolumeSetSnapshots",
                        "description": "Point-in-time copies of data stored within the volume set, capturing the state of the data at a specific moment."
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/VolumeSetStatus:VolumeSetStatus"
                        },
                        "description": "Status of the Volume Set."
                    },
                    "storageClassSuffix": {
                        "type": "string",
                        "description": "For self-hosted locations only. The storage class used for volumes in this set will be {performanceClass}-{fileSystemType}-{storageClassSuffix} if it exists, otherwise it will be {performanceClass}-{fileSystemType}"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    },
                    "volumesetLink": {
                        "type": "string",
                        "description": "Output used when linking a volume set to a workload."
                    }
                },
                "type": "object"
            }
        },
        "cpln:index/workload:Workload": {
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadContainer:WorkloadContainer"
                    },
                    "description": "An isolated and lightweight runtime environment that encapsulates an application and its dependencies."
                },
                "cplnId": {
                    "type": "string",
                    "description": "The ID, in GUID format, of the workload."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the workload."
                },
                "extras": {
                    "type": "string",
                    "description": "Extra Kubernetes modifications. Only used for BYOK."
                },
                "firewallSpec": {
                    "$ref": "#/types/cpln:index/WorkloadFirewallSpec:WorkloadFirewallSpec",
                    "description": "Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic. Access is restricted by default."
                },
                "gvc": {
                    "type": "string",
                    "description": "Name of the associated GVC."
                },
                "identityLink": {
                    "type": "string",
                    "description": "The identityLink is used as the access scope for 3rd party cloud resources. A single identity can provide access to multiple cloud providers."
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadJob:WorkloadJob"
                    },
                    "description": "[Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron)."
                },
                "loadBalancer": {
                    "$ref": "#/types/cpln:index/WorkloadLoadBalancer:WorkloadLoadBalancer"
                },
                "localOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadLocalOption:WorkloadLocalOption"
                    },
                    "description": "Override defaultOptions for the workload in specific Control Plane Locations."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the workload."
                },
                "options": {
                    "$ref": "#/types/cpln:index/WorkloadOptions:WorkloadOptions",
                    "description": "Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and characteristics of the workload."
                },
                "requestRetryPolicy": {
                    "$ref": "#/types/cpln:index/WorkloadRequestRetryPolicy:WorkloadRequestRetryPolicy"
                },
                "rolloutOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadRolloutOption:WorkloadRolloutOption"
                    },
                    "description": "Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable replicas, surge replicas, and scaling policies."
                },
                "securityOptions": {
                    "$ref": "#/types/cpln:index/WorkloadSecurityOptions:WorkloadSecurityOptions",
                    "description": "Allows for the configuration of the `file system group id` and `geo location`."
                },
                "selfLink": {
                    "type": "string",
                    "description": "Full link to this resource. Can be referenced by other resources."
                },
                "sidecar": {
                    "$ref": "#/types/cpln:index/WorkloadSidecar:WorkloadSidecar"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadStatus:WorkloadStatus"
                    },
                    "description": "Status of the workload."
                },
                "supportDynamicTags": {
                    "type": "boolean",
                    "description": "Workload will automatically redeploy when one of the container images is updated in the container registry. Default: false."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "type": {
                    "type": "string",
                    "description": "Workload Type. Either \u003cspan pulumi-lang-nodejs=\"`serverless`\" pulumi-lang-dotnet=\"`Serverless`\" pulumi-lang-go=\"`serverless`\" pulumi-lang-python=\"`serverless`\" pulumi-lang-yaml=\"`serverless`\" pulumi-lang-java=\"`serverless`\"\u003e`serverless`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`stateful`\" pulumi-lang-dotnet=\"`Stateful`\" pulumi-lang-go=\"`stateful`\" pulumi-lang-python=\"`stateful`\" pulumi-lang-yaml=\"`stateful`\" pulumi-lang-java=\"`stateful`\"\u003e`stateful`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`cron`\" pulumi-lang-dotnet=\"`Cron`\" pulumi-lang-go=\"`cron`\" pulumi-lang-python=\"`cron`\" pulumi-lang-yaml=\"`cron`\" pulumi-lang-java=\"`cron`\"\u003e`cron`\u003c/span\u003e."
                }
            },
            "required": [
                "cplnId",
                "description",
                "gvc",
                "name",
                "selfLink",
                "statuses",
                "supportDynamicTags",
                "tags",
                "type"
            ],
            "inputProperties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadContainer:WorkloadContainer"
                    },
                    "description": "An isolated and lightweight runtime environment that encapsulates an application and its dependencies."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the workload."
                },
                "extras": {
                    "type": "string",
                    "description": "Extra Kubernetes modifications. Only used for BYOK."
                },
                "firewallSpec": {
                    "$ref": "#/types/cpln:index/WorkloadFirewallSpec:WorkloadFirewallSpec",
                    "description": "Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic. Access is restricted by default."
                },
                "gvc": {
                    "type": "string",
                    "description": "Name of the associated GVC."
                },
                "identityLink": {
                    "type": "string",
                    "description": "The identityLink is used as the access scope for 3rd party cloud resources. A single identity can provide access to multiple cloud providers."
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadJob:WorkloadJob"
                    },
                    "description": "[Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron)."
                },
                "loadBalancer": {
                    "$ref": "#/types/cpln:index/WorkloadLoadBalancer:WorkloadLoadBalancer"
                },
                "localOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadLocalOption:WorkloadLocalOption"
                    },
                    "description": "Override defaultOptions for the workload in specific Control Plane Locations."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the workload."
                },
                "options": {
                    "$ref": "#/types/cpln:index/WorkloadOptions:WorkloadOptions",
                    "description": "Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and characteristics of the workload."
                },
                "requestRetryPolicy": {
                    "$ref": "#/types/cpln:index/WorkloadRequestRetryPolicy:WorkloadRequestRetryPolicy"
                },
                "rolloutOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cpln:index/WorkloadRolloutOption:WorkloadRolloutOption"
                    },
                    "description": "Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable replicas, surge replicas, and scaling policies."
                },
                "securityOptions": {
                    "$ref": "#/types/cpln:index/WorkloadSecurityOptions:WorkloadSecurityOptions",
                    "description": "Allows for the configuration of the `file system group id` and `geo location`."
                },
                "sidecar": {
                    "$ref": "#/types/cpln:index/WorkloadSidecar:WorkloadSidecar"
                },
                "supportDynamicTags": {
                    "type": "boolean",
                    "description": "Workload will automatically redeploy when one of the container images is updated in the container registry. Default: false."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags."
                },
                "type": {
                    "type": "string",
                    "description": "Workload Type. Either \u003cspan pulumi-lang-nodejs=\"`serverless`\" pulumi-lang-dotnet=\"`Serverless`\" pulumi-lang-go=\"`serverless`\" pulumi-lang-python=\"`serverless`\" pulumi-lang-yaml=\"`serverless`\" pulumi-lang-java=\"`serverless`\"\u003e`serverless`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`stateful`\" pulumi-lang-dotnet=\"`Stateful`\" pulumi-lang-go=\"`stateful`\" pulumi-lang-python=\"`stateful`\" pulumi-lang-yaml=\"`stateful`\" pulumi-lang-java=\"`stateful`\"\u003e`stateful`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`cron`\" pulumi-lang-dotnet=\"`Cron`\" pulumi-lang-go=\"`cron`\" pulumi-lang-python=\"`cron`\" pulumi-lang-yaml=\"`cron`\" pulumi-lang-java=\"`cron`\"\u003e`cron`\u003c/span\u003e."
                }
            },
            "requiredInputs": [
                "gvc",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Workload resources.\n",
                "properties": {
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/WorkloadContainer:WorkloadContainer"
                        },
                        "description": "An isolated and lightweight runtime environment that encapsulates an application and its dependencies."
                    },
                    "cplnId": {
                        "type": "string",
                        "description": "The ID, in GUID format, of the workload."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the workload."
                    },
                    "extras": {
                        "type": "string",
                        "description": "Extra Kubernetes modifications. Only used for BYOK."
                    },
                    "firewallSpec": {
                        "$ref": "#/types/cpln:index/WorkloadFirewallSpec:WorkloadFirewallSpec",
                        "description": "Control of inbound and outbound access to the workload for external (public) and internal (service to service) traffic. Access is restricted by default."
                    },
                    "gvc": {
                        "type": "string",
                        "description": "Name of the associated GVC."
                    },
                    "identityLink": {
                        "type": "string",
                        "description": "The identityLink is used as the access scope for 3rd party cloud resources. A single identity can provide access to multiple cloud providers."
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/WorkloadJob:WorkloadJob"
                        },
                        "description": "[Cron Job Reference Page](https://docs.controlplane.com/reference/workload#cron)."
                    },
                    "loadBalancer": {
                        "$ref": "#/types/cpln:index/WorkloadLoadBalancer:WorkloadLoadBalancer"
                    },
                    "localOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/WorkloadLocalOption:WorkloadLocalOption"
                        },
                        "description": "Override defaultOptions for the workload in specific Control Plane Locations."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the workload."
                    },
                    "options": {
                        "$ref": "#/types/cpln:index/WorkloadOptions:WorkloadOptions",
                        "description": "Configurable settings or parameters that allow fine-tuning and customization of the behavior, performance, and characteristics of the workload."
                    },
                    "requestRetryPolicy": {
                        "$ref": "#/types/cpln:index/WorkloadRequestRetryPolicy:WorkloadRequestRetryPolicy"
                    },
                    "rolloutOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/WorkloadRolloutOption:WorkloadRolloutOption"
                        },
                        "description": "Defines the parameters for updating applications and services, including settings for minimum readiness, unavailable replicas, surge replicas, and scaling policies."
                    },
                    "securityOptions": {
                        "$ref": "#/types/cpln:index/WorkloadSecurityOptions:WorkloadSecurityOptions",
                        "description": "Allows for the configuration of the `file system group id` and `geo location`."
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Full link to this resource. Can be referenced by other resources."
                    },
                    "sidecar": {
                        "$ref": "#/types/cpln:index/WorkloadSidecar:WorkloadSidecar"
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/WorkloadStatus:WorkloadStatus"
                        },
                        "description": "Status of the workload."
                    },
                    "supportDynamicTags": {
                        "type": "boolean",
                        "description": "Workload will automatically redeploy when one of the container images is updated in the container registry. Default: false."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags."
                    },
                    "type": {
                        "type": "string",
                        "description": "Workload Type. Either \u003cspan pulumi-lang-nodejs=\"`serverless`\" pulumi-lang-dotnet=\"`Serverless`\" pulumi-lang-go=\"`serverless`\" pulumi-lang-python=\"`serverless`\" pulumi-lang-yaml=\"`serverless`\" pulumi-lang-java=\"`serverless`\"\u003e`serverless`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`stateful`\" pulumi-lang-dotnet=\"`Stateful`\" pulumi-lang-go=\"`stateful`\" pulumi-lang-python=\"`stateful`\" pulumi-lang-yaml=\"`stateful`\" pulumi-lang-java=\"`stateful`\"\u003e`stateful`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`cron`\" pulumi-lang-dotnet=\"`Cron`\" pulumi-lang-go=\"`cron`\" pulumi-lang-python=\"`cron`\" pulumi-lang-yaml=\"`cron`\" pulumi-lang-java=\"`cron`\"\u003e`cron`\u003c/span\u003e."
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "cpln:index/getCloudAccount:getCloudAccount": {
            "description": "Use this data source to access information about an existing [Cloud Account](https://docs.controlplane.com/reference/cloudaccount) within Control Plane.\n\n## Outputs\n\n- **aws_identifiers** (String)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nconst _this = cpln.getCloudAccount({});\nexport const cloudAccount = _this.then(_this =\u003e _this.awsIdentifiers);\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\nthis = cpln.get_cloud_account()\npulumi.export(\"cloudAccount\", this.aws_identifiers)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @this = Cpln.GetCloudAccount.Invoke();\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"cloudAccount\"] = @this.Apply(@this =\u003e @this.Apply(getCloudAccountResult =\u003e getCloudAccountResult.AwsIdentifiers)),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tthis, err := cpln.LookupCloudAccount(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"cloudAccount\", this.AwsIdentifiers)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var this = CplnFunctions.getCloudAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n        ctx.export(\"cloudAccount\", this_.awsIdentifiers());\n    }\n}\n```\n```yaml\nvariables:\n  this:\n    fn::invoke:\n      function: cpln:getCloudAccount\n      arguments: {}\noutputs:\n  cloudAccount: ${this.awsIdentifiers}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getCloudAccount.\n",
                "properties": {
                    "awsIdentifiers": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "awsIdentifiers",
                    "id"
                ],
                "type": "object"
            }
        },
        "cpln:index/getGvc:getGvc": {
            "description": "Use this data source to access information about an existing [Global Virtual Cloud (GVC)](https://docs.controlplane.com/reference/gvc) within Control Plane. \n\n## Required\n\n- **name** (String) Name of the GVC.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **cpln_id** (String) The ID, in GUID format, of the GVC.\n- **name** (String) Name of the GVC.\n- **alias** (String) The alias name of the GVC.\n- **description** (String) Description of the GVC.\n- **tags** (Map of String) Key-value map of resource tags.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n- **domain** (String) Custom domain name used by associated workloads.\n- **locations** (List of String) A list of [locations](https://docs.controlplane.com/reference/location#current) making up the Global Virtual Cloud.\n- **pull_secrets** (List of String) A list of [pull secret](https://docs.controlplane.com/reference/gvc#pull-secrets) names used to authenticate to any private image repository referenced by Workloads within the GVC.\n- **lightstep_tracing** (Block List, Max: 1) (see below).\n- **otel_tracing** (Block List, Max: 1) (see below).\n- **controlplane_tracing** (Block List, Max: 1) (see below).\n- **load_balancer** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--lightstep_tracing\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`lightstepTracing`\" pulumi-lang-dotnet=\"`LightstepTracing`\" pulumi-lang-go=\"`lightstepTracing`\" pulumi-lang-python=\"`lightstep_tracing`\" pulumi-lang-yaml=\"`lightstepTracing`\" pulumi-lang-java=\"`lightstepTracing`\"\u003e`lightstep_tracing`\u003c/span\u003e\n\n- **sampling** (Int) Sampling percentage.\n- **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or the internal endpoint.\n- **credentials** (String) Full link to referenced Opaque Secret.\n\n\u003ca id=\"nestedblock--otel_tracing\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`otelTracing`\" pulumi-lang-dotnet=\"`OtelTracing`\" pulumi-lang-go=\"`otelTracing`\" pulumi-lang-python=\"`otel_tracing`\" pulumi-lang-yaml=\"`otelTracing`\" pulumi-lang-java=\"`otelTracing`\"\u003e`otel_tracing`\u003c/span\u003e\n\n- **sampling** (Int) Determines what percentage of requests should be traced.\n- **endpoint** (String) Tracing Endpoint Workload. Either the canonical endpoint or internal endpoint.\n- **custom_tags** (Map of String) Key-value map of custom tags.\n\n\u003ca id=\"nestedblock--controlplane_tracing\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`controlplaneTracing`\" pulumi-lang-dotnet=\"`ControlplaneTracing`\" pulumi-lang-go=\"`controlplaneTracing`\" pulumi-lang-python=\"`controlplane_tracing`\" pulumi-lang-yaml=\"`controlplaneTracing`\" pulumi-lang-java=\"`controlplaneTracing`\"\u003e`controlplane_tracing`\u003c/span\u003e\n\n- **sampling** (Int) Determines what percentage of requests should be traced.\n- **custom_tags** (Map of String) Key-value map of custom tags.\n\n\u003ca id=\"nestedblock--load_balancer\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`loadBalancer`\" pulumi-lang-dotnet=\"`LoadBalancer`\" pulumi-lang-go=\"`loadBalancer`\" pulumi-lang-python=\"`load_balancer`\" pulumi-lang-yaml=\"`loadBalancer`\" pulumi-lang-java=\"`loadBalancer`\"\u003e`load_balancer`\u003c/span\u003e\n\n- **dedicated** (Boolean) Creates a dedicated load balancer in each location and enables additional Domain features: custom ports, protocols and wildcard hostnames. Charges apply for each location.\n\n- **trusted_proxies** (Int) Controls the address used for request logging and for setting the X-Envoy-External-Address header. If set to 1, then the last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If set to 2, then the second to last address in an existing X-Forwarded-For header will be used in place of the source client IP address. If the XFF header does not have at least two addresses or does not exist then the source client IP address will be used instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nconst gvc = cpln.getGvc({\n    name: \"gvc-example\",\n});\nexport const gvcId = gvc.then(gvc =\u003e gvc.id);\nexport const gvcLocations = gvc.then(gvc =\u003e gvc.locations);\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\ngvc = cpln.get_gvc(name=\"gvc-example\")\npulumi.export(\"gvcId\", gvc.id)\npulumi.export(\"gvcLocations\", gvc.locations)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gvc = Cpln.GetGvc.Invoke(new()\n    {\n        Name = \"gvc-example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"gvcId\"] = gvc.Apply(getGvcResult =\u003e getGvcResult.Id),\n        [\"gvcLocations\"] = gvc.Apply(getGvcResult =\u003e getGvcResult.Locations),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgvc, err := cpln.LookupGvc(ctx, \u0026cpln.LookupGvcArgs{\n\t\t\tName: \"gvc-example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"gvcId\", gvc.Id)\n\t\tctx.Export(\"gvcLocations\", gvc.Locations)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport com.pulumi.cpln.inputs.GetGvcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var gvc = CplnFunctions.getGvc(GetGvcArgs.builder()\n            .name(\"gvc-example\")\n            .build());\n\n        ctx.export(\"gvcId\", gvc.id());\n        ctx.export(\"gvcLocations\", gvc.locations());\n    }\n}\n```\n```yaml\nvariables:\n  gvc:\n    fn::invoke:\n      function: cpln:getGvc\n      arguments:\n        name: gvc-example\noutputs:\n  gvcId: ${gvc.id}\n  gvcLocations: ${gvc.locations}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGvc.\n",
                "properties": {
                    "controlplaneTracing": {
                        "$ref": "#/types/cpln:index/getGvcControlplaneTracing:getGvcControlplaneTracing"
                    },
                    "domain": {
                        "type": "string",
                        "deprecationMessage": "Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead."
                    },
                    "endpointNamingFormat": {
                        "type": "string"
                    },
                    "env": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "keda": {
                        "$ref": "#/types/cpln:index/getGvcKeda:getGvcKeda"
                    },
                    "lightstepTracing": {
                        "$ref": "#/types/cpln:index/getGvcLightstepTracing:getGvcLightstepTracing"
                    },
                    "loadBalancer": {
                        "$ref": "#/types/cpln:index/getGvcLoadBalancer:getGvcLoadBalancer"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "otelTracing": {
                        "$ref": "#/types/cpln:index/getGvcOtelTracing:getGvcOtelTracing"
                    },
                    "pullSecrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sidecar": {
                        "$ref": "#/types/cpln:index/getGvcSidecar:getGvcSidecar"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGvc.\n",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "controlplaneTracing": {
                        "$ref": "#/types/cpln:index/getGvcControlplaneTracing:getGvcControlplaneTracing"
                    },
                    "cplnId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "deprecationMessage": "Selecting a domain on a GVC will be deprecated in the future. Use the 'cpln_domain resource' instead.",
                        "type": "string"
                    },
                    "endpointNamingFormat": {
                        "type": "string"
                    },
                    "env": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keda": {
                        "$ref": "#/types/cpln:index/getGvcKeda:getGvcKeda"
                    },
                    "lightstepTracing": {
                        "$ref": "#/types/cpln:index/getGvcLightstepTracing:getGvcLightstepTracing"
                    },
                    "loadBalancer": {
                        "$ref": "#/types/cpln:index/getGvcLoadBalancer:getGvcLoadBalancer"
                    },
                    "locations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "otelTracing": {
                        "$ref": "#/types/cpln:index/getGvcOtelTracing:getGvcOtelTracing"
                    },
                    "pullSecrets": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "sidecar": {
                        "$ref": "#/types/cpln:index/getGvcSidecar:getGvcSidecar"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "alias",
                    "cplnId",
                    "description",
                    "endpointNamingFormat",
                    "id",
                    "name",
                    "selfLink",
                    "tags"
                ],
                "type": "object"
            }
        },
        "cpln:index/getImage:getImage": {
            "description": "Use this data source to access information about an [Image](https://docs.controlplane.com/reference/image) within Control Plane.\n\n## Required\n\n- **name** (String) Name of the image. If the tag of the image is not specified, the latest image will be fetched for this data source.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **cpln_id** (String) The ID, in GUID format, of the Image.\n- **name** (String) Name of the Image.\n- **tags** (Map of String) Key-value map of resource tags.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n- **tag** (String) Tag of the image.\n- **repository** (String) Respository name of the image.\n- **digest** (String) A unique SHA256 hash used to identify a specific image version within the image registry.\n- **manifest** (Block List, Max: 1) (see below)\n\n\u003ca id=\"nestedblock--manifest\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`manifest`\" pulumi-lang-dotnet=\"`Manifest`\" pulumi-lang-go=\"`manifest`\" pulumi-lang-python=\"`manifest`\" pulumi-lang-yaml=\"`manifest`\" pulumi-lang-java=\"`manifest`\"\u003e`manifest`\u003c/span\u003e\n\n The manifest provides configuration and layers information about the image. It plays a crucial role in the Docker image distribution system, enabling image creation, verification, and replication in a consistent and secure manner.\n\n- **config** (Block List, Max: 1) (see below).\n- **layers** (Block List) (see below).\n- **media_type** (String) Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n- **schema_version** (Number) The version of the Docker Image Manifest format.\n\n\u003ca id=\"nestedblock--config--layers\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`config`\" pulumi-lang-dotnet=\"`Config`\" pulumi-lang-go=\"`config`\" pulumi-lang-python=\"`config`\" pulumi-lang-yaml=\"`config`\" pulumi-lang-java=\"`config`\"\u003e`config`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`layers`\" pulumi-lang-dotnet=\"`Layers`\" pulumi-lang-go=\"`layers`\" pulumi-lang-python=\"`layers`\" pulumi-lang-yaml=\"`layers`\" pulumi-lang-java=\"`layers`\"\u003e`layers`\u003c/span\u003e\n\nThe config is a JSON blob that contains the image configuration data which includes environment variables, default command to run, and other settings necessary to run the container based on this image.\n\nLayers lists the digests of the image's layers. These layers are filesystem changes or additions made in each step of the Docker image's creation process. The layers are stored separately and pulled as needed, which allows for efficient storage and transfer of images. Each layer is represented by a SHA256 digest, ensuring the integrity and authenticity of the image.\n\n- **size** (Number) The size of the image or layer in bytes. This helps in estimating the space required and the download time.\n- **digest** (String) A unique SHA256 hash used to identify a specific image version within the image registry.\n- **media_type** (String) Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\n// Get latest image\nconst image_name_only = cpln.getImage({\n    name: \"IMAGE_NAME\",\n});\n// Get Specific image\nconst image_name_with_tag = cpln.getImage({\n    name: \"IMAGE_NAME:TAG\",\n});\nexport const latestImage = image_name_only;\nexport const specificImage = image_name_with_tag;\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\n# Get latest image\nimage_name_only = cpln.get_image(name=\"IMAGE_NAME\")\n# Get Specific image\nimage_name_with_tag = cpln.get_image(name=\"IMAGE_NAME:TAG\")\npulumi.export(\"latestImage\", image_name_only)\npulumi.export(\"specificImage\", image_name_with_tag)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Get latest image\n    var image_name_only = Cpln.GetImage.Invoke(new()\n    {\n        Name = \"IMAGE_NAME\",\n    });\n\n    // Get Specific image\n    var image_name_with_tag = Cpln.GetImage.Invoke(new()\n    {\n        Name = \"IMAGE_NAME:TAG\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"latestImage\"] = image_name_only,\n        [\"specificImage\"] = image_name_with_tag,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Get latest image\n\t\timage_name_only, err := cpln.GetImage(ctx, \u0026cpln.GetImageArgs{\n\t\t\tName: \"IMAGE_NAME\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Get Specific image\n\t\timage_name_with_tag, err := cpln.GetImage(ctx, \u0026cpln.GetImageArgs{\n\t\t\tName: \"IMAGE_NAME:TAG\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"latestImage\", image_name_only)\n\t\tctx.Export(\"specificImage\", image_name_with_tag)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport com.pulumi.cpln.inputs.GetImageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Get latest image\n        final var image-name-only = CplnFunctions.getImage(GetImageArgs.builder()\n            .name(\"IMAGE_NAME\")\n            .build());\n\n        // Get Specific image\n        final var image-name-with-tag = CplnFunctions.getImage(GetImageArgs.builder()\n            .name(\"IMAGE_NAME:TAG\")\n            .build());\n\n        ctx.export(\"latestImage\", image_name_only);\n        ctx.export(\"specificImage\", image_name_with_tag);\n    }\n}\n```\n```yaml\nvariables:\n  # Get latest image\n  image-name-only:\n    fn::invoke:\n      function: cpln:getImage\n      arguments:\n        name: IMAGE_NAME\n  # Get Specific image\n  image-name-with-tag:\n    fn::invoke:\n      function: cpln:getImage\n      arguments:\n        name: IMAGE_NAME:TAG\noutputs:\n  latestImage: ${[\"image-name-only\"]}\n  specificImage: ${[\"image-name-with-tag\"]}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "cplnId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "manifests": {
                        "items": {
                            "$ref": "#/types/cpln:index/getImageManifest:getImageManifest"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "cplnId",
                    "description",
                    "digest",
                    "id",
                    "manifests",
                    "name",
                    "repository",
                    "selfLink",
                    "tag",
                    "tags"
                ],
                "type": "object"
            }
        },
        "cpln:index/getImages:getImages": {
            "description": "Use this data source to access information about all [Images](https://docs.controlplane.com/reference/image) within Control Plane.\n\n## Optional\n\n- **query** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--query\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`query`\" pulumi-lang-dotnet=\"`Query`\" pulumi-lang-go=\"`query`\" pulumi-lang-python=\"`query`\" pulumi-lang-yaml=\"`query`\" pulumi-lang-java=\"`query`\"\u003e`query`\u003c/span\u003e\n\nOptional:\n\n- **fetch** (String) Type of fetch. Specify either: \u003cspan pulumi-lang-nodejs=\"`links`\" pulumi-lang-dotnet=\"`Links`\" pulumi-lang-go=\"`links`\" pulumi-lang-python=\"`links`\" pulumi-lang-yaml=\"`links`\" pulumi-lang-java=\"`links`\"\u003e`links`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`items`\" pulumi-lang-dotnet=\"`Items`\" pulumi-lang-go=\"`items`\" pulumi-lang-python=\"`items`\" pulumi-lang-yaml=\"`items`\" pulumi-lang-java=\"`items`\"\u003e`items`\u003c/span\u003e.\n- **spec** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--query--spec\"\u003e\u003c/a\u003e\n\n### `query.spec`\n\nOptional:\n\n- **match** (String) Type of match. Available values: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`any`\" pulumi-lang-dotnet=\"`Any`\" pulumi-lang-go=\"`any`\" pulumi-lang-python=\"`any`\" pulumi-lang-yaml=\"`any`\" pulumi-lang-java=\"`any`\"\u003e`any`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e.\n- **terms** (Block List) (see below).\n\n\u003ca id=\"nestedblock--query--spec--terms\"\u003e\u003c/a\u003e\n\n### `query.spec.terms`\n\n\u003c!-- Terms can only contain one of the following attributes: \u003cspan pulumi-lang-nodejs=\"`property`\" pulumi-lang-dotnet=\"`Property`\" pulumi-lang-go=\"`property`\" pulumi-lang-python=\"`property`\" pulumi-lang-yaml=\"`property`\" pulumi-lang-java=\"`property`\"\u003e`property`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rel`\" pulumi-lang-dotnet=\"`Rel`\" pulumi-lang-go=\"`rel`\" pulumi-lang-python=\"`rel`\" pulumi-lang-yaml=\"`rel`\" pulumi-lang-java=\"`rel`\"\u003e`rel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tag`\" pulumi-lang-dotnet=\"`Tag`\" pulumi-lang-go=\"`tag`\" pulumi-lang-python=\"`tag`\" pulumi-lang-yaml=\"`tag`\" pulumi-lang-java=\"`tag`\"\u003e`tag`\u003c/span\u003e. --\u003e\n\nTerms can only contain one of the following attributes: \u003cspan pulumi-lang-nodejs=\"`property`\" pulumi-lang-dotnet=\"`Property`\" pulumi-lang-go=\"`property`\" pulumi-lang-python=\"`property`\" pulumi-lang-yaml=\"`property`\" pulumi-lang-java=\"`property`\"\u003e`property`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rel`\" pulumi-lang-dotnet=\"`Rel`\" pulumi-lang-go=\"`rel`\" pulumi-lang-python=\"`rel`\" pulumi-lang-yaml=\"`rel`\" pulumi-lang-java=\"`rel`\"\u003e`rel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tag`\" pulumi-lang-dotnet=\"`Tag`\" pulumi-lang-go=\"`tag`\" pulumi-lang-python=\"`tag`\" pulumi-lang-yaml=\"`tag`\" pulumi-lang-java=\"`tag`\"\u003e`tag`\u003c/span\u003e.\n\nOptional:\n\n- **op** (String) Type of query operation. Available values: `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`, `!=`, \u003cspan pulumi-lang-nodejs=\"`exists`\" pulumi-lang-dotnet=\"`Exists`\" pulumi-lang-go=\"`exists`\" pulumi-lang-python=\"`exists`\" pulumi-lang-yaml=\"`exists`\" pulumi-lang-java=\"`exists`\"\u003e`exists`\u003c/span\u003e, `!exists`. Default: `=`.\n\n- **property** (String) Property to use for query evaluation.\n- **rel** (String) Rel to use use for query evaluation.\n- **tag** (String) Tag key to use for query evaluation.\n- **value** (String) Testing value for query evaluation.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **images** (Block List) (see below).\n\n\u003ca id=\"nestedblock--images\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`images`\" pulumi-lang-dotnet=\"`Images`\" pulumi-lang-go=\"`images`\" pulumi-lang-python=\"`images`\" pulumi-lang-yaml=\"`images`\" pulumi-lang-java=\"`images`\"\u003e`images`\u003c/span\u003e\n\n- **cpln_id** (String) The ID, in GUID format, of the Image.\n- **name** (String) Name of the Image.\n- **tags** (Map of String) Key-value map of resource tags.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n- **tag** (String) Tag of the image.\n- **repository** (String) Respository name of the image.\n- **digest** (String) A unique SHA256 hash used to identify a specific image version within the image registry.\n- **manifest** (Block List, Max: 1) (see below)\n\n\u003ca id=\"nestedblock--manifest\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`manifest`\" pulumi-lang-dotnet=\"`Manifest`\" pulumi-lang-go=\"`manifest`\" pulumi-lang-python=\"`manifest`\" pulumi-lang-yaml=\"`manifest`\" pulumi-lang-java=\"`manifest`\"\u003e`manifest`\u003c/span\u003e\n\n The manifest provides configuration and layers information about the image. It plays a crucial role in the Docker image distribution system, enabling image creation, verification, and replication in a consistent and secure manner.\n\n- **config** (Block List, Max: 1) (see below).\n- **layers** (Block List) (see below).\n- **media_type** (String) Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n- **schema_version** (Number) The version of the Docker Image Manifest format.\n\n\u003ca id=\"nestedblock--config--layers\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`config`\" pulumi-lang-dotnet=\"`Config`\" pulumi-lang-go=\"`config`\" pulumi-lang-python=\"`config`\" pulumi-lang-yaml=\"`config`\" pulumi-lang-java=\"`config`\"\u003e`config`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`layers`\" pulumi-lang-dotnet=\"`Layers`\" pulumi-lang-go=\"`layers`\" pulumi-lang-python=\"`layers`\" pulumi-lang-yaml=\"`layers`\" pulumi-lang-java=\"`layers`\"\u003e`layers`\u003c/span\u003e\n\nThe config is a JSON blob that contains the image configuration data which includes environment variables, default command to run, and other settings necessary to run the container based on this image.\n\nLayers lists the digests of the image's layers. These layers are filesystem changes or additions made in each step of the Docker image's creation process. The layers are stored separately and pulled as needed, which allows for efficient storage and transfer of images. Each layer is represented by a SHA256 digest, ensuring the integrity and authenticity of the image.\n\n- **size** (Number) The size of the image or layer in bytes. This helps in estimating the space required and the download time.\n- **digest** (String) A unique SHA256 hash used to identify a specific image version within the image registry.\n- **media_type** (String) Specifies the type of the content represented in the manifest, allowing Docker clients and registries to understand how to handle the document correctly.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getImages.\n",
                "properties": {
                    "queries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getImagesQuery:getImagesQuery"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImages.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "images": {
                        "items": {
                            "$ref": "#/types/cpln:index/getImagesImage:getImagesImage"
                        },
                        "type": "array"
                    },
                    "queries": {
                        "items": {
                            "$ref": "#/types/cpln:index/getImagesQuery:getImagesQuery"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "images",
                    "id"
                ],
                "type": "object"
            }
        },
        "cpln:index/getLocation:getLocation": {
            "description": "Use this data source to access information about a [Location](https://docs.controlplane.com/reference/location) within Control Plane.\n\n## Required\n\n- **name** (String) Name of the location (i.e. `aws-us-west-2`).\n\n## Outputs\n\nThe following attributes are exported:\n\n- **cpln_id** (String) The ID, in GUID format, of the location.\n- **name** (String) Name of the location.\n- **description** (String) Description of the location.\n- **tags** (Map of String) Key-value map of resource tags.\n- **origin** (String)\n- **cloud_provider** (String) Cloud Provider of the location.\n- **region** (String) Region of the location.\n- **enabled** (Boolean) Indication if location is enabled.\n- **geo** (Block List, Max: 1) (see below)\n- **ip_ranges** (List of String) A list of IP ranges of the location.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n\n\u003ca id=\"nestedblock--geo\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`geo`\" pulumi-lang-dotnet=\"`Geo`\" pulumi-lang-go=\"`geo`\" pulumi-lang-python=\"`geo`\" pulumi-lang-yaml=\"`geo`\" pulumi-lang-java=\"`geo`\"\u003e`geo`\u003c/span\u003e\n\nLocation geographical details\n\n- **lat** (Number) Latitude.\n- **lon** (Number) Longitude.\n- **country** (String) Country.\n- **state** (String) State.\n- **city** (String) City.\n- **continent** (String) Continent.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nexport = async () =\u003e {\n    const location = await cpln.getLocation({\n        name: \"aws-us-west-2\",\n    });\n    return {\n        location: location,\n        locationEnabled: location.enabled,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\nlocation = cpln.get_location(name=\"aws-us-west-2\")\npulumi.export(\"location\", location)\npulumi.export(\"locationEnabled\", location.enabled)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var location = Cpln.GetLocation.Invoke(new()\n    {\n        Name = \"aws-us-west-2\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"location\"] = location,\n        [\"locationEnabled\"] = location.Apply(getLocationResult =\u003e getLocationResult.Enabled),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlocation, err := cpln.LookupLocation(ctx, \u0026cpln.LookupLocationArgs{\n\t\t\tName: \"aws-us-west-2\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"location\", location)\n\t\tctx.Export(\"locationEnabled\", location.Enabled)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport com.pulumi.cpln.inputs.GetLocationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var location = CplnFunctions.getLocation(GetLocationArgs.builder()\n            .name(\"aws-us-west-2\")\n            .build());\n\n        ctx.export(\"location\", location);\n        ctx.export(\"locationEnabled\", location.enabled());\n    }\n}\n```\n```yaml\nvariables:\n  location:\n    fn::invoke:\n      function: cpln:getLocation\n      arguments:\n        name: aws-us-west-2\noutputs:\n  location: ${location}\n  locationEnabled: ${location.enabled}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLocation.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLocation.\n",
                "properties": {
                    "cloudProvider": {
                        "type": "string"
                    },
                    "cplnId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "geos": {
                        "items": {
                            "$ref": "#/types/cpln:index/getLocationGeo:getLocationGeo"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipRanges": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "origin": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "cloudProvider",
                    "cplnId",
                    "description",
                    "enabled",
                    "geos",
                    "id",
                    "ipRanges",
                    "name",
                    "origin",
                    "region",
                    "selfLink",
                    "tags"
                ],
                "type": "object"
            }
        },
        "cpln:index/getLocations:getLocations": {
            "description": "Use this data source to access information about all [Locations](https://docs.controlplane.com/reference/location) within Control Plane.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **locations** (Block List) (see below).\n\n\u003ca id=\"nestedblock--locations\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`locations`\" pulumi-lang-dotnet=\"`Locations`\" pulumi-lang-go=\"`locations`\" pulumi-lang-python=\"`locations`\" pulumi-lang-yaml=\"`locations`\" pulumi-lang-java=\"`locations`\"\u003e`locations`\u003c/span\u003e\n\n- **cpln_id** (String) The ID, in GUID format, of the location.\n- **name** (String) Name of the location.\n- **description** (String) Description of the location.\n- **tags** (Map of String) Key-value map of resource tags.\n- **origin** (String)\n- **cloud_provider** (String) Cloud Provider of the location.\n- **region** (String) Region of the location.\n- **enabled** (Boolean) Indication if location is enabled.\n- **geo** (Block List, Max: 1) (see below)\n- **ip_ranges** (List of String) A list of IP ranges of the location.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n\n\u003ca id=\"nestedblock--geo\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`geo`\" pulumi-lang-dotnet=\"`Geo`\" pulumi-lang-go=\"`geo`\" pulumi-lang-python=\"`geo`\" pulumi-lang-yaml=\"`geo`\" pulumi-lang-java=\"`geo`\"\u003e`geo`\u003c/span\u003e\n\nLocation geographical details\n\n- **lat** (Number) Latitude.\n- **lon** (Number) Longitude.\n- **country** (String) Country.\n- **state** (String) State.\n- **city** (String) City.\n- **continent** (String) Continent.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nexport = async () =\u003e {\n    const locations = await cpln.getLocations({});\n    return {\n        locations: locations.locations,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\nlocations = cpln.get_locations()\npulumi.export(\"locations\", locations.locations)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var locations = Cpln.GetLocations.Invoke();\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"locations\"] = locations.Apply(getLocationsResult =\u003e getLocationsResult.Locations),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlocations, err := cpln.GetLocations(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"locations\", locations.Locations)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var locations = CplnFunctions.getLocations(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n        ctx.export(\"locations\", locations.locations());\n    }\n}\n```\n```yaml\nvariables:\n  locations:\n    fn::invoke:\n      function: cpln:getLocations\n      arguments: {}\noutputs:\n  locations: ${locations.locations}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getLocations.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "locations": {
                        "items": {
                            "$ref": "#/types/cpln:index/getLocationsLocation:getLocationsLocation"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "locations",
                    "id"
                ],
                "type": "object"
            }
        },
        "cpln:index/getOrg:getOrg": {
            "description": "Use this data source to access details about the current [org](https://docs.controlplane.com/reference/org) targeted by the provider configuration.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **id** (String) The unique identifier for this org.\n- **cpln_id** (String) The ID, in GUID format, of the org.\n- **name** (String) The name of org.\n- **description** (String) Description of the org.\n- **tags** (Map of String) Key-value map of resource tags.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n- **observability** (Block List, Max: 1) (see below).\n- **account_id** (String) The associated account ID that was used when creating the org.\n- **invitees** (Set of String) Email addresses that received invitations to join the org and were assigned to the \u003cspan pulumi-lang-nodejs=\"`superusers`\" pulumi-lang-dotnet=\"`Superusers`\" pulumi-lang-go=\"`superusers`\" pulumi-lang-python=\"`superusers`\" pulumi-lang-yaml=\"`superusers`\" pulumi-lang-java=\"`superusers`\"\u003e`superusers`\u003c/span\u003e group.\n- **session_timeout_seconds** (Int) The idle time (in seconds) after which the console UI signs out the user. Default: \u003cspan pulumi-lang-nodejs=\"`900`\" pulumi-lang-dotnet=\"`900`\" pulumi-lang-go=\"`900`\" pulumi-lang-python=\"`900`\" pulumi-lang-yaml=\"`900`\" pulumi-lang-java=\"`900`\"\u003e`900`\u003c/span\u003e.\n- **auth_config** (Block List, Max: 1) (see below).\n- **security** (Block List, Max: 1) (see below).\n- **status** (List of Object) (see below).\n\n\u003ca id=\"nestedblock--observability\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`observability`\" pulumi-lang-dotnet=\"`Observability`\" pulumi-lang-go=\"`observability`\" pulumi-lang-python=\"`observability`\" pulumi-lang-yaml=\"`observability`\" pulumi-lang-java=\"`observability`\"\u003e`observability`\u003c/span\u003e\n\nThe retention period (in days) for logs, metrics, and traces. Charges apply for storage beyond the 30 day default.\n\nRead-Only:\n\n- **logs_retention_days** (Number) Log retention days. Default: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e.\n- **metrics_retention_days** (Number) Metrics retention days. Default: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e.\n- **traces_retention_days** (Number) Traces retention days. Default: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e.\n- **default_alert_emails** (Set of String) These emails are configured as alert recipients in Grafana when the `grafana-default-email` contact delivery type is `Email`.\n\n\u003ca id=\"nestedblock--auth_config\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`authConfig`\" pulumi-lang-dotnet=\"`AuthConfig`\" pulumi-lang-go=\"`authConfig`\" pulumi-lang-python=\"`auth_config`\" pulumi-lang-yaml=\"`authConfig`\" pulumi-lang-java=\"`authConfig`\"\u003e`auth_config`\u003c/span\u003e\n\nConfiguration settings related to authentication within the org.\n\nRead-Only:\n\n- **domain_auto_members** (Set of String) List of domains that auto-provision users when authenticating using SAML.\n- **saml_only** (Boolean) Enforces SAML-only authentication.\n\n\u003ca id=\"nestedblock--security\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`security`\" pulumi-lang-dotnet=\"`Security`\" pulumi-lang-go=\"`security`\" pulumi-lang-python=\"`security`\" pulumi-lang-yaml=\"`security`\" pulumi-lang-java=\"`security`\"\u003e`security`\u003c/span\u003e\n\nRead-Only:\n\n- **threat_detection** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--security--threat_detection\"\u003e\u003c/a\u003e\n\n### `security.threat_detection`\n\nRead-Only:\n\n- **enabled** (Boolean) Indicates whether threat detection information is forwarded.\n- **minimum_severity** (String) Any threats with this severity and more severe are sent. Others are ignored. Valid values: \u003cspan pulumi-lang-nodejs=\"`warning`\" pulumi-lang-dotnet=\"`Warning`\" pulumi-lang-go=\"`warning`\" pulumi-lang-python=\"`warning`\" pulumi-lang-yaml=\"`warning`\" pulumi-lang-java=\"`warning`\"\u003e`warning`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`error`\" pulumi-lang-dotnet=\"`Error`\" pulumi-lang-go=\"`error`\" pulumi-lang-python=\"`error`\" pulumi-lang-yaml=\"`error`\" pulumi-lang-java=\"`error`\"\u003e`error`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`critical`\" pulumi-lang-dotnet=\"`Critical`\" pulumi-lang-go=\"`critical`\" pulumi-lang-python=\"`critical`\" pulumi-lang-yaml=\"`critical`\" pulumi-lang-java=\"`critical`\"\u003e`critical`\u003c/span\u003e.\n- **syslog** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--security--threat_detection--syslog\"\u003e\u003c/a\u003e\n\n### `security.threat_detection.syslog`\n\nRead-Only:\n\n- **port** (Number) The port to send syslog messages to.\n- **transport** (String) The transport-layer protocol used for syslog messages. If \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e is chosen, messages are sent with TLS. Default: \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e.\n- **host** (String) The hostname to send syslog messages to.\n\n\u003ca id=\"nestedblock--status\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`status`\" pulumi-lang-dotnet=\"`Status`\" pulumi-lang-go=\"`status`\" pulumi-lang-python=\"`status`\" pulumi-lang-yaml=\"`status`\" pulumi-lang-java=\"`status`\"\u003e`status`\u003c/span\u003e\n\nStatus of the org.\n\nRead-Only:\n\n- **account_link** (String) The link of the account the org belongs to.\n- **active** (Boolean) Indicates whether the org is active or not.\n- **endpoint_prefix** (String)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nconst org = cpln.getOrg({});\nexport const orgSummary = {\n    name: org.then(org =\u003e org.name),\n    cplnId: org.then(org =\u003e org.cplnId),\n    accountId: org.then(org =\u003e org.accountId),\n    sessionTimeoutSec: org.then(org =\u003e org.sessionTimeoutSeconds),\n    observability: org.then(org =\u003e org.observability),\n};\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\norg = cpln.get_org()\npulumi.export(\"orgSummary\", {\n    \"name\": org.name,\n    \"cplnId\": org.cpln_id,\n    \"accountId\": org.account_id,\n    \"sessionTimeoutSec\": org.session_timeout_seconds,\n    \"observability\": org.observability,\n})\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = Cpln.GetOrg.Invoke();\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"orgSummary\"] = \n        {\n            { \"name\", org.Apply(getOrgResult =\u003e getOrgResult.Name) },\n            { \"cplnId\", org.Apply(getOrgResult =\u003e getOrgResult.CplnId) },\n            { \"accountId\", org.Apply(getOrgResult =\u003e getOrgResult.AccountId) },\n            { \"sessionTimeoutSec\", org.Apply(getOrgResult =\u003e getOrgResult.SessionTimeoutSeconds) },\n            { \"observability\", org.Apply(getOrgResult =\u003e getOrgResult.Observability) },\n        },\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := cpln.LookupOrg(ctx, \u0026cpln.LookupOrgArgs{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"orgSummary\", pulumi.Map{\n\t\t\t\"name\":              org.Name,\n\t\t\t\"cplnId\":            org.CplnId,\n\t\t\t\"accountId\":         org.AccountId,\n\t\t\t\"sessionTimeoutSec\": org.SessionTimeoutSeconds,\n\t\t\t\"observability\":     org.Observability,\n\t\t})\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport com.pulumi.cpln.inputs.GetOrgArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var org = CplnFunctions.getOrg(GetOrgArgs.builder()\n            .build());\n\n        ctx.export(\"orgSummary\", Map.ofEntries(\n            Map.entry(\"name\", org.name()),\n            Map.entry(\"cplnId\", org.cplnId()),\n            Map.entry(\"accountId\", org.accountId()),\n            Map.entry(\"sessionTimeoutSec\", org.sessionTimeoutSeconds()),\n            Map.entry(\"observability\", org.observability())\n        ));\n    }\n}\n```\n```yaml\nvariables:\n  org:\n    fn::invoke:\n      function: cpln:getOrg\n      arguments: {}\noutputs:\n  orgSummary:\n    name: ${org.name}\n    cplnId: ${org.cplnId}\n    accountId: ${org.accountId}\n    sessionTimeoutSec: ${org.sessionTimeoutSeconds}\n    observability: ${org.observability}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrg.\n",
                "properties": {
                    "authConfig": {
                        "$ref": "#/types/cpln:index/getOrgAuthConfig:getOrgAuthConfig"
                    },
                    "observability": {
                        "$ref": "#/types/cpln:index/getOrgObservability:getOrgObservability"
                    },
                    "security": {
                        "$ref": "#/types/cpln:index/getOrgSecurity:getOrgSecurity"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOrg.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "authConfig": {
                        "$ref": "#/types/cpln:index/getOrgAuthConfig:getOrgAuthConfig"
                    },
                    "cplnId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "invitees": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "observability": {
                        "$ref": "#/types/cpln:index/getOrgObservability:getOrgObservability"
                    },
                    "security": {
                        "$ref": "#/types/cpln:index/getOrgSecurity:getOrgSecurity"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "sessionTimeoutSeconds": {
                        "type": "integer"
                    },
                    "statuses": {
                        "items": {
                            "$ref": "#/types/cpln:index/getOrgStatus:getOrgStatus"
                        },
                        "type": "array"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "accountId",
                    "cplnId",
                    "description",
                    "id",
                    "invitees",
                    "name",
                    "selfLink",
                    "sessionTimeoutSeconds",
                    "statuses",
                    "tags"
                ],
                "type": "object"
            }
        },
        "cpln:index/getSecret:getSecret": {
            "description": "Use this data source to access information about a [Secret](https://docs.controlplane.com/reference/secret) within Control Plane.\n\n## Required\n\n- **name** (String) Name of the secret.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **cpln_id** (String) The ID, in GUID format, of the secret.\n- **name** (String) Name of the secret.\n- **description** (String) Description of the secret.\n- **tags** (Map of String) Key-value map of resource tags.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n- **secret_link** (String) Output used when linking a secret to an environment variable or volume, in the format: `cpln://secret/SECRET_NAME`.\n- **dictionary_as_envs** (Map of String) If a dictionary secret is defined, this output will be a key-value map in the following format: `key = cpln://secret/SECRET_NAME.key`.\n- **aws** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#aws).\n- **azure_connector** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#azure-connector).\n- **azure_sdk** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#azure).\n- **dictionary** (Map of String) List of unique key-value pairs. [Reference Page](https://docs.controlplane.com/reference/secret#dictionary).\n- **docker** (String, Sensitive) JSON string containing the Docker secret. [Reference Page](https://docs.controlplane.com/reference/secret#docker).\n- **ecr** (Block List, Max: 1) (see below).\n- **gcp** (String, Sensitive) JSON string containing the GCP secret. [Reference Page](https://docs.controlplane.com/reference/secret#gcp)\n- **keypair** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#keypair).\n- **nats_account** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#nats-account).\n- **opaque** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#opaque).\n- **tls** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#tls).\n- **userpass** (Block List, Max: 1) (see below) [Reference Page](https://docs.controlplane.com/reference/secret#username).\n\n\u003ca id=\"nestedblock--aws\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`aws`\" pulumi-lang-dotnet=\"`Aws`\" pulumi-lang-go=\"`aws`\" pulumi-lang-python=\"`aws`\" pulumi-lang-yaml=\"`aws`\" pulumi-lang-java=\"`aws`\"\u003e`aws`\u003c/span\u003e\n\nOptional:\n\n- **access_key** (String, Sensitive) Access Key provided by AWS.\n- **role_arn** (String) Role ARN provided by AWS.\n- **secret_key** (String, Sensitive) Secret Key provided by AWS.\n- **external_id** (String) AWS IAM Role External ID.\n\n\u003ca id=\"nestedblock--azure_connector\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`azureConnector`\" pulumi-lang-dotnet=\"`AzureConnector`\" pulumi-lang-go=\"`azureConnector`\" pulumi-lang-python=\"`azure_connector`\" pulumi-lang-yaml=\"`azureConnector`\" pulumi-lang-java=\"`azureConnector`\"\u003e`azure_connector`\u003c/span\u003e\n\nOptional:\n\n- **code** (String, Sensitive) Code/Key to authenticate to deployment URL.\n- **url** (String, Sensitive) Deployment URL.\n\n\u003ca id=\"nestedblock--ecr\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`ecr`\" pulumi-lang-dotnet=\"`Ecr`\" pulumi-lang-go=\"`ecr`\" pulumi-lang-python=\"`ecr`\" pulumi-lang-yaml=\"`ecr`\" pulumi-lang-java=\"`ecr`\"\u003e`ecr`\u003c/span\u003e\n\n[Reference Page](https://docs.controlplane.com/reference/secret#ecr)\n\nOptional:\n\n- **access_key** (String) Access Key provided by AWS.\n- **repos** (Set of String) List of ECR repositories.\n- **role_arn** (String) Role ARN provided by AWS.\n- **secret_key** (String, Sensitive) Secret Key provided by AWS.\n- **external_id** (String) AWS IAM Role External ID. Used when setting up cross-account access to your ECR repositories.\n\n\u003ca id=\"nestedblock--keypair\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`keypair`\" pulumi-lang-dotnet=\"`Keypair`\" pulumi-lang-go=\"`keypair`\" pulumi-lang-python=\"`keypair`\" pulumi-lang-yaml=\"`keypair`\" pulumi-lang-java=\"`keypair`\"\u003e`keypair`\u003c/span\u003e\n\nOptional:\n\n- **passphrase** (String, Sensitive) Passphrase for private key.\n- **public_key** (String) Public Key.\n- **secret_key** (String, Sensitive) Secret/Private Key.\n\n\u003ca id=\"nestedblock--nats-account\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`natsAccount`\" pulumi-lang-dotnet=\"`NatsAccount`\" pulumi-lang-go=\"`natsAccount`\" pulumi-lang-python=\"`nats_account`\" pulumi-lang-yaml=\"`natsAccount`\" pulumi-lang-java=\"`natsAccount`\"\u003e`nats_account`\u003c/span\u003e\n\nRequired:\n\n- **account_id** (String) Account ID.\n- **private_key** (String) Private Key.\n\n\u003ca id=\"nestedblock--opaque\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`opaque`\" pulumi-lang-dotnet=\"`Opaque`\" pulumi-lang-go=\"`opaque`\" pulumi-lang-python=\"`opaque`\" pulumi-lang-yaml=\"`opaque`\" pulumi-lang-java=\"`opaque`\"\u003e`opaque`\u003c/span\u003e\n\nOptional:\n\n- **encoding** (String) Available encodings: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`base64`\" pulumi-lang-dotnet=\"`Base64`\" pulumi-lang-go=\"`base64`\" pulumi-lang-python=\"`base64`\" pulumi-lang-yaml=\"`base64`\" pulumi-lang-java=\"`base64`\"\u003e`base64`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e.\n- **payload** (String, Sensitive) Plain text or base64 encoded string. Use \u003cspan pulumi-lang-nodejs=\"`encoding`\" pulumi-lang-dotnet=\"`Encoding`\" pulumi-lang-go=\"`encoding`\" pulumi-lang-python=\"`encoding`\" pulumi-lang-yaml=\"`encoding`\" pulumi-lang-java=\"`encoding`\"\u003e`encoding`\u003c/span\u003e attribute to specify encoding.\n\n\u003ca id=\"nestedblock--tls\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`tls`\" pulumi-lang-dotnet=\"`Tls`\" pulumi-lang-go=\"`tls`\" pulumi-lang-python=\"`tls`\" pulumi-lang-yaml=\"`tls`\" pulumi-lang-java=\"`tls`\"\u003e`tls`\u003c/span\u003e\n\nOptional:\n\n- **cert** (String) Public Certificate.\n- **chain** (String) Chain Certificate.\n- **key** (String, Sensitive) Private Certificate.\n\n\u003ca id=\"nestedblock--userpass\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`userpass`\" pulumi-lang-dotnet=\"`Userpass`\" pulumi-lang-go=\"`userpass`\" pulumi-lang-python=\"`userpass`\" pulumi-lang-yaml=\"`userpass`\" pulumi-lang-java=\"`userpass`\"\u003e`userpass`\u003c/span\u003e\n\nOptional:\n\n- **encoding** (String) Available encodings: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`base64`\" pulumi-lang-dotnet=\"`Base64`\" pulumi-lang-go=\"`base64`\" pulumi-lang-python=\"`base64`\" pulumi-lang-yaml=\"`base64`\" pulumi-lang-java=\"`base64`\"\u003e`base64`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e.\n- **password** (String, Sensitive) Password.\n- **username** (String) Username.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nexport = async () =\u003e {\n    const example = await cpln.getSecret({\n        name: \"example-secret-opaque\",\n    });\n    return {\n        \"example-secret-payload\": example.opaques?.payload,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\nexample = cpln.get_secret(name=\"example-secret-opaque\")\npulumi.export(\"example-secret-payload\", example.opaques.payload)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Cpln.GetSecret.Invoke(new()\n    {\n        Name = \"example-secret-opaque\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"example-secret-payload\"] = example.Apply(getSecretResult =\u003e getSecretResult.Opaques?.Payload),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := cpln.LookupSecret(ctx, \u0026cpln.LookupSecretArgs{\n\t\t\tName: \"example-secret-opaque\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"example-secret-payload\", example.Opaques.Payload)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport com.pulumi.cpln.inputs.GetSecretArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = CplnFunctions.getSecret(GetSecretArgs.builder()\n            .name(\"example-secret-opaque\")\n            .build());\n\n        ctx.export(\"example-secret-payload\", example.opaques().payload());\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: cpln:getSecret\n      arguments:\n        name: example-secret-opaque\noutputs:\n  example-secret-payload: ${example.opaques.payload}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSecret.\n",
                "properties": {
                    "aws": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretAw:getSecretAw"
                        }
                    },
                    "azureConnectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretAzureConnector:getSecretAzureConnector"
                        }
                    },
                    "ecrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretEcr:getSecretEcr"
                        }
                    },
                    "keypairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretKeypair:getSecretKeypair"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "natsAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretNatsAccount:getSecretNatsAccount"
                        }
                    },
                    "opaques": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretOpaque:getSecretOpaque"
                        }
                    },
                    "tls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretTl:getSecretTl"
                        }
                    },
                    "userpasses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretUserpass:getSecretUserpass"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSecret.\n",
                "properties": {
                    "aws": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretAw:getSecretAw"
                        },
                        "type": "array"
                    },
                    "azureConnectors": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretAzureConnector:getSecretAzureConnector"
                        },
                        "type": "array"
                    },
                    "azureSdk": {
                        "secret": true,
                        "type": "string"
                    },
                    "cplnId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dictionary": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "dictionaryAsEnvs": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "docker": {
                        "secret": true,
                        "type": "string"
                    },
                    "ecrs": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretEcr:getSecretEcr"
                        },
                        "type": "array"
                    },
                    "gcp": {
                        "secret": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keypairs": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretKeypair:getSecretKeypair"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "natsAccounts": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretNatsAccount:getSecretNatsAccount"
                        },
                        "type": "array"
                    },
                    "opaques": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretOpaque:getSecretOpaque"
                        },
                        "type": "array"
                    },
                    "secretLink": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "tls": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretTl:getSecretTl"
                        },
                        "type": "array"
                    },
                    "userpasses": {
                        "items": {
                            "$ref": "#/types/cpln:index/getSecretUserpass:getSecretUserpass"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "azureSdk",
                    "cplnId",
                    "description",
                    "dictionary",
                    "dictionaryAsEnvs",
                    "docker",
                    "gcp",
                    "id",
                    "name",
                    "secretLink",
                    "selfLink",
                    "tags"
                ],
                "type": "object"
            }
        },
        "cpln:index/getWorkload:getWorkload": {
            "description": "Use this data source to access information about an existing [Workload](https://docs.controlplane.com/reference/workload) within Control Plane. \n\n## Required\n\n- **name** (String) Name of the workload.\n- **gvc** (String) Name of the GVC that the specified workload belongs to.\n\n## Outputs\n\nThe following attributes are exported:\n\n- **id** (String) The unique identifier for this workload.\n- **cpln_id** (String) The ID, in GUID format, of the workload.\n- **name** (String) Name of the workload.\n- **gvc** (String) Name of the associated GVC.\n- **type** (String) Workload type. Either \u003cspan pulumi-lang-nodejs=\"`serverless`\" pulumi-lang-dotnet=\"`Serverless`\" pulumi-lang-go=\"`serverless`\" pulumi-lang-python=\"`serverless`\" pulumi-lang-yaml=\"`serverless`\" pulumi-lang-java=\"`serverless`\"\u003e`serverless`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`stateful`\" pulumi-lang-dotnet=\"`Stateful`\" pulumi-lang-go=\"`stateful`\" pulumi-lang-python=\"`stateful`\" pulumi-lang-yaml=\"`stateful`\" pulumi-lang-java=\"`stateful`\"\u003e`stateful`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`cron`\" pulumi-lang-dotnet=\"`Cron`\" pulumi-lang-go=\"`cron`\" pulumi-lang-python=\"`cron`\" pulumi-lang-yaml=\"`cron`\" pulumi-lang-java=\"`cron`\"\u003e`cron`\u003c/span\u003e.\n- **description** (String) Description of the workload.\n- **tags** (Map of String) Key-value map of resource tags.\n- **self_link** (String) Full link to this resource. Can be referenced by other resources.\n- **identity_link** (String) Full link to the identity used as the access scope for 3rd party cloud resources.\n- **support_dynamic_tags** (Boolean) Indicates if Control Plane automatically redeploys when referenced container images are updated in the registry.\n- **extras** (String) Extra Kubernetes modifications. Only used for BYOK.\n- **container** (Block List) (see below).\n- **firewall_spec** (Block List, Max: 1) (see below).\n- **options** (Block List, Max: 1) (see below).\n- **local_options** (Block List) (see below).\n- **job** (Block List, Max: 1) (see below).\n- **sidecar** (Block List, Max: 1) (see below).\n- **rollout_options** (Block List, Max: 1) (see below).\n- **security_options** (Block List, Max: 1) (see below).\n- **load_balancer** (Block List, Max: 1) (see below).\n- **request_retry_policy** (Block List, Max: 1) (see below).\n- **status** (Block List) (see below).\n\n\u003ca id=\"nestedblock--container\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`container`\" pulumi-lang-dotnet=\"`Container`\" pulumi-lang-go=\"`container`\" pulumi-lang-python=\"`container`\" pulumi-lang-yaml=\"`container`\" pulumi-lang-java=\"`container`\"\u003e`container`\u003c/span\u003e\n\n\u003e **Note** A workload always exposes at least one container definition.\n\nRead-Only:\n\n- **name** (String) Name of the container. Cannot be `istio-proxy`, `queue-proxy`, or `istio-validation`, and cannot start with `cpln_`.\n- **image** (String) The full image and tag path.\n- **working_directory** (String) Override for the container working directory. Must be an absolute path.\n- **port** (Number) The port the container exposes. Only one container can specify a port. Min: \u003cspan pulumi-lang-nodejs=\"`80`\" pulumi-lang-dotnet=\"`80`\" pulumi-lang-go=\"`80`\" pulumi-lang-python=\"`80`\" pulumi-lang-yaml=\"`80`\" pulumi-lang-java=\"`80`\"\u003e`80`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`65535`\" pulumi-lang-dotnet=\"`65535`\" pulumi-lang-go=\"`65535`\" pulumi-lang-python=\"`65535`\" pulumi-lang-yaml=\"`65535`\" pulumi-lang-java=\"`65535`\"\u003e`65535`\u003c/span\u003e. Used by the \u003cspan pulumi-lang-nodejs=\"`serverless`\" pulumi-lang-dotnet=\"`Serverless`\" pulumi-lang-go=\"`serverless`\" pulumi-lang-python=\"`serverless`\" pulumi-lang-yaml=\"`serverless`\" pulumi-lang-java=\"`serverless`\"\u003e`serverless`\u003c/span\u003e workload type. **Deprecated – use \u003cspan pulumi-lang-nodejs=\"`ports`\" pulumi-lang-dotnet=\"`Ports`\" pulumi-lang-go=\"`ports`\" pulumi-lang-python=\"`ports`\" pulumi-lang-yaml=\"`ports`\" pulumi-lang-java=\"`ports`\"\u003e`ports`\u003c/span\u003e.**\n- **memory** (String) Reserved memory when Capacity AI is disabled, or maximum memory when it is enabled. Default: `128Mi`.\n- **cpu** (String) Reserved CPU when Capacity AI is disabled, or maximum CPU when it is enabled. Default: \u003cspan pulumi-lang-nodejs=\"`50m`\" pulumi-lang-dotnet=\"`50m`\" pulumi-lang-go=\"`50m`\" pulumi-lang-python=\"`50m`\" pulumi-lang-yaml=\"`50m`\" pulumi-lang-java=\"`50m`\"\u003e`50m`\u003c/span\u003e.\n- **min_cpu** (String) Minimum CPU when Capacity AI is enabled.\n- **min_memory** (String) Minimum memory when Capacity AI is enabled.\n- **env** (Map of String) Environment variables exposed to the container.\n- **inherit_env** (Boolean) Indicates whether GVC environment variables are inherited. A variable in \u003cspan pulumi-lang-nodejs=\"`env`\" pulumi-lang-dotnet=\"`Env`\" pulumi-lang-go=\"`env`\" pulumi-lang-python=\"`env`\" pulumi-lang-yaml=\"`env`\" pulumi-lang-java=\"`env`\"\u003e`env`\u003c/span\u003e overrides the same key from the GVC.\n- **command** (String) Override for the container entry point.\n- **args** (List of String) Command-line arguments passed to the container in order.\n- **metrics** (Block List, Max: 1) (see below).\n- **ports** (Block List) (see below).\n- **readiness_probe** (Block List, Max: 1) (see below).\n- **liveness_probe** (Block List, Max: 1) (see below).\n- **gpu_nvidia** (Block List, Max: 1) (see below).\n- **gpu_custom** (Block List, Max: 1) (see below).\n- **lifecycle** (Block List, Max: 1) (see below).\n- **volume** (Block List) (see below).\n\n\u003e **Note** The following container ports are reserved and cannot be used: \u003cspan pulumi-lang-nodejs=\"`8012`\" pulumi-lang-dotnet=\"`8012`\" pulumi-lang-go=\"`8012`\" pulumi-lang-python=\"`8012`\" pulumi-lang-yaml=\"`8012`\" pulumi-lang-java=\"`8012`\"\u003e`8012`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`8022`\" pulumi-lang-dotnet=\"`8022`\" pulumi-lang-go=\"`8022`\" pulumi-lang-python=\"`8022`\" pulumi-lang-yaml=\"`8022`\" pulumi-lang-java=\"`8022`\"\u003e`8022`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`9090`\" pulumi-lang-dotnet=\"`9090`\" pulumi-lang-go=\"`9090`\" pulumi-lang-python=\"`9090`\" pulumi-lang-yaml=\"`9090`\" pulumi-lang-java=\"`9090`\"\u003e`9090`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`9091`\" pulumi-lang-dotnet=\"`9091`\" pulumi-lang-go=\"`9091`\" pulumi-lang-python=\"`9091`\" pulumi-lang-yaml=\"`9091`\" pulumi-lang-java=\"`9091`\"\u003e`9091`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`15000`\" pulumi-lang-dotnet=\"`15000`\" pulumi-lang-go=\"`15000`\" pulumi-lang-python=\"`15000`\" pulumi-lang-yaml=\"`15000`\" pulumi-lang-java=\"`15000`\"\u003e`15000`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`15001`\" pulumi-lang-dotnet=\"`15001`\" pulumi-lang-go=\"`15001`\" pulumi-lang-python=\"`15001`\" pulumi-lang-yaml=\"`15001`\" pulumi-lang-java=\"`15001`\"\u003e`15001`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`15006`\" pulumi-lang-dotnet=\"`15006`\" pulumi-lang-go=\"`15006`\" pulumi-lang-python=\"`15006`\" pulumi-lang-yaml=\"`15006`\" pulumi-lang-java=\"`15006`\"\u003e`15006`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`15020`\" pulumi-lang-dotnet=\"`15020`\" pulumi-lang-go=\"`15020`\" pulumi-lang-python=\"`15020`\" pulumi-lang-yaml=\"`15020`\" pulumi-lang-java=\"`15020`\"\u003e`15020`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`15021`\" pulumi-lang-dotnet=\"`15021`\" pulumi-lang-go=\"`15021`\" pulumi-lang-python=\"`15021`\" pulumi-lang-yaml=\"`15021`\" pulumi-lang-java=\"`15021`\"\u003e`15021`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`15090`\" pulumi-lang-dotnet=\"`15090`\" pulumi-lang-go=\"`15090`\" pulumi-lang-python=\"`15090`\" pulumi-lang-yaml=\"`15090`\" pulumi-lang-java=\"`15090`\"\u003e`15090`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`41000`\" pulumi-lang-dotnet=\"`41000`\" pulumi-lang-go=\"`41000`\" pulumi-lang-python=\"`41000`\" pulumi-lang-yaml=\"`41000`\" pulumi-lang-java=\"`41000`\"\u003e`41000`\u003c/span\u003e.\n\n\u003ca id=\"nestedblock--container--metrics\"\u003e\u003c/a\u003e\n\n### `container.metrics`\n\nRead-Only:\n\n- **port** (Number) Port that exposes custom metrics.\n- **path** (String) Path where custom metrics are available.\n- **drop_metrics** (List of String) Patterns describing metrics to discard.\n\n\u003ca id=\"nestedblock--container--ports\"\u003e\u003c/a\u003e\n\n### `container.ports`\n\nRead-Only:\n\n- **protocol** (String) Protocol. One of \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`http2`\" pulumi-lang-dotnet=\"`Http2`\" pulumi-lang-go=\"`http2`\" pulumi-lang-python=\"`http2`\" pulumi-lang-yaml=\"`http2`\" pulumi-lang-java=\"`http2`\"\u003e`http2`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`grpc`\" pulumi-lang-dotnet=\"`Grpc`\" pulumi-lang-go=\"`grpc`\" pulumi-lang-python=\"`grpc`\" pulumi-lang-yaml=\"`grpc`\" pulumi-lang-java=\"`grpc`\"\u003e`grpc`\u003c/span\u003e.\n- **number** (Number) Port that the container exposes.\n\n\u003ca id=\"nestedblock--container--readiness_probe\"\u003e\u003c/a\u003e\n\n### `container.readiness_probe`\n\nRead-Only:\n\n- **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`600`\" pulumi-lang-dotnet=\"`600`\" pulumi-lang-go=\"`600`\" pulumi-lang-python=\"`600`\" pulumi-lang-yaml=\"`600`\" pulumi-lang-java=\"`600`\"\u003e`600`\u003c/span\u003e.\n- **period_seconds** (Number) Interval between probes. Default: \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`600`\" pulumi-lang-dotnet=\"`600`\" pulumi-lang-go=\"`600`\" pulumi-lang-python=\"`600`\" pulumi-lang-yaml=\"`600`\" pulumi-lang-java=\"`600`\"\u003e`600`\u003c/span\u003e.\n- **timeout_seconds** (Number) Probe timeout. Default: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`600`\" pulumi-lang-dotnet=\"`600`\" pulumi-lang-go=\"`600`\" pulumi-lang-python=\"`600`\" pulumi-lang-yaml=\"`600`\" pulumi-lang-java=\"`600`\"\u003e`600`\u003c/span\u003e.\n- **success_threshold** (Number) Minimum consecutive successes to be considered ready. Default: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20`\" pulumi-lang-dotnet=\"`20`\" pulumi-lang-go=\"`20`\" pulumi-lang-python=\"`20`\" pulumi-lang-yaml=\"`20`\" pulumi-lang-java=\"`20`\"\u003e`20`\u003c/span\u003e.\n- **failure_threshold** (Number) Consecutive failures before marking the container unhealthy. Default: \u003cspan pulumi-lang-nodejs=\"`3`\" pulumi-lang-dotnet=\"`3`\" pulumi-lang-go=\"`3`\" pulumi-lang-python=\"`3`\" pulumi-lang-yaml=\"`3`\" pulumi-lang-java=\"`3`\"\u003e`3`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20`\" pulumi-lang-dotnet=\"`20`\" pulumi-lang-go=\"`20`\" pulumi-lang-python=\"`20`\" pulumi-lang-yaml=\"`20`\" pulumi-lang-java=\"`20`\"\u003e`20`\u003c/span\u003e.\n- **exec** (Block List, Max: 1) (see below).\n- **grpc** (Block List, Max: 1) (see below).\n- **tcp_socket** (Block List, Max: 1) (see below).\n- **http_get** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--container--liveness_probe\"\u003e\u003c/a\u003e\n\n### `container.liveness_probe`\n\nRead-Only:\n\n- **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`600`\" pulumi-lang-dotnet=\"`600`\" pulumi-lang-go=\"`600`\" pulumi-lang-python=\"`600`\" pulumi-lang-yaml=\"`600`\" pulumi-lang-java=\"`600`\"\u003e`600`\u003c/span\u003e.\n- **period_seconds** (Number) Interval between probes. Default: \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`600`\" pulumi-lang-dotnet=\"`600`\" pulumi-lang-go=\"`600`\" pulumi-lang-python=\"`600`\" pulumi-lang-yaml=\"`600`\" pulumi-lang-java=\"`600`\"\u003e`600`\u003c/span\u003e.\n- **timeout_seconds** (Number) Probe timeout. Default: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`600`\" pulumi-lang-dotnet=\"`600`\" pulumi-lang-go=\"`600`\" pulumi-lang-python=\"`600`\" pulumi-lang-yaml=\"`600`\" pulumi-lang-java=\"`600`\"\u003e`600`\u003c/span\u003e.\n- **success_threshold** (Number) Minimum consecutive successes to be considered healthy. Default: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20`\" pulumi-lang-dotnet=\"`20`\" pulumi-lang-go=\"`20`\" pulumi-lang-python=\"`20`\" pulumi-lang-yaml=\"`20`\" pulumi-lang-java=\"`20`\"\u003e`20`\u003c/span\u003e.\n- **failure_threshold** (Number) Consecutive failures before restarting the container. Default: \u003cspan pulumi-lang-nodejs=\"`3`\" pulumi-lang-dotnet=\"`3`\" pulumi-lang-go=\"`3`\" pulumi-lang-python=\"`3`\" pulumi-lang-yaml=\"`3`\" pulumi-lang-java=\"`3`\"\u003e`3`\u003c/span\u003e. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20`\" pulumi-lang-dotnet=\"`20`\" pulumi-lang-go=\"`20`\" pulumi-lang-python=\"`20`\" pulumi-lang-yaml=\"`20`\" pulumi-lang-java=\"`20`\"\u003e`20`\u003c/span\u003e.\n- **exec** (Block List, Max: 1) (see below).\n- **grpc** (Block List, Max: 1) (see below).\n- **tcp_socket** (Block List, Max: 1) (see below).\n- **http_get** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--container--probe--exec\"\u003e\u003c/a\u003e\n\n### `container.*_probe.exec`\n\nRead-Only:\n\n- **command** (List of String) Command executed inside the container when the probe runs.\n\n\u003ca id=\"nestedblock--container--probe--grpc\"\u003e\u003c/a\u003e\n\n### `container.*_probe.grpc`\n\nRead-Only:\n\n- **port** (Number) gRPC port used for the probe.\n\n\u003ca id=\"nestedblock--container--probe--tcp_socket\"\u003e\u003c/a\u003e\n\n### `container.*_probe.tcp_socket`\n\nRead-Only:\n\n- **port** (Number) TCP port used for the probe.\n\n\u003ca id=\"nestedblock--container--probe--http_get\"\u003e\u003c/a\u003e\n\n### `container.*_probe.http_get`\n\nRead-Only:\n\n- **path** (String) HTTP path to query. Default: `/`.\n- **port** (Number) Port for the HTTP GET. Min: \u003cspan pulumi-lang-nodejs=\"`80`\" pulumi-lang-dotnet=\"`80`\" pulumi-lang-go=\"`80`\" pulumi-lang-python=\"`80`\" pulumi-lang-yaml=\"`80`\" pulumi-lang-java=\"`80`\"\u003e`80`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`65535`\" pulumi-lang-dotnet=\"`65535`\" pulumi-lang-go=\"`65535`\" pulumi-lang-python=\"`65535`\" pulumi-lang-yaml=\"`65535`\" pulumi-lang-java=\"`65535`\"\u003e`65535`\u003c/span\u003e.\n- **http_headers** (Map of String) Headers included in the probe request.\n- **scheme** (String) HTTP scheme. Either `HTTP` or `HTTPS`. Default: `HTTP`.\n\n\u003ca id=\"nestedblock--container--gpu_nvidia\"\u003e\u003c/a\u003e\n\n### `container.gpu_nvidia`\n\nRead-Only:\n\n- **model** (String) GPU model (for example, \u003cspan pulumi-lang-nodejs=\"`t4`\" pulumi-lang-dotnet=\"`T4`\" pulumi-lang-go=\"`t4`\" pulumi-lang-python=\"`t4`\" pulumi-lang-yaml=\"`t4`\" pulumi-lang-java=\"`t4`\"\u003e`t4`\u003c/span\u003e).\n- **quantity** (Number) Number of NVIDIA GPUs attached to the container.\n\n\u003ca id=\"nestedblock--container--gpu_custom\"\u003e\u003c/a\u003e\n\n### `container.gpu_custom`\n\nRead-Only:\n\n- **resource** (String) Name of the custom GPU resource.\n- **quantity** (Number) Number of GPUs requested.\n- **runtime_class** (String) Runtime class that must be used with the custom GPU.\n\n\u003ca id=\"nestedblock--container--lifecycle\"\u003e\u003c/a\u003e\n\n### `container.lifecycle`\n\nRead-Only:\n\n- **post_start** (Block List, Max: 1) (see below).\n- **pre_stop** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--container--lifecycle--spec\"\u003e\u003c/a\u003e\n\n### `container.lifecycle.*`\n\nRead-Only:\n\n- **exec** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--container--lifecycle--exec\"\u003e\u003c/a\u003e\n\n### `container.lifecycle.*.exec`\n\nRead-Only:\n\n- **command** (List of String) Command executed during the lifecycle hook.\n\n\u003ca id=\"nestedblock--container--volume\"\u003e\u003c/a\u003e\n\n### `container.volume`\n\n\u003e **Note** The following paths are reserved and cannot be used: `/dev`, `/dev/log`, `/tmp`, `/var`, `/var/log`.\n\n\u003e **Note** Valid URI prefixes include `s3://bucket`, `gs://bucket`, `azureblob://storageAccount/container`, `azurefs://storageAccount/share`, `cpln://secret`, `cpln://volumeset`, and `scratch://`.\n\nRead-Only:\n\n- **uri** (String) URI of a volume hosted in Control Plane (Volume Set) or a supported cloud provider.\n- **recovery_policy** (String) Recovery policy for persistent volumes. Either \u003cspan pulumi-lang-nodejs=\"`retain`\" pulumi-lang-dotnet=\"`Retain`\" pulumi-lang-go=\"`retain`\" pulumi-lang-python=\"`retain`\" pulumi-lang-yaml=\"`retain`\" pulumi-lang-java=\"`retain`\"\u003e`retain`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`recycle`\" pulumi-lang-dotnet=\"`Recycle`\" pulumi-lang-go=\"`recycle`\" pulumi-lang-python=\"`recycle`\" pulumi-lang-yaml=\"`recycle`\" pulumi-lang-java=\"`recycle`\"\u003e`recycle`\u003c/span\u003e. **Deprecated – no longer used.**\n- **path** (String) File-system path where the volume is mounted inside the container.\n\n\u003ca id=\"nestedblock--firewall_spec\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`firewallSpec`\" pulumi-lang-dotnet=\"`FirewallSpec`\" pulumi-lang-go=\"`firewallSpec`\" pulumi-lang-python=\"`firewall_spec`\" pulumi-lang-yaml=\"`firewallSpec`\" pulumi-lang-java=\"`firewallSpec`\"\u003e`firewall_spec`\u003c/span\u003e\n\nControls inbound and outbound access for external (public) and internal (service-to-service) traffic. Access is restricted by default.\n\nRead-Only:\n\n- **external** (Block List, Max: 1) (see below).\n- **internal** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--firewall_spec--external\"\u003e\u003c/a\u003e\n\n### `firewall_spec.external`\n\nRead-Only:\n\n- **inbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks allowed to reach the workload. `0.0.0.0/0` opens access to the public internet.\n- **inbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks explicitly denied.\n- **outbound_allow_hostname** (List of String) Public hostnames the workload can reach. Wildcards are allowed only as a prefix (for example, `*.amazonaws.com`).\n- **outbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks the workload can reach. `0.0.0.0/0` enables outbound access to the public internet.\n- **outbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks that are denied even if allow lists include them.\n- **outbound_allow_port** (Block List) (see below).\n- **http** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--firewall_spec--external--outbound_allow_port\"\u003e\u003c/a\u003e\n\n### `firewall_spec.external.outbound_allow_port`\n\nAllows outbound access to specific ports and protocols.\n\nRead-Only:\n\n- **protocol** (String) Either \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`tcp`\" pulumi-lang-dotnet=\"`Tcp`\" pulumi-lang-go=\"`tcp`\" pulumi-lang-python=\"`tcp`\" pulumi-lang-yaml=\"`tcp`\" pulumi-lang-java=\"`tcp`\"\u003e`tcp`\u003c/span\u003e.\n- **number** (Number) Port number. Max: \u003cspan pulumi-lang-nodejs=\"`65000`\" pulumi-lang-dotnet=\"`65000`\" pulumi-lang-go=\"`65000`\" pulumi-lang-python=\"`65000`\" pulumi-lang-yaml=\"`65000`\" pulumi-lang-java=\"`65000`\"\u003e`65000`\u003c/span\u003e.\n\n\u003ca id=\"nestedblock--firewall_spec--external--http\"\u003e\u003c/a\u003e\n\n### `firewall_spec.external.http`\n\nFirewall options for HTTP workloads.\n\nRead-Only:\n\n- **inbound_header_filter** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--firewall_spec--external--http--inbound_header_filter\"\u003e\u003c/a\u003e\n\n### `firewall_spec.external.http.inbound_header_filter`\n\nConfigures header-based allow/deny logic.\n\nRead-Only:\n\n- **key** (String) Header name to inspect.\n- **allowed_values** (List of String) Regular expressions describing allowed header values. Requests that fail to match any allowed value are filtered.\n- **blocked_values** (List of String) Regular expressions describing blocked header values. Requests that match any blocked value are filtered.\n\n\u003ca id=\"nestedblock--firewall_spec--internal\"\u003e\u003c/a\u003e\n\n### `firewall_spec.internal`\n\nControls access between workloads.\n\nRead-Only:\n\n- **inbound_allow_type** (String) Internal firewall mode. One of \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e, `same-gvc`, `same-org`, or `workload-list`.\n- **inbound_allow_workload** (List of String) Specific workloads allowed when \u003cspan pulumi-lang-nodejs=\"`inboundAllowType`\" pulumi-lang-dotnet=\"`InboundAllowType`\" pulumi-lang-go=\"`inboundAllowType`\" pulumi-lang-python=\"`inbound_allow_type`\" pulumi-lang-yaml=\"`inboundAllowType`\" pulumi-lang-java=\"`inboundAllowType`\"\u003e`inbound_allow_type`\u003c/span\u003e is `workload-list`.\n\n\u003ca id=\"nestedblock--options\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`options`\" pulumi-lang-dotnet=\"`Options`\" pulumi-lang-go=\"`options`\" pulumi-lang-python=\"`options`\" pulumi-lang-yaml=\"`options`\" pulumi-lang-java=\"`options`\"\u003e`options`\u003c/span\u003e\n\nExports the workload-level options applied by Control Plane.\n\nRead-Only:\n\n- **timeout_seconds** (Number) Request timeout in seconds. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n- **capacity_ai** (Boolean) Whether Capacity AI is enabled. Default: \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n- **capacity_ai_update_minutes** (Number) Minimum interval (in minutes) between Capacity AI reservation updates.\n- **debug** (Boolean) Indicates if debug mode is enabled. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n- **suspend** (Boolean) Indicates if the workload is suspended. Default: \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n- **autoscaling** (Block List, Max: 1) (see below).\n- **multi_zone** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--options--autoscaling\"\u003e\u003c/a\u003e\n\n### `options.autoscaling`\n\nRead-Only:\n\n- **metric** (String) Scaling metric. One of \u003cspan pulumi-lang-nodejs=\"`concurrency`\" pulumi-lang-dotnet=\"`Concurrency`\" pulumi-lang-go=\"`concurrency`\" pulumi-lang-python=\"`concurrency`\" pulumi-lang-yaml=\"`concurrency`\" pulumi-lang-java=\"`concurrency`\"\u003e`concurrency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rps`\" pulumi-lang-dotnet=\"`Rps`\" pulumi-lang-go=\"`rps`\" pulumi-lang-python=\"`rps`\" pulumi-lang-yaml=\"`rps`\" pulumi-lang-java=\"`rps`\"\u003e`rps`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`latency`\" pulumi-lang-dotnet=\"`Latency`\" pulumi-lang-go=\"`latency`\" pulumi-lang-python=\"`latency`\" pulumi-lang-yaml=\"`latency`\" pulumi-lang-java=\"`latency`\"\u003e`latency`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`keda`\" pulumi-lang-dotnet=\"`Keda`\" pulumi-lang-go=\"`keda`\" pulumi-lang-python=\"`keda`\" pulumi-lang-yaml=\"`keda`\" pulumi-lang-java=\"`keda`\"\u003e`keda`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e.\n- **metric_percentile** (String) Percentile to target when the metric represents a distribution (for example, latency).\n- **target** (Number) Target value for the selected metric. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`95`\" pulumi-lang-dotnet=\"`95`\" pulumi-lang-go=\"`95`\" pulumi-lang-python=\"`95`\" pulumi-lang-yaml=\"`95`\" pulumi-lang-java=\"`95`\"\u003e`95`\u003c/span\u003e.\n- **min_scale** (Number) Minimum replicas allowed. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`maxScale`\" pulumi-lang-dotnet=\"`MaxScale`\" pulumi-lang-go=\"`maxScale`\" pulumi-lang-python=\"`max_scale`\" pulumi-lang-yaml=\"`maxScale`\" pulumi-lang-java=\"`maxScale`\"\u003e`max_scale`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e.\n- **max_scale** (Number) Maximum replicas allowed. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n- **scale_to_zero_delay** (Number) Seconds without requests before scaling to zero. Min: \u003cspan pulumi-lang-nodejs=\"`30`\" pulumi-lang-dotnet=\"`30`\" pulumi-lang-go=\"`30`\" pulumi-lang-python=\"`30`\" pulumi-lang-yaml=\"`30`\" pulumi-lang-java=\"`30`\"\u003e`30`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`3600`\" pulumi-lang-dotnet=\"`3600`\" pulumi-lang-go=\"`3600`\" pulumi-lang-python=\"`3600`\" pulumi-lang-yaml=\"`3600`\" pulumi-lang-java=\"`3600`\"\u003e`3600`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`300`\" pulumi-lang-dotnet=\"`300`\" pulumi-lang-go=\"`300`\" pulumi-lang-python=\"`300`\" pulumi-lang-yaml=\"`300`\" pulumi-lang-java=\"`300`\"\u003e`300`\u003c/span\u003e.\n- **max_concurrency** (Number) Maximum concurrent requests per replica. Min: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`1000`\" pulumi-lang-dotnet=\"`1000`\" pulumi-lang-go=\"`1000`\" pulumi-lang-python=\"`1000`\" pulumi-lang-yaml=\"`1000`\" pulumi-lang-java=\"`1000`\"\u003e`1000`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e.\n- **multi** (Block List, Max: 1) (see below).\n- **keda** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--options--autoscaling--multi\"\u003e\u003c/a\u003e\n\n### `options.autoscaling.multi`\n\nRead-Only:\n\n- **metric** (String) Either \u003cspan pulumi-lang-nodejs=\"`cpu`\" pulumi-lang-dotnet=\"`Cpu`\" pulumi-lang-go=\"`cpu`\" pulumi-lang-python=\"`cpu`\" pulumi-lang-yaml=\"`cpu`\" pulumi-lang-java=\"`cpu`\"\u003e`cpu`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`memory`\" pulumi-lang-dotnet=\"`Memory`\" pulumi-lang-go=\"`memory`\" pulumi-lang-python=\"`memory`\" pulumi-lang-yaml=\"`memory`\" pulumi-lang-java=\"`memory`\"\u003e`memory`\u003c/span\u003e.\n- **target** (Number) Target value for the metric. Min: \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Max: \u003cspan pulumi-lang-nodejs=\"`20000`\" pulumi-lang-dotnet=\"`20000`\" pulumi-lang-go=\"`20000`\" pulumi-lang-python=\"`20000`\" pulumi-lang-yaml=\"`20000`\" pulumi-lang-java=\"`20000`\"\u003e`20000`\u003c/span\u003e.\n\n\u003ca id=\"nestedblock--options--autoscaling--keda\"\u003e\u003c/a\u003e\n\n### `options.autoscaling.keda`\n\nKEDA (Kubernetes-based Event Driven Autoscaling) configuration.\n\nRead-Only:\n\n- **polling_interval** (Number) Seconds between KEDA polling cycles.\n- **cooldown_period** (Number) Cooldown seconds after scaling to zero before scaling up again.\n- **initial_cooldown_period** (Number) Initial cooldown after scaling to zero.\n- **trigger** (Block List) (see below).\n- **advanced** (Block List) (see below).\n\n\u003ca id=\"nestedblock--options--autoscaling--keda--trigger\"\u003e\u003c/a\u003e\n\n### `options.autoscaling.keda.trigger`\n\nDefines event-driven scaling triggers.\n\nRead-Only:\n\n- **type** (String) Trigger type (for example, \u003cspan pulumi-lang-nodejs=\"`prometheus`\" pulumi-lang-dotnet=\"`Prometheus`\" pulumi-lang-go=\"`prometheus`\" pulumi-lang-python=\"`prometheus`\" pulumi-lang-yaml=\"`prometheus`\" pulumi-lang-java=\"`prometheus`\"\u003e`prometheus`\u003c/span\u003e, `aws-sqs`).\n- **metadata** (Map of String) Configuration parameters required by the trigger.\n- **name** (String) Optional trigger name.\n- **use_cached_metrics** (Boolean) Indicates whether metrics caching is enabled during the polling interval.\n- **metric_type** (String) Metric type used for scaling.\n- **authentication_ref** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--options--autoscaling--keda--trigger--authentication_ref\"\u003e\u003c/a\u003e\n\n### `options.autoscaling.keda.trigger.authentication_ref`\n\nRead-Only:\n\n- **name** (String) Name of the secret listed in `spec.keda.secrets` on the GVC.\n\n\u003ca id=\"nestedblock--options--autoscaling--keda--advanced\"\u003e\u003c/a\u003e\n\n### `options.autoscaling.keda.advanced`\n\nAdvanced KEDA modifiers.\n\nRead-Only:\n\n- **scaling_modifiers** (Block List) (see below).\n\n\u003ca id=\"nestedblock--options--autoscaling--keda--advanced--scaling_modifiers\"\u003e\u003c/a\u003e\n\n### `options.autoscaling.keda.advanced.scaling_modifiers`\n\nRead-Only:\n\n- **target** (String) New target value for the composed metric.\n- **activation_target** (String) Activation target for the composed metric.\n- **metric_type** (String) Metric type used for the composed metric.\n- **formula** (String) Expression that combines or transforms metrics.\n\n\u003ca id=\"nestedblock--options--multi_zone\"\u003e\u003c/a\u003e\n\n### `options.multi_zone`\n\nRead-Only:\n\n- **enabled** (Boolean) Indicates if multi-zone execution is enabled.\n\n\u003ca id=\"nestedblock--local_options\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`localOptions`\" pulumi-lang-dotnet=\"`LocalOptions`\" pulumi-lang-go=\"`localOptions`\" pulumi-lang-python=\"`local_options`\" pulumi-lang-yaml=\"`localOptions`\" pulumi-lang-java=\"`localOptions`\"\u003e`local_options`\u003c/span\u003e\n\nOverrides default options for specific Control Plane locations.\n\nRead-Only:\n\n- **location** (String) Location name whose options are overridden.\n- All attributes from \u003cspan pulumi-lang-nodejs=\"`options`\" pulumi-lang-dotnet=\"`Options`\" pulumi-lang-go=\"`options`\" pulumi-lang-python=\"`options`\" pulumi-lang-yaml=\"`options`\" pulumi-lang-java=\"`options`\"\u003e`options`\u003c/span\u003e are repeated here with location-specific values.\n\n\u003ca id=\"nestedblock--job\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`job`\" pulumi-lang-dotnet=\"`Job`\" pulumi-lang-go=\"`job`\" pulumi-lang-python=\"`job`\" pulumi-lang-yaml=\"`job`\" pulumi-lang-java=\"`job`\"\u003e`job`\u003c/span\u003e\n\nExports cron workload settings.\n\nRead-Only:\n\n- **schedule** (String) Cron schedule expression determining job execution times.\n- **concurrency_policy** (String) Either `Forbid` or `Replace`. Determines how overlapping jobs are handled.\n- **history_limit** (Number) Maximum completed job instances retained. Integer between \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Default: \u003cspan pulumi-lang-nodejs=\"`5`\" pulumi-lang-dotnet=\"`5`\" pulumi-lang-go=\"`5`\" pulumi-lang-python=\"`5`\" pulumi-lang-yaml=\"`5`\" pulumi-lang-java=\"`5`\"\u003e`5`\u003c/span\u003e.\n- **restart_policy** (String) Either `OnFailure` or `Never`. Default: `Never`.\n- **active_deadline_seconds** (Number) Maximum seconds a job can run before it is forcibly stopped.\n\n\u003ca id=\"nestedblock--sidecar\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`sidecar`\" pulumi-lang-dotnet=\"`Sidecar`\" pulumi-lang-go=\"`sidecar`\" pulumi-lang-python=\"`sidecar`\" pulumi-lang-yaml=\"`sidecar`\" pulumi-lang-java=\"`sidecar`\"\u003e`sidecar`\u003c/span\u003e\n\nRead-Only:\n\n- **envoy** (String) Name of the Envoy sidecar configuration attached to the workload.\n\n\u003ca id=\"nestedblock--rollout_options\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`rolloutOptions`\" pulumi-lang-dotnet=\"`RolloutOptions`\" pulumi-lang-go=\"`rolloutOptions`\" pulumi-lang-python=\"`rollout_options`\" pulumi-lang-yaml=\"`rolloutOptions`\" pulumi-lang-java=\"`rolloutOptions`\"\u003e`rollout_options`\u003c/span\u003e\n\nControls rolling-update behavior.\n\nRead-Only:\n\n- **min_ready_seconds** (Number) Minimum seconds a container must run without crashing to be considered available.\n- **max_unavailable_replicas** (String) Maximum replicas that can be unavailable during an update.\n- **max_surge_replicas** (String) Maximum replicas above the desired count during an update.\n- **scaling_policy** (String) Update strategy. Either `OrderedReady` or `Parallel`. Default: `OrderedReady`.\n- **termination_grace_period_seconds** (Number) Seconds allowed for graceful termination, including `preStop` hooks.\n\n\u003e **Note** \u003cspan pulumi-lang-nodejs=\"`maxSurgeReplicas`\" pulumi-lang-dotnet=\"`MaxSurgeReplicas`\" pulumi-lang-go=\"`maxSurgeReplicas`\" pulumi-lang-python=\"`max_surge_replicas`\" pulumi-lang-yaml=\"`maxSurgeReplicas`\" pulumi-lang-java=\"`maxSurgeReplicas`\"\u003e`max_surge_replicas`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`maxUnavailableReplicas`\" pulumi-lang-dotnet=\"`MaxUnavailableReplicas`\" pulumi-lang-go=\"`maxUnavailableReplicas`\" pulumi-lang-python=\"`max_unavailable_replicas`\" pulumi-lang-yaml=\"`maxUnavailableReplicas`\" pulumi-lang-java=\"`maxUnavailableReplicas`\"\u003e`max_unavailable_replicas`\u003c/span\u003e accept absolute numbers (for example, \u003cspan pulumi-lang-nodejs=\"`2`\" pulumi-lang-dotnet=\"`2`\" pulumi-lang-go=\"`2`\" pulumi-lang-python=\"`2`\" pulumi-lang-yaml=\"`2`\" pulumi-lang-java=\"`2`\"\u003e`2`\u003c/span\u003e) or percentages (for example, `50%`), and they cannot both be zero.\n\n\u003ca id=\"nestedblock--security_options\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`securityOptions`\" pulumi-lang-dotnet=\"`SecurityOptions`\" pulumi-lang-go=\"`securityOptions`\" pulumi-lang-python=\"`security_options`\" pulumi-lang-yaml=\"`securityOptions`\" pulumi-lang-java=\"`securityOptions`\"\u003e`security_options`\u003c/span\u003e\n\nRead-Only:\n\n- **file_system_group_id** (Number) Group ID applied to mounted volumes.\n\n\u003ca id=\"nestedblock--load_balancer\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`loadBalancer`\" pulumi-lang-dotnet=\"`LoadBalancer`\" pulumi-lang-go=\"`loadBalancer`\" pulumi-lang-python=\"`load_balancer`\" pulumi-lang-yaml=\"`loadBalancer`\" pulumi-lang-java=\"`loadBalancer`\"\u003e`load_balancer`\u003c/span\u003e\n\nRead-Only:\n\n- **replica_direct** (Boolean) When \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, individual replicas can be reached directly using `replica-\u003cindex\u003e` subdomains. Only valid for \u003cspan pulumi-lang-nodejs=\"`stateful`\" pulumi-lang-dotnet=\"`Stateful`\" pulumi-lang-go=\"`stateful`\" pulumi-lang-python=\"`stateful`\" pulumi-lang-yaml=\"`stateful`\" pulumi-lang-java=\"`stateful`\"\u003e`stateful`\u003c/span\u003e workloads.\n- **direct** (Block List, Max: 1) (see below).\n- **geo_location** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--load_balancer--direct\"\u003e\u003c/a\u003e\n\n### `load_balancer.direct`\n\nDirect load balancers are created in each workload location and expose the workload's standard endpoints. Customers must configure certificates if TLS is required.\n\nRead-Only:\n\n- **enabled** (Boolean) Indicates if the direct load balancer is active.\n- **ipset** (String) Name of the IP set associated with the load balancer, if any.\n- **port** (Block List) (see below).\n\n\u003ca id=\"nestedblock--load_balancer--direct--port\"\u003e\u003c/a\u003e\n\n### `load_balancer.direct.port`\n\nRead-Only:\n\n- **external_port** (Number) Public-facing port.\n- **protocol** (String) Protocol exposed publicly.\n- **scheme** (String) Overrides the default \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e URL scheme in generated links.\n- **container_port** (Number) Container port receiving the traffic.\n\n\u003ca id=\"nestedblock--load_balancer--geo_location\"\u003e\u003c/a\u003e\n\n### `load_balancer.geo_location`\n\nRead-Only:\n\n- **enabled** (Boolean) When enabled, geo-location headers are injected into inbound HTTP requests.\n- **headers** (Block List, Max: 1) (see below).\n\n\u003ca id=\"nestedblock--load_balancer--geo_location--headers\"\u003e\u003c/a\u003e\n\n### `load_balancer.geo_location.headers`\n\nRead-Only:\n\n- **asn** (String) ASN header value injected into requests.\n- **city** (String) City header value.\n- **country** (String) Country header value.\n- **region** (String) Region header value.\n\n\u003ca id=\"nestedblock--request_retry_policy\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`requestRetryPolicy`\" pulumi-lang-dotnet=\"`RequestRetryPolicy`\" pulumi-lang-go=\"`requestRetryPolicy`\" pulumi-lang-python=\"`request_retry_policy`\" pulumi-lang-yaml=\"`requestRetryPolicy`\" pulumi-lang-java=\"`requestRetryPolicy`\"\u003e`request_retry_policy`\u003c/span\u003e\n\nRead-Only:\n\n- **attempts** (Number) Number of retry attempts. Default: \u003cspan pulumi-lang-nodejs=\"`2`\" pulumi-lang-dotnet=\"`2`\" pulumi-lang-go=\"`2`\" pulumi-lang-python=\"`2`\" pulumi-lang-yaml=\"`2`\" pulumi-lang-java=\"`2`\"\u003e`2`\u003c/span\u003e.\n- **retry_on** (List of String) Retry conditions that trigger another attempt.\n\n\u003ca id=\"nestedblock--status\"\u003e\u003c/a\u003e\n\n### \u003cspan pulumi-lang-nodejs=\"`status`\" pulumi-lang-dotnet=\"`Status`\" pulumi-lang-go=\"`status`\" pulumi-lang-python=\"`status`\" pulumi-lang-yaml=\"`status`\" pulumi-lang-java=\"`status`\"\u003e`status`\u003c/span\u003e\n\nCurrent state of the workload.\n\nRead-Only:\n\n- **parent_id** (String) ID of the parent object.\n- **canonical_endpoint** (String) Canonical endpoint for the workload.\n- **endpoint** (String) Public endpoint for the workload.\n- **internal_name** (String) Internal hostname used for service-to-service communication.\n- **replica_internal_names** (List of String)\n- **health_check** (Block List) (see below).\n- **current_replica_count** (Number) Current number of replicas deployed.\n- **resolved_images** (Block List) (see below).\n- **load_balancer** (Block List) (see below).\n\n\u003ca id=\"nestedblock--status--health_check\"\u003e\u003c/a\u003e\n\n### `status.health_check`\n\nDetails about the most recent health checks.\n\nRead-Only:\n\n- **active** (Boolean) Indicates if the health check is active.\n- **success** (Boolean) Indicates if the workload is considered healthy.\n- **code** (Number) Status code returned by the check.\n- **message** (String) Health check message.\n- **failures** (Number) Number of recent failures.\n- **successes** (Number) Number of recent successes.\n- **last_checked** (String) Timestamp (UTC) of the last health check.\n\n\u003ca id=\"nestedblock--status--resolved_images\"\u003e\u003c/a\u003e\n\n### `status.resolved_images`\n\nResolved container images when dynamic tags are enabled.\n\nRead-Only:\n\n- **resolved_for_version** (Number) Workload version for which the images were resolved.\n- **resolved_at** (String) UTC timestamp when resolution happened.\n- **error_messages** (List of String) Errors encountered while resolving images.\n- **next_retry_at** (String)\n- **images** (Block List) (see below).\n\n\u003ca id=\"nestedblock--status--resolved_images--images\"\u003e\u003c/a\u003e\n\n### `status.resolved_images.images`\n\nRead-Only:\n\n- **digest** (String) SHA256 digest uniquely identifying the image content.\n- **manifests** (Block List) (see below).\n\n\u003ca id=\"nestedblock--status--resolved_images--images--manifests\"\u003e\u003c/a\u003e\n\n### `status.resolved_images.images.manifests`\n\nRead-Only:\n\n- **image** (String) Name and tag of the resolved image.\n- **media_type** (String) MIME type describing the manifest format.\n- **digest** (String) SHA256 digest identifying the manifest.\n- **platform** (Map of String) Key-value pairs describing the target OS and architecture.\n\n\u003ca id=\"nestedblock--status--load_balancer\"\u003e\u003c/a\u003e\n\n### `status.load_balancer`\n\nRead-Only:\n\n- **origin** (String) Origin identifier associated with the load balancer.\n- **url** (String) Load-balancer endpoint URL exposed by Control Plane.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cpln from \"@pulumiverse/cpln\";\n\nconst workload = cpln.getWorkload({\n    name: \"workload-example\",\n    gvc: \"gvc-example\",\n});\nexport const workloadId = workload.then(workload =\u003e workload.id);\n```\n```python\nimport pulumi\nimport pulumi_cpln as cpln\n\nworkload = cpln.get_workload(name=\"workload-example\",\n    gvc=\"gvc-example\")\npulumi.export(\"workloadId\", workload.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Cpln = Pulumi.Cpln;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var workload = Cpln.GetWorkload.Invoke(new()\n    {\n        Name = \"workload-example\",\n        Gvc = \"gvc-example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"workloadId\"] = workload.Apply(getWorkloadResult =\u003e getWorkloadResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tworkload, err := cpln.LookupWorkload(ctx, \u0026cpln.LookupWorkloadArgs{\n\t\t\tName: \"workload-example\",\n\t\t\tGvc:  \"gvc-example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"workloadId\", workload.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cpln.CplnFunctions;\nimport com.pulumi.cpln.inputs.GetWorkloadArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var workload = CplnFunctions.getWorkload(GetWorkloadArgs.builder()\n            .name(\"workload-example\")\n            .gvc(\"gvc-example\")\n            .build());\n\n        ctx.export(\"workloadId\", workload.id());\n    }\n}\n```\n```yaml\nvariables:\n  workload:\n    fn::invoke:\n      function: cpln:getWorkload\n      arguments:\n        name: workload-example\n        gvc: gvc-example\noutputs:\n  workloadId: ${workload.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getWorkload.\n",
                "properties": {
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadContainer:getWorkloadContainer"
                        }
                    },
                    "firewallSpecs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadFirewallSpec:getWorkloadFirewallSpec"
                        }
                    },
                    "gvc": {
                        "type": "string"
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadJob:getWorkloadJob"
                        }
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadLoadBalancer:getWorkloadLoadBalancer"
                        }
                    },
                    "localOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadLocalOption:getWorkloadLocalOption"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadOption:getWorkloadOption"
                        }
                    },
                    "requestRetryPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadRequestRetryPolicy:getWorkloadRequestRetryPolicy"
                        }
                    },
                    "rolloutOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadRolloutOption:getWorkloadRolloutOption"
                        }
                    },
                    "securityOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadSecurityOption:getWorkloadSecurityOption"
                        }
                    },
                    "sidecars": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadSidecar:getWorkloadSidecar"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "gvc",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWorkload.\n",
                "properties": {
                    "containers": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadContainer:getWorkloadContainer"
                        },
                        "type": "array"
                    },
                    "cplnId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "extras": {
                        "type": "string"
                    },
                    "firewallSpecs": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadFirewallSpec:getWorkloadFirewallSpec"
                        },
                        "type": "array"
                    },
                    "gvc": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "identityLink": {
                        "type": "string"
                    },
                    "jobs": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadJob:getWorkloadJob"
                        },
                        "type": "array"
                    },
                    "loadBalancers": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadLoadBalancer:getWorkloadLoadBalancer"
                        },
                        "type": "array"
                    },
                    "localOptions": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadLocalOption:getWorkloadLocalOption"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadOption:getWorkloadOption"
                        },
                        "type": "array"
                    },
                    "requestRetryPolicies": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadRequestRetryPolicy:getWorkloadRequestRetryPolicy"
                        },
                        "type": "array"
                    },
                    "rolloutOptions": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadRolloutOption:getWorkloadRolloutOption"
                        },
                        "type": "array"
                    },
                    "securityOptions": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadSecurityOption:getWorkloadSecurityOption"
                        },
                        "type": "array"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "sidecars": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadSidecar:getWorkloadSidecar"
                        },
                        "type": "array"
                    },
                    "statuses": {
                        "items": {
                            "$ref": "#/types/cpln:index/getWorkloadStatus:getWorkloadStatus"
                        },
                        "type": "array"
                    },
                    "supportDynamicTags": {
                        "type": "boolean"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "cplnId",
                    "description",
                    "extras",
                    "gvc",
                    "id",
                    "identityLink",
                    "name",
                    "selfLink",
                    "statuses",
                    "supportDynamicTags",
                    "tags",
                    "type"
                ],
                "type": "object"
            }
        },
        "pulumi:providers:cpln/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/provider"
                    }
                },
                "type": "pulumi:providers:cpln/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}